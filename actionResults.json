[
  {
    "id": "10570f0f-5f5a-4231-bfc5-17b1e2431e64",
    "type": "messages",
    "createdAt": 1754972123112,
    "content": {
      "text": "Open issues for elizaOS/eliza (10 shown):\n‚Ä¢ #5754: Critical: Plugin Publishing Fails with False Success Reports (open) [bug]\n‚Ä¢ #5749: Implement Runtime Method Mocking for Deterministic Agent Testing (open) [enhancement, testing, Reality Spiral]\n‚Ä¢ #5747: Fixing bugs in eliza-cloud (open)\n‚Ä¢ #5738: üêõ Build failure in @elizaos/core causing bun run clean to fail (open) [bug]\n‚Ä¢ #5734: Eliza CLI failed to build project (open) [bug]\n‚Ä¢ #5729: Update README.md to fix error (open)\n‚Ä¢ #5728: feat: ability to cancel current run before any calls to LLM are made (open)\n‚Ä¢ #5727: feat(scenarios): Implement natural language agent interaction and response validation (open) [enhancement, Reality Spiral]\n‚Ä¢ #5726: feat(scenarios): Implement conditional mocking and complex response structures (open) [enhancement, Reality Spiral]\n‚Ä¢ #5725: feat(scenarios): Implement plugin specification and dynamic loading (open) [enhancement, Reality Spiral]",
      "type": "action_result",
      "runId": "2bc09dc3-1c5a-4042-b550-e1998591b573",
      "source": "action",
      "planStep": "2/2",
      "actionName": "LIST_GITHUB_ISSUES",
      "planThought": "I need to list the open issues for the elizaOS/eliza repository as requested by the user.",
      "actionResult": {
        "data": {
          "github": {
            "issues": {
              "elizaOS/eliza#5725": {
                "id": 3298689704,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725",
                "body": "# feat(scenarios): Implement plugin specification and dynamic loading\n\n## Description\n\nThis ticket implements plugin specification in scenario YAML files, allowing scenarios to declare which plugins are required for testing. This enables testing of agent behaviors that depend on specific plugins like `@elizaos/plugin-github` or `@elizaos/plugin-evm`. The system will dynamically load specified plugins during scenario execution and make their actions, providers, and services available to the agent.\n\n## Acceptance Criteria\n\n1. Scenario YAML supports a `plugins` array at the root level with string plugin names\n2. The `initializeAgent()` function respects scenario plugin specifications and loads them via `startAgent()`\n3. Plugin loading follows the same dependency resolution and error handling as the main CLI\n4. Scenarios can specify both string plugin names (`@elizaos/plugin-github`) and direct plugin objects\n5. Plugin loading errors are clearly reported with actionable guidance\n6. Default plugins (bootstrap, sql) are automatically included unless explicitly excluded via `exclude_defaults: true`\n7. Plugin conflicts are detected and reported during scenario validation\n8. Plugin initialization errors don't crash the scenario but are reported in results\n\n## Technical Approach\n\n### 1. Update Scenario Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst ScenarioSchema = z.object({\n  name: z.string(),\n  description: z.string(),\n  plugins: z.array(z.string()).optional(), // e.g., [\"@elizaos/plugin-github\"]\n  exclude_defaults: z.boolean().optional(), // exclude bootstrap/sql\n  environment: EnvironmentSchema,\n  setup: SetupSchema.optional(),\n  run: z.array(RunStepSchema),\n  judgment: JudgmentSchema,\n});\n```\n\n### 2. Enhance Runtime Factory\n```typescript\n// packages/cli/src/scenarios/runtime-factory.ts\nexport async function initializeAgent(scenario: Scenario): Promise<IAgentRuntime> {\n  const character: Character = {\n    name: 'scenario-runner',\n    id: stringToUuid('scenario-runner'),\n    bio: 'A minimal character for running scenarios',\n    plugins: scenario.plugins || []\n  };\n\n  // Load default plugins unless excluded\n  if (!scenario.exclude_defaults) {\n    character.plugins.push('@elizaos/plugin-bootstrap', '@elizaos/plugin-sql');\n  }\n\n  const runtime = await startAgent(\n    encryptedCharacter(character),\n    server,\n    undefined,\n    character.plugins,\n    { isTestMode: true }\n  );\n\n  return runtime;\n}\n```\n\n### 3. Plugin Validation\n```typescript\n// packages/cli/src/scenarios/plugin-validator.ts\nexport async function validateScenarioPlugins(scenario: Scenario): Promise<ValidationResult[]> {\n  const results: ValidationResult[] = [];\n  \n  for (const pluginName of scenario.plugins || []) {\n    try {\n      const plugin = await loadAndPreparePlugin(pluginName);\n      if (!plugin) {\n        results.push({\n          type: 'error',\n          message: `Plugin '${pluginName}' could not be loaded`,\n          suggestion: 'Check if plugin is installed or built correctly'\n        });\n      }\n    } catch (error) {\n      results.push({\n        type: 'error', \n        message: `Failed to validate plugin '${pluginName}': ${error.message}`,\n        suggestion: 'Verify plugin dependencies and configuration'\n      });\n    }\n  }\n  \n  return results;\n}\n```\n\n## Test Scenario\n\nCreate `plugin-integration-test.scenario.yaml`:\n```yaml\nname: \"Plugin Integration Test\"\ndescription: \"Tests loading and using plugins specified in scenario YAML\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Test Issue\"\n          number: 123\n          state: \"open\"\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"1.23\"\n\nrun:\n  - name: \"Test GitHub plugin actions\"\n    input: \"Search for issues with label 'bug'\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify GitHub plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"Test Issue\"\n        description: \"Verify agent found the mocked issue\"\n\n  - name: \"Test EVM plugin actions\"\n    input: \"What's my wallet balance?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify EVM plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n        description: \"Verify agent reported the mocked balance\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Plugin Loading Test**: Verify plugins load without errors\n2. **Action Availability Test**: Confirm agent can use plugin actions\n3. **Error Handling Test**: Test with non-existent plugin\n4. **Default Plugin Test**: Verify bootstrap/sql are included by default\n5. **Exclusion Test**: Test `exclude_defaults: true` behavior\n\n## Dependencies\n\n- Fixes the `startAgent` hanging issue (#5719) to enable plugin testing\n- Builds on existing `loadAndPreparePlugin` functionality\n- Integrates with current scenario execution flow ",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement plugin specification and dynamic loading",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5725,
                "node_id": "I_kwDOMT5cIs7EngKo",
                "assignee": null,
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5725",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:48:08Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/labels{/name}",
                "updated_at": "2025-08-07T05:37:32Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5726": {
                "id": 3298691383,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726",
                "body": "# feat(scenarios): Implement conditional mocking and complex response structures\n\n## Description\n\nThis ticket enhances the mocking system to support conditional responses based on input parameters and complex response structures with metadata. This enables realistic testing of service interactions like GitHub API calls or EVM transactions with proper request/response matching.\n\n## Acceptance Criteria\n\n1. Mock definitions support `when` clauses for conditional responses\n2. `when` clauses can match on method arguments, input parameters, or request context\n3. Mock responses support complex nested structures with metadata (timestamps, IDs, etc.)\n4. Multiple mock responses can be defined for the same service/method with different conditions\n5. Mock system provides clear logging of which mock was triggered and why\n6. Mock responses can include realistic error conditions and edge cases\n7. Support for dynamic response generation based on input parameters\n8. Mock validation ensures `when` clauses are syntactically correct\n\n## Technical Approach\n\n### 1. Enhanced Mock Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst MockSchema = z.object({\n  service: z.string(),\n  method: z.string(),\n  when: z.object({\n    // Match on method arguments\n    args: z.array(z.any()).optional(),\n    // Match on specific argument values\n    input: z.record(z.any()).optional(),\n    // Match on request context\n    context: z.record(z.any()).optional(),\n    // Custom matching function\n    matcher: z.string().optional(), // JavaScript expression\n  }).optional(),\n  response: z.any(), // Can be function or static value\n  // For dynamic responses\n  responseFn: z.string().optional(), // JavaScript function\n  // Error simulation\n  error: z.object({\n    code: z.string(),\n    message: z.string(),\n  }).optional(),\n});\n```\n\n### 2. Mock Engine Implementation\n```typescript\n// packages/cli/src/scenarios/mock-engine.ts\nexport class MockEngine {\n  private mocks: MockDefinition[] = [];\n\n  addMock(mock: MockDefinition) {\n    this.mocks.push(mock);\n  }\n\n  async findMock(service: string, method: string, args: any[]): Promise<any> {\n    const candidates = this.mocks.filter(m => \n      m.service === service && m.method === method\n    );\n\n    for (const mock of candidates) {\n      if (await this.matchesCondition(mock, args)) {\n        this.logger.info(`Mock triggered: ${service}.${method} with condition: ${JSON.stringify(mock.when)}`);\n        return this.generateResponse(mock, args);\n      }\n    }\n\n    return null; // No mock found\n  }\n\n  private async matchesCondition(mock: MockDefinition, args: any[]): Promise<boolean> {\n    if (!mock.when) return true; // Default mock\n\n    // Match on arguments\n    if (mock.when.args) {\n      if (!this.deepEqual(args, mock.when.args)) return false;\n    }\n\n    // Match on input parameters\n    if (mock.when.input) {\n      const input = this.extractInputFromArgs(args);\n      if (!this.deepEqual(input, mock.when.input)) return false;\n    }\n\n    // Custom matcher function\n    if (mock.when.matcher) {\n      const matcherFn = new Function('args', 'input', mock.when.matcher);\n      return matcherFn(args, this.extractInputFromArgs(args));\n    }\n\n    return true;\n  }\n\n  private generateResponse(mock: MockDefinition, args: any[]): any {\n    if (mock.error) {\n      throw new Error(`${mock.error.code}: ${mock.error.message}`);\n    }\n\n    if (mock.responseFn) {\n      const responseFn = new Function('args', 'input', mock.responseFn);\n      return responseFn(args, this.extractInputFromArgs(args));\n    }\n\n    return mock.response;\n  }\n}\n```\n\n## Test Scenario\n\nCreate `advanced-mocking-test.scenario.yaml`:\n```yaml\nname: \"Advanced Mocking Test\"\ndescription: \"Tests conditional mocking and complex response structures\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    # Conditional GitHub issue search\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"bug\"\n        matcher: \"input.labels.includes('bug')\"\n      response:\n        - title: \"Critical Bug Found\"\n          number: 456\n          state: \"open\"\n          labels: [\"bug\", \"critical\"]\n          created_at: \"2024-07-15T10:00:00Z\"\n\n    # Conditional GitHub issue search - different response\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"feature\"\n        matcher: \"input.labels.includes('feature')\"\n      response:\n        - title: \"New Feature Request\"\n          number: 789\n          state: \"open\"\n          labels: [\"feature\", \"enhancement\"]\n          created_at: \"2024-07-15T11:00:00Z\"\n\n    # Dynamic EVM balance response\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      when:\n        args: [\"0x1234567890abcdef\"]\n      responseFn: |\n        return {\n          chain: \"ethereum\",\n          address: args[0],\n          balances: [\n            { symbol: \"ETH\", amount: \"1.23\" },\n            { symbol: \"USDC\", amount: \"1000.00\" }\n          ],\n          last_updated: new Date().toISOString()\n        }\n\n    # Error simulation\n    - service: \"github-service\"\n      method: \"readFile\"\n      when:\n        input:\n          path: \"/docs/nonexistent.md\"\n      error:\n        code: \"FILE_NOT_FOUND\"\n        message: \"File does not exist\"\n\nrun:\n  - name: \"Test conditional GitHub search\"\n    input: \"Search for issues with bug label\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"Critical Bug Found\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent correctly search for bug issues?\"\n        expected: \"yes\"\n\n  - name: \"Test dynamic EVM response\"\n    input: \"What's the balance for address 0x1234567890abcdef?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n      - type: \"string_contains\"\n        value: \"1000.00 USDC\"\n\n  - name: \"Test error handling\"\n    input: \"Read the file /docs/nonexistent.md\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.readFile\"\n      - type: \"string_contains\"\n        value: \"File does not exist\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Conditional Matching**: Test different responses based on input parameters\n2. **Dynamic Responses**: Test response generation based on arguments\n3. **Error Simulation**: Test error handling and reporting\n4. **Complex Structures**: Test nested response objects with metadata\n5. **Multiple Mocks**: Test multiple mocks for same service/method\n6. **Logging**: Verify mock selection is logged clearly\n\n## Dependencies\n\n- Builds on existing mock system in scenarios\n- Requires plugin system integration (Ticket 1)\n- Integrates with agent interaction testing (Ticket 3) ",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement conditional mocking and complex response structures",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5726,
                "node_id": "I_kwDOMT5cIs7Engk3",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5726",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:49:00Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/labels{/name}",
                "updated_at": "2025-08-07T05:32:53Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5727": {
                "id": 3298692741,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727",
                "body": "# feat(scenarios): Implement natural language agent interaction and response validation\n\n## Description\n\nThis ticket enables scenarios to test agent behavior through natural language interactions rather than direct code execution. This allows testing of agent reasoning, decision-making, and response generation in realistic conversation contexts with proper evaluation of agent responses.\n\n## Acceptance Criteria\n\n1. Scenario `run` blocks support `input` field for natural language prompts to agents\n2. Agent responses are captured and available for evaluation (text, thoughts, actions)\n3. Evaluators can access both agent response text and execution context\n4. Support for multi-turn conversations in scenarios\n5. Agent responses include thought process and action decisions\n6. Integration with existing evaluation engine for response validation\n7. Support for conversation context across multiple steps\n8. Agent response timing and performance metrics\n\n## Technical Approach\n\n### 1. Enhanced Run Step Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst RunStepSchema = z.object({\n  name: z.string().optional(),\n  // Natural language input to agent\n  input: z.string().optional(),\n  // Direct code execution (existing)\n  lang: z.string().optional(),\n  code: z.string().optional(),\n  // Agent interaction specific\n  agent_context: z.object({\n    conversation_id: z.string().optional(),\n    user_id: z.string().optional(),\n    room_id: z.string().optional(),\n  }).optional(),\n  evaluations: z.array(EvaluationSchema),\n});\n```\n\n### 2. Agent Interaction Engine\n```typescript\n// packages/cli/src/scenarios/agent-interaction.ts\nexport class AgentInteractionEngine {\n  constructor(private runtime: IAgentRuntime) {}\n\n  async interactWithAgent(input: string, context?: AgentContext): Promise<AgentResponse> {\n    // Create message for agent\n    const message: Memory = {\n      entityId: context?.user_id || 'scenario-user',\n      roomId: context?.room_id || 'scenario-room',\n      content: {\n        type: 'text',\n        text: input,\n      },\n      metadata: {\n        type: 'message',\n        conversationId: context?.conversation_id,\n      },\n    };\n\n    // Send to agent and capture response\n    const startTime = Date.now();\n    const response = await this.runtime.processMessage(message);\n    const endTime = Date.now();\n\n    return {\n      text: response.text,\n      thoughts: response.thoughts,\n      actions: response.actions,\n      timing: {\n        startTime,\n        endTime,\n        duration: endTime - startTime,\n      },\n      context: {\n        conversationId: context?.conversation_id,\n        messageId: message.id,\n      },\n    };\n  }\n}\n```\n\n### 3. Enhanced Execution Result\n```typescript\n// packages/cli/src/scenarios/providers.ts\nexport interface ExecutionResult {\n  exitCode: number;\n  stdout: string;\n  stderr: string;\n  files: Record<string, string>;\n  // New: Agent interaction results\n  agentResponse?: AgentResponse;\n  conversationHistory?: AgentResponse[];\n}\n```\n\n## Test Scenario\n\nCreate `agent-interaction-test.scenario.yaml`:\n```yaml\nname: \"Agent Interaction Test\"\ndescription: \"Tests natural language interaction with agents\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Implement Dark Mode\"\n          number: 123\n          state: \"open\"\n          labels: [\"feature\", \"ui\"]\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"2.5\"\n\nrun:\n  - name: \"Ask agent about roadmap\"\n    input: \"What new features are you planning to add?\"\n    agent_context:\n      conversation_id: \"roadmap-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify agent searched for issues\"\n      \n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n        description: \"Verify agent mentioned the mocked issue\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent provide a helpful and coherent response about new features?\"\n        expected: \"yes\"\n        description: \"Verify agent response quality\"\n\n  - name: \"Ask agent about wallet\"\n    input: \"What's my current wallet balance?\"\n    agent_context:\n      conversation_id: \"wallet-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify agent checked wallet balance\"\n      \n      - type: \"string_contains\"\n        value: \"2.5 ETH\"\n        description: \"Verify agent reported the correct balance\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent clearly explain the wallet balance information?\"\n        expected: \"yes\"\n\n  - name: \"Multi-turn conversation\"\n    input: \"Can you help me with both my wallet and roadmap?\"\n    agent_context:\n      conversation_id: \"multi-turn-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"ETH\"\n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent address both wallet and roadmap questions comprehensively?\"\n        expected: \"yes\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Single Turn**: Test basic agent interaction and response\n2. **Multi-turn**: Test conversation context across steps\n3. **Action Tracking**: Verify agent uses appropriate actions\n4. **Response Quality**: Test LLM judge evaluation of responses\n5. **Performance**: Test response timing and metrics\n6. **Error Handling**: Test agent behavior with invalid inputs\n\n## Dependencies\n\n- Requires plugin system integration (Ticket 1)\n- Builds on advanced mocking system (Ticket 2)\n- Integrates with existing evaluation engine\n- Depends on agent runtime message processing",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement natural language agent interaction and response validation",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5727,
                "node_id": "I_kwDOMT5cIs7Eng6F",
                "assignee": null,
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5727",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:49:34Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/labels{/name}",
                "updated_at": "2025-08-07T05:35:40Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5728": {
                "id": 3299322983,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728",
                "body": "# Background\r\n\r\n## What does this PR do?\r\n\r\nIntroduce entity for cancelling runs `CancelRunSignal`\r\n\r\n## Why are we doing this? Any context or related work?\r\n\r\n- Calls to LLMs usually cost some credits\r\n- When we receive the `RUN_STARTED` event we can check current entity and end run to prevent credits spending\r\n\r\n# Documentation changes needed?\r\n\r\n## Methods\r\n\r\n- `static getSignal(runId: UUID)` - get signal by runId or create if null\r\n- `static clear(runId: UUID)` - clear signal from map\r\n- `cancel(content?: Content)` - cancel current run and and send `content` as a response to user\r\n\r\n## Example\r\n\r\n```typescript\r\nimport { Content, EventType, Plugin } from \"@elizaos/core\";\r\nimport { CancelRunSignal } from \"@elizaos/plugin-bootstrap\";\r\n\r\n// consider we have a service to determine eligibility for entity\r\ninterface EligibilityService {\r\n  check(entityId: UUID): Promise<{ result: boolean, reason?: Content }>\r\n}\r\n\r\nconst plugin: Plugin = {\r\n...\r\n  events: {\r\n    [EventType.RUN_STARTED]: ({ entityId, runId, runtime }) => {\r\n      const service = runtime.getService<EligibilityService>(\"USER_MANAGEMENT\");\r\n      const { result, reason } = await service.check(entityId);\r\n      \r\n      if (!result) {\r\n        const signal = CancelRunSignal.getSignal(runId);\r\n        signal.cancel(reason);\r\n      }\r\n    },\r\n    ...\r\n  },\r\n  ...\r\n}\r\n\r\nexport default Plugin;\r\n```\r\n\r\n## Discord username\r\n\r\nalexd000\r\n\r\n",
                "type": null,
                "user": {
                  "id": 82507604,
                  "url": "https://api.github.com/users/alex-nax",
                  "type": "User",
                  "login": "alex-nax",
                  "node_id": "MDQ6VXNlcjgyNTA3NjA0",
                  "html_url": "https://github.com/alex-nax",
                  "gists_url": "https://api.github.com/users/alex-nax/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/alex-nax/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/82507604?v=4",
                  "events_url": "https://api.github.com/users/alex-nax/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/alex-nax/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/alex-nax/followers",
                  "following_url": "https://api.github.com/users/alex-nax/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/alex-nax/orgs",
                  "subscriptions_url": "https://api.github.com/users/alex-nax/subscriptions",
                  "received_events_url": "https://api.github.com/users/alex-nax/received_events"
                },
                "draft": false,
                "state": "open",
                "title": "feat: ability to cancel current run before any calls to LLM are made",
                "labels": [],
                "locked": false,
                "number": 5728,
                "node_id": "PR_kwDOMT5cIs6ihriD",
                "assignee": null,
                "comments": 3,
                "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T07:19:35Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/labels{/name}",
                "updated_at": "2025-08-07T07:22:05Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/comments",
                "pull_request": {
                  "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5728",
                  "diff_url": "https://github.com/elizaOS/eliza/pull/5728.diff",
                  "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                  "merged_at": null,
                  "patch_url": "https://github.com/elizaOS/eliza/pull/5728.patch"
                },
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "FIRST_TIME_CONTRIBUTOR",
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5729": {
                "id": 3299481897,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729",
                "body": "# Relates to\r\n\r\nN/A (Documentation improvement, not tied to a specific issue or ticket)\r\n\r\n# Risks\r\n\r\nLow.  \r\nThis change only updates documentation and does not affect any code or functionality.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR updates the elizaos README to include a fix for installation errors that may occur due to permission issues. It adds a note suggesting the use of sudo if users encounter a \"Permission denied\" or \"InstallFailed\" error when running the `elizaos create my-agent` command.\r\n\r\n## What kind of change is this?\r\n\r\nImprovements (misc. changes to existing features)  \r\nDocumentation update\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes require a change to the project documentation.  \r\nI have updated the documentation accordingly.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\nStart by reviewing the changes in the README.md file, specifically the section on creating a new project.\r\n\r\n## Detailed testing steps\r\n\r\n- Open the updated README.md.\r\n- Review the new instructions under \"Create Your First Project.\"\r\n- Confirm that the added note about using `sudo` is clear and helpful for users who encounter permission errors.",
                "type": null,
                "user": {
                  "id": 32749185,
                  "url": "https://api.github.com/users/mandatedisrael",
                  "type": "User",
                  "login": "mandatedisrael",
                  "node_id": "MDQ6VXNlcjMyNzQ5MTg1",
                  "html_url": "https://github.com/mandatedisrael",
                  "gists_url": "https://api.github.com/users/mandatedisrael/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/mandatedisrael/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/32749185?v=4",
                  "events_url": "https://api.github.com/users/mandatedisrael/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/mandatedisrael/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/mandatedisrael/followers",
                  "following_url": "https://api.github.com/users/mandatedisrael/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/mandatedisrael/orgs",
                  "subscriptions_url": "https://api.github.com/users/mandatedisrael/subscriptions",
                  "received_events_url": "https://api.github.com/users/mandatedisrael/received_events"
                },
                "draft": false,
                "state": "open",
                "title": "Update README.md to fix error",
                "labels": [],
                "locked": false,
                "number": 5729,
                "node_id": "PR_kwDOMT5cIs6iiNWN",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T08:10:12Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/labels{/name}",
                "updated_at": "2025-08-07T08:10:24Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/comments",
                "pull_request": {
                  "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5729",
                  "diff_url": "https://github.com/elizaOS/eliza/pull/5729.diff",
                  "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                  "merged_at": null,
                  "patch_url": "https://github.com/elizaOS/eliza/pull/5729.patch"
                },
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "FIRST_TIME_CONTRIBUTOR",
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5734": {
                "id": 3301116813,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734",
                "body": "**Describe the bug**\n\nOn project creation, ElizaOS CLI fails with the following error:\n```\n‚óá  Failed to build project\nstdout: src/index.ts(7,25): error TS2345: Argument of type 'string' is not assignable to parameter of type 'undefined'.\nstderr: $ tsc --noEmit && vite build && tsup\n```\n\n**To Reproduce**\n\n- Install ElizaOS through `bun`\n```\nbun i -g @elizaos/cli\n```\n- Create new ElizaOS project\n```\nelizaos create abcde\n```\n\n**Expected behavior**\n\nProject built successfully\n\n**Screenshots**\n\n<img width=\"1095\" height=\"572\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/967dd6a2-0d70-4e2e-8019-85a2eab5f225\" />\n\n**Additional context**\n\nElizaOS CLI version: `1.3.2`\n",
                "type": null,
                "user": {
                  "id": 74447600,
                  "url": "https://api.github.com/users/Kemystra",
                  "type": "User",
                  "login": "Kemystra",
                  "node_id": "MDQ6VXNlcjc0NDQ3NjAw",
                  "html_url": "https://github.com/Kemystra",
                  "gists_url": "https://api.github.com/users/Kemystra/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/Kemystra/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/74447600?v=4",
                  "events_url": "https://api.github.com/users/Kemystra/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/Kemystra/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/Kemystra/followers",
                  "following_url": "https://api.github.com/users/Kemystra/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/Kemystra/orgs",
                  "subscriptions_url": "https://api.github.com/users/Kemystra/subscriptions",
                  "received_events_url": "https://api.github.com/users/Kemystra/received_events"
                },
                "state": "open",
                "title": "Eliza CLI failed to build project",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5734,
                "node_id": "I_kwDOMT5cIs7EwwuN",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5734",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T16:14:00Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/labels{/name}",
                "updated_at": "2025-08-08T19:43:52Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "NONE",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5738": {
                "id": 3302237103,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738",
                "body": "## Description\n\nThe `bun run clean` command is failing due to TypeScript errors in `@elizaos/core` package during the DTS (type definition) build phase.\n\n## Error Details\n\n### Build Process\n```\n‚Ä¢ Running build in 17 packages\n‚Ä¢ Remote caching disabled\n@elizaos/config:build: cache miss\n@elizaos/autodoc:build: cache miss\n@elizaos/core:build: cache miss\n```\n\n### TypeScript Errors in @elizaos/core/src/utils.ts\n1. Line 218: `error TS2345: Argument of type '`${string}-${string}-${string}-${string}-${string}`' is not assignable to parameter of type 'never'.`\n2. Line 366: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n3. Line 409: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n4. Line 536: `error TS2345: Argument of type '{ numberOfChunks: number; averageChunkSize: number; }' is not assignable to parameter of type 'never'.`\n\n### Impact\n- Blocks `bun run clean` command\n- Prevents successful build of `@elizaos/core`\n- Affects dependent packages in the monorepo\n\n## Steps to Reproduce\n1. Run `bun run clean`\n2. Observe build failure in `@elizaos/core`\n3. Build fails with TypeScript errors during DTS generation\n\n## Expected Behavior\n- `bun run clean` should complete successfully\n- `@elizaos/core` should build without TypeScript errors\n- Type definitions should be generated correctly\n\n## Suggested Fix\n\nThe errors suggest type mismatches in `utils.ts`. Need to:\n1. Review type definitions in affected lines\n2. Update type assertions or generic constraints\n3. Ensure string template literal types are properly handled\n4. Fix object type assignments\n\n### Files to Update\n- `packages/core/src/utils.ts`\n\n## Priority\n**HIGH** - This is blocking clean builds and potentially affecting development workflow.",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "üêõ Build failure in @elizaos/core causing bun run clean to fail",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5738,
                "node_id": "I_kwDOMT5cIs7E1COv",
                "assignee": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5738",
                "assignees": [
                  {
                    "id": 15067321,
                    "url": "https://api.github.com/users/monilpat",
                    "type": "User",
                    "login": "monilpat",
                    "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                    "html_url": "https://github.com/monilpat",
                    "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/monilpat/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                    "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/monilpat/followers",
                    "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/monilpat/orgs",
                    "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                    "received_events_url": "https://api.github.com/users/monilpat/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-08T00:26:11Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/labels{/name}",
                "updated_at": "2025-08-11T14:56:01Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5747": {
                "id": 3304516859,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747",
                "body": null,
                "type": null,
                "user": {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                },
                "state": "open",
                "title": "Fixing bugs in eliza-cloud",
                "labels": [],
                "locked": false,
                "number": 5747,
                "node_id": "I_kwDOMT5cIs7E9uz7",
                "assignee": {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                },
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5747",
                "assignees": [
                  {
                    "id": 48334430,
                    "url": "https://api.github.com/users/samarth30",
                    "type": "User",
                    "login": "samarth30",
                    "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                    "html_url": "https://github.com/samarth30",
                    "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/samarth30/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                    "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/samarth30/followers",
                    "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/samarth30/orgs",
                    "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                    "received_events_url": "https://api.github.com/users/samarth30/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-08T16:01:56Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/labels{/name}",
                "updated_at": "2025-08-08T19:02:49Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "MEMBER",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": {
                  "id": 20150,
                  "name": "Linear",
                  "slug": "linear",
                  "owner": {
                    "id": 46686594,
                    "url": "https://api.github.com/users/linear",
                    "type": "Organization",
                    "login": "linear",
                    "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ2Njg2NTk0",
                    "html_url": "https://github.com/linear",
                    "gists_url": "https://api.github.com/users/linear/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/linear/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/46686594?v=4",
                    "events_url": "https://api.github.com/users/linear/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/linear/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/linear/followers",
                    "following_url": "https://api.github.com/users/linear/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/linear/orgs",
                    "subscriptions_url": "https://api.github.com/users/linear/subscriptions",
                    "received_events_url": "https://api.github.com/users/linear/received_events"
                  },
                  "events": [
                    "check_suite",
                    "issues",
                    "issue_comment",
                    "pull_request",
                    "pull_request_review",
                    "repository",
                    "sub_issues"
                  ],
                  "node_id": "MDM6QXBwMjAxNTA=",
                  "html_url": "https://github.com/apps/linear",
                  "client_id": "Iv1.085d682ea245c945",
                  "created_at": "2018-11-02T18:07:23Z",
                  "updated_at": "2025-02-07T14:59:56Z",
                  "description": "",
                  "permissions": {
                    "checks": "read",
                    "issues": "write",
                    "metadata": "read",
                    "pull_requests": "write"
                  },
                  "external_url": "https://linear.app"
                }
              },
              "elizaOS/eliza#5749": {
                "id": 3308102900,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749",
                "body": "### Problem Statement\nCurrently, ElizaOS scenario testing lacks the ability to mock internal agent runtime calls (particularly LLM interactions) when testing via the API client. This makes it difficult to create deterministic tests for agent behavior and workflows.\n\n### Current Limitations\n- Global function mocks only work for code executed in the same process\n- No way to intercept `runtime.useModel` calls from the bootstrap plugin\n- Agent behavior is non-deterministic due to real LLM calls\n- Difficult to test specific agent decision paths and responses\n\n### Why Different Approach Was Needed\n\nThe existing mocking system was designed for **code execution environments** (E2B sandbox and local `node -e` processes), where mocks are applied to the execution context. However, **agent testing** works differently:\n\n- **E2B/Local Execution**: Code runs in isolated processes/sandboxes where global mocks can be applied\n- **Agent Testing**: Agent runs as a service with API client interaction, requiring direct runtime method interception\n- **Architecture Gap**: The bootstrap plugin calls `runtime.useModel` internally, which can't be mocked through the execution environment approach\n\nThis architectural difference necessitated a new approach that directly intercepts runtime methods rather than relying on execution context mocking.\n\n### Proposed Solution: Runtime Method Mocking\n\nWe've implemented a new mocking approach that directly intercepts `IAgentRuntime` method calls:\n\n#### Key Components\n\n1. **MockEngine Enhancement**\n   - Added `runtimeMethodMocks` to support mocking runtime methods\n   - Priority system: `runtimeMethod` > `service` > `globalFunction`\n   - Direct method replacement on the runtime instance\n\n2. **Schema Updates**\n   - Extended `MockSchema` to include `runtimeMethod: z.string().optional()`\n   - Supports mocking any `IAgentRuntime` method (e.g., `useModel`, `getService`)\n\n3. **Conditional Matching**\n   - Matcher functions can inspect method arguments\n   - Example: `\"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"`\n   - Supports complex conditional logic for when to apply mocks\n\n#### Usage Example\n\n```yaml\nsetup:\n  mocks:\n    - runtimeMethod: \"useModel\"\n      method: \"useModel\"\n      when:\n        matcher: \"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"\n      response: \"<response><name>agent</name><reasoning>Mocked response</reasoning><action>RESPOND</action></response>\"\n```\n\n#### Benefits\n\n1. **Deterministic Testing**: Replace LLM calls with static responses\n2. **Full Workflow Testing**: Test complete agent decision flows\n3. **Conditional Mocking**: Apply mocks based on specific conditions\n4. **Runtime Integration**: Works seamlessly with existing agent architecture\n5. **Backward Compatibility**: Existing mocks continue to work\n\n#### Implementation Steps\n\n- MockEngine runtime method support\n- Schema updates for runtimeMethod mocks\n- Conditional matching with matcher functions\n- Integration with scenario runner\n- Basic useModel mocking working\n- Add support for mocking other runtime methods (getService, etc.)\n- Create comprehensive test scenarios\n- Add documentation and examples\n- Consider adding mock recording/replay capabilities\n\n### Technical Details\n\nThe implementation works by:\n1. Creating the `IAgentRuntime` instance in the scenario runner\n2. Applying mocks directly to the runtime object before agent initialization\n3. The bootstrap plugin receives the mocked runtime and uses the mocked methods\n4. Mocks are reverted after scenario completion\n\nThis approach provides the foundation for robust, deterministic agent testing while maintaining the existing architecture.",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "Implement Runtime Method Mocking for Deterministic Agent Testing",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 7668252177,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/testing",
                    "name": "testing",
                    "color": "2D3957",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAAByRA-EQ",
                    "description": ""
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5749,
                "node_id": "I_kwDOMT5cIs7FLaT0",
                "assignee": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "comments": 0,
                "html_url": "https://github.com/elizaOS/eliza/issues/5749",
                "assignees": [
                  {
                    "id": 15067321,
                    "url": "https://api.github.com/users/monilpat",
                    "type": "User",
                    "login": "monilpat",
                    "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                    "html_url": "https://github.com/monilpat",
                    "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/monilpat/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                    "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/monilpat/followers",
                    "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/monilpat/orgs",
                    "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                    "received_events_url": "https://api.github.com/users/monilpat/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-11T00:08:49Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/labels{/name}",
                "updated_at": "2025-08-11T00:09:37Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5754": {
                "id": 3310285907,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754",
                "body": "## Issue Summary\nThe `elizaos publish --npm` command reports successful publishing but the plugin is not actually published to npm, despite showing success messages. The npm publish is failing with a 404 error, but the ElizaOS CLI incorrectly reports success.\n\n## Key Problems Identified\n\n### 1. Critical NPM Publishing Failure\n- **Error**: `npm error 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found`\n- **Issue**: The package scope `@elizaos` doesn't exist on npm, preventing publishing\n- **Impact**: Package cannot be published to npm, but CLI reports success\n\n### 2. False Success Reporting\n- **Issue**: CLI reports `[‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm`\n- **Reality**: npm publish failed with 404 error\n- **Impact**: Developers believe their plugin is published when it's not\n\n### 3. Registry Repository Mismatch\n- **Expected**: Should create PR against `https://github.com/elizaos-plugins/registry`\n- **Actual**: Still references old registry `https://github.com/elizaos/registry`\n- **Impact**: Plugin won't appear in the official ElizaOS registry\n\n## Steps to Reproduce\n\n```bash\n# Navigate to the plugin directory\ncd packages/plugin-polygon\n\n# Ensure you're on the correct branch with the changes\ngit checkout polygon\n\n# Run the publish command\nelizaos publish --npm\n\n# Verify the success message appears\n# [‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm\n\n# Check if package actually exists on npm\nnpm view @elizaos/plugin-polygon@1.0.0\n# Result: 404 Not Found - '@elizaos/plugin-polygon@1.0.0' is not in this registry\n```\n\n## Technical Details\n\n### NPM Error Analysis\nThe npm logs show the root cause:\n```\nhttp fetch PUT 404 https://registry.npmjs.org/@elizaos%2fplugin-polygon 507ms\nerror 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found\n```\n\nThis indicates that the `@elizaos` scope doesn't exist on npm, which is required for publishing scoped packages.\n\n### CLI Error Handling Failure\nThe ElizaOS CLI is not properly parsing npm error codes:\n- npm returns exit code 1 (failure)\n- CLI ignores the error and reports success\n- No validation that the package actually exists on npm\n\n## Expected Behavior\n1. CLI should detect npm publish failures (exit code 1)\n2. CLI should fail with clear error message when package scope doesn't exist\n3. CLI should validate that package actually exists on npm after publishing\n4. CLI should create PRs against the correct registry repository\n\n## Recommended Fixes\n\n### 1. Fix NPM Error Detection\n```typescript\n// In the publish command, check npm exit code\nconst npmResult = await exec('npm publish', { cwd: pluginDir });\nif (npmResult.exitCode !== 0) {\n  throw new Error(`NPM publish failed: ${npmResult.stderr}`);\n}\n```\n\n### 2. Add Package Scope Validation\n```typescript\n// Before publishing, check if scope exists\nconst scopeExists = await checkNpmScope('@elizaos');\nif (!scopeExists) {\n  throw new Error('Package scope @elizaos does not exist on npm. Contact npm support to create the scope.');\n}\n```\n\n### 3. Add Post-Publish Validation\n```typescript\n// After publishing, verify package exists\nconst packageExists = await checkPackageExists(packageName, version);\nif (!packageExists) {\n  throw new Error(`Package was not published successfully. Check npm logs for details.`);\n}\n```\n\n## Priority\n**Critical** - This completely blocks plugin publishing and creates false success reports.\n\n## Affected Components\n- `packages/cli/src/commands/publish.ts`\n- NPM publishing logic\n- Error handling and success reporting\n- Package scope validation\n- Registry repository configuration\n\n## Immediate Action Required\n1. **Create the `@elizaos` scope on npm** or use an existing scope\n2. Update CLI to properly detect and handle npm publish failures\n3. Add post-publish validation to ensure packages actually exist on npm\n4. Update registry repository configuration\n\n## Alternative Solutions\n1. **Use existing scope**: Change package name to `@monilpat/plugin-polygon`\n2. **Create organization scope**: Set up `@elizaos` organization on npm\n3. **Use unscoped package**: Publish as `elizaos-plugin-polygon`\n\nThis issue is critically blocking plugin developers from successfully publishing their work and needs immediate attention from the ElizaOS team.\n",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "Critical: Plugin Publishing Fails with False Success Reports",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5754,
                "node_id": "I_kwDOMT5cIs7FTvRT",
                "assignee": null,
                "comments": 0,
                "html_url": "https://github.com/elizaOS/eliza/issues/5754",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-11T14:20:08Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/labels{/name}",
                "updated_at": "2025-08-11T14:20:08Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              }
            },
            "lastIssues": [
              {
                "id": 3310285907,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754",
                "body": "## Issue Summary\nThe `elizaos publish --npm` command reports successful publishing but the plugin is not actually published to npm, despite showing success messages. The npm publish is failing with a 404 error, but the ElizaOS CLI incorrectly reports success.\n\n## Key Problems Identified\n\n### 1. Critical NPM Publishing Failure\n- **Error**: `npm error 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found`\n- **Issue**: The package scope `@elizaos` doesn't exist on npm, preventing publishing\n- **Impact**: Package cannot be published to npm, but CLI reports success\n\n### 2. False Success Reporting\n- **Issue**: CLI reports `[‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm`\n- **Reality**: npm publish failed with 404 error\n- **Impact**: Developers believe their plugin is published when it's not\n\n### 3. Registry Repository Mismatch\n- **Expected**: Should create PR against `https://github.com/elizaos-plugins/registry`\n- **Actual**: Still references old registry `https://github.com/elizaos/registry`\n- **Impact**: Plugin won't appear in the official ElizaOS registry\n\n## Steps to Reproduce\n\n```bash\n# Navigate to the plugin directory\ncd packages/plugin-polygon\n\n# Ensure you're on the correct branch with the changes\ngit checkout polygon\n\n# Run the publish command\nelizaos publish --npm\n\n# Verify the success message appears\n# [‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm\n\n# Check if package actually exists on npm\nnpm view @elizaos/plugin-polygon@1.0.0\n# Result: 404 Not Found - '@elizaos/plugin-polygon@1.0.0' is not in this registry\n```\n\n## Technical Details\n\n### NPM Error Analysis\nThe npm logs show the root cause:\n```\nhttp fetch PUT 404 https://registry.npmjs.org/@elizaos%2fplugin-polygon 507ms\nerror 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found\n```\n\nThis indicates that the `@elizaos` scope doesn't exist on npm, which is required for publishing scoped packages.\n\n### CLI Error Handling Failure\nThe ElizaOS CLI is not properly parsing npm error codes:\n- npm returns exit code 1 (failure)\n- CLI ignores the error and reports success\n- No validation that the package actually exists on npm\n\n## Expected Behavior\n1. CLI should detect npm publish failures (exit code 1)\n2. CLI should fail with clear error message when package scope doesn't exist\n3. CLI should validate that package actually exists on npm after publishing\n4. CLI should create PRs against the correct registry repository\n\n## Recommended Fixes\n\n### 1. Fix NPM Error Detection\n```typescript\n// In the publish command, check npm exit code\nconst npmResult = await exec('npm publish', { cwd: pluginDir });\nif (npmResult.exitCode !== 0) {\n  throw new Error(`NPM publish failed: ${npmResult.stderr}`);\n}\n```\n\n### 2. Add Package Scope Validation\n```typescript\n// Before publishing, check if scope exists\nconst scopeExists = await checkNpmScope('@elizaos');\nif (!scopeExists) {\n  throw new Error('Package scope @elizaos does not exist on npm. Contact npm support to create the scope.');\n}\n```\n\n### 3. Add Post-Publish Validation\n```typescript\n// After publishing, verify package exists\nconst packageExists = await checkPackageExists(packageName, version);\nif (!packageExists) {\n  throw new Error(`Package was not published successfully. Check npm logs for details.`);\n}\n```\n\n## Priority\n**Critical** - This completely blocks plugin publishing and creates false success reports.\n\n## Affected Components\n- `packages/cli/src/commands/publish.ts`\n- NPM publishing logic\n- Error handling and success reporting\n- Package scope validation\n- Registry repository configuration\n\n## Immediate Action Required\n1. **Create the `@elizaos` scope on npm** or use an existing scope\n2. Update CLI to properly detect and handle npm publish failures\n3. Add post-publish validation to ensure packages actually exist on npm\n4. Update registry repository configuration\n\n## Alternative Solutions\n1. **Use existing scope**: Change package name to `@monilpat/plugin-polygon`\n2. **Create organization scope**: Set up `@elizaos` organization on npm\n3. **Use unscoped package**: Publish as `elizaos-plugin-polygon`\n\nThis issue is critically blocking plugin developers from successfully publishing their work and needs immediate attention from the ElizaOS team.\n",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "Critical: Plugin Publishing Fails with False Success Reports",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5754,
                "node_id": "I_kwDOMT5cIs7FTvRT",
                "assignee": null,
                "comments": 0,
                "html_url": "https://github.com/elizaOS/eliza/issues/5754",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-11T14:20:08Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/labels{/name}",
                "updated_at": "2025-08-11T14:20:08Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3308102900,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749",
                "body": "### Problem Statement\nCurrently, ElizaOS scenario testing lacks the ability to mock internal agent runtime calls (particularly LLM interactions) when testing via the API client. This makes it difficult to create deterministic tests for agent behavior and workflows.\n\n### Current Limitations\n- Global function mocks only work for code executed in the same process\n- No way to intercept `runtime.useModel` calls from the bootstrap plugin\n- Agent behavior is non-deterministic due to real LLM calls\n- Difficult to test specific agent decision paths and responses\n\n### Why Different Approach Was Needed\n\nThe existing mocking system was designed for **code execution environments** (E2B sandbox and local `node -e` processes), where mocks are applied to the execution context. However, **agent testing** works differently:\n\n- **E2B/Local Execution**: Code runs in isolated processes/sandboxes where global mocks can be applied\n- **Agent Testing**: Agent runs as a service with API client interaction, requiring direct runtime method interception\n- **Architecture Gap**: The bootstrap plugin calls `runtime.useModel` internally, which can't be mocked through the execution environment approach\n\nThis architectural difference necessitated a new approach that directly intercepts runtime methods rather than relying on execution context mocking.\n\n### Proposed Solution: Runtime Method Mocking\n\nWe've implemented a new mocking approach that directly intercepts `IAgentRuntime` method calls:\n\n#### Key Components\n\n1. **MockEngine Enhancement**\n   - Added `runtimeMethodMocks` to support mocking runtime methods\n   - Priority system: `runtimeMethod` > `service` > `globalFunction`\n   - Direct method replacement on the runtime instance\n\n2. **Schema Updates**\n   - Extended `MockSchema` to include `runtimeMethod: z.string().optional()`\n   - Supports mocking any `IAgentRuntime` method (e.g., `useModel`, `getService`)\n\n3. **Conditional Matching**\n   - Matcher functions can inspect method arguments\n   - Example: `\"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"`\n   - Supports complex conditional logic for when to apply mocks\n\n#### Usage Example\n\n```yaml\nsetup:\n  mocks:\n    - runtimeMethod: \"useModel\"\n      method: \"useModel\"\n      when:\n        matcher: \"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"\n      response: \"<response><name>agent</name><reasoning>Mocked response</reasoning><action>RESPOND</action></response>\"\n```\n\n#### Benefits\n\n1. **Deterministic Testing**: Replace LLM calls with static responses\n2. **Full Workflow Testing**: Test complete agent decision flows\n3. **Conditional Mocking**: Apply mocks based on specific conditions\n4. **Runtime Integration**: Works seamlessly with existing agent architecture\n5. **Backward Compatibility**: Existing mocks continue to work\n\n#### Implementation Steps\n\n- MockEngine runtime method support\n- Schema updates for runtimeMethod mocks\n- Conditional matching with matcher functions\n- Integration with scenario runner\n- Basic useModel mocking working\n- Add support for mocking other runtime methods (getService, etc.)\n- Create comprehensive test scenarios\n- Add documentation and examples\n- Consider adding mock recording/replay capabilities\n\n### Technical Details\n\nThe implementation works by:\n1. Creating the `IAgentRuntime` instance in the scenario runner\n2. Applying mocks directly to the runtime object before agent initialization\n3. The bootstrap plugin receives the mocked runtime and uses the mocked methods\n4. Mocks are reverted after scenario completion\n\nThis approach provides the foundation for robust, deterministic agent testing while maintaining the existing architecture.",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "Implement Runtime Method Mocking for Deterministic Agent Testing",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 7668252177,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/testing",
                    "name": "testing",
                    "color": "2D3957",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAAByRA-EQ",
                    "description": ""
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5749,
                "node_id": "I_kwDOMT5cIs7FLaT0",
                "assignee": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "comments": 0,
                "html_url": "https://github.com/elizaOS/eliza/issues/5749",
                "assignees": [
                  {
                    "id": 15067321,
                    "url": "https://api.github.com/users/monilpat",
                    "type": "User",
                    "login": "monilpat",
                    "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                    "html_url": "https://github.com/monilpat",
                    "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/monilpat/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                    "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/monilpat/followers",
                    "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/monilpat/orgs",
                    "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                    "received_events_url": "https://api.github.com/users/monilpat/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-11T00:08:49Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/labels{/name}",
                "updated_at": "2025-08-11T00:09:37Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3304516859,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747",
                "body": null,
                "type": null,
                "user": {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                },
                "state": "open",
                "title": "Fixing bugs in eliza-cloud",
                "labels": [],
                "locked": false,
                "number": 5747,
                "node_id": "I_kwDOMT5cIs7E9uz7",
                "assignee": {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                },
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5747",
                "assignees": [
                  {
                    "id": 48334430,
                    "url": "https://api.github.com/users/samarth30",
                    "type": "User",
                    "login": "samarth30",
                    "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                    "html_url": "https://github.com/samarth30",
                    "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/samarth30/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                    "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/samarth30/followers",
                    "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/samarth30/orgs",
                    "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                    "received_events_url": "https://api.github.com/users/samarth30/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-08T16:01:56Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/labels{/name}",
                "updated_at": "2025-08-08T19:02:49Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "MEMBER",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": {
                  "id": 20150,
                  "name": "Linear",
                  "slug": "linear",
                  "owner": {
                    "id": 46686594,
                    "url": "https://api.github.com/users/linear",
                    "type": "Organization",
                    "login": "linear",
                    "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ2Njg2NTk0",
                    "html_url": "https://github.com/linear",
                    "gists_url": "https://api.github.com/users/linear/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/linear/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/46686594?v=4",
                    "events_url": "https://api.github.com/users/linear/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/linear/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/linear/followers",
                    "following_url": "https://api.github.com/users/linear/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/linear/orgs",
                    "subscriptions_url": "https://api.github.com/users/linear/subscriptions",
                    "received_events_url": "https://api.github.com/users/linear/received_events"
                  },
                  "events": [
                    "check_suite",
                    "issues",
                    "issue_comment",
                    "pull_request",
                    "pull_request_review",
                    "repository",
                    "sub_issues"
                  ],
                  "node_id": "MDM6QXBwMjAxNTA=",
                  "html_url": "https://github.com/apps/linear",
                  "client_id": "Iv1.085d682ea245c945",
                  "created_at": "2018-11-02T18:07:23Z",
                  "updated_at": "2025-02-07T14:59:56Z",
                  "description": "",
                  "permissions": {
                    "checks": "read",
                    "issues": "write",
                    "metadata": "read",
                    "pull_requests": "write"
                  },
                  "external_url": "https://linear.app"
                }
              },
              {
                "id": 3302237103,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738",
                "body": "## Description\n\nThe `bun run clean` command is failing due to TypeScript errors in `@elizaos/core` package during the DTS (type definition) build phase.\n\n## Error Details\n\n### Build Process\n```\n‚Ä¢ Running build in 17 packages\n‚Ä¢ Remote caching disabled\n@elizaos/config:build: cache miss\n@elizaos/autodoc:build: cache miss\n@elizaos/core:build: cache miss\n```\n\n### TypeScript Errors in @elizaos/core/src/utils.ts\n1. Line 218: `error TS2345: Argument of type '`${string}-${string}-${string}-${string}-${string}`' is not assignable to parameter of type 'never'.`\n2. Line 366: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n3. Line 409: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n4. Line 536: `error TS2345: Argument of type '{ numberOfChunks: number; averageChunkSize: number; }' is not assignable to parameter of type 'never'.`\n\n### Impact\n- Blocks `bun run clean` command\n- Prevents successful build of `@elizaos/core`\n- Affects dependent packages in the monorepo\n\n## Steps to Reproduce\n1. Run `bun run clean`\n2. Observe build failure in `@elizaos/core`\n3. Build fails with TypeScript errors during DTS generation\n\n## Expected Behavior\n- `bun run clean` should complete successfully\n- `@elizaos/core` should build without TypeScript errors\n- Type definitions should be generated correctly\n\n## Suggested Fix\n\nThe errors suggest type mismatches in `utils.ts`. Need to:\n1. Review type definitions in affected lines\n2. Update type assertions or generic constraints\n3. Ensure string template literal types are properly handled\n4. Fix object type assignments\n\n### Files to Update\n- `packages/core/src/utils.ts`\n\n## Priority\n**HIGH** - This is blocking clean builds and potentially affecting development workflow.",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "üêõ Build failure in @elizaos/core causing bun run clean to fail",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5738,
                "node_id": "I_kwDOMT5cIs7E1COv",
                "assignee": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5738",
                "assignees": [
                  {
                    "id": 15067321,
                    "url": "https://api.github.com/users/monilpat",
                    "type": "User",
                    "login": "monilpat",
                    "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                    "html_url": "https://github.com/monilpat",
                    "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/monilpat/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                    "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/monilpat/followers",
                    "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/monilpat/orgs",
                    "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                    "received_events_url": "https://api.github.com/users/monilpat/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-08T00:26:11Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/labels{/name}",
                "updated_at": "2025-08-11T14:56:01Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3301116813,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734",
                "body": "**Describe the bug**\n\nOn project creation, ElizaOS CLI fails with the following error:\n```\n‚óá  Failed to build project\nstdout: src/index.ts(7,25): error TS2345: Argument of type 'string' is not assignable to parameter of type 'undefined'.\nstderr: $ tsc --noEmit && vite build && tsup\n```\n\n**To Reproduce**\n\n- Install ElizaOS through `bun`\n```\nbun i -g @elizaos/cli\n```\n- Create new ElizaOS project\n```\nelizaos create abcde\n```\n\n**Expected behavior**\n\nProject built successfully\n\n**Screenshots**\n\n<img width=\"1095\" height=\"572\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/967dd6a2-0d70-4e2e-8019-85a2eab5f225\" />\n\n**Additional context**\n\nElizaOS CLI version: `1.3.2`\n",
                "type": null,
                "user": {
                  "id": 74447600,
                  "url": "https://api.github.com/users/Kemystra",
                  "type": "User",
                  "login": "Kemystra",
                  "node_id": "MDQ6VXNlcjc0NDQ3NjAw",
                  "html_url": "https://github.com/Kemystra",
                  "gists_url": "https://api.github.com/users/Kemystra/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/Kemystra/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/74447600?v=4",
                  "events_url": "https://api.github.com/users/Kemystra/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/Kemystra/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/Kemystra/followers",
                  "following_url": "https://api.github.com/users/Kemystra/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/Kemystra/orgs",
                  "subscriptions_url": "https://api.github.com/users/Kemystra/subscriptions",
                  "received_events_url": "https://api.github.com/users/Kemystra/received_events"
                },
                "state": "open",
                "title": "Eliza CLI failed to build project",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5734,
                "node_id": "I_kwDOMT5cIs7EwwuN",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5734",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T16:14:00Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/labels{/name}",
                "updated_at": "2025-08-08T19:43:52Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "NONE",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3299481897,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729",
                "body": "# Relates to\r\n\r\nN/A (Documentation improvement, not tied to a specific issue or ticket)\r\n\r\n# Risks\r\n\r\nLow.  \r\nThis change only updates documentation and does not affect any code or functionality.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR updates the elizaos README to include a fix for installation errors that may occur due to permission issues. It adds a note suggesting the use of sudo if users encounter a \"Permission denied\" or \"InstallFailed\" error when running the `elizaos create my-agent` command.\r\n\r\n## What kind of change is this?\r\n\r\nImprovements (misc. changes to existing features)  \r\nDocumentation update\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes require a change to the project documentation.  \r\nI have updated the documentation accordingly.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\nStart by reviewing the changes in the README.md file, specifically the section on creating a new project.\r\n\r\n## Detailed testing steps\r\n\r\n- Open the updated README.md.\r\n- Review the new instructions under \"Create Your First Project.\"\r\n- Confirm that the added note about using `sudo` is clear and helpful for users who encounter permission errors.",
                "type": null,
                "user": {
                  "id": 32749185,
                  "url": "https://api.github.com/users/mandatedisrael",
                  "type": "User",
                  "login": "mandatedisrael",
                  "node_id": "MDQ6VXNlcjMyNzQ5MTg1",
                  "html_url": "https://github.com/mandatedisrael",
                  "gists_url": "https://api.github.com/users/mandatedisrael/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/mandatedisrael/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/32749185?v=4",
                  "events_url": "https://api.github.com/users/mandatedisrael/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/mandatedisrael/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/mandatedisrael/followers",
                  "following_url": "https://api.github.com/users/mandatedisrael/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/mandatedisrael/orgs",
                  "subscriptions_url": "https://api.github.com/users/mandatedisrael/subscriptions",
                  "received_events_url": "https://api.github.com/users/mandatedisrael/received_events"
                },
                "draft": false,
                "state": "open",
                "title": "Update README.md to fix error",
                "labels": [],
                "locked": false,
                "number": 5729,
                "node_id": "PR_kwDOMT5cIs6iiNWN",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T08:10:12Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/labels{/name}",
                "updated_at": "2025-08-07T08:10:24Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/comments",
                "pull_request": {
                  "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5729",
                  "diff_url": "https://github.com/elizaOS/eliza/pull/5729.diff",
                  "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                  "merged_at": null,
                  "patch_url": "https://github.com/elizaOS/eliza/pull/5729.patch"
                },
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "FIRST_TIME_CONTRIBUTOR",
                "performed_via_github_app": null
              },
              {
                "id": 3299322983,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728",
                "body": "# Background\r\n\r\n## What does this PR do?\r\n\r\nIntroduce entity for cancelling runs `CancelRunSignal`\r\n\r\n## Why are we doing this? Any context or related work?\r\n\r\n- Calls to LLMs usually cost some credits\r\n- When we receive the `RUN_STARTED` event we can check current entity and end run to prevent credits spending\r\n\r\n# Documentation changes needed?\r\n\r\n## Methods\r\n\r\n- `static getSignal(runId: UUID)` - get signal by runId or create if null\r\n- `static clear(runId: UUID)` - clear signal from map\r\n- `cancel(content?: Content)` - cancel current run and and send `content` as a response to user\r\n\r\n## Example\r\n\r\n```typescript\r\nimport { Content, EventType, Plugin } from \"@elizaos/core\";\r\nimport { CancelRunSignal } from \"@elizaos/plugin-bootstrap\";\r\n\r\n// consider we have a service to determine eligibility for entity\r\ninterface EligibilityService {\r\n  check(entityId: UUID): Promise<{ result: boolean, reason?: Content }>\r\n}\r\n\r\nconst plugin: Plugin = {\r\n...\r\n  events: {\r\n    [EventType.RUN_STARTED]: ({ entityId, runId, runtime }) => {\r\n      const service = runtime.getService<EligibilityService>(\"USER_MANAGEMENT\");\r\n      const { result, reason } = await service.check(entityId);\r\n      \r\n      if (!result) {\r\n        const signal = CancelRunSignal.getSignal(runId);\r\n        signal.cancel(reason);\r\n      }\r\n    },\r\n    ...\r\n  },\r\n  ...\r\n}\r\n\r\nexport default Plugin;\r\n```\r\n\r\n## Discord username\r\n\r\nalexd000\r\n\r\n",
                "type": null,
                "user": {
                  "id": 82507604,
                  "url": "https://api.github.com/users/alex-nax",
                  "type": "User",
                  "login": "alex-nax",
                  "node_id": "MDQ6VXNlcjgyNTA3NjA0",
                  "html_url": "https://github.com/alex-nax",
                  "gists_url": "https://api.github.com/users/alex-nax/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/alex-nax/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/82507604?v=4",
                  "events_url": "https://api.github.com/users/alex-nax/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/alex-nax/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/alex-nax/followers",
                  "following_url": "https://api.github.com/users/alex-nax/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/alex-nax/orgs",
                  "subscriptions_url": "https://api.github.com/users/alex-nax/subscriptions",
                  "received_events_url": "https://api.github.com/users/alex-nax/received_events"
                },
                "draft": false,
                "state": "open",
                "title": "feat: ability to cancel current run before any calls to LLM are made",
                "labels": [],
                "locked": false,
                "number": 5728,
                "node_id": "PR_kwDOMT5cIs6ihriD",
                "assignee": null,
                "comments": 3,
                "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T07:19:35Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/labels{/name}",
                "updated_at": "2025-08-07T07:22:05Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/comments",
                "pull_request": {
                  "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5728",
                  "diff_url": "https://github.com/elizaOS/eliza/pull/5728.diff",
                  "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                  "merged_at": null,
                  "patch_url": "https://github.com/elizaOS/eliza/pull/5728.patch"
                },
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "FIRST_TIME_CONTRIBUTOR",
                "performed_via_github_app": null
              },
              {
                "id": 3298692741,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727",
                "body": "# feat(scenarios): Implement natural language agent interaction and response validation\n\n## Description\n\nThis ticket enables scenarios to test agent behavior through natural language interactions rather than direct code execution. This allows testing of agent reasoning, decision-making, and response generation in realistic conversation contexts with proper evaluation of agent responses.\n\n## Acceptance Criteria\n\n1. Scenario `run` blocks support `input` field for natural language prompts to agents\n2. Agent responses are captured and available for evaluation (text, thoughts, actions)\n3. Evaluators can access both agent response text and execution context\n4. Support for multi-turn conversations in scenarios\n5. Agent responses include thought process and action decisions\n6. Integration with existing evaluation engine for response validation\n7. Support for conversation context across multiple steps\n8. Agent response timing and performance metrics\n\n## Technical Approach\n\n### 1. Enhanced Run Step Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst RunStepSchema = z.object({\n  name: z.string().optional(),\n  // Natural language input to agent\n  input: z.string().optional(),\n  // Direct code execution (existing)\n  lang: z.string().optional(),\n  code: z.string().optional(),\n  // Agent interaction specific\n  agent_context: z.object({\n    conversation_id: z.string().optional(),\n    user_id: z.string().optional(),\n    room_id: z.string().optional(),\n  }).optional(),\n  evaluations: z.array(EvaluationSchema),\n});\n```\n\n### 2. Agent Interaction Engine\n```typescript\n// packages/cli/src/scenarios/agent-interaction.ts\nexport class AgentInteractionEngine {\n  constructor(private runtime: IAgentRuntime) {}\n\n  async interactWithAgent(input: string, context?: AgentContext): Promise<AgentResponse> {\n    // Create message for agent\n    const message: Memory = {\n      entityId: context?.user_id || 'scenario-user',\n      roomId: context?.room_id || 'scenario-room',\n      content: {\n        type: 'text',\n        text: input,\n      },\n      metadata: {\n        type: 'message',\n        conversationId: context?.conversation_id,\n      },\n    };\n\n    // Send to agent and capture response\n    const startTime = Date.now();\n    const response = await this.runtime.processMessage(message);\n    const endTime = Date.now();\n\n    return {\n      text: response.text,\n      thoughts: response.thoughts,\n      actions: response.actions,\n      timing: {\n        startTime,\n        endTime,\n        duration: endTime - startTime,\n      },\n      context: {\n        conversationId: context?.conversation_id,\n        messageId: message.id,\n      },\n    };\n  }\n}\n```\n\n### 3. Enhanced Execution Result\n```typescript\n// packages/cli/src/scenarios/providers.ts\nexport interface ExecutionResult {\n  exitCode: number;\n  stdout: string;\n  stderr: string;\n  files: Record<string, string>;\n  // New: Agent interaction results\n  agentResponse?: AgentResponse;\n  conversationHistory?: AgentResponse[];\n}\n```\n\n## Test Scenario\n\nCreate `agent-interaction-test.scenario.yaml`:\n```yaml\nname: \"Agent Interaction Test\"\ndescription: \"Tests natural language interaction with agents\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Implement Dark Mode\"\n          number: 123\n          state: \"open\"\n          labels: [\"feature\", \"ui\"]\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"2.5\"\n\nrun:\n  - name: \"Ask agent about roadmap\"\n    input: \"What new features are you planning to add?\"\n    agent_context:\n      conversation_id: \"roadmap-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify agent searched for issues\"\n      \n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n        description: \"Verify agent mentioned the mocked issue\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent provide a helpful and coherent response about new features?\"\n        expected: \"yes\"\n        description: \"Verify agent response quality\"\n\n  - name: \"Ask agent about wallet\"\n    input: \"What's my current wallet balance?\"\n    agent_context:\n      conversation_id: \"wallet-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify agent checked wallet balance\"\n      \n      - type: \"string_contains\"\n        value: \"2.5 ETH\"\n        description: \"Verify agent reported the correct balance\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent clearly explain the wallet balance information?\"\n        expected: \"yes\"\n\n  - name: \"Multi-turn conversation\"\n    input: \"Can you help me with both my wallet and roadmap?\"\n    agent_context:\n      conversation_id: \"multi-turn-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"ETH\"\n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent address both wallet and roadmap questions comprehensively?\"\n        expected: \"yes\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Single Turn**: Test basic agent interaction and response\n2. **Multi-turn**: Test conversation context across steps\n3. **Action Tracking**: Verify agent uses appropriate actions\n4. **Response Quality**: Test LLM judge evaluation of responses\n5. **Performance**: Test response timing and metrics\n6. **Error Handling**: Test agent behavior with invalid inputs\n\n## Dependencies\n\n- Requires plugin system integration (Ticket 1)\n- Builds on advanced mocking system (Ticket 2)\n- Integrates with existing evaluation engine\n- Depends on agent runtime message processing",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement natural language agent interaction and response validation",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5727,
                "node_id": "I_kwDOMT5cIs7Eng6F",
                "assignee": null,
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5727",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:49:34Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/labels{/name}",
                "updated_at": "2025-08-07T05:35:40Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3298691383,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726",
                "body": "# feat(scenarios): Implement conditional mocking and complex response structures\n\n## Description\n\nThis ticket enhances the mocking system to support conditional responses based on input parameters and complex response structures with metadata. This enables realistic testing of service interactions like GitHub API calls or EVM transactions with proper request/response matching.\n\n## Acceptance Criteria\n\n1. Mock definitions support `when` clauses for conditional responses\n2. `when` clauses can match on method arguments, input parameters, or request context\n3. Mock responses support complex nested structures with metadata (timestamps, IDs, etc.)\n4. Multiple mock responses can be defined for the same service/method with different conditions\n5. Mock system provides clear logging of which mock was triggered and why\n6. Mock responses can include realistic error conditions and edge cases\n7. Support for dynamic response generation based on input parameters\n8. Mock validation ensures `when` clauses are syntactically correct\n\n## Technical Approach\n\n### 1. Enhanced Mock Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst MockSchema = z.object({\n  service: z.string(),\n  method: z.string(),\n  when: z.object({\n    // Match on method arguments\n    args: z.array(z.any()).optional(),\n    // Match on specific argument values\n    input: z.record(z.any()).optional(),\n    // Match on request context\n    context: z.record(z.any()).optional(),\n    // Custom matching function\n    matcher: z.string().optional(), // JavaScript expression\n  }).optional(),\n  response: z.any(), // Can be function or static value\n  // For dynamic responses\n  responseFn: z.string().optional(), // JavaScript function\n  // Error simulation\n  error: z.object({\n    code: z.string(),\n    message: z.string(),\n  }).optional(),\n});\n```\n\n### 2. Mock Engine Implementation\n```typescript\n// packages/cli/src/scenarios/mock-engine.ts\nexport class MockEngine {\n  private mocks: MockDefinition[] = [];\n\n  addMock(mock: MockDefinition) {\n    this.mocks.push(mock);\n  }\n\n  async findMock(service: string, method: string, args: any[]): Promise<any> {\n    const candidates = this.mocks.filter(m => \n      m.service === service && m.method === method\n    );\n\n    for (const mock of candidates) {\n      if (await this.matchesCondition(mock, args)) {\n        this.logger.info(`Mock triggered: ${service}.${method} with condition: ${JSON.stringify(mock.when)}`);\n        return this.generateResponse(mock, args);\n      }\n    }\n\n    return null; // No mock found\n  }\n\n  private async matchesCondition(mock: MockDefinition, args: any[]): Promise<boolean> {\n    if (!mock.when) return true; // Default mock\n\n    // Match on arguments\n    if (mock.when.args) {\n      if (!this.deepEqual(args, mock.when.args)) return false;\n    }\n\n    // Match on input parameters\n    if (mock.when.input) {\n      const input = this.extractInputFromArgs(args);\n      if (!this.deepEqual(input, mock.when.input)) return false;\n    }\n\n    // Custom matcher function\n    if (mock.when.matcher) {\n      const matcherFn = new Function('args', 'input', mock.when.matcher);\n      return matcherFn(args, this.extractInputFromArgs(args));\n    }\n\n    return true;\n  }\n\n  private generateResponse(mock: MockDefinition, args: any[]): any {\n    if (mock.error) {\n      throw new Error(`${mock.error.code}: ${mock.error.message}`);\n    }\n\n    if (mock.responseFn) {\n      const responseFn = new Function('args', 'input', mock.responseFn);\n      return responseFn(args, this.extractInputFromArgs(args));\n    }\n\n    return mock.response;\n  }\n}\n```\n\n## Test Scenario\n\nCreate `advanced-mocking-test.scenario.yaml`:\n```yaml\nname: \"Advanced Mocking Test\"\ndescription: \"Tests conditional mocking and complex response structures\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    # Conditional GitHub issue search\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"bug\"\n        matcher: \"input.labels.includes('bug')\"\n      response:\n        - title: \"Critical Bug Found\"\n          number: 456\n          state: \"open\"\n          labels: [\"bug\", \"critical\"]\n          created_at: \"2024-07-15T10:00:00Z\"\n\n    # Conditional GitHub issue search - different response\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"feature\"\n        matcher: \"input.labels.includes('feature')\"\n      response:\n        - title: \"New Feature Request\"\n          number: 789\n          state: \"open\"\n          labels: [\"feature\", \"enhancement\"]\n          created_at: \"2024-07-15T11:00:00Z\"\n\n    # Dynamic EVM balance response\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      when:\n        args: [\"0x1234567890abcdef\"]\n      responseFn: |\n        return {\n          chain: \"ethereum\",\n          address: args[0],\n          balances: [\n            { symbol: \"ETH\", amount: \"1.23\" },\n            { symbol: \"USDC\", amount: \"1000.00\" }\n          ],\n          last_updated: new Date().toISOString()\n        }\n\n    # Error simulation\n    - service: \"github-service\"\n      method: \"readFile\"\n      when:\n        input:\n          path: \"/docs/nonexistent.md\"\n      error:\n        code: \"FILE_NOT_FOUND\"\n        message: \"File does not exist\"\n\nrun:\n  - name: \"Test conditional GitHub search\"\n    input: \"Search for issues with bug label\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"Critical Bug Found\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent correctly search for bug issues?\"\n        expected: \"yes\"\n\n  - name: \"Test dynamic EVM response\"\n    input: \"What's the balance for address 0x1234567890abcdef?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n      - type: \"string_contains\"\n        value: \"1000.00 USDC\"\n\n  - name: \"Test error handling\"\n    input: \"Read the file /docs/nonexistent.md\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.readFile\"\n      - type: \"string_contains\"\n        value: \"File does not exist\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Conditional Matching**: Test different responses based on input parameters\n2. **Dynamic Responses**: Test response generation based on arguments\n3. **Error Simulation**: Test error handling and reporting\n4. **Complex Structures**: Test nested response objects with metadata\n5. **Multiple Mocks**: Test multiple mocks for same service/method\n6. **Logging**: Verify mock selection is logged clearly\n\n## Dependencies\n\n- Builds on existing mock system in scenarios\n- Requires plugin system integration (Ticket 1)\n- Integrates with agent interaction testing (Ticket 3) ",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement conditional mocking and complex response structures",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5726,
                "node_id": "I_kwDOMT5cIs7Engk3",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5726",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:49:00Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/labels{/name}",
                "updated_at": "2025-08-07T05:32:53Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3298689704,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725",
                "body": "# feat(scenarios): Implement plugin specification and dynamic loading\n\n## Description\n\nThis ticket implements plugin specification in scenario YAML files, allowing scenarios to declare which plugins are required for testing. This enables testing of agent behaviors that depend on specific plugins like `@elizaos/plugin-github` or `@elizaos/plugin-evm`. The system will dynamically load specified plugins during scenario execution and make their actions, providers, and services available to the agent.\n\n## Acceptance Criteria\n\n1. Scenario YAML supports a `plugins` array at the root level with string plugin names\n2. The `initializeAgent()` function respects scenario plugin specifications and loads them via `startAgent()`\n3. Plugin loading follows the same dependency resolution and error handling as the main CLI\n4. Scenarios can specify both string plugin names (`@elizaos/plugin-github`) and direct plugin objects\n5. Plugin loading errors are clearly reported with actionable guidance\n6. Default plugins (bootstrap, sql) are automatically included unless explicitly excluded via `exclude_defaults: true`\n7. Plugin conflicts are detected and reported during scenario validation\n8. Plugin initialization errors don't crash the scenario but are reported in results\n\n## Technical Approach\n\n### 1. Update Scenario Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst ScenarioSchema = z.object({\n  name: z.string(),\n  description: z.string(),\n  plugins: z.array(z.string()).optional(), // e.g., [\"@elizaos/plugin-github\"]\n  exclude_defaults: z.boolean().optional(), // exclude bootstrap/sql\n  environment: EnvironmentSchema,\n  setup: SetupSchema.optional(),\n  run: z.array(RunStepSchema),\n  judgment: JudgmentSchema,\n});\n```\n\n### 2. Enhance Runtime Factory\n```typescript\n// packages/cli/src/scenarios/runtime-factory.ts\nexport async function initializeAgent(scenario: Scenario): Promise<IAgentRuntime> {\n  const character: Character = {\n    name: 'scenario-runner',\n    id: stringToUuid('scenario-runner'),\n    bio: 'A minimal character for running scenarios',\n    plugins: scenario.plugins || []\n  };\n\n  // Load default plugins unless excluded\n  if (!scenario.exclude_defaults) {\n    character.plugins.push('@elizaos/plugin-bootstrap', '@elizaos/plugin-sql');\n  }\n\n  const runtime = await startAgent(\n    encryptedCharacter(character),\n    server,\n    undefined,\n    character.plugins,\n    { isTestMode: true }\n  );\n\n  return runtime;\n}\n```\n\n### 3. Plugin Validation\n```typescript\n// packages/cli/src/scenarios/plugin-validator.ts\nexport async function validateScenarioPlugins(scenario: Scenario): Promise<ValidationResult[]> {\n  const results: ValidationResult[] = [];\n  \n  for (const pluginName of scenario.plugins || []) {\n    try {\n      const plugin = await loadAndPreparePlugin(pluginName);\n      if (!plugin) {\n        results.push({\n          type: 'error',\n          message: `Plugin '${pluginName}' could not be loaded`,\n          suggestion: 'Check if plugin is installed or built correctly'\n        });\n      }\n    } catch (error) {\n      results.push({\n        type: 'error', \n        message: `Failed to validate plugin '${pluginName}': ${error.message}`,\n        suggestion: 'Verify plugin dependencies and configuration'\n      });\n    }\n  }\n  \n  return results;\n}\n```\n\n## Test Scenario\n\nCreate `plugin-integration-test.scenario.yaml`:\n```yaml\nname: \"Plugin Integration Test\"\ndescription: \"Tests loading and using plugins specified in scenario YAML\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Test Issue\"\n          number: 123\n          state: \"open\"\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"1.23\"\n\nrun:\n  - name: \"Test GitHub plugin actions\"\n    input: \"Search for issues with label 'bug'\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify GitHub plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"Test Issue\"\n        description: \"Verify agent found the mocked issue\"\n\n  - name: \"Test EVM plugin actions\"\n    input: \"What's my wallet balance?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify EVM plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n        description: \"Verify agent reported the mocked balance\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Plugin Loading Test**: Verify plugins load without errors\n2. **Action Availability Test**: Confirm agent can use plugin actions\n3. **Error Handling Test**: Test with non-existent plugin\n4. **Default Plugin Test**: Verify bootstrap/sql are included by default\n5. **Exclusion Test**: Test `exclude_defaults: true` behavior\n\n## Dependencies\n\n- Fixes the `startAgent` hanging issue (#5719) to enable plugin testing\n- Builds on existing `loadAndPreparePlugin` functionality\n- Integrates with current scenario execution flow ",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement plugin specification and dynamic loading",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5725,
                "node_id": "I_kwDOMT5cIs7EngKo",
                "assignee": null,
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5725",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:48:08Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/labels{/name}",
                "updated_at": "2025-08-07T05:37:32Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              }
            ]
          },
          "issues": [
            {
              "id": 3310285907,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754",
              "body": "## Issue Summary\nThe `elizaos publish --npm` command reports successful publishing but the plugin is not actually published to npm, despite showing success messages. The npm publish is failing with a 404 error, but the ElizaOS CLI incorrectly reports success.\n\n## Key Problems Identified\n\n### 1. Critical NPM Publishing Failure\n- **Error**: `npm error 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found`\n- **Issue**: The package scope `@elizaos` doesn't exist on npm, preventing publishing\n- **Impact**: Package cannot be published to npm, but CLI reports success\n\n### 2. False Success Reporting\n- **Issue**: CLI reports `[‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm`\n- **Reality**: npm publish failed with 404 error\n- **Impact**: Developers believe their plugin is published when it's not\n\n### 3. Registry Repository Mismatch\n- **Expected**: Should create PR against `https://github.com/elizaos-plugins/registry`\n- **Actual**: Still references old registry `https://github.com/elizaos/registry`\n- **Impact**: Plugin won't appear in the official ElizaOS registry\n\n## Steps to Reproduce\n\n```bash\n# Navigate to the plugin directory\ncd packages/plugin-polygon\n\n# Ensure you're on the correct branch with the changes\ngit checkout polygon\n\n# Run the publish command\nelizaos publish --npm\n\n# Verify the success message appears\n# [‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm\n\n# Check if package actually exists on npm\nnpm view @elizaos/plugin-polygon@1.0.0\n# Result: 404 Not Found - '@elizaos/plugin-polygon@1.0.0' is not in this registry\n```\n\n## Technical Details\n\n### NPM Error Analysis\nThe npm logs show the root cause:\n```\nhttp fetch PUT 404 https://registry.npmjs.org/@elizaos%2fplugin-polygon 507ms\nerror 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found\n```\n\nThis indicates that the `@elizaos` scope doesn't exist on npm, which is required for publishing scoped packages.\n\n### CLI Error Handling Failure\nThe ElizaOS CLI is not properly parsing npm error codes:\n- npm returns exit code 1 (failure)\n- CLI ignores the error and reports success\n- No validation that the package actually exists on npm\n\n## Expected Behavior\n1. CLI should detect npm publish failures (exit code 1)\n2. CLI should fail with clear error message when package scope doesn't exist\n3. CLI should validate that package actually exists on npm after publishing\n4. CLI should create PRs against the correct registry repository\n\n## Recommended Fixes\n\n### 1. Fix NPM Error Detection\n```typescript\n// In the publish command, check npm exit code\nconst npmResult = await exec('npm publish', { cwd: pluginDir });\nif (npmResult.exitCode !== 0) {\n  throw new Error(`NPM publish failed: ${npmResult.stderr}`);\n}\n```\n\n### 2. Add Package Scope Validation\n```typescript\n// Before publishing, check if scope exists\nconst scopeExists = await checkNpmScope('@elizaos');\nif (!scopeExists) {\n  throw new Error('Package scope @elizaos does not exist on npm. Contact npm support to create the scope.');\n}\n```\n\n### 3. Add Post-Publish Validation\n```typescript\n// After publishing, verify package exists\nconst packageExists = await checkPackageExists(packageName, version);\nif (!packageExists) {\n  throw new Error(`Package was not published successfully. Check npm logs for details.`);\n}\n```\n\n## Priority\n**Critical** - This completely blocks plugin publishing and creates false success reports.\n\n## Affected Components\n- `packages/cli/src/commands/publish.ts`\n- NPM publishing logic\n- Error handling and success reporting\n- Package scope validation\n- Registry repository configuration\n\n## Immediate Action Required\n1. **Create the `@elizaos` scope on npm** or use an existing scope\n2. Update CLI to properly detect and handle npm publish failures\n3. Add post-publish validation to ensure packages actually exist on npm\n4. Update registry repository configuration\n\n## Alternative Solutions\n1. **Use existing scope**: Change package name to `@monilpat/plugin-polygon`\n2. **Create organization scope**: Set up `@elizaos` organization on npm\n3. **Use unscoped package**: Publish as `elizaos-plugin-polygon`\n\nThis issue is critically blocking plugin developers from successfully publishing their work and needs immediate attention from the ElizaOS team.\n",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "Critical: Plugin Publishing Fails with False Success Reports",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5754,
              "node_id": "I_kwDOMT5cIs7FTvRT",
              "assignee": null,
              "comments": 0,
              "html_url": "https://github.com/elizaOS/eliza/issues/5754",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-11T14:20:08Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/labels{/name}",
              "updated_at": "2025-08-11T14:20:08Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3308102900,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749",
              "body": "### Problem Statement\nCurrently, ElizaOS scenario testing lacks the ability to mock internal agent runtime calls (particularly LLM interactions) when testing via the API client. This makes it difficult to create deterministic tests for agent behavior and workflows.\n\n### Current Limitations\n- Global function mocks only work for code executed in the same process\n- No way to intercept `runtime.useModel` calls from the bootstrap plugin\n- Agent behavior is non-deterministic due to real LLM calls\n- Difficult to test specific agent decision paths and responses\n\n### Why Different Approach Was Needed\n\nThe existing mocking system was designed for **code execution environments** (E2B sandbox and local `node -e` processes), where mocks are applied to the execution context. However, **agent testing** works differently:\n\n- **E2B/Local Execution**: Code runs in isolated processes/sandboxes where global mocks can be applied\n- **Agent Testing**: Agent runs as a service with API client interaction, requiring direct runtime method interception\n- **Architecture Gap**: The bootstrap plugin calls `runtime.useModel` internally, which can't be mocked through the execution environment approach\n\nThis architectural difference necessitated a new approach that directly intercepts runtime methods rather than relying on execution context mocking.\n\n### Proposed Solution: Runtime Method Mocking\n\nWe've implemented a new mocking approach that directly intercepts `IAgentRuntime` method calls:\n\n#### Key Components\n\n1. **MockEngine Enhancement**\n   - Added `runtimeMethodMocks` to support mocking runtime methods\n   - Priority system: `runtimeMethod` > `service` > `globalFunction`\n   - Direct method replacement on the runtime instance\n\n2. **Schema Updates**\n   - Extended `MockSchema` to include `runtimeMethod: z.string().optional()`\n   - Supports mocking any `IAgentRuntime` method (e.g., `useModel`, `getService`)\n\n3. **Conditional Matching**\n   - Matcher functions can inspect method arguments\n   - Example: `\"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"`\n   - Supports complex conditional logic for when to apply mocks\n\n#### Usage Example\n\n```yaml\nsetup:\n  mocks:\n    - runtimeMethod: \"useModel\"\n      method: \"useModel\"\n      when:\n        matcher: \"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"\n      response: \"<response><name>agent</name><reasoning>Mocked response</reasoning><action>RESPOND</action></response>\"\n```\n\n#### Benefits\n\n1. **Deterministic Testing**: Replace LLM calls with static responses\n2. **Full Workflow Testing**: Test complete agent decision flows\n3. **Conditional Mocking**: Apply mocks based on specific conditions\n4. **Runtime Integration**: Works seamlessly with existing agent architecture\n5. **Backward Compatibility**: Existing mocks continue to work\n\n#### Implementation Steps\n\n- MockEngine runtime method support\n- Schema updates for runtimeMethod mocks\n- Conditional matching with matcher functions\n- Integration with scenario runner\n- Basic useModel mocking working\n- Add support for mocking other runtime methods (getService, etc.)\n- Create comprehensive test scenarios\n- Add documentation and examples\n- Consider adding mock recording/replay capabilities\n\n### Technical Details\n\nThe implementation works by:\n1. Creating the `IAgentRuntime` instance in the scenario runner\n2. Applying mocks directly to the runtime object before agent initialization\n3. The bootstrap plugin receives the mocked runtime and uses the mocked methods\n4. Mocks are reverted after scenario completion\n\nThis approach provides the foundation for robust, deterministic agent testing while maintaining the existing architecture.",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "Implement Runtime Method Mocking for Deterministic Agent Testing",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 7668252177,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/testing",
                  "name": "testing",
                  "color": "2D3957",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAAByRA-EQ",
                  "description": ""
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5749,
              "node_id": "I_kwDOMT5cIs7FLaT0",
              "assignee": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "comments": 0,
              "html_url": "https://github.com/elizaOS/eliza/issues/5749",
              "assignees": [
                {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-11T00:08:49Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/labels{/name}",
              "updated_at": "2025-08-11T00:09:37Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3304516859,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747",
              "body": null,
              "type": null,
              "user": {
                "id": 48334430,
                "url": "https://api.github.com/users/samarth30",
                "type": "User",
                "login": "samarth30",
                "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                "html_url": "https://github.com/samarth30",
                "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/samarth30/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/samarth30/followers",
                "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/samarth30/orgs",
                "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                "received_events_url": "https://api.github.com/users/samarth30/received_events"
              },
              "state": "open",
              "title": "Fixing bugs in eliza-cloud",
              "labels": [],
              "locked": false,
              "number": 5747,
              "node_id": "I_kwDOMT5cIs7E9uz7",
              "assignee": {
                "id": 48334430,
                "url": "https://api.github.com/users/samarth30",
                "type": "User",
                "login": "samarth30",
                "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                "html_url": "https://github.com/samarth30",
                "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/samarth30/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/samarth30/followers",
                "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/samarth30/orgs",
                "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                "received_events_url": "https://api.github.com/users/samarth30/received_events"
              },
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5747",
              "assignees": [
                {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-08T16:01:56Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/labels{/name}",
              "updated_at": "2025-08-08T19:02:49Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "MEMBER",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": {
                "id": 20150,
                "name": "Linear",
                "slug": "linear",
                "owner": {
                  "id": 46686594,
                  "url": "https://api.github.com/users/linear",
                  "type": "Organization",
                  "login": "linear",
                  "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ2Njg2NTk0",
                  "html_url": "https://github.com/linear",
                  "gists_url": "https://api.github.com/users/linear/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/linear/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/46686594?v=4",
                  "events_url": "https://api.github.com/users/linear/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/linear/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/linear/followers",
                  "following_url": "https://api.github.com/users/linear/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/linear/orgs",
                  "subscriptions_url": "https://api.github.com/users/linear/subscriptions",
                  "received_events_url": "https://api.github.com/users/linear/received_events"
                },
                "events": [
                  "check_suite",
                  "issues",
                  "issue_comment",
                  "pull_request",
                  "pull_request_review",
                  "repository",
                  "sub_issues"
                ],
                "node_id": "MDM6QXBwMjAxNTA=",
                "html_url": "https://github.com/apps/linear",
                "client_id": "Iv1.085d682ea245c945",
                "created_at": "2018-11-02T18:07:23Z",
                "updated_at": "2025-02-07T14:59:56Z",
                "description": "",
                "permissions": {
                  "checks": "read",
                  "issues": "write",
                  "metadata": "read",
                  "pull_requests": "write"
                },
                "external_url": "https://linear.app"
              }
            },
            {
              "id": 3302237103,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738",
              "body": "## Description\n\nThe `bun run clean` command is failing due to TypeScript errors in `@elizaos/core` package during the DTS (type definition) build phase.\n\n## Error Details\n\n### Build Process\n```\n‚Ä¢ Running build in 17 packages\n‚Ä¢ Remote caching disabled\n@elizaos/config:build: cache miss\n@elizaos/autodoc:build: cache miss\n@elizaos/core:build: cache miss\n```\n\n### TypeScript Errors in @elizaos/core/src/utils.ts\n1. Line 218: `error TS2345: Argument of type '`${string}-${string}-${string}-${string}-${string}`' is not assignable to parameter of type 'never'.`\n2. Line 366: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n3. Line 409: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n4. Line 536: `error TS2345: Argument of type '{ numberOfChunks: number; averageChunkSize: number; }' is not assignable to parameter of type 'never'.`\n\n### Impact\n- Blocks `bun run clean` command\n- Prevents successful build of `@elizaos/core`\n- Affects dependent packages in the monorepo\n\n## Steps to Reproduce\n1. Run `bun run clean`\n2. Observe build failure in `@elizaos/core`\n3. Build fails with TypeScript errors during DTS generation\n\n## Expected Behavior\n- `bun run clean` should complete successfully\n- `@elizaos/core` should build without TypeScript errors\n- Type definitions should be generated correctly\n\n## Suggested Fix\n\nThe errors suggest type mismatches in `utils.ts`. Need to:\n1. Review type definitions in affected lines\n2. Update type assertions or generic constraints\n3. Ensure string template literal types are properly handled\n4. Fix object type assignments\n\n### Files to Update\n- `packages/core/src/utils.ts`\n\n## Priority\n**HIGH** - This is blocking clean builds and potentially affecting development workflow.",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "üêõ Build failure in @elizaos/core causing bun run clean to fail",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5738,
              "node_id": "I_kwDOMT5cIs7E1COv",
              "assignee": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5738",
              "assignees": [
                {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-08T00:26:11Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/labels{/name}",
              "updated_at": "2025-08-11T14:56:01Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3301116813,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734",
              "body": "**Describe the bug**\n\nOn project creation, ElizaOS CLI fails with the following error:\n```\n‚óá  Failed to build project\nstdout: src/index.ts(7,25): error TS2345: Argument of type 'string' is not assignable to parameter of type 'undefined'.\nstderr: $ tsc --noEmit && vite build && tsup\n```\n\n**To Reproduce**\n\n- Install ElizaOS through `bun`\n```\nbun i -g @elizaos/cli\n```\n- Create new ElizaOS project\n```\nelizaos create abcde\n```\n\n**Expected behavior**\n\nProject built successfully\n\n**Screenshots**\n\n<img width=\"1095\" height=\"572\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/967dd6a2-0d70-4e2e-8019-85a2eab5f225\" />\n\n**Additional context**\n\nElizaOS CLI version: `1.3.2`\n",
              "type": null,
              "user": {
                "id": 74447600,
                "url": "https://api.github.com/users/Kemystra",
                "type": "User",
                "login": "Kemystra",
                "node_id": "MDQ6VXNlcjc0NDQ3NjAw",
                "html_url": "https://github.com/Kemystra",
                "gists_url": "https://api.github.com/users/Kemystra/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/Kemystra/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/74447600?v=4",
                "events_url": "https://api.github.com/users/Kemystra/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/Kemystra/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/Kemystra/followers",
                "following_url": "https://api.github.com/users/Kemystra/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/Kemystra/orgs",
                "subscriptions_url": "https://api.github.com/users/Kemystra/subscriptions",
                "received_events_url": "https://api.github.com/users/Kemystra/received_events"
              },
              "state": "open",
              "title": "Eliza CLI failed to build project",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5734,
              "node_id": "I_kwDOMT5cIs7EwwuN",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5734",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T16:14:00Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/labels{/name}",
              "updated_at": "2025-08-08T19:43:52Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "NONE",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3299481897,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729",
              "body": "# Relates to\r\n\r\nN/A (Documentation improvement, not tied to a specific issue or ticket)\r\n\r\n# Risks\r\n\r\nLow.  \r\nThis change only updates documentation and does not affect any code or functionality.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR updates the elizaos README to include a fix for installation errors that may occur due to permission issues. It adds a note suggesting the use of sudo if users encounter a \"Permission denied\" or \"InstallFailed\" error when running the `elizaos create my-agent` command.\r\n\r\n## What kind of change is this?\r\n\r\nImprovements (misc. changes to existing features)  \r\nDocumentation update\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes require a change to the project documentation.  \r\nI have updated the documentation accordingly.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\nStart by reviewing the changes in the README.md file, specifically the section on creating a new project.\r\n\r\n## Detailed testing steps\r\n\r\n- Open the updated README.md.\r\n- Review the new instructions under \"Create Your First Project.\"\r\n- Confirm that the added note about using `sudo` is clear and helpful for users who encounter permission errors.",
              "type": null,
              "user": {
                "id": 32749185,
                "url": "https://api.github.com/users/mandatedisrael",
                "type": "User",
                "login": "mandatedisrael",
                "node_id": "MDQ6VXNlcjMyNzQ5MTg1",
                "html_url": "https://github.com/mandatedisrael",
                "gists_url": "https://api.github.com/users/mandatedisrael/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/mandatedisrael/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/32749185?v=4",
                "events_url": "https://api.github.com/users/mandatedisrael/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/mandatedisrael/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/mandatedisrael/followers",
                "following_url": "https://api.github.com/users/mandatedisrael/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/mandatedisrael/orgs",
                "subscriptions_url": "https://api.github.com/users/mandatedisrael/subscriptions",
                "received_events_url": "https://api.github.com/users/mandatedisrael/received_events"
              },
              "draft": false,
              "state": "open",
              "title": "Update README.md to fix error",
              "labels": [],
              "locked": false,
              "number": 5729,
              "node_id": "PR_kwDOMT5cIs6iiNWN",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/pull/5729",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T08:10:12Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/labels{/name}",
              "updated_at": "2025-08-07T08:10:24Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/comments",
              "pull_request": {
                "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5729",
                "diff_url": "https://github.com/elizaOS/eliza/pull/5729.diff",
                "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                "merged_at": null,
                "patch_url": "https://github.com/elizaOS/eliza/pull/5729.patch"
              },
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "FIRST_TIME_CONTRIBUTOR",
              "performed_via_github_app": null
            },
            {
              "id": 3299322983,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728",
              "body": "# Background\r\n\r\n## What does this PR do?\r\n\r\nIntroduce entity for cancelling runs `CancelRunSignal`\r\n\r\n## Why are we doing this? Any context or related work?\r\n\r\n- Calls to LLMs usually cost some credits\r\n- When we receive the `RUN_STARTED` event we can check current entity and end run to prevent credits spending\r\n\r\n# Documentation changes needed?\r\n\r\n## Methods\r\n\r\n- `static getSignal(runId: UUID)` - get signal by runId or create if null\r\n- `static clear(runId: UUID)` - clear signal from map\r\n- `cancel(content?: Content)` - cancel current run and and send `content` as a response to user\r\n\r\n## Example\r\n\r\n```typescript\r\nimport { Content, EventType, Plugin } from \"@elizaos/core\";\r\nimport { CancelRunSignal } from \"@elizaos/plugin-bootstrap\";\r\n\r\n// consider we have a service to determine eligibility for entity\r\ninterface EligibilityService {\r\n  check(entityId: UUID): Promise<{ result: boolean, reason?: Content }>\r\n}\r\n\r\nconst plugin: Plugin = {\r\n...\r\n  events: {\r\n    [EventType.RUN_STARTED]: ({ entityId, runId, runtime }) => {\r\n      const service = runtime.getService<EligibilityService>(\"USER_MANAGEMENT\");\r\n      const { result, reason } = await service.check(entityId);\r\n      \r\n      if (!result) {\r\n        const signal = CancelRunSignal.getSignal(runId);\r\n        signal.cancel(reason);\r\n      }\r\n    },\r\n    ...\r\n  },\r\n  ...\r\n}\r\n\r\nexport default Plugin;\r\n```\r\n\r\n## Discord username\r\n\r\nalexd000\r\n\r\n",
              "type": null,
              "user": {
                "id": 82507604,
                "url": "https://api.github.com/users/alex-nax",
                "type": "User",
                "login": "alex-nax",
                "node_id": "MDQ6VXNlcjgyNTA3NjA0",
                "html_url": "https://github.com/alex-nax",
                "gists_url": "https://api.github.com/users/alex-nax/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/alex-nax/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/82507604?v=4",
                "events_url": "https://api.github.com/users/alex-nax/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/alex-nax/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/alex-nax/followers",
                "following_url": "https://api.github.com/users/alex-nax/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/alex-nax/orgs",
                "subscriptions_url": "https://api.github.com/users/alex-nax/subscriptions",
                "received_events_url": "https://api.github.com/users/alex-nax/received_events"
              },
              "draft": false,
              "state": "open",
              "title": "feat: ability to cancel current run before any calls to LLM are made",
              "labels": [],
              "locked": false,
              "number": 5728,
              "node_id": "PR_kwDOMT5cIs6ihriD",
              "assignee": null,
              "comments": 3,
              "html_url": "https://github.com/elizaOS/eliza/pull/5728",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T07:19:35Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/labels{/name}",
              "updated_at": "2025-08-07T07:22:05Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/comments",
              "pull_request": {
                "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5728",
                "diff_url": "https://github.com/elizaOS/eliza/pull/5728.diff",
                "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                "merged_at": null,
                "patch_url": "https://github.com/elizaOS/eliza/pull/5728.patch"
              },
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "FIRST_TIME_CONTRIBUTOR",
              "performed_via_github_app": null
            },
            {
              "id": 3298692741,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727",
              "body": "# feat(scenarios): Implement natural language agent interaction and response validation\n\n## Description\n\nThis ticket enables scenarios to test agent behavior through natural language interactions rather than direct code execution. This allows testing of agent reasoning, decision-making, and response generation in realistic conversation contexts with proper evaluation of agent responses.\n\n## Acceptance Criteria\n\n1. Scenario `run` blocks support `input` field for natural language prompts to agents\n2. Agent responses are captured and available for evaluation (text, thoughts, actions)\n3. Evaluators can access both agent response text and execution context\n4. Support for multi-turn conversations in scenarios\n5. Agent responses include thought process and action decisions\n6. Integration with existing evaluation engine for response validation\n7. Support for conversation context across multiple steps\n8. Agent response timing and performance metrics\n\n## Technical Approach\n\n### 1. Enhanced Run Step Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst RunStepSchema = z.object({\n  name: z.string().optional(),\n  // Natural language input to agent\n  input: z.string().optional(),\n  // Direct code execution (existing)\n  lang: z.string().optional(),\n  code: z.string().optional(),\n  // Agent interaction specific\n  agent_context: z.object({\n    conversation_id: z.string().optional(),\n    user_id: z.string().optional(),\n    room_id: z.string().optional(),\n  }).optional(),\n  evaluations: z.array(EvaluationSchema),\n});\n```\n\n### 2. Agent Interaction Engine\n```typescript\n// packages/cli/src/scenarios/agent-interaction.ts\nexport class AgentInteractionEngine {\n  constructor(private runtime: IAgentRuntime) {}\n\n  async interactWithAgent(input: string, context?: AgentContext): Promise<AgentResponse> {\n    // Create message for agent\n    const message: Memory = {\n      entityId: context?.user_id || 'scenario-user',\n      roomId: context?.room_id || 'scenario-room',\n      content: {\n        type: 'text',\n        text: input,\n      },\n      metadata: {\n        type: 'message',\n        conversationId: context?.conversation_id,\n      },\n    };\n\n    // Send to agent and capture response\n    const startTime = Date.now();\n    const response = await this.runtime.processMessage(message);\n    const endTime = Date.now();\n\n    return {\n      text: response.text,\n      thoughts: response.thoughts,\n      actions: response.actions,\n      timing: {\n        startTime,\n        endTime,\n        duration: endTime - startTime,\n      },\n      context: {\n        conversationId: context?.conversation_id,\n        messageId: message.id,\n      },\n    };\n  }\n}\n```\n\n### 3. Enhanced Execution Result\n```typescript\n// packages/cli/src/scenarios/providers.ts\nexport interface ExecutionResult {\n  exitCode: number;\n  stdout: string;\n  stderr: string;\n  files: Record<string, string>;\n  // New: Agent interaction results\n  agentResponse?: AgentResponse;\n  conversationHistory?: AgentResponse[];\n}\n```\n\n## Test Scenario\n\nCreate `agent-interaction-test.scenario.yaml`:\n```yaml\nname: \"Agent Interaction Test\"\ndescription: \"Tests natural language interaction with agents\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Implement Dark Mode\"\n          number: 123\n          state: \"open\"\n          labels: [\"feature\", \"ui\"]\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"2.5\"\n\nrun:\n  - name: \"Ask agent about roadmap\"\n    input: \"What new features are you planning to add?\"\n    agent_context:\n      conversation_id: \"roadmap-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify agent searched for issues\"\n      \n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n        description: \"Verify agent mentioned the mocked issue\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent provide a helpful and coherent response about new features?\"\n        expected: \"yes\"\n        description: \"Verify agent response quality\"\n\n  - name: \"Ask agent about wallet\"\n    input: \"What's my current wallet balance?\"\n    agent_context:\n      conversation_id: \"wallet-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify agent checked wallet balance\"\n      \n      - type: \"string_contains\"\n        value: \"2.5 ETH\"\n        description: \"Verify agent reported the correct balance\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent clearly explain the wallet balance information?\"\n        expected: \"yes\"\n\n  - name: \"Multi-turn conversation\"\n    input: \"Can you help me with both my wallet and roadmap?\"\n    agent_context:\n      conversation_id: \"multi-turn-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"ETH\"\n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent address both wallet and roadmap questions comprehensively?\"\n        expected: \"yes\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Single Turn**: Test basic agent interaction and response\n2. **Multi-turn**: Test conversation context across steps\n3. **Action Tracking**: Verify agent uses appropriate actions\n4. **Response Quality**: Test LLM judge evaluation of responses\n5. **Performance**: Test response timing and metrics\n6. **Error Handling**: Test agent behavior with invalid inputs\n\n## Dependencies\n\n- Requires plugin system integration (Ticket 1)\n- Builds on advanced mocking system (Ticket 2)\n- Integrates with existing evaluation engine\n- Depends on agent runtime message processing",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement natural language agent interaction and response validation",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5727,
              "node_id": "I_kwDOMT5cIs7Eng6F",
              "assignee": null,
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5727",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:49:34Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/labels{/name}",
              "updated_at": "2025-08-07T05:35:40Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3298691383,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726",
              "body": "# feat(scenarios): Implement conditional mocking and complex response structures\n\n## Description\n\nThis ticket enhances the mocking system to support conditional responses based on input parameters and complex response structures with metadata. This enables realistic testing of service interactions like GitHub API calls or EVM transactions with proper request/response matching.\n\n## Acceptance Criteria\n\n1. Mock definitions support `when` clauses for conditional responses\n2. `when` clauses can match on method arguments, input parameters, or request context\n3. Mock responses support complex nested structures with metadata (timestamps, IDs, etc.)\n4. Multiple mock responses can be defined for the same service/method with different conditions\n5. Mock system provides clear logging of which mock was triggered and why\n6. Mock responses can include realistic error conditions and edge cases\n7. Support for dynamic response generation based on input parameters\n8. Mock validation ensures `when` clauses are syntactically correct\n\n## Technical Approach\n\n### 1. Enhanced Mock Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst MockSchema = z.object({\n  service: z.string(),\n  method: z.string(),\n  when: z.object({\n    // Match on method arguments\n    args: z.array(z.any()).optional(),\n    // Match on specific argument values\n    input: z.record(z.any()).optional(),\n    // Match on request context\n    context: z.record(z.any()).optional(),\n    // Custom matching function\n    matcher: z.string().optional(), // JavaScript expression\n  }).optional(),\n  response: z.any(), // Can be function or static value\n  // For dynamic responses\n  responseFn: z.string().optional(), // JavaScript function\n  // Error simulation\n  error: z.object({\n    code: z.string(),\n    message: z.string(),\n  }).optional(),\n});\n```\n\n### 2. Mock Engine Implementation\n```typescript\n// packages/cli/src/scenarios/mock-engine.ts\nexport class MockEngine {\n  private mocks: MockDefinition[] = [];\n\n  addMock(mock: MockDefinition) {\n    this.mocks.push(mock);\n  }\n\n  async findMock(service: string, method: string, args: any[]): Promise<any> {\n    const candidates = this.mocks.filter(m => \n      m.service === service && m.method === method\n    );\n\n    for (const mock of candidates) {\n      if (await this.matchesCondition(mock, args)) {\n        this.logger.info(`Mock triggered: ${service}.${method} with condition: ${JSON.stringify(mock.when)}`);\n        return this.generateResponse(mock, args);\n      }\n    }\n\n    return null; // No mock found\n  }\n\n  private async matchesCondition(mock: MockDefinition, args: any[]): Promise<boolean> {\n    if (!mock.when) return true; // Default mock\n\n    // Match on arguments\n    if (mock.when.args) {\n      if (!this.deepEqual(args, mock.when.args)) return false;\n    }\n\n    // Match on input parameters\n    if (mock.when.input) {\n      const input = this.extractInputFromArgs(args);\n      if (!this.deepEqual(input, mock.when.input)) return false;\n    }\n\n    // Custom matcher function\n    if (mock.when.matcher) {\n      const matcherFn = new Function('args', 'input', mock.when.matcher);\n      return matcherFn(args, this.extractInputFromArgs(args));\n    }\n\n    return true;\n  }\n\n  private generateResponse(mock: MockDefinition, args: any[]): any {\n    if (mock.error) {\n      throw new Error(`${mock.error.code}: ${mock.error.message}`);\n    }\n\n    if (mock.responseFn) {\n      const responseFn = new Function('args', 'input', mock.responseFn);\n      return responseFn(args, this.extractInputFromArgs(args));\n    }\n\n    return mock.response;\n  }\n}\n```\n\n## Test Scenario\n\nCreate `advanced-mocking-test.scenario.yaml`:\n```yaml\nname: \"Advanced Mocking Test\"\ndescription: \"Tests conditional mocking and complex response structures\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    # Conditional GitHub issue search\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"bug\"\n        matcher: \"input.labels.includes('bug')\"\n      response:\n        - title: \"Critical Bug Found\"\n          number: 456\n          state: \"open\"\n          labels: [\"bug\", \"critical\"]\n          created_at: \"2024-07-15T10:00:00Z\"\n\n    # Conditional GitHub issue search - different response\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"feature\"\n        matcher: \"input.labels.includes('feature')\"\n      response:\n        - title: \"New Feature Request\"\n          number: 789\n          state: \"open\"\n          labels: [\"feature\", \"enhancement\"]\n          created_at: \"2024-07-15T11:00:00Z\"\n\n    # Dynamic EVM balance response\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      when:\n        args: [\"0x1234567890abcdef\"]\n      responseFn: |\n        return {\n          chain: \"ethereum\",\n          address: args[0],\n          balances: [\n            { symbol: \"ETH\", amount: \"1.23\" },\n            { symbol: \"USDC\", amount: \"1000.00\" }\n          ],\n          last_updated: new Date().toISOString()\n        }\n\n    # Error simulation\n    - service: \"github-service\"\n      method: \"readFile\"\n      when:\n        input:\n          path: \"/docs/nonexistent.md\"\n      error:\n        code: \"FILE_NOT_FOUND\"\n        message: \"File does not exist\"\n\nrun:\n  - name: \"Test conditional GitHub search\"\n    input: \"Search for issues with bug label\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"Critical Bug Found\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent correctly search for bug issues?\"\n        expected: \"yes\"\n\n  - name: \"Test dynamic EVM response\"\n    input: \"What's the balance for address 0x1234567890abcdef?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n      - type: \"string_contains\"\n        value: \"1000.00 USDC\"\n\n  - name: \"Test error handling\"\n    input: \"Read the file /docs/nonexistent.md\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.readFile\"\n      - type: \"string_contains\"\n        value: \"File does not exist\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Conditional Matching**: Test different responses based on input parameters\n2. **Dynamic Responses**: Test response generation based on arguments\n3. **Error Simulation**: Test error handling and reporting\n4. **Complex Structures**: Test nested response objects with metadata\n5. **Multiple Mocks**: Test multiple mocks for same service/method\n6. **Logging**: Verify mock selection is logged clearly\n\n## Dependencies\n\n- Builds on existing mock system in scenarios\n- Requires plugin system integration (Ticket 1)\n- Integrates with agent interaction testing (Ticket 3) ",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement conditional mocking and complex response structures",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5726,
              "node_id": "I_kwDOMT5cIs7Engk3",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5726",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:49:00Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/labels{/name}",
              "updated_at": "2025-08-07T05:32:53Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3298689704,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725",
              "body": "# feat(scenarios): Implement plugin specification and dynamic loading\n\n## Description\n\nThis ticket implements plugin specification in scenario YAML files, allowing scenarios to declare which plugins are required for testing. This enables testing of agent behaviors that depend on specific plugins like `@elizaos/plugin-github` or `@elizaos/plugin-evm`. The system will dynamically load specified plugins during scenario execution and make their actions, providers, and services available to the agent.\n\n## Acceptance Criteria\n\n1. Scenario YAML supports a `plugins` array at the root level with string plugin names\n2. The `initializeAgent()` function respects scenario plugin specifications and loads them via `startAgent()`\n3. Plugin loading follows the same dependency resolution and error handling as the main CLI\n4. Scenarios can specify both string plugin names (`@elizaos/plugin-github`) and direct plugin objects\n5. Plugin loading errors are clearly reported with actionable guidance\n6. Default plugins (bootstrap, sql) are automatically included unless explicitly excluded via `exclude_defaults: true`\n7. Plugin conflicts are detected and reported during scenario validation\n8. Plugin initialization errors don't crash the scenario but are reported in results\n\n## Technical Approach\n\n### 1. Update Scenario Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst ScenarioSchema = z.object({\n  name: z.string(),\n  description: z.string(),\n  plugins: z.array(z.string()).optional(), // e.g., [\"@elizaos/plugin-github\"]\n  exclude_defaults: z.boolean().optional(), // exclude bootstrap/sql\n  environment: EnvironmentSchema,\n  setup: SetupSchema.optional(),\n  run: z.array(RunStepSchema),\n  judgment: JudgmentSchema,\n});\n```\n\n### 2. Enhance Runtime Factory\n```typescript\n// packages/cli/src/scenarios/runtime-factory.ts\nexport async function initializeAgent(scenario: Scenario): Promise<IAgentRuntime> {\n  const character: Character = {\n    name: 'scenario-runner',\n    id: stringToUuid('scenario-runner'),\n    bio: 'A minimal character for running scenarios',\n    plugins: scenario.plugins || []\n  };\n\n  // Load default plugins unless excluded\n  if (!scenario.exclude_defaults) {\n    character.plugins.push('@elizaos/plugin-bootstrap', '@elizaos/plugin-sql');\n  }\n\n  const runtime = await startAgent(\n    encryptedCharacter(character),\n    server,\n    undefined,\n    character.plugins,\n    { isTestMode: true }\n  );\n\n  return runtime;\n}\n```\n\n### 3. Plugin Validation\n```typescript\n// packages/cli/src/scenarios/plugin-validator.ts\nexport async function validateScenarioPlugins(scenario: Scenario): Promise<ValidationResult[]> {\n  const results: ValidationResult[] = [];\n  \n  for (const pluginName of scenario.plugins || []) {\n    try {\n      const plugin = await loadAndPreparePlugin(pluginName);\n      if (!plugin) {\n        results.push({\n          type: 'error',\n          message: `Plugin '${pluginName}' could not be loaded`,\n          suggestion: 'Check if plugin is installed or built correctly'\n        });\n      }\n    } catch (error) {\n      results.push({\n        type: 'error', \n        message: `Failed to validate plugin '${pluginName}': ${error.message}`,\n        suggestion: 'Verify plugin dependencies and configuration'\n      });\n    }\n  }\n  \n  return results;\n}\n```\n\n## Test Scenario\n\nCreate `plugin-integration-test.scenario.yaml`:\n```yaml\nname: \"Plugin Integration Test\"\ndescription: \"Tests loading and using plugins specified in scenario YAML\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Test Issue\"\n          number: 123\n          state: \"open\"\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"1.23\"\n\nrun:\n  - name: \"Test GitHub plugin actions\"\n    input: \"Search for issues with label 'bug'\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify GitHub plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"Test Issue\"\n        description: \"Verify agent found the mocked issue\"\n\n  - name: \"Test EVM plugin actions\"\n    input: \"What's my wallet balance?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify EVM plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n        description: \"Verify agent reported the mocked balance\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Plugin Loading Test**: Verify plugins load without errors\n2. **Action Availability Test**: Confirm agent can use plugin actions\n3. **Error Handling Test**: Test with non-existent plugin\n4. **Default Plugin Test**: Verify bootstrap/sql are included by default\n5. **Exclusion Test**: Test `exclude_defaults: true` behavior\n\n## Dependencies\n\n- Fixes the `startAgent` hanging issue (#5719) to enable plugin testing\n- Builds on existing `loadAndPreparePlugin` functionality\n- Integrates with current scenario execution flow ",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement plugin specification and dynamic loading",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5725,
              "node_id": "I_kwDOMT5cIs7EngKo",
              "assignee": null,
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5725",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:48:08Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/labels{/name}",
              "updated_at": "2025-08-07T05:37:32Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            }
          ]
        },
        "text": "Open issues for elizaOS/eliza (10 shown):\n‚Ä¢ #5754: Critical: Plugin Publishing Fails with False Success Reports (open) [bug]\n‚Ä¢ #5749: Implement Runtime Method Mocking for Deterministic Agent Testing (open) [enhancement, testing, Reality Spiral]\n‚Ä¢ #5747: Fixing bugs in eliza-cloud (open)\n‚Ä¢ #5738: üêõ Build failure in @elizaos/core causing bun run clean to fail (open) [bug]\n‚Ä¢ #5734: Eliza CLI failed to build project (open) [bug]\n‚Ä¢ #5729: Update README.md to fix error (open)\n‚Ä¢ #5728: feat: ability to cancel current run before any calls to LLM are made (open)\n‚Ä¢ #5727: feat(scenarios): Implement natural language agent interaction and response validation (open) [enhancement, Reality Spiral]\n‚Ä¢ #5726: feat(scenarios): Implement conditional mocking and complex response structures (open) [enhancement, Reality Spiral]\n‚Ä¢ #5725: feat(scenarios): Implement plugin specification and dynamic loading (open) [enhancement, Reality Spiral]",
        "values": {
          "issues": [
            {
              "id": 3310285907,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754",
              "body": "## Issue Summary\nThe `elizaos publish --npm` command reports successful publishing but the plugin is not actually published to npm, despite showing success messages. The npm publish is failing with a 404 error, but the ElizaOS CLI incorrectly reports success.\n\n## Key Problems Identified\n\n### 1. Critical NPM Publishing Failure\n- **Error**: `npm error 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found`\n- **Issue**: The package scope `@elizaos` doesn't exist on npm, preventing publishing\n- **Impact**: Package cannot be published to npm, but CLI reports success\n\n### 2. False Success Reporting\n- **Issue**: CLI reports `[‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm`\n- **Reality**: npm publish failed with 404 error\n- **Impact**: Developers believe their plugin is published when it's not\n\n### 3. Registry Repository Mismatch\n- **Expected**: Should create PR against `https://github.com/elizaos-plugins/registry`\n- **Actual**: Still references old registry `https://github.com/elizaos/registry`\n- **Impact**: Plugin won't appear in the official ElizaOS registry\n\n## Steps to Reproduce\n\n```bash\n# Navigate to the plugin directory\ncd packages/plugin-polygon\n\n# Ensure you're on the correct branch with the changes\ngit checkout polygon\n\n# Run the publish command\nelizaos publish --npm\n\n# Verify the success message appears\n# [‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm\n\n# Check if package actually exists on npm\nnpm view @elizaos/plugin-polygon@1.0.0\n# Result: 404 Not Found - '@elizaos/plugin-polygon@1.0.0' is not in this registry\n```\n\n## Technical Details\n\n### NPM Error Analysis\nThe npm logs show the root cause:\n```\nhttp fetch PUT 404 https://registry.npmjs.org/@elizaos%2fplugin-polygon 507ms\nerror 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found\n```\n\nThis indicates that the `@elizaos` scope doesn't exist on npm, which is required for publishing scoped packages.\n\n### CLI Error Handling Failure\nThe ElizaOS CLI is not properly parsing npm error codes:\n- npm returns exit code 1 (failure)\n- CLI ignores the error and reports success\n- No validation that the package actually exists on npm\n\n## Expected Behavior\n1. CLI should detect npm publish failures (exit code 1)\n2. CLI should fail with clear error message when package scope doesn't exist\n3. CLI should validate that package actually exists on npm after publishing\n4. CLI should create PRs against the correct registry repository\n\n## Recommended Fixes\n\n### 1. Fix NPM Error Detection\n```typescript\n// In the publish command, check npm exit code\nconst npmResult = await exec('npm publish', { cwd: pluginDir });\nif (npmResult.exitCode !== 0) {\n  throw new Error(`NPM publish failed: ${npmResult.stderr}`);\n}\n```\n\n### 2. Add Package Scope Validation\n```typescript\n// Before publishing, check if scope exists\nconst scopeExists = await checkNpmScope('@elizaos');\nif (!scopeExists) {\n  throw new Error('Package scope @elizaos does not exist on npm. Contact npm support to create the scope.');\n}\n```\n\n### 3. Add Post-Publish Validation\n```typescript\n// After publishing, verify package exists\nconst packageExists = await checkPackageExists(packageName, version);\nif (!packageExists) {\n  throw new Error(`Package was not published successfully. Check npm logs for details.`);\n}\n```\n\n## Priority\n**Critical** - This completely blocks plugin publishing and creates false success reports.\n\n## Affected Components\n- `packages/cli/src/commands/publish.ts`\n- NPM publishing logic\n- Error handling and success reporting\n- Package scope validation\n- Registry repository configuration\n\n## Immediate Action Required\n1. **Create the `@elizaos` scope on npm** or use an existing scope\n2. Update CLI to properly detect and handle npm publish failures\n3. Add post-publish validation to ensure packages actually exist on npm\n4. Update registry repository configuration\n\n## Alternative Solutions\n1. **Use existing scope**: Change package name to `@monilpat/plugin-polygon`\n2. **Create organization scope**: Set up `@elizaos` organization on npm\n3. **Use unscoped package**: Publish as `elizaos-plugin-polygon`\n\nThis issue is critically blocking plugin developers from successfully publishing their work and needs immediate attention from the ElizaOS team.\n",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "Critical: Plugin Publishing Fails with False Success Reports",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5754,
              "node_id": "I_kwDOMT5cIs7FTvRT",
              "assignee": null,
              "comments": 0,
              "html_url": "https://github.com/elizaOS/eliza/issues/5754",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-11T14:20:08Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/labels{/name}",
              "updated_at": "2025-08-11T14:20:08Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3308102900,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749",
              "body": "### Problem Statement\nCurrently, ElizaOS scenario testing lacks the ability to mock internal agent runtime calls (particularly LLM interactions) when testing via the API client. This makes it difficult to create deterministic tests for agent behavior and workflows.\n\n### Current Limitations\n- Global function mocks only work for code executed in the same process\n- No way to intercept `runtime.useModel` calls from the bootstrap plugin\n- Agent behavior is non-deterministic due to real LLM calls\n- Difficult to test specific agent decision paths and responses\n\n### Why Different Approach Was Needed\n\nThe existing mocking system was designed for **code execution environments** (E2B sandbox and local `node -e` processes), where mocks are applied to the execution context. However, **agent testing** works differently:\n\n- **E2B/Local Execution**: Code runs in isolated processes/sandboxes where global mocks can be applied\n- **Agent Testing**: Agent runs as a service with API client interaction, requiring direct runtime method interception\n- **Architecture Gap**: The bootstrap plugin calls `runtime.useModel` internally, which can't be mocked through the execution environment approach\n\nThis architectural difference necessitated a new approach that directly intercepts runtime methods rather than relying on execution context mocking.\n\n### Proposed Solution: Runtime Method Mocking\n\nWe've implemented a new mocking approach that directly intercepts `IAgentRuntime` method calls:\n\n#### Key Components\n\n1. **MockEngine Enhancement**\n   - Added `runtimeMethodMocks` to support mocking runtime methods\n   - Priority system: `runtimeMethod` > `service` > `globalFunction`\n   - Direct method replacement on the runtime instance\n\n2. **Schema Updates**\n   - Extended `MockSchema` to include `runtimeMethod: z.string().optional()`\n   - Supports mocking any `IAgentRuntime` method (e.g., `useModel`, `getService`)\n\n3. **Conditional Matching**\n   - Matcher functions can inspect method arguments\n   - Example: `\"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"`\n   - Supports complex conditional logic for when to apply mocks\n\n#### Usage Example\n\n```yaml\nsetup:\n  mocks:\n    - runtimeMethod: \"useModel\"\n      method: \"useModel\"\n      when:\n        matcher: \"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"\n      response: \"<response><name>agent</name><reasoning>Mocked response</reasoning><action>RESPOND</action></response>\"\n```\n\n#### Benefits\n\n1. **Deterministic Testing**: Replace LLM calls with static responses\n2. **Full Workflow Testing**: Test complete agent decision flows\n3. **Conditional Mocking**: Apply mocks based on specific conditions\n4. **Runtime Integration**: Works seamlessly with existing agent architecture\n5. **Backward Compatibility**: Existing mocks continue to work\n\n#### Implementation Steps\n\n- MockEngine runtime method support\n- Schema updates for runtimeMethod mocks\n- Conditional matching with matcher functions\n- Integration with scenario runner\n- Basic useModel mocking working\n- Add support for mocking other runtime methods (getService, etc.)\n- Create comprehensive test scenarios\n- Add documentation and examples\n- Consider adding mock recording/replay capabilities\n\n### Technical Details\n\nThe implementation works by:\n1. Creating the `IAgentRuntime` instance in the scenario runner\n2. Applying mocks directly to the runtime object before agent initialization\n3. The bootstrap plugin receives the mocked runtime and uses the mocked methods\n4. Mocks are reverted after scenario completion\n\nThis approach provides the foundation for robust, deterministic agent testing while maintaining the existing architecture.",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "Implement Runtime Method Mocking for Deterministic Agent Testing",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 7668252177,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/testing",
                  "name": "testing",
                  "color": "2D3957",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAAByRA-EQ",
                  "description": ""
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5749,
              "node_id": "I_kwDOMT5cIs7FLaT0",
              "assignee": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "comments": 0,
              "html_url": "https://github.com/elizaOS/eliza/issues/5749",
              "assignees": [
                {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-11T00:08:49Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/labels{/name}",
              "updated_at": "2025-08-11T00:09:37Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3304516859,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747",
              "body": null,
              "type": null,
              "user": {
                "id": 48334430,
                "url": "https://api.github.com/users/samarth30",
                "type": "User",
                "login": "samarth30",
                "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                "html_url": "https://github.com/samarth30",
                "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/samarth30/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/samarth30/followers",
                "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/samarth30/orgs",
                "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                "received_events_url": "https://api.github.com/users/samarth30/received_events"
              },
              "state": "open",
              "title": "Fixing bugs in eliza-cloud",
              "labels": [],
              "locked": false,
              "number": 5747,
              "node_id": "I_kwDOMT5cIs7E9uz7",
              "assignee": {
                "id": 48334430,
                "url": "https://api.github.com/users/samarth30",
                "type": "User",
                "login": "samarth30",
                "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                "html_url": "https://github.com/samarth30",
                "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/samarth30/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/samarth30/followers",
                "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/samarth30/orgs",
                "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                "received_events_url": "https://api.github.com/users/samarth30/received_events"
              },
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5747",
              "assignees": [
                {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-08T16:01:56Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/labels{/name}",
              "updated_at": "2025-08-08T19:02:49Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "MEMBER",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": {
                "id": 20150,
                "name": "Linear",
                "slug": "linear",
                "owner": {
                  "id": 46686594,
                  "url": "https://api.github.com/users/linear",
                  "type": "Organization",
                  "login": "linear",
                  "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ2Njg2NTk0",
                  "html_url": "https://github.com/linear",
                  "gists_url": "https://api.github.com/users/linear/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/linear/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/46686594?v=4",
                  "events_url": "https://api.github.com/users/linear/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/linear/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/linear/followers",
                  "following_url": "https://api.github.com/users/linear/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/linear/orgs",
                  "subscriptions_url": "https://api.github.com/users/linear/subscriptions",
                  "received_events_url": "https://api.github.com/users/linear/received_events"
                },
                "events": [
                  "check_suite",
                  "issues",
                  "issue_comment",
                  "pull_request",
                  "pull_request_review",
                  "repository",
                  "sub_issues"
                ],
                "node_id": "MDM6QXBwMjAxNTA=",
                "html_url": "https://github.com/apps/linear",
                "client_id": "Iv1.085d682ea245c945",
                "created_at": "2018-11-02T18:07:23Z",
                "updated_at": "2025-02-07T14:59:56Z",
                "description": "",
                "permissions": {
                  "checks": "read",
                  "issues": "write",
                  "metadata": "read",
                  "pull_requests": "write"
                },
                "external_url": "https://linear.app"
              }
            },
            {
              "id": 3302237103,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738",
              "body": "## Description\n\nThe `bun run clean` command is failing due to TypeScript errors in `@elizaos/core` package during the DTS (type definition) build phase.\n\n## Error Details\n\n### Build Process\n```\n‚Ä¢ Running build in 17 packages\n‚Ä¢ Remote caching disabled\n@elizaos/config:build: cache miss\n@elizaos/autodoc:build: cache miss\n@elizaos/core:build: cache miss\n```\n\n### TypeScript Errors in @elizaos/core/src/utils.ts\n1. Line 218: `error TS2345: Argument of type '`${string}-${string}-${string}-${string}-${string}`' is not assignable to parameter of type 'never'.`\n2. Line 366: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n3. Line 409: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n4. Line 536: `error TS2345: Argument of type '{ numberOfChunks: number; averageChunkSize: number; }' is not assignable to parameter of type 'never'.`\n\n### Impact\n- Blocks `bun run clean` command\n- Prevents successful build of `@elizaos/core`\n- Affects dependent packages in the monorepo\n\n## Steps to Reproduce\n1. Run `bun run clean`\n2. Observe build failure in `@elizaos/core`\n3. Build fails with TypeScript errors during DTS generation\n\n## Expected Behavior\n- `bun run clean` should complete successfully\n- `@elizaos/core` should build without TypeScript errors\n- Type definitions should be generated correctly\n\n## Suggested Fix\n\nThe errors suggest type mismatches in `utils.ts`. Need to:\n1. Review type definitions in affected lines\n2. Update type assertions or generic constraints\n3. Ensure string template literal types are properly handled\n4. Fix object type assignments\n\n### Files to Update\n- `packages/core/src/utils.ts`\n\n## Priority\n**HIGH** - This is blocking clean builds and potentially affecting development workflow.",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "üêõ Build failure in @elizaos/core causing bun run clean to fail",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5738,
              "node_id": "I_kwDOMT5cIs7E1COv",
              "assignee": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5738",
              "assignees": [
                {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-08T00:26:11Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/labels{/name}",
              "updated_at": "2025-08-11T14:56:01Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3301116813,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734",
              "body": "**Describe the bug**\n\nOn project creation, ElizaOS CLI fails with the following error:\n```\n‚óá  Failed to build project\nstdout: src/index.ts(7,25): error TS2345: Argument of type 'string' is not assignable to parameter of type 'undefined'.\nstderr: $ tsc --noEmit && vite build && tsup\n```\n\n**To Reproduce**\n\n- Install ElizaOS through `bun`\n```\nbun i -g @elizaos/cli\n```\n- Create new ElizaOS project\n```\nelizaos create abcde\n```\n\n**Expected behavior**\n\nProject built successfully\n\n**Screenshots**\n\n<img width=\"1095\" height=\"572\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/967dd6a2-0d70-4e2e-8019-85a2eab5f225\" />\n\n**Additional context**\n\nElizaOS CLI version: `1.3.2`\n",
              "type": null,
              "user": {
                "id": 74447600,
                "url": "https://api.github.com/users/Kemystra",
                "type": "User",
                "login": "Kemystra",
                "node_id": "MDQ6VXNlcjc0NDQ3NjAw",
                "html_url": "https://github.com/Kemystra",
                "gists_url": "https://api.github.com/users/Kemystra/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/Kemystra/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/74447600?v=4",
                "events_url": "https://api.github.com/users/Kemystra/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/Kemystra/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/Kemystra/followers",
                "following_url": "https://api.github.com/users/Kemystra/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/Kemystra/orgs",
                "subscriptions_url": "https://api.github.com/users/Kemystra/subscriptions",
                "received_events_url": "https://api.github.com/users/Kemystra/received_events"
              },
              "state": "open",
              "title": "Eliza CLI failed to build project",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5734,
              "node_id": "I_kwDOMT5cIs7EwwuN",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5734",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T16:14:00Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/labels{/name}",
              "updated_at": "2025-08-08T19:43:52Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "NONE",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3299481897,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729",
              "body": "# Relates to\r\n\r\nN/A (Documentation improvement, not tied to a specific issue or ticket)\r\n\r\n# Risks\r\n\r\nLow.  \r\nThis change only updates documentation and does not affect any code or functionality.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR updates the elizaos README to include a fix for installation errors that may occur due to permission issues. It adds a note suggesting the use of sudo if users encounter a \"Permission denied\" or \"InstallFailed\" error when running the `elizaos create my-agent` command.\r\n\r\n## What kind of change is this?\r\n\r\nImprovements (misc. changes to existing features)  \r\nDocumentation update\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes require a change to the project documentation.  \r\nI have updated the documentation accordingly.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\nStart by reviewing the changes in the README.md file, specifically the section on creating a new project.\r\n\r\n## Detailed testing steps\r\n\r\n- Open the updated README.md.\r\n- Review the new instructions under \"Create Your First Project.\"\r\n- Confirm that the added note about using `sudo` is clear and helpful for users who encounter permission errors.",
              "type": null,
              "user": {
                "id": 32749185,
                "url": "https://api.github.com/users/mandatedisrael",
                "type": "User",
                "login": "mandatedisrael",
                "node_id": "MDQ6VXNlcjMyNzQ5MTg1",
                "html_url": "https://github.com/mandatedisrael",
                "gists_url": "https://api.github.com/users/mandatedisrael/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/mandatedisrael/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/32749185?v=4",
                "events_url": "https://api.github.com/users/mandatedisrael/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/mandatedisrael/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/mandatedisrael/followers",
                "following_url": "https://api.github.com/users/mandatedisrael/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/mandatedisrael/orgs",
                "subscriptions_url": "https://api.github.com/users/mandatedisrael/subscriptions",
                "received_events_url": "https://api.github.com/users/mandatedisrael/received_events"
              },
              "draft": false,
              "state": "open",
              "title": "Update README.md to fix error",
              "labels": [],
              "locked": false,
              "number": 5729,
              "node_id": "PR_kwDOMT5cIs6iiNWN",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/pull/5729",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T08:10:12Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/labels{/name}",
              "updated_at": "2025-08-07T08:10:24Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/comments",
              "pull_request": {
                "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5729",
                "diff_url": "https://github.com/elizaOS/eliza/pull/5729.diff",
                "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                "merged_at": null,
                "patch_url": "https://github.com/elizaOS/eliza/pull/5729.patch"
              },
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "FIRST_TIME_CONTRIBUTOR",
              "performed_via_github_app": null
            },
            {
              "id": 3299322983,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728",
              "body": "# Background\r\n\r\n## What does this PR do?\r\n\r\nIntroduce entity for cancelling runs `CancelRunSignal`\r\n\r\n## Why are we doing this? Any context or related work?\r\n\r\n- Calls to LLMs usually cost some credits\r\n- When we receive the `RUN_STARTED` event we can check current entity and end run to prevent credits spending\r\n\r\n# Documentation changes needed?\r\n\r\n## Methods\r\n\r\n- `static getSignal(runId: UUID)` - get signal by runId or create if null\r\n- `static clear(runId: UUID)` - clear signal from map\r\n- `cancel(content?: Content)` - cancel current run and and send `content` as a response to user\r\n\r\n## Example\r\n\r\n```typescript\r\nimport { Content, EventType, Plugin } from \"@elizaos/core\";\r\nimport { CancelRunSignal } from \"@elizaos/plugin-bootstrap\";\r\n\r\n// consider we have a service to determine eligibility for entity\r\ninterface EligibilityService {\r\n  check(entityId: UUID): Promise<{ result: boolean, reason?: Content }>\r\n}\r\n\r\nconst plugin: Plugin = {\r\n...\r\n  events: {\r\n    [EventType.RUN_STARTED]: ({ entityId, runId, runtime }) => {\r\n      const service = runtime.getService<EligibilityService>(\"USER_MANAGEMENT\");\r\n      const { result, reason } = await service.check(entityId);\r\n      \r\n      if (!result) {\r\n        const signal = CancelRunSignal.getSignal(runId);\r\n        signal.cancel(reason);\r\n      }\r\n    },\r\n    ...\r\n  },\r\n  ...\r\n}\r\n\r\nexport default Plugin;\r\n```\r\n\r\n## Discord username\r\n\r\nalexd000\r\n\r\n",
              "type": null,
              "user": {
                "id": 82507604,
                "url": "https://api.github.com/users/alex-nax",
                "type": "User",
                "login": "alex-nax",
                "node_id": "MDQ6VXNlcjgyNTA3NjA0",
                "html_url": "https://github.com/alex-nax",
                "gists_url": "https://api.github.com/users/alex-nax/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/alex-nax/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/82507604?v=4",
                "events_url": "https://api.github.com/users/alex-nax/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/alex-nax/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/alex-nax/followers",
                "following_url": "https://api.github.com/users/alex-nax/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/alex-nax/orgs",
                "subscriptions_url": "https://api.github.com/users/alex-nax/subscriptions",
                "received_events_url": "https://api.github.com/users/alex-nax/received_events"
              },
              "draft": false,
              "state": "open",
              "title": "feat: ability to cancel current run before any calls to LLM are made",
              "labels": [],
              "locked": false,
              "number": 5728,
              "node_id": "PR_kwDOMT5cIs6ihriD",
              "assignee": null,
              "comments": 3,
              "html_url": "https://github.com/elizaOS/eliza/pull/5728",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T07:19:35Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/labels{/name}",
              "updated_at": "2025-08-07T07:22:05Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/comments",
              "pull_request": {
                "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5728",
                "diff_url": "https://github.com/elizaOS/eliza/pull/5728.diff",
                "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                "merged_at": null,
                "patch_url": "https://github.com/elizaOS/eliza/pull/5728.patch"
              },
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "FIRST_TIME_CONTRIBUTOR",
              "performed_via_github_app": null
            },
            {
              "id": 3298692741,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727",
              "body": "# feat(scenarios): Implement natural language agent interaction and response validation\n\n## Description\n\nThis ticket enables scenarios to test agent behavior through natural language interactions rather than direct code execution. This allows testing of agent reasoning, decision-making, and response generation in realistic conversation contexts with proper evaluation of agent responses.\n\n## Acceptance Criteria\n\n1. Scenario `run` blocks support `input` field for natural language prompts to agents\n2. Agent responses are captured and available for evaluation (text, thoughts, actions)\n3. Evaluators can access both agent response text and execution context\n4. Support for multi-turn conversations in scenarios\n5. Agent responses include thought process and action decisions\n6. Integration with existing evaluation engine for response validation\n7. Support for conversation context across multiple steps\n8. Agent response timing and performance metrics\n\n## Technical Approach\n\n### 1. Enhanced Run Step Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst RunStepSchema = z.object({\n  name: z.string().optional(),\n  // Natural language input to agent\n  input: z.string().optional(),\n  // Direct code execution (existing)\n  lang: z.string().optional(),\n  code: z.string().optional(),\n  // Agent interaction specific\n  agent_context: z.object({\n    conversation_id: z.string().optional(),\n    user_id: z.string().optional(),\n    room_id: z.string().optional(),\n  }).optional(),\n  evaluations: z.array(EvaluationSchema),\n});\n```\n\n### 2. Agent Interaction Engine\n```typescript\n// packages/cli/src/scenarios/agent-interaction.ts\nexport class AgentInteractionEngine {\n  constructor(private runtime: IAgentRuntime) {}\n\n  async interactWithAgent(input: string, context?: AgentContext): Promise<AgentResponse> {\n    // Create message for agent\n    const message: Memory = {\n      entityId: context?.user_id || 'scenario-user',\n      roomId: context?.room_id || 'scenario-room',\n      content: {\n        type: 'text',\n        text: input,\n      },\n      metadata: {\n        type: 'message',\n        conversationId: context?.conversation_id,\n      },\n    };\n\n    // Send to agent and capture response\n    const startTime = Date.now();\n    const response = await this.runtime.processMessage(message);\n    const endTime = Date.now();\n\n    return {\n      text: response.text,\n      thoughts: response.thoughts,\n      actions: response.actions,\n      timing: {\n        startTime,\n        endTime,\n        duration: endTime - startTime,\n      },\n      context: {\n        conversationId: context?.conversation_id,\n        messageId: message.id,\n      },\n    };\n  }\n}\n```\n\n### 3. Enhanced Execution Result\n```typescript\n// packages/cli/src/scenarios/providers.ts\nexport interface ExecutionResult {\n  exitCode: number;\n  stdout: string;\n  stderr: string;\n  files: Record<string, string>;\n  // New: Agent interaction results\n  agentResponse?: AgentResponse;\n  conversationHistory?: AgentResponse[];\n}\n```\n\n## Test Scenario\n\nCreate `agent-interaction-test.scenario.yaml`:\n```yaml\nname: \"Agent Interaction Test\"\ndescription: \"Tests natural language interaction with agents\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Implement Dark Mode\"\n          number: 123\n          state: \"open\"\n          labels: [\"feature\", \"ui\"]\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"2.5\"\n\nrun:\n  - name: \"Ask agent about roadmap\"\n    input: \"What new features are you planning to add?\"\n    agent_context:\n      conversation_id: \"roadmap-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify agent searched for issues\"\n      \n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n        description: \"Verify agent mentioned the mocked issue\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent provide a helpful and coherent response about new features?\"\n        expected: \"yes\"\n        description: \"Verify agent response quality\"\n\n  - name: \"Ask agent about wallet\"\n    input: \"What's my current wallet balance?\"\n    agent_context:\n      conversation_id: \"wallet-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify agent checked wallet balance\"\n      \n      - type: \"string_contains\"\n        value: \"2.5 ETH\"\n        description: \"Verify agent reported the correct balance\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent clearly explain the wallet balance information?\"\n        expected: \"yes\"\n\n  - name: \"Multi-turn conversation\"\n    input: \"Can you help me with both my wallet and roadmap?\"\n    agent_context:\n      conversation_id: \"multi-turn-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"ETH\"\n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent address both wallet and roadmap questions comprehensively?\"\n        expected: \"yes\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Single Turn**: Test basic agent interaction and response\n2. **Multi-turn**: Test conversation context across steps\n3. **Action Tracking**: Verify agent uses appropriate actions\n4. **Response Quality**: Test LLM judge evaluation of responses\n5. **Performance**: Test response timing and metrics\n6. **Error Handling**: Test agent behavior with invalid inputs\n\n## Dependencies\n\n- Requires plugin system integration (Ticket 1)\n- Builds on advanced mocking system (Ticket 2)\n- Integrates with existing evaluation engine\n- Depends on agent runtime message processing",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement natural language agent interaction and response validation",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5727,
              "node_id": "I_kwDOMT5cIs7Eng6F",
              "assignee": null,
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5727",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:49:34Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/labels{/name}",
              "updated_at": "2025-08-07T05:35:40Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3298691383,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726",
              "body": "# feat(scenarios): Implement conditional mocking and complex response structures\n\n## Description\n\nThis ticket enhances the mocking system to support conditional responses based on input parameters and complex response structures with metadata. This enables realistic testing of service interactions like GitHub API calls or EVM transactions with proper request/response matching.\n\n## Acceptance Criteria\n\n1. Mock definitions support `when` clauses for conditional responses\n2. `when` clauses can match on method arguments, input parameters, or request context\n3. Mock responses support complex nested structures with metadata (timestamps, IDs, etc.)\n4. Multiple mock responses can be defined for the same service/method with different conditions\n5. Mock system provides clear logging of which mock was triggered and why\n6. Mock responses can include realistic error conditions and edge cases\n7. Support for dynamic response generation based on input parameters\n8. Mock validation ensures `when` clauses are syntactically correct\n\n## Technical Approach\n\n### 1. Enhanced Mock Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst MockSchema = z.object({\n  service: z.string(),\n  method: z.string(),\n  when: z.object({\n    // Match on method arguments\n    args: z.array(z.any()).optional(),\n    // Match on specific argument values\n    input: z.record(z.any()).optional(),\n    // Match on request context\n    context: z.record(z.any()).optional(),\n    // Custom matching function\n    matcher: z.string().optional(), // JavaScript expression\n  }).optional(),\n  response: z.any(), // Can be function or static value\n  // For dynamic responses\n  responseFn: z.string().optional(), // JavaScript function\n  // Error simulation\n  error: z.object({\n    code: z.string(),\n    message: z.string(),\n  }).optional(),\n});\n```\n\n### 2. Mock Engine Implementation\n```typescript\n// packages/cli/src/scenarios/mock-engine.ts\nexport class MockEngine {\n  private mocks: MockDefinition[] = [];\n\n  addMock(mock: MockDefinition) {\n    this.mocks.push(mock);\n  }\n\n  async findMock(service: string, method: string, args: any[]): Promise<any> {\n    const candidates = this.mocks.filter(m => \n      m.service === service && m.method === method\n    );\n\n    for (const mock of candidates) {\n      if (await this.matchesCondition(mock, args)) {\n        this.logger.info(`Mock triggered: ${service}.${method} with condition: ${JSON.stringify(mock.when)}`);\n        return this.generateResponse(mock, args);\n      }\n    }\n\n    return null; // No mock found\n  }\n\n  private async matchesCondition(mock: MockDefinition, args: any[]): Promise<boolean> {\n    if (!mock.when) return true; // Default mock\n\n    // Match on arguments\n    if (mock.when.args) {\n      if (!this.deepEqual(args, mock.when.args)) return false;\n    }\n\n    // Match on input parameters\n    if (mock.when.input) {\n      const input = this.extractInputFromArgs(args);\n      if (!this.deepEqual(input, mock.when.input)) return false;\n    }\n\n    // Custom matcher function\n    if (mock.when.matcher) {\n      const matcherFn = new Function('args', 'input', mock.when.matcher);\n      return matcherFn(args, this.extractInputFromArgs(args));\n    }\n\n    return true;\n  }\n\n  private generateResponse(mock: MockDefinition, args: any[]): any {\n    if (mock.error) {\n      throw new Error(`${mock.error.code}: ${mock.error.message}`);\n    }\n\n    if (mock.responseFn) {\n      const responseFn = new Function('args', 'input', mock.responseFn);\n      return responseFn(args, this.extractInputFromArgs(args));\n    }\n\n    return mock.response;\n  }\n}\n```\n\n## Test Scenario\n\nCreate `advanced-mocking-test.scenario.yaml`:\n```yaml\nname: \"Advanced Mocking Test\"\ndescription: \"Tests conditional mocking and complex response structures\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    # Conditional GitHub issue search\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"bug\"\n        matcher: \"input.labels.includes('bug')\"\n      response:\n        - title: \"Critical Bug Found\"\n          number: 456\n          state: \"open\"\n          labels: [\"bug\", \"critical\"]\n          created_at: \"2024-07-15T10:00:00Z\"\n\n    # Conditional GitHub issue search - different response\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"feature\"\n        matcher: \"input.labels.includes('feature')\"\n      response:\n        - title: \"New Feature Request\"\n          number: 789\n          state: \"open\"\n          labels: [\"feature\", \"enhancement\"]\n          created_at: \"2024-07-15T11:00:00Z\"\n\n    # Dynamic EVM balance response\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      when:\n        args: [\"0x1234567890abcdef\"]\n      responseFn: |\n        return {\n          chain: \"ethereum\",\n          address: args[0],\n          balances: [\n            { symbol: \"ETH\", amount: \"1.23\" },\n            { symbol: \"USDC\", amount: \"1000.00\" }\n          ],\n          last_updated: new Date().toISOString()\n        }\n\n    # Error simulation\n    - service: \"github-service\"\n      method: \"readFile\"\n      when:\n        input:\n          path: \"/docs/nonexistent.md\"\n      error:\n        code: \"FILE_NOT_FOUND\"\n        message: \"File does not exist\"\n\nrun:\n  - name: \"Test conditional GitHub search\"\n    input: \"Search for issues with bug label\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"Critical Bug Found\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent correctly search for bug issues?\"\n        expected: \"yes\"\n\n  - name: \"Test dynamic EVM response\"\n    input: \"What's the balance for address 0x1234567890abcdef?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n      - type: \"string_contains\"\n        value: \"1000.00 USDC\"\n\n  - name: \"Test error handling\"\n    input: \"Read the file /docs/nonexistent.md\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.readFile\"\n      - type: \"string_contains\"\n        value: \"File does not exist\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Conditional Matching**: Test different responses based on input parameters\n2. **Dynamic Responses**: Test response generation based on arguments\n3. **Error Simulation**: Test error handling and reporting\n4. **Complex Structures**: Test nested response objects with metadata\n5. **Multiple Mocks**: Test multiple mocks for same service/method\n6. **Logging**: Verify mock selection is logged clearly\n\n## Dependencies\n\n- Builds on existing mock system in scenarios\n- Requires plugin system integration (Ticket 1)\n- Integrates with agent interaction testing (Ticket 3) ",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement conditional mocking and complex response structures",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5726,
              "node_id": "I_kwDOMT5cIs7Engk3",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5726",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:49:00Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/labels{/name}",
              "updated_at": "2025-08-07T05:32:53Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3298689704,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725",
              "body": "# feat(scenarios): Implement plugin specification and dynamic loading\n\n## Description\n\nThis ticket implements plugin specification in scenario YAML files, allowing scenarios to declare which plugins are required for testing. This enables testing of agent behaviors that depend on specific plugins like `@elizaos/plugin-github` or `@elizaos/plugin-evm`. The system will dynamically load specified plugins during scenario execution and make their actions, providers, and services available to the agent.\n\n## Acceptance Criteria\n\n1. Scenario YAML supports a `plugins` array at the root level with string plugin names\n2. The `initializeAgent()` function respects scenario plugin specifications and loads them via `startAgent()`\n3. Plugin loading follows the same dependency resolution and error handling as the main CLI\n4. Scenarios can specify both string plugin names (`@elizaos/plugin-github`) and direct plugin objects\n5. Plugin loading errors are clearly reported with actionable guidance\n6. Default plugins (bootstrap, sql) are automatically included unless explicitly excluded via `exclude_defaults: true`\n7. Plugin conflicts are detected and reported during scenario validation\n8. Plugin initialization errors don't crash the scenario but are reported in results\n\n## Technical Approach\n\n### 1. Update Scenario Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst ScenarioSchema = z.object({\n  name: z.string(),\n  description: z.string(),\n  plugins: z.array(z.string()).optional(), // e.g., [\"@elizaos/plugin-github\"]\n  exclude_defaults: z.boolean().optional(), // exclude bootstrap/sql\n  environment: EnvironmentSchema,\n  setup: SetupSchema.optional(),\n  run: z.array(RunStepSchema),\n  judgment: JudgmentSchema,\n});\n```\n\n### 2. Enhance Runtime Factory\n```typescript\n// packages/cli/src/scenarios/runtime-factory.ts\nexport async function initializeAgent(scenario: Scenario): Promise<IAgentRuntime> {\n  const character: Character = {\n    name: 'scenario-runner',\n    id: stringToUuid('scenario-runner'),\n    bio: 'A minimal character for running scenarios',\n    plugins: scenario.plugins || []\n  };\n\n  // Load default plugins unless excluded\n  if (!scenario.exclude_defaults) {\n    character.plugins.push('@elizaos/plugin-bootstrap', '@elizaos/plugin-sql');\n  }\n\n  const runtime = await startAgent(\n    encryptedCharacter(character),\n    server,\n    undefined,\n    character.plugins,\n    { isTestMode: true }\n  );\n\n  return runtime;\n}\n```\n\n### 3. Plugin Validation\n```typescript\n// packages/cli/src/scenarios/plugin-validator.ts\nexport async function validateScenarioPlugins(scenario: Scenario): Promise<ValidationResult[]> {\n  const results: ValidationResult[] = [];\n  \n  for (const pluginName of scenario.plugins || []) {\n    try {\n      const plugin = await loadAndPreparePlugin(pluginName);\n      if (!plugin) {\n        results.push({\n          type: 'error',\n          message: `Plugin '${pluginName}' could not be loaded`,\n          suggestion: 'Check if plugin is installed or built correctly'\n        });\n      }\n    } catch (error) {\n      results.push({\n        type: 'error', \n        message: `Failed to validate plugin '${pluginName}': ${error.message}`,\n        suggestion: 'Verify plugin dependencies and configuration'\n      });\n    }\n  }\n  \n  return results;\n}\n```\n\n## Test Scenario\n\nCreate `plugin-integration-test.scenario.yaml`:\n```yaml\nname: \"Plugin Integration Test\"\ndescription: \"Tests loading and using plugins specified in scenario YAML\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Test Issue\"\n          number: 123\n          state: \"open\"\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"1.23\"\n\nrun:\n  - name: \"Test GitHub plugin actions\"\n    input: \"Search for issues with label 'bug'\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify GitHub plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"Test Issue\"\n        description: \"Verify agent found the mocked issue\"\n\n  - name: \"Test EVM plugin actions\"\n    input: \"What's my wallet balance?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify EVM plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n        description: \"Verify agent reported the mocked balance\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Plugin Loading Test**: Verify plugins load without errors\n2. **Action Availability Test**: Confirm agent can use plugin actions\n3. **Error Handling Test**: Test with non-existent plugin\n4. **Default Plugin Test**: Verify bootstrap/sql are included by default\n5. **Exclusion Test**: Test `exclude_defaults: true` behavior\n\n## Dependencies\n\n- Fixes the `startAgent` hanging issue (#5719) to enable plugin testing\n- Builds on existing `loadAndPreparePlugin` functionality\n- Integrates with current scenario execution flow ",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement plugin specification and dynamic loading",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5725,
              "node_id": "I_kwDOMT5cIs7EngKo",
              "assignee": null,
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5725",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:48:08Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/labels{/name}",
              "updated_at": "2025-08-07T05:37:32Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            }
          ],
          "issueCount": 10,
          "repository": "elizaOS/eliza"
        },
        "success": true
      },
      "actionStatus": "completed"
    },
    "entityId": "0137f0e4-d2e2-0ee6-82e5-af58b88ec91b",
    "agentId": "0137f0e4-d2e2-0ee6-82e5-af58b88ec91b",
    "roomId": "2ef45a71-a201-01cf-a76a-e57adaed1b51",
    "unique": true,
    "metadata": {
      "type": "action_result",
      "runId": "2bc09dc3-1c5a-4042-b550-e1998591b573",
      "actionId": "10570f0f-5f5a-4231-bfc5-17b1e2431e64",
      "actionName": "LIST_GITHUB_ISSUES",
      "totalSteps": 2,
      "currentStep": 2
    }
  },
  {
    "id": "6431ade7-d1b1-4de8-a28b-cbc077b97141",
    "type": "messages",
    "createdAt": 1754972117160,
    "content": {
      "text": "Generated reply: Let me retrieve the open issues for the `elizaOS/eliza` repository. Please hold on a moment.",
      "type": "action_result",
      "runId": "2bc09dc3-1c5a-4042-b550-e1998591b573",
      "source": "action",
      "planStep": "1/2",
      "actionName": "REPLY",
      "planThought": "I need to list the open issues for the elizaOS/eliza repository as requested by the user.",
      "actionResult": {
        "data": {
          "thought": "I am preparing to list the open issues for the elizaOS/eliza repository as requested by the user.",
          "response": {
            "text": "Let me retrieve the open issues for the `elizaOS/eliza` repository. Please hold on a moment.",
            "actions": [
              "REPLY"
            ],
            "thought": "I am preparing to list the open issues for the elizaOS/eliza repository as requested by the user."
          },
          "actionName": "REPLY",
          "messageGenerated": true
        },
        "text": "Generated reply: Let me retrieve the open issues for the `elizaOS/eliza` repository. Please hold on a moment.",
        "values": {
          "success": true,
          "lastReply": "Let me retrieve the open issues for the `elizaOS/eliza` repository. Please hold on a moment.",
          "responded": true,
          "lastReplyTime": 1754972117158,
          "thoughtProcess": "I am preparing to list the open issues for the elizaOS/eliza repository as requested by the user."
        },
        "success": true
      },
      "actionStatus": "completed"
    },
    "entityId": "0137f0e4-d2e2-0ee6-82e5-af58b88ec91b",
    "agentId": "0137f0e4-d2e2-0ee6-82e5-af58b88ec91b",
    "roomId": "2ef45a71-a201-01cf-a76a-e57adaed1b51",
    "unique": true,
    "metadata": {
      "type": "action_result",
      "runId": "2bc09dc3-1c5a-4042-b550-e1998591b573",
      "actionId": "6431ade7-d1b1-4de8-a28b-cbc077b97141",
      "actionName": "REPLY",
      "totalSteps": 2,
      "currentStep": 1
    }
  },
  {
    "id": "5128c8df-6b24-46c9-bf75-a2f4197808ec",
    "type": "messages",
    "createdAt": 1754969615998,
    "content": {
      "text": "Open issues for elizaOS/eliza (10 shown):\n‚Ä¢ #5754: Critical: Plugin Publishing Fails with False Success Reports (open) [bug]\n‚Ä¢ #5749: Implement Runtime Method Mocking for Deterministic Agent Testing (open) [enhancement, testing, Reality Spiral]\n‚Ä¢ #5747: Fixing bugs in eliza-cloud (open)\n‚Ä¢ #5738: üêõ Build failure in @elizaos/core causing bun run clean to fail (open) [bug]\n‚Ä¢ #5734: Eliza CLI failed to build project (open) [bug]\n‚Ä¢ #5729: Update README.md to fix error (open)\n‚Ä¢ #5728: feat: ability to cancel current run before any calls to LLM are made (open)\n‚Ä¢ #5727: feat(scenarios): Implement natural language agent interaction and response validation (open) [enhancement, Reality Spiral]\n‚Ä¢ #5726: feat(scenarios): Implement conditional mocking and complex response structures (open) [enhancement, Reality Spiral]\n‚Ä¢ #5725: feat(scenarios): Implement plugin specification and dynamic loading (open) [enhancement, Reality Spiral]",
      "type": "action_result",
      "runId": "4c186386-5d50-4d79-95aa-cf11a7c3fe67",
      "source": "action",
      "planStep": "2/2",
      "actionName": "LIST_GITHUB_ISSUES",
      "planThought": "I need to list the open issues for the elizaOS/eliza repository as requested by the user.",
      "actionResult": {
        "data": {
          "github": {
            "issues": {
              "elizaOS/eliza#5725": {
                "id": 3298689704,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725",
                "body": "# feat(scenarios): Implement plugin specification and dynamic loading\n\n## Description\n\nThis ticket implements plugin specification in scenario YAML files, allowing scenarios to declare which plugins are required for testing. This enables testing of agent behaviors that depend on specific plugins like `@elizaos/plugin-github` or `@elizaos/plugin-evm`. The system will dynamically load specified plugins during scenario execution and make their actions, providers, and services available to the agent.\n\n## Acceptance Criteria\n\n1. Scenario YAML supports a `plugins` array at the root level with string plugin names\n2. The `initializeAgent()` function respects scenario plugin specifications and loads them via `startAgent()`\n3. Plugin loading follows the same dependency resolution and error handling as the main CLI\n4. Scenarios can specify both string plugin names (`@elizaos/plugin-github`) and direct plugin objects\n5. Plugin loading errors are clearly reported with actionable guidance\n6. Default plugins (bootstrap, sql) are automatically included unless explicitly excluded via `exclude_defaults: true`\n7. Plugin conflicts are detected and reported during scenario validation\n8. Plugin initialization errors don't crash the scenario but are reported in results\n\n## Technical Approach\n\n### 1. Update Scenario Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst ScenarioSchema = z.object({\n  name: z.string(),\n  description: z.string(),\n  plugins: z.array(z.string()).optional(), // e.g., [\"@elizaos/plugin-github\"]\n  exclude_defaults: z.boolean().optional(), // exclude bootstrap/sql\n  environment: EnvironmentSchema,\n  setup: SetupSchema.optional(),\n  run: z.array(RunStepSchema),\n  judgment: JudgmentSchema,\n});\n```\n\n### 2. Enhance Runtime Factory\n```typescript\n// packages/cli/src/scenarios/runtime-factory.ts\nexport async function initializeAgent(scenario: Scenario): Promise<IAgentRuntime> {\n  const character: Character = {\n    name: 'scenario-runner',\n    id: stringToUuid('scenario-runner'),\n    bio: 'A minimal character for running scenarios',\n    plugins: scenario.plugins || []\n  };\n\n  // Load default plugins unless excluded\n  if (!scenario.exclude_defaults) {\n    character.plugins.push('@elizaos/plugin-bootstrap', '@elizaos/plugin-sql');\n  }\n\n  const runtime = await startAgent(\n    encryptedCharacter(character),\n    server,\n    undefined,\n    character.plugins,\n    { isTestMode: true }\n  );\n\n  return runtime;\n}\n```\n\n### 3. Plugin Validation\n```typescript\n// packages/cli/src/scenarios/plugin-validator.ts\nexport async function validateScenarioPlugins(scenario: Scenario): Promise<ValidationResult[]> {\n  const results: ValidationResult[] = [];\n  \n  for (const pluginName of scenario.plugins || []) {\n    try {\n      const plugin = await loadAndPreparePlugin(pluginName);\n      if (!plugin) {\n        results.push({\n          type: 'error',\n          message: `Plugin '${pluginName}' could not be loaded`,\n          suggestion: 'Check if plugin is installed or built correctly'\n        });\n      }\n    } catch (error) {\n      results.push({\n        type: 'error', \n        message: `Failed to validate plugin '${pluginName}': ${error.message}`,\n        suggestion: 'Verify plugin dependencies and configuration'\n      });\n    }\n  }\n  \n  return results;\n}\n```\n\n## Test Scenario\n\nCreate `plugin-integration-test.scenario.yaml`:\n```yaml\nname: \"Plugin Integration Test\"\ndescription: \"Tests loading and using plugins specified in scenario YAML\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Test Issue\"\n          number: 123\n          state: \"open\"\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"1.23\"\n\nrun:\n  - name: \"Test GitHub plugin actions\"\n    input: \"Search for issues with label 'bug'\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify GitHub plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"Test Issue\"\n        description: \"Verify agent found the mocked issue\"\n\n  - name: \"Test EVM plugin actions\"\n    input: \"What's my wallet balance?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify EVM plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n        description: \"Verify agent reported the mocked balance\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Plugin Loading Test**: Verify plugins load without errors\n2. **Action Availability Test**: Confirm agent can use plugin actions\n3. **Error Handling Test**: Test with non-existent plugin\n4. **Default Plugin Test**: Verify bootstrap/sql are included by default\n5. **Exclusion Test**: Test `exclude_defaults: true` behavior\n\n## Dependencies\n\n- Fixes the `startAgent` hanging issue (#5719) to enable plugin testing\n- Builds on existing `loadAndPreparePlugin` functionality\n- Integrates with current scenario execution flow ",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement plugin specification and dynamic loading",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5725,
                "node_id": "I_kwDOMT5cIs7EngKo",
                "assignee": null,
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5725",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:48:08Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/labels{/name}",
                "updated_at": "2025-08-07T05:37:32Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5726": {
                "id": 3298691383,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726",
                "body": "# feat(scenarios): Implement conditional mocking and complex response structures\n\n## Description\n\nThis ticket enhances the mocking system to support conditional responses based on input parameters and complex response structures with metadata. This enables realistic testing of service interactions like GitHub API calls or EVM transactions with proper request/response matching.\n\n## Acceptance Criteria\n\n1. Mock definitions support `when` clauses for conditional responses\n2. `when` clauses can match on method arguments, input parameters, or request context\n3. Mock responses support complex nested structures with metadata (timestamps, IDs, etc.)\n4. Multiple mock responses can be defined for the same service/method with different conditions\n5. Mock system provides clear logging of which mock was triggered and why\n6. Mock responses can include realistic error conditions and edge cases\n7. Support for dynamic response generation based on input parameters\n8. Mock validation ensures `when` clauses are syntactically correct\n\n## Technical Approach\n\n### 1. Enhanced Mock Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst MockSchema = z.object({\n  service: z.string(),\n  method: z.string(),\n  when: z.object({\n    // Match on method arguments\n    args: z.array(z.any()).optional(),\n    // Match on specific argument values\n    input: z.record(z.any()).optional(),\n    // Match on request context\n    context: z.record(z.any()).optional(),\n    // Custom matching function\n    matcher: z.string().optional(), // JavaScript expression\n  }).optional(),\n  response: z.any(), // Can be function or static value\n  // For dynamic responses\n  responseFn: z.string().optional(), // JavaScript function\n  // Error simulation\n  error: z.object({\n    code: z.string(),\n    message: z.string(),\n  }).optional(),\n});\n```\n\n### 2. Mock Engine Implementation\n```typescript\n// packages/cli/src/scenarios/mock-engine.ts\nexport class MockEngine {\n  private mocks: MockDefinition[] = [];\n\n  addMock(mock: MockDefinition) {\n    this.mocks.push(mock);\n  }\n\n  async findMock(service: string, method: string, args: any[]): Promise<any> {\n    const candidates = this.mocks.filter(m => \n      m.service === service && m.method === method\n    );\n\n    for (const mock of candidates) {\n      if (await this.matchesCondition(mock, args)) {\n        this.logger.info(`Mock triggered: ${service}.${method} with condition: ${JSON.stringify(mock.when)}`);\n        return this.generateResponse(mock, args);\n      }\n    }\n\n    return null; // No mock found\n  }\n\n  private async matchesCondition(mock: MockDefinition, args: any[]): Promise<boolean> {\n    if (!mock.when) return true; // Default mock\n\n    // Match on arguments\n    if (mock.when.args) {\n      if (!this.deepEqual(args, mock.when.args)) return false;\n    }\n\n    // Match on input parameters\n    if (mock.when.input) {\n      const input = this.extractInputFromArgs(args);\n      if (!this.deepEqual(input, mock.when.input)) return false;\n    }\n\n    // Custom matcher function\n    if (mock.when.matcher) {\n      const matcherFn = new Function('args', 'input', mock.when.matcher);\n      return matcherFn(args, this.extractInputFromArgs(args));\n    }\n\n    return true;\n  }\n\n  private generateResponse(mock: MockDefinition, args: any[]): any {\n    if (mock.error) {\n      throw new Error(`${mock.error.code}: ${mock.error.message}`);\n    }\n\n    if (mock.responseFn) {\n      const responseFn = new Function('args', 'input', mock.responseFn);\n      return responseFn(args, this.extractInputFromArgs(args));\n    }\n\n    return mock.response;\n  }\n}\n```\n\n## Test Scenario\n\nCreate `advanced-mocking-test.scenario.yaml`:\n```yaml\nname: \"Advanced Mocking Test\"\ndescription: \"Tests conditional mocking and complex response structures\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    # Conditional GitHub issue search\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"bug\"\n        matcher: \"input.labels.includes('bug')\"\n      response:\n        - title: \"Critical Bug Found\"\n          number: 456\n          state: \"open\"\n          labels: [\"bug\", \"critical\"]\n          created_at: \"2024-07-15T10:00:00Z\"\n\n    # Conditional GitHub issue search - different response\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"feature\"\n        matcher: \"input.labels.includes('feature')\"\n      response:\n        - title: \"New Feature Request\"\n          number: 789\n          state: \"open\"\n          labels: [\"feature\", \"enhancement\"]\n          created_at: \"2024-07-15T11:00:00Z\"\n\n    # Dynamic EVM balance response\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      when:\n        args: [\"0x1234567890abcdef\"]\n      responseFn: |\n        return {\n          chain: \"ethereum\",\n          address: args[0],\n          balances: [\n            { symbol: \"ETH\", amount: \"1.23\" },\n            { symbol: \"USDC\", amount: \"1000.00\" }\n          ],\n          last_updated: new Date().toISOString()\n        }\n\n    # Error simulation\n    - service: \"github-service\"\n      method: \"readFile\"\n      when:\n        input:\n          path: \"/docs/nonexistent.md\"\n      error:\n        code: \"FILE_NOT_FOUND\"\n        message: \"File does not exist\"\n\nrun:\n  - name: \"Test conditional GitHub search\"\n    input: \"Search for issues with bug label\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"Critical Bug Found\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent correctly search for bug issues?\"\n        expected: \"yes\"\n\n  - name: \"Test dynamic EVM response\"\n    input: \"What's the balance for address 0x1234567890abcdef?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n      - type: \"string_contains\"\n        value: \"1000.00 USDC\"\n\n  - name: \"Test error handling\"\n    input: \"Read the file /docs/nonexistent.md\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.readFile\"\n      - type: \"string_contains\"\n        value: \"File does not exist\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Conditional Matching**: Test different responses based on input parameters\n2. **Dynamic Responses**: Test response generation based on arguments\n3. **Error Simulation**: Test error handling and reporting\n4. **Complex Structures**: Test nested response objects with metadata\n5. **Multiple Mocks**: Test multiple mocks for same service/method\n6. **Logging**: Verify mock selection is logged clearly\n\n## Dependencies\n\n- Builds on existing mock system in scenarios\n- Requires plugin system integration (Ticket 1)\n- Integrates with agent interaction testing (Ticket 3) ",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement conditional mocking and complex response structures",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5726,
                "node_id": "I_kwDOMT5cIs7Engk3",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5726",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:49:00Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/labels{/name}",
                "updated_at": "2025-08-07T05:32:53Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5727": {
                "id": 3298692741,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727",
                "body": "# feat(scenarios): Implement natural language agent interaction and response validation\n\n## Description\n\nThis ticket enables scenarios to test agent behavior through natural language interactions rather than direct code execution. This allows testing of agent reasoning, decision-making, and response generation in realistic conversation contexts with proper evaluation of agent responses.\n\n## Acceptance Criteria\n\n1. Scenario `run` blocks support `input` field for natural language prompts to agents\n2. Agent responses are captured and available for evaluation (text, thoughts, actions)\n3. Evaluators can access both agent response text and execution context\n4. Support for multi-turn conversations in scenarios\n5. Agent responses include thought process and action decisions\n6. Integration with existing evaluation engine for response validation\n7. Support for conversation context across multiple steps\n8. Agent response timing and performance metrics\n\n## Technical Approach\n\n### 1. Enhanced Run Step Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst RunStepSchema = z.object({\n  name: z.string().optional(),\n  // Natural language input to agent\n  input: z.string().optional(),\n  // Direct code execution (existing)\n  lang: z.string().optional(),\n  code: z.string().optional(),\n  // Agent interaction specific\n  agent_context: z.object({\n    conversation_id: z.string().optional(),\n    user_id: z.string().optional(),\n    room_id: z.string().optional(),\n  }).optional(),\n  evaluations: z.array(EvaluationSchema),\n});\n```\n\n### 2. Agent Interaction Engine\n```typescript\n// packages/cli/src/scenarios/agent-interaction.ts\nexport class AgentInteractionEngine {\n  constructor(private runtime: IAgentRuntime) {}\n\n  async interactWithAgent(input: string, context?: AgentContext): Promise<AgentResponse> {\n    // Create message for agent\n    const message: Memory = {\n      entityId: context?.user_id || 'scenario-user',\n      roomId: context?.room_id || 'scenario-room',\n      content: {\n        type: 'text',\n        text: input,\n      },\n      metadata: {\n        type: 'message',\n        conversationId: context?.conversation_id,\n      },\n    };\n\n    // Send to agent and capture response\n    const startTime = Date.now();\n    const response = await this.runtime.processMessage(message);\n    const endTime = Date.now();\n\n    return {\n      text: response.text,\n      thoughts: response.thoughts,\n      actions: response.actions,\n      timing: {\n        startTime,\n        endTime,\n        duration: endTime - startTime,\n      },\n      context: {\n        conversationId: context?.conversation_id,\n        messageId: message.id,\n      },\n    };\n  }\n}\n```\n\n### 3. Enhanced Execution Result\n```typescript\n// packages/cli/src/scenarios/providers.ts\nexport interface ExecutionResult {\n  exitCode: number;\n  stdout: string;\n  stderr: string;\n  files: Record<string, string>;\n  // New: Agent interaction results\n  agentResponse?: AgentResponse;\n  conversationHistory?: AgentResponse[];\n}\n```\n\n## Test Scenario\n\nCreate `agent-interaction-test.scenario.yaml`:\n```yaml\nname: \"Agent Interaction Test\"\ndescription: \"Tests natural language interaction with agents\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Implement Dark Mode\"\n          number: 123\n          state: \"open\"\n          labels: [\"feature\", \"ui\"]\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"2.5\"\n\nrun:\n  - name: \"Ask agent about roadmap\"\n    input: \"What new features are you planning to add?\"\n    agent_context:\n      conversation_id: \"roadmap-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify agent searched for issues\"\n      \n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n        description: \"Verify agent mentioned the mocked issue\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent provide a helpful and coherent response about new features?\"\n        expected: \"yes\"\n        description: \"Verify agent response quality\"\n\n  - name: \"Ask agent about wallet\"\n    input: \"What's my current wallet balance?\"\n    agent_context:\n      conversation_id: \"wallet-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify agent checked wallet balance\"\n      \n      - type: \"string_contains\"\n        value: \"2.5 ETH\"\n        description: \"Verify agent reported the correct balance\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent clearly explain the wallet balance information?\"\n        expected: \"yes\"\n\n  - name: \"Multi-turn conversation\"\n    input: \"Can you help me with both my wallet and roadmap?\"\n    agent_context:\n      conversation_id: \"multi-turn-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"ETH\"\n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent address both wallet and roadmap questions comprehensively?\"\n        expected: \"yes\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Single Turn**: Test basic agent interaction and response\n2. **Multi-turn**: Test conversation context across steps\n3. **Action Tracking**: Verify agent uses appropriate actions\n4. **Response Quality**: Test LLM judge evaluation of responses\n5. **Performance**: Test response timing and metrics\n6. **Error Handling**: Test agent behavior with invalid inputs\n\n## Dependencies\n\n- Requires plugin system integration (Ticket 1)\n- Builds on advanced mocking system (Ticket 2)\n- Integrates with existing evaluation engine\n- Depends on agent runtime message processing",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement natural language agent interaction and response validation",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5727,
                "node_id": "I_kwDOMT5cIs7Eng6F",
                "assignee": null,
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5727",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:49:34Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/labels{/name}",
                "updated_at": "2025-08-07T05:35:40Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5728": {
                "id": 3299322983,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728",
                "body": "# Background\r\n\r\n## What does this PR do?\r\n\r\nIntroduce entity for cancelling runs `CancelRunSignal`\r\n\r\n## Why are we doing this? Any context or related work?\r\n\r\n- Calls to LLMs usually cost some credits\r\n- When we receive the `RUN_STARTED` event we can check current entity and end run to prevent credits spending\r\n\r\n# Documentation changes needed?\r\n\r\n## Methods\r\n\r\n- `static getSignal(runId: UUID)` - get signal by runId or create if null\r\n- `static clear(runId: UUID)` - clear signal from map\r\n- `cancel(content?: Content)` - cancel current run and and send `content` as a response to user\r\n\r\n## Example\r\n\r\n```typescript\r\nimport { Content, EventType, Plugin } from \"@elizaos/core\";\r\nimport { CancelRunSignal } from \"@elizaos/plugin-bootstrap\";\r\n\r\n// consider we have a service to determine eligibility for entity\r\ninterface EligibilityService {\r\n  check(entityId: UUID): Promise<{ result: boolean, reason?: Content }>\r\n}\r\n\r\nconst plugin: Plugin = {\r\n...\r\n  events: {\r\n    [EventType.RUN_STARTED]: ({ entityId, runId, runtime }) => {\r\n      const service = runtime.getService<EligibilityService>(\"USER_MANAGEMENT\");\r\n      const { result, reason } = await service.check(entityId);\r\n      \r\n      if (!result) {\r\n        const signal = CancelRunSignal.getSignal(runId);\r\n        signal.cancel(reason);\r\n      }\r\n    },\r\n    ...\r\n  },\r\n  ...\r\n}\r\n\r\nexport default Plugin;\r\n```\r\n\r\n## Discord username\r\n\r\nalexd000\r\n\r\n",
                "type": null,
                "user": {
                  "id": 82507604,
                  "url": "https://api.github.com/users/alex-nax",
                  "type": "User",
                  "login": "alex-nax",
                  "node_id": "MDQ6VXNlcjgyNTA3NjA0",
                  "html_url": "https://github.com/alex-nax",
                  "gists_url": "https://api.github.com/users/alex-nax/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/alex-nax/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/82507604?v=4",
                  "events_url": "https://api.github.com/users/alex-nax/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/alex-nax/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/alex-nax/followers",
                  "following_url": "https://api.github.com/users/alex-nax/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/alex-nax/orgs",
                  "subscriptions_url": "https://api.github.com/users/alex-nax/subscriptions",
                  "received_events_url": "https://api.github.com/users/alex-nax/received_events"
                },
                "draft": false,
                "state": "open",
                "title": "feat: ability to cancel current run before any calls to LLM are made",
                "labels": [],
                "locked": false,
                "number": 5728,
                "node_id": "PR_kwDOMT5cIs6ihriD",
                "assignee": null,
                "comments": 3,
                "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T07:19:35Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/labels{/name}",
                "updated_at": "2025-08-07T07:22:05Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/comments",
                "pull_request": {
                  "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5728",
                  "diff_url": "https://github.com/elizaOS/eliza/pull/5728.diff",
                  "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                  "merged_at": null,
                  "patch_url": "https://github.com/elizaOS/eliza/pull/5728.patch"
                },
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "FIRST_TIME_CONTRIBUTOR",
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5729": {
                "id": 3299481897,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729",
                "body": "# Relates to\r\n\r\nN/A (Documentation improvement, not tied to a specific issue or ticket)\r\n\r\n# Risks\r\n\r\nLow.  \r\nThis change only updates documentation and does not affect any code or functionality.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR updates the elizaos README to include a fix for installation errors that may occur due to permission issues. It adds a note suggesting the use of sudo if users encounter a \"Permission denied\" or \"InstallFailed\" error when running the `elizaos create my-agent` command.\r\n\r\n## What kind of change is this?\r\n\r\nImprovements (misc. changes to existing features)  \r\nDocumentation update\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes require a change to the project documentation.  \r\nI have updated the documentation accordingly.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\nStart by reviewing the changes in the README.md file, specifically the section on creating a new project.\r\n\r\n## Detailed testing steps\r\n\r\n- Open the updated README.md.\r\n- Review the new instructions under \"Create Your First Project.\"\r\n- Confirm that the added note about using `sudo` is clear and helpful for users who encounter permission errors.",
                "type": null,
                "user": {
                  "id": 32749185,
                  "url": "https://api.github.com/users/mandatedisrael",
                  "type": "User",
                  "login": "mandatedisrael",
                  "node_id": "MDQ6VXNlcjMyNzQ5MTg1",
                  "html_url": "https://github.com/mandatedisrael",
                  "gists_url": "https://api.github.com/users/mandatedisrael/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/mandatedisrael/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/32749185?v=4",
                  "events_url": "https://api.github.com/users/mandatedisrael/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/mandatedisrael/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/mandatedisrael/followers",
                  "following_url": "https://api.github.com/users/mandatedisrael/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/mandatedisrael/orgs",
                  "subscriptions_url": "https://api.github.com/users/mandatedisrael/subscriptions",
                  "received_events_url": "https://api.github.com/users/mandatedisrael/received_events"
                },
                "draft": false,
                "state": "open",
                "title": "Update README.md to fix error",
                "labels": [],
                "locked": false,
                "number": 5729,
                "node_id": "PR_kwDOMT5cIs6iiNWN",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T08:10:12Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/labels{/name}",
                "updated_at": "2025-08-07T08:10:24Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/comments",
                "pull_request": {
                  "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5729",
                  "diff_url": "https://github.com/elizaOS/eliza/pull/5729.diff",
                  "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                  "merged_at": null,
                  "patch_url": "https://github.com/elizaOS/eliza/pull/5729.patch"
                },
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "FIRST_TIME_CONTRIBUTOR",
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5734": {
                "id": 3301116813,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734",
                "body": "**Describe the bug**\n\nOn project creation, ElizaOS CLI fails with the following error:\n```\n‚óá  Failed to build project\nstdout: src/index.ts(7,25): error TS2345: Argument of type 'string' is not assignable to parameter of type 'undefined'.\nstderr: $ tsc --noEmit && vite build && tsup\n```\n\n**To Reproduce**\n\n- Install ElizaOS through `bun`\n```\nbun i -g @elizaos/cli\n```\n- Create new ElizaOS project\n```\nelizaos create abcde\n```\n\n**Expected behavior**\n\nProject built successfully\n\n**Screenshots**\n\n<img width=\"1095\" height=\"572\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/967dd6a2-0d70-4e2e-8019-85a2eab5f225\" />\n\n**Additional context**\n\nElizaOS CLI version: `1.3.2`\n",
                "type": null,
                "user": {
                  "id": 74447600,
                  "url": "https://api.github.com/users/Kemystra",
                  "type": "User",
                  "login": "Kemystra",
                  "node_id": "MDQ6VXNlcjc0NDQ3NjAw",
                  "html_url": "https://github.com/Kemystra",
                  "gists_url": "https://api.github.com/users/Kemystra/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/Kemystra/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/74447600?v=4",
                  "events_url": "https://api.github.com/users/Kemystra/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/Kemystra/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/Kemystra/followers",
                  "following_url": "https://api.github.com/users/Kemystra/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/Kemystra/orgs",
                  "subscriptions_url": "https://api.github.com/users/Kemystra/subscriptions",
                  "received_events_url": "https://api.github.com/users/Kemystra/received_events"
                },
                "state": "open",
                "title": "Eliza CLI failed to build project",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5734,
                "node_id": "I_kwDOMT5cIs7EwwuN",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5734",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T16:14:00Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/labels{/name}",
                "updated_at": "2025-08-08T19:43:52Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "NONE",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5738": {
                "id": 3302237103,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738",
                "body": "## Description\n\nThe `bun run clean` command is failing due to TypeScript errors in `@elizaos/core` package during the DTS (type definition) build phase.\n\n## Error Details\n\n### Build Process\n```\n‚Ä¢ Running build in 17 packages\n‚Ä¢ Remote caching disabled\n@elizaos/config:build: cache miss\n@elizaos/autodoc:build: cache miss\n@elizaos/core:build: cache miss\n```\n\n### TypeScript Errors in @elizaos/core/src/utils.ts\n1. Line 218: `error TS2345: Argument of type '`${string}-${string}-${string}-${string}-${string}`' is not assignable to parameter of type 'never'.`\n2. Line 366: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n3. Line 409: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n4. Line 536: `error TS2345: Argument of type '{ numberOfChunks: number; averageChunkSize: number; }' is not assignable to parameter of type 'never'.`\n\n### Impact\n- Blocks `bun run clean` command\n- Prevents successful build of `@elizaos/core`\n- Affects dependent packages in the monorepo\n\n## Steps to Reproduce\n1. Run `bun run clean`\n2. Observe build failure in `@elizaos/core`\n3. Build fails with TypeScript errors during DTS generation\n\n## Expected Behavior\n- `bun run clean` should complete successfully\n- `@elizaos/core` should build without TypeScript errors\n- Type definitions should be generated correctly\n\n## Suggested Fix\n\nThe errors suggest type mismatches in `utils.ts`. Need to:\n1. Review type definitions in affected lines\n2. Update type assertions or generic constraints\n3. Ensure string template literal types are properly handled\n4. Fix object type assignments\n\n### Files to Update\n- `packages/core/src/utils.ts`\n\n## Priority\n**HIGH** - This is blocking clean builds and potentially affecting development workflow.",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "üêõ Build failure in @elizaos/core causing bun run clean to fail",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5738,
                "node_id": "I_kwDOMT5cIs7E1COv",
                "assignee": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5738",
                "assignees": [
                  {
                    "id": 15067321,
                    "url": "https://api.github.com/users/monilpat",
                    "type": "User",
                    "login": "monilpat",
                    "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                    "html_url": "https://github.com/monilpat",
                    "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/monilpat/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                    "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/monilpat/followers",
                    "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/monilpat/orgs",
                    "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                    "received_events_url": "https://api.github.com/users/monilpat/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-08T00:26:11Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/labels{/name}",
                "updated_at": "2025-08-11T14:56:01Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5747": {
                "id": 3304516859,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747",
                "body": null,
                "type": null,
                "user": {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                },
                "state": "open",
                "title": "Fixing bugs in eliza-cloud",
                "labels": [],
                "locked": false,
                "number": 5747,
                "node_id": "I_kwDOMT5cIs7E9uz7",
                "assignee": {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                },
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5747",
                "assignees": [
                  {
                    "id": 48334430,
                    "url": "https://api.github.com/users/samarth30",
                    "type": "User",
                    "login": "samarth30",
                    "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                    "html_url": "https://github.com/samarth30",
                    "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/samarth30/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                    "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/samarth30/followers",
                    "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/samarth30/orgs",
                    "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                    "received_events_url": "https://api.github.com/users/samarth30/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-08T16:01:56Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/labels{/name}",
                "updated_at": "2025-08-08T19:02:49Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "MEMBER",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": {
                  "id": 20150,
                  "name": "Linear",
                  "slug": "linear",
                  "owner": {
                    "id": 46686594,
                    "url": "https://api.github.com/users/linear",
                    "type": "Organization",
                    "login": "linear",
                    "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ2Njg2NTk0",
                    "html_url": "https://github.com/linear",
                    "gists_url": "https://api.github.com/users/linear/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/linear/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/46686594?v=4",
                    "events_url": "https://api.github.com/users/linear/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/linear/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/linear/followers",
                    "following_url": "https://api.github.com/users/linear/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/linear/orgs",
                    "subscriptions_url": "https://api.github.com/users/linear/subscriptions",
                    "received_events_url": "https://api.github.com/users/linear/received_events"
                  },
                  "events": [
                    "check_suite",
                    "issues",
                    "issue_comment",
                    "pull_request",
                    "pull_request_review",
                    "repository",
                    "sub_issues"
                  ],
                  "node_id": "MDM6QXBwMjAxNTA=",
                  "html_url": "https://github.com/apps/linear",
                  "client_id": "Iv1.085d682ea245c945",
                  "created_at": "2018-11-02T18:07:23Z",
                  "updated_at": "2025-02-07T14:59:56Z",
                  "description": "",
                  "permissions": {
                    "checks": "read",
                    "issues": "write",
                    "metadata": "read",
                    "pull_requests": "write"
                  },
                  "external_url": "https://linear.app"
                }
              },
              "elizaOS/eliza#5749": {
                "id": 3308102900,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749",
                "body": "### Problem Statement\nCurrently, ElizaOS scenario testing lacks the ability to mock internal agent runtime calls (particularly LLM interactions) when testing via the API client. This makes it difficult to create deterministic tests for agent behavior and workflows.\n\n### Current Limitations\n- Global function mocks only work for code executed in the same process\n- No way to intercept `runtime.useModel` calls from the bootstrap plugin\n- Agent behavior is non-deterministic due to real LLM calls\n- Difficult to test specific agent decision paths and responses\n\n### Why Different Approach Was Needed\n\nThe existing mocking system was designed for **code execution environments** (E2B sandbox and local `node -e` processes), where mocks are applied to the execution context. However, **agent testing** works differently:\n\n- **E2B/Local Execution**: Code runs in isolated processes/sandboxes where global mocks can be applied\n- **Agent Testing**: Agent runs as a service with API client interaction, requiring direct runtime method interception\n- **Architecture Gap**: The bootstrap plugin calls `runtime.useModel` internally, which can't be mocked through the execution environment approach\n\nThis architectural difference necessitated a new approach that directly intercepts runtime methods rather than relying on execution context mocking.\n\n### Proposed Solution: Runtime Method Mocking\n\nWe've implemented a new mocking approach that directly intercepts `IAgentRuntime` method calls:\n\n#### Key Components\n\n1. **MockEngine Enhancement**\n   - Added `runtimeMethodMocks` to support mocking runtime methods\n   - Priority system: `runtimeMethod` > `service` > `globalFunction`\n   - Direct method replacement on the runtime instance\n\n2. **Schema Updates**\n   - Extended `MockSchema` to include `runtimeMethod: z.string().optional()`\n   - Supports mocking any `IAgentRuntime` method (e.g., `useModel`, `getService`)\n\n3. **Conditional Matching**\n   - Matcher functions can inspect method arguments\n   - Example: `\"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"`\n   - Supports complex conditional logic for when to apply mocks\n\n#### Usage Example\n\n```yaml\nsetup:\n  mocks:\n    - runtimeMethod: \"useModel\"\n      method: \"useModel\"\n      when:\n        matcher: \"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"\n      response: \"<response><name>agent</name><reasoning>Mocked response</reasoning><action>RESPOND</action></response>\"\n```\n\n#### Benefits\n\n1. **Deterministic Testing**: Replace LLM calls with static responses\n2. **Full Workflow Testing**: Test complete agent decision flows\n3. **Conditional Mocking**: Apply mocks based on specific conditions\n4. **Runtime Integration**: Works seamlessly with existing agent architecture\n5. **Backward Compatibility**: Existing mocks continue to work\n\n#### Implementation Steps\n\n- MockEngine runtime method support\n- Schema updates for runtimeMethod mocks\n- Conditional matching with matcher functions\n- Integration with scenario runner\n- Basic useModel mocking working\n- Add support for mocking other runtime methods (getService, etc.)\n- Create comprehensive test scenarios\n- Add documentation and examples\n- Consider adding mock recording/replay capabilities\n\n### Technical Details\n\nThe implementation works by:\n1. Creating the `IAgentRuntime` instance in the scenario runner\n2. Applying mocks directly to the runtime object before agent initialization\n3. The bootstrap plugin receives the mocked runtime and uses the mocked methods\n4. Mocks are reverted after scenario completion\n\nThis approach provides the foundation for robust, deterministic agent testing while maintaining the existing architecture.",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "Implement Runtime Method Mocking for Deterministic Agent Testing",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 7668252177,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/testing",
                    "name": "testing",
                    "color": "2D3957",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAAByRA-EQ",
                    "description": ""
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5749,
                "node_id": "I_kwDOMT5cIs7FLaT0",
                "assignee": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "comments": 0,
                "html_url": "https://github.com/elizaOS/eliza/issues/5749",
                "assignees": [
                  {
                    "id": 15067321,
                    "url": "https://api.github.com/users/monilpat",
                    "type": "User",
                    "login": "monilpat",
                    "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                    "html_url": "https://github.com/monilpat",
                    "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/monilpat/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                    "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/monilpat/followers",
                    "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/monilpat/orgs",
                    "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                    "received_events_url": "https://api.github.com/users/monilpat/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-11T00:08:49Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/labels{/name}",
                "updated_at": "2025-08-11T00:09:37Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5754": {
                "id": 3310285907,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754",
                "body": "## Issue Summary\nThe `elizaos publish --npm` command reports successful publishing but the plugin is not actually published to npm, despite showing success messages. The npm publish is failing with a 404 error, but the ElizaOS CLI incorrectly reports success.\n\n## Key Problems Identified\n\n### 1. Critical NPM Publishing Failure\n- **Error**: `npm error 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found`\n- **Issue**: The package scope `@elizaos` doesn't exist on npm, preventing publishing\n- **Impact**: Package cannot be published to npm, but CLI reports success\n\n### 2. False Success Reporting\n- **Issue**: CLI reports `[‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm`\n- **Reality**: npm publish failed with 404 error\n- **Impact**: Developers believe their plugin is published when it's not\n\n### 3. Registry Repository Mismatch\n- **Expected**: Should create PR against `https://github.com/elizaos-plugins/registry`\n- **Actual**: Still references old registry `https://github.com/elizaos/registry`\n- **Impact**: Plugin won't appear in the official ElizaOS registry\n\n## Steps to Reproduce\n\n```bash\n# Navigate to the plugin directory\ncd packages/plugin-polygon\n\n# Ensure you're on the correct branch with the changes\ngit checkout polygon\n\n# Run the publish command\nelizaos publish --npm\n\n# Verify the success message appears\n# [‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm\n\n# Check if package actually exists on npm\nnpm view @elizaos/plugin-polygon@1.0.0\n# Result: 404 Not Found - '@elizaos/plugin-polygon@1.0.0' is not in this registry\n```\n\n## Technical Details\n\n### NPM Error Analysis\nThe npm logs show the root cause:\n```\nhttp fetch PUT 404 https://registry.npmjs.org/@elizaos%2fplugin-polygon 507ms\nerror 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found\n```\n\nThis indicates that the `@elizaos` scope doesn't exist on npm, which is required for publishing scoped packages.\n\n### CLI Error Handling Failure\nThe ElizaOS CLI is not properly parsing npm error codes:\n- npm returns exit code 1 (failure)\n- CLI ignores the error and reports success\n- No validation that the package actually exists on npm\n\n## Expected Behavior\n1. CLI should detect npm publish failures (exit code 1)\n2. CLI should fail with clear error message when package scope doesn't exist\n3. CLI should validate that package actually exists on npm after publishing\n4. CLI should create PRs against the correct registry repository\n\n## Recommended Fixes\n\n### 1. Fix NPM Error Detection\n```typescript\n// In the publish command, check npm exit code\nconst npmResult = await exec('npm publish', { cwd: pluginDir });\nif (npmResult.exitCode !== 0) {\n  throw new Error(`NPM publish failed: ${npmResult.stderr}`);\n}\n```\n\n### 2. Add Package Scope Validation\n```typescript\n// Before publishing, check if scope exists\nconst scopeExists = await checkNpmScope('@elizaos');\nif (!scopeExists) {\n  throw new Error('Package scope @elizaos does not exist on npm. Contact npm support to create the scope.');\n}\n```\n\n### 3. Add Post-Publish Validation\n```typescript\n// After publishing, verify package exists\nconst packageExists = await checkPackageExists(packageName, version);\nif (!packageExists) {\n  throw new Error(`Package was not published successfully. Check npm logs for details.`);\n}\n```\n\n## Priority\n**Critical** - This completely blocks plugin publishing and creates false success reports.\n\n## Affected Components\n- `packages/cli/src/commands/publish.ts`\n- NPM publishing logic\n- Error handling and success reporting\n- Package scope validation\n- Registry repository configuration\n\n## Immediate Action Required\n1. **Create the `@elizaos` scope on npm** or use an existing scope\n2. Update CLI to properly detect and handle npm publish failures\n3. Add post-publish validation to ensure packages actually exist on npm\n4. Update registry repository configuration\n\n## Alternative Solutions\n1. **Use existing scope**: Change package name to `@monilpat/plugin-polygon`\n2. **Create organization scope**: Set up `@elizaos` organization on npm\n3. **Use unscoped package**: Publish as `elizaos-plugin-polygon`\n\nThis issue is critically blocking plugin developers from successfully publishing their work and needs immediate attention from the ElizaOS team.\n",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "Critical: Plugin Publishing Fails with False Success Reports",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5754,
                "node_id": "I_kwDOMT5cIs7FTvRT",
                "assignee": null,
                "comments": 0,
                "html_url": "https://github.com/elizaOS/eliza/issues/5754",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-11T14:20:08Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/labels{/name}",
                "updated_at": "2025-08-11T14:20:08Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              }
            },
            "lastIssues": [
              {
                "id": 3310285907,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754",
                "body": "## Issue Summary\nThe `elizaos publish --npm` command reports successful publishing but the plugin is not actually published to npm, despite showing success messages. The npm publish is failing with a 404 error, but the ElizaOS CLI incorrectly reports success.\n\n## Key Problems Identified\n\n### 1. Critical NPM Publishing Failure\n- **Error**: `npm error 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found`\n- **Issue**: The package scope `@elizaos` doesn't exist on npm, preventing publishing\n- **Impact**: Package cannot be published to npm, but CLI reports success\n\n### 2. False Success Reporting\n- **Issue**: CLI reports `[‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm`\n- **Reality**: npm publish failed with 404 error\n- **Impact**: Developers believe their plugin is published when it's not\n\n### 3. Registry Repository Mismatch\n- **Expected**: Should create PR against `https://github.com/elizaos-plugins/registry`\n- **Actual**: Still references old registry `https://github.com/elizaos/registry`\n- **Impact**: Plugin won't appear in the official ElizaOS registry\n\n## Steps to Reproduce\n\n```bash\n# Navigate to the plugin directory\ncd packages/plugin-polygon\n\n# Ensure you're on the correct branch with the changes\ngit checkout polygon\n\n# Run the publish command\nelizaos publish --npm\n\n# Verify the success message appears\n# [‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm\n\n# Check if package actually exists on npm\nnpm view @elizaos/plugin-polygon@1.0.0\n# Result: 404 Not Found - '@elizaos/plugin-polygon@1.0.0' is not in this registry\n```\n\n## Technical Details\n\n### NPM Error Analysis\nThe npm logs show the root cause:\n```\nhttp fetch PUT 404 https://registry.npmjs.org/@elizaos%2fplugin-polygon 507ms\nerror 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found\n```\n\nThis indicates that the `@elizaos` scope doesn't exist on npm, which is required for publishing scoped packages.\n\n### CLI Error Handling Failure\nThe ElizaOS CLI is not properly parsing npm error codes:\n- npm returns exit code 1 (failure)\n- CLI ignores the error and reports success\n- No validation that the package actually exists on npm\n\n## Expected Behavior\n1. CLI should detect npm publish failures (exit code 1)\n2. CLI should fail with clear error message when package scope doesn't exist\n3. CLI should validate that package actually exists on npm after publishing\n4. CLI should create PRs against the correct registry repository\n\n## Recommended Fixes\n\n### 1. Fix NPM Error Detection\n```typescript\n// In the publish command, check npm exit code\nconst npmResult = await exec('npm publish', { cwd: pluginDir });\nif (npmResult.exitCode !== 0) {\n  throw new Error(`NPM publish failed: ${npmResult.stderr}`);\n}\n```\n\n### 2. Add Package Scope Validation\n```typescript\n// Before publishing, check if scope exists\nconst scopeExists = await checkNpmScope('@elizaos');\nif (!scopeExists) {\n  throw new Error('Package scope @elizaos does not exist on npm. Contact npm support to create the scope.');\n}\n```\n\n### 3. Add Post-Publish Validation\n```typescript\n// After publishing, verify package exists\nconst packageExists = await checkPackageExists(packageName, version);\nif (!packageExists) {\n  throw new Error(`Package was not published successfully. Check npm logs for details.`);\n}\n```\n\n## Priority\n**Critical** - This completely blocks plugin publishing and creates false success reports.\n\n## Affected Components\n- `packages/cli/src/commands/publish.ts`\n- NPM publishing logic\n- Error handling and success reporting\n- Package scope validation\n- Registry repository configuration\n\n## Immediate Action Required\n1. **Create the `@elizaos` scope on npm** or use an existing scope\n2. Update CLI to properly detect and handle npm publish failures\n3. Add post-publish validation to ensure packages actually exist on npm\n4. Update registry repository configuration\n\n## Alternative Solutions\n1. **Use existing scope**: Change package name to `@monilpat/plugin-polygon`\n2. **Create organization scope**: Set up `@elizaos` organization on npm\n3. **Use unscoped package**: Publish as `elizaos-plugin-polygon`\n\nThis issue is critically blocking plugin developers from successfully publishing their work and needs immediate attention from the ElizaOS team.\n",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "Critical: Plugin Publishing Fails with False Success Reports",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5754,
                "node_id": "I_kwDOMT5cIs7FTvRT",
                "assignee": null,
                "comments": 0,
                "html_url": "https://github.com/elizaOS/eliza/issues/5754",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-11T14:20:08Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/labels{/name}",
                "updated_at": "2025-08-11T14:20:08Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3308102900,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749",
                "body": "### Problem Statement\nCurrently, ElizaOS scenario testing lacks the ability to mock internal agent runtime calls (particularly LLM interactions) when testing via the API client. This makes it difficult to create deterministic tests for agent behavior and workflows.\n\n### Current Limitations\n- Global function mocks only work for code executed in the same process\n- No way to intercept `runtime.useModel` calls from the bootstrap plugin\n- Agent behavior is non-deterministic due to real LLM calls\n- Difficult to test specific agent decision paths and responses\n\n### Why Different Approach Was Needed\n\nThe existing mocking system was designed for **code execution environments** (E2B sandbox and local `node -e` processes), where mocks are applied to the execution context. However, **agent testing** works differently:\n\n- **E2B/Local Execution**: Code runs in isolated processes/sandboxes where global mocks can be applied\n- **Agent Testing**: Agent runs as a service with API client interaction, requiring direct runtime method interception\n- **Architecture Gap**: The bootstrap plugin calls `runtime.useModel` internally, which can't be mocked through the execution environment approach\n\nThis architectural difference necessitated a new approach that directly intercepts runtime methods rather than relying on execution context mocking.\n\n### Proposed Solution: Runtime Method Mocking\n\nWe've implemented a new mocking approach that directly intercepts `IAgentRuntime` method calls:\n\n#### Key Components\n\n1. **MockEngine Enhancement**\n   - Added `runtimeMethodMocks` to support mocking runtime methods\n   - Priority system: `runtimeMethod` > `service` > `globalFunction`\n   - Direct method replacement on the runtime instance\n\n2. **Schema Updates**\n   - Extended `MockSchema` to include `runtimeMethod: z.string().optional()`\n   - Supports mocking any `IAgentRuntime` method (e.g., `useModel`, `getService`)\n\n3. **Conditional Matching**\n   - Matcher functions can inspect method arguments\n   - Example: `\"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"`\n   - Supports complex conditional logic for when to apply mocks\n\n#### Usage Example\n\n```yaml\nsetup:\n  mocks:\n    - runtimeMethod: \"useModel\"\n      method: \"useModel\"\n      when:\n        matcher: \"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"\n      response: \"<response><name>agent</name><reasoning>Mocked response</reasoning><action>RESPOND</action></response>\"\n```\n\n#### Benefits\n\n1. **Deterministic Testing**: Replace LLM calls with static responses\n2. **Full Workflow Testing**: Test complete agent decision flows\n3. **Conditional Mocking**: Apply mocks based on specific conditions\n4. **Runtime Integration**: Works seamlessly with existing agent architecture\n5. **Backward Compatibility**: Existing mocks continue to work\n\n#### Implementation Steps\n\n- MockEngine runtime method support\n- Schema updates for runtimeMethod mocks\n- Conditional matching with matcher functions\n- Integration with scenario runner\n- Basic useModel mocking working\n- Add support for mocking other runtime methods (getService, etc.)\n- Create comprehensive test scenarios\n- Add documentation and examples\n- Consider adding mock recording/replay capabilities\n\n### Technical Details\n\nThe implementation works by:\n1. Creating the `IAgentRuntime` instance in the scenario runner\n2. Applying mocks directly to the runtime object before agent initialization\n3. The bootstrap plugin receives the mocked runtime and uses the mocked methods\n4. Mocks are reverted after scenario completion\n\nThis approach provides the foundation for robust, deterministic agent testing while maintaining the existing architecture.",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "Implement Runtime Method Mocking for Deterministic Agent Testing",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 7668252177,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/testing",
                    "name": "testing",
                    "color": "2D3957",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAAByRA-EQ",
                    "description": ""
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5749,
                "node_id": "I_kwDOMT5cIs7FLaT0",
                "assignee": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "comments": 0,
                "html_url": "https://github.com/elizaOS/eliza/issues/5749",
                "assignees": [
                  {
                    "id": 15067321,
                    "url": "https://api.github.com/users/monilpat",
                    "type": "User",
                    "login": "monilpat",
                    "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                    "html_url": "https://github.com/monilpat",
                    "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/monilpat/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                    "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/monilpat/followers",
                    "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/monilpat/orgs",
                    "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                    "received_events_url": "https://api.github.com/users/monilpat/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-11T00:08:49Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/labels{/name}",
                "updated_at": "2025-08-11T00:09:37Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3304516859,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747",
                "body": null,
                "type": null,
                "user": {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                },
                "state": "open",
                "title": "Fixing bugs in eliza-cloud",
                "labels": [],
                "locked": false,
                "number": 5747,
                "node_id": "I_kwDOMT5cIs7E9uz7",
                "assignee": {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                },
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5747",
                "assignees": [
                  {
                    "id": 48334430,
                    "url": "https://api.github.com/users/samarth30",
                    "type": "User",
                    "login": "samarth30",
                    "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                    "html_url": "https://github.com/samarth30",
                    "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/samarth30/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                    "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/samarth30/followers",
                    "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/samarth30/orgs",
                    "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                    "received_events_url": "https://api.github.com/users/samarth30/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-08T16:01:56Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/labels{/name}",
                "updated_at": "2025-08-08T19:02:49Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "MEMBER",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": {
                  "id": 20150,
                  "name": "Linear",
                  "slug": "linear",
                  "owner": {
                    "id": 46686594,
                    "url": "https://api.github.com/users/linear",
                    "type": "Organization",
                    "login": "linear",
                    "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ2Njg2NTk0",
                    "html_url": "https://github.com/linear",
                    "gists_url": "https://api.github.com/users/linear/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/linear/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/46686594?v=4",
                    "events_url": "https://api.github.com/users/linear/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/linear/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/linear/followers",
                    "following_url": "https://api.github.com/users/linear/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/linear/orgs",
                    "subscriptions_url": "https://api.github.com/users/linear/subscriptions",
                    "received_events_url": "https://api.github.com/users/linear/received_events"
                  },
                  "events": [
                    "check_suite",
                    "issues",
                    "issue_comment",
                    "pull_request",
                    "pull_request_review",
                    "repository",
                    "sub_issues"
                  ],
                  "node_id": "MDM6QXBwMjAxNTA=",
                  "html_url": "https://github.com/apps/linear",
                  "client_id": "Iv1.085d682ea245c945",
                  "created_at": "2018-11-02T18:07:23Z",
                  "updated_at": "2025-02-07T14:59:56Z",
                  "description": "",
                  "permissions": {
                    "checks": "read",
                    "issues": "write",
                    "metadata": "read",
                    "pull_requests": "write"
                  },
                  "external_url": "https://linear.app"
                }
              },
              {
                "id": 3302237103,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738",
                "body": "## Description\n\nThe `bun run clean` command is failing due to TypeScript errors in `@elizaos/core` package during the DTS (type definition) build phase.\n\n## Error Details\n\n### Build Process\n```\n‚Ä¢ Running build in 17 packages\n‚Ä¢ Remote caching disabled\n@elizaos/config:build: cache miss\n@elizaos/autodoc:build: cache miss\n@elizaos/core:build: cache miss\n```\n\n### TypeScript Errors in @elizaos/core/src/utils.ts\n1. Line 218: `error TS2345: Argument of type '`${string}-${string}-${string}-${string}-${string}`' is not assignable to parameter of type 'never'.`\n2. Line 366: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n3. Line 409: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n4. Line 536: `error TS2345: Argument of type '{ numberOfChunks: number; averageChunkSize: number; }' is not assignable to parameter of type 'never'.`\n\n### Impact\n- Blocks `bun run clean` command\n- Prevents successful build of `@elizaos/core`\n- Affects dependent packages in the monorepo\n\n## Steps to Reproduce\n1. Run `bun run clean`\n2. Observe build failure in `@elizaos/core`\n3. Build fails with TypeScript errors during DTS generation\n\n## Expected Behavior\n- `bun run clean` should complete successfully\n- `@elizaos/core` should build without TypeScript errors\n- Type definitions should be generated correctly\n\n## Suggested Fix\n\nThe errors suggest type mismatches in `utils.ts`. Need to:\n1. Review type definitions in affected lines\n2. Update type assertions or generic constraints\n3. Ensure string template literal types are properly handled\n4. Fix object type assignments\n\n### Files to Update\n- `packages/core/src/utils.ts`\n\n## Priority\n**HIGH** - This is blocking clean builds and potentially affecting development workflow.",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "üêõ Build failure in @elizaos/core causing bun run clean to fail",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5738,
                "node_id": "I_kwDOMT5cIs7E1COv",
                "assignee": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5738",
                "assignees": [
                  {
                    "id": 15067321,
                    "url": "https://api.github.com/users/monilpat",
                    "type": "User",
                    "login": "monilpat",
                    "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                    "html_url": "https://github.com/monilpat",
                    "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/monilpat/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                    "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/monilpat/followers",
                    "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/monilpat/orgs",
                    "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                    "received_events_url": "https://api.github.com/users/monilpat/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-08T00:26:11Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/labels{/name}",
                "updated_at": "2025-08-11T14:56:01Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3301116813,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734",
                "body": "**Describe the bug**\n\nOn project creation, ElizaOS CLI fails with the following error:\n```\n‚óá  Failed to build project\nstdout: src/index.ts(7,25): error TS2345: Argument of type 'string' is not assignable to parameter of type 'undefined'.\nstderr: $ tsc --noEmit && vite build && tsup\n```\n\n**To Reproduce**\n\n- Install ElizaOS through `bun`\n```\nbun i -g @elizaos/cli\n```\n- Create new ElizaOS project\n```\nelizaos create abcde\n```\n\n**Expected behavior**\n\nProject built successfully\n\n**Screenshots**\n\n<img width=\"1095\" height=\"572\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/967dd6a2-0d70-4e2e-8019-85a2eab5f225\" />\n\n**Additional context**\n\nElizaOS CLI version: `1.3.2`\n",
                "type": null,
                "user": {
                  "id": 74447600,
                  "url": "https://api.github.com/users/Kemystra",
                  "type": "User",
                  "login": "Kemystra",
                  "node_id": "MDQ6VXNlcjc0NDQ3NjAw",
                  "html_url": "https://github.com/Kemystra",
                  "gists_url": "https://api.github.com/users/Kemystra/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/Kemystra/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/74447600?v=4",
                  "events_url": "https://api.github.com/users/Kemystra/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/Kemystra/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/Kemystra/followers",
                  "following_url": "https://api.github.com/users/Kemystra/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/Kemystra/orgs",
                  "subscriptions_url": "https://api.github.com/users/Kemystra/subscriptions",
                  "received_events_url": "https://api.github.com/users/Kemystra/received_events"
                },
                "state": "open",
                "title": "Eliza CLI failed to build project",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5734,
                "node_id": "I_kwDOMT5cIs7EwwuN",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5734",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T16:14:00Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/labels{/name}",
                "updated_at": "2025-08-08T19:43:52Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "NONE",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3299481897,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729",
                "body": "# Relates to\r\n\r\nN/A (Documentation improvement, not tied to a specific issue or ticket)\r\n\r\n# Risks\r\n\r\nLow.  \r\nThis change only updates documentation and does not affect any code or functionality.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR updates the elizaos README to include a fix for installation errors that may occur due to permission issues. It adds a note suggesting the use of sudo if users encounter a \"Permission denied\" or \"InstallFailed\" error when running the `elizaos create my-agent` command.\r\n\r\n## What kind of change is this?\r\n\r\nImprovements (misc. changes to existing features)  \r\nDocumentation update\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes require a change to the project documentation.  \r\nI have updated the documentation accordingly.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\nStart by reviewing the changes in the README.md file, specifically the section on creating a new project.\r\n\r\n## Detailed testing steps\r\n\r\n- Open the updated README.md.\r\n- Review the new instructions under \"Create Your First Project.\"\r\n- Confirm that the added note about using `sudo` is clear and helpful for users who encounter permission errors.",
                "type": null,
                "user": {
                  "id": 32749185,
                  "url": "https://api.github.com/users/mandatedisrael",
                  "type": "User",
                  "login": "mandatedisrael",
                  "node_id": "MDQ6VXNlcjMyNzQ5MTg1",
                  "html_url": "https://github.com/mandatedisrael",
                  "gists_url": "https://api.github.com/users/mandatedisrael/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/mandatedisrael/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/32749185?v=4",
                  "events_url": "https://api.github.com/users/mandatedisrael/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/mandatedisrael/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/mandatedisrael/followers",
                  "following_url": "https://api.github.com/users/mandatedisrael/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/mandatedisrael/orgs",
                  "subscriptions_url": "https://api.github.com/users/mandatedisrael/subscriptions",
                  "received_events_url": "https://api.github.com/users/mandatedisrael/received_events"
                },
                "draft": false,
                "state": "open",
                "title": "Update README.md to fix error",
                "labels": [],
                "locked": false,
                "number": 5729,
                "node_id": "PR_kwDOMT5cIs6iiNWN",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T08:10:12Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/labels{/name}",
                "updated_at": "2025-08-07T08:10:24Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/comments",
                "pull_request": {
                  "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5729",
                  "diff_url": "https://github.com/elizaOS/eliza/pull/5729.diff",
                  "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                  "merged_at": null,
                  "patch_url": "https://github.com/elizaOS/eliza/pull/5729.patch"
                },
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "FIRST_TIME_CONTRIBUTOR",
                "performed_via_github_app": null
              },
              {
                "id": 3299322983,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728",
                "body": "# Background\r\n\r\n## What does this PR do?\r\n\r\nIntroduce entity for cancelling runs `CancelRunSignal`\r\n\r\n## Why are we doing this? Any context or related work?\r\n\r\n- Calls to LLMs usually cost some credits\r\n- When we receive the `RUN_STARTED` event we can check current entity and end run to prevent credits spending\r\n\r\n# Documentation changes needed?\r\n\r\n## Methods\r\n\r\n- `static getSignal(runId: UUID)` - get signal by runId or create if null\r\n- `static clear(runId: UUID)` - clear signal from map\r\n- `cancel(content?: Content)` - cancel current run and and send `content` as a response to user\r\n\r\n## Example\r\n\r\n```typescript\r\nimport { Content, EventType, Plugin } from \"@elizaos/core\";\r\nimport { CancelRunSignal } from \"@elizaos/plugin-bootstrap\";\r\n\r\n// consider we have a service to determine eligibility for entity\r\ninterface EligibilityService {\r\n  check(entityId: UUID): Promise<{ result: boolean, reason?: Content }>\r\n}\r\n\r\nconst plugin: Plugin = {\r\n...\r\n  events: {\r\n    [EventType.RUN_STARTED]: ({ entityId, runId, runtime }) => {\r\n      const service = runtime.getService<EligibilityService>(\"USER_MANAGEMENT\");\r\n      const { result, reason } = await service.check(entityId);\r\n      \r\n      if (!result) {\r\n        const signal = CancelRunSignal.getSignal(runId);\r\n        signal.cancel(reason);\r\n      }\r\n    },\r\n    ...\r\n  },\r\n  ...\r\n}\r\n\r\nexport default Plugin;\r\n```\r\n\r\n## Discord username\r\n\r\nalexd000\r\n\r\n",
                "type": null,
                "user": {
                  "id": 82507604,
                  "url": "https://api.github.com/users/alex-nax",
                  "type": "User",
                  "login": "alex-nax",
                  "node_id": "MDQ6VXNlcjgyNTA3NjA0",
                  "html_url": "https://github.com/alex-nax",
                  "gists_url": "https://api.github.com/users/alex-nax/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/alex-nax/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/82507604?v=4",
                  "events_url": "https://api.github.com/users/alex-nax/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/alex-nax/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/alex-nax/followers",
                  "following_url": "https://api.github.com/users/alex-nax/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/alex-nax/orgs",
                  "subscriptions_url": "https://api.github.com/users/alex-nax/subscriptions",
                  "received_events_url": "https://api.github.com/users/alex-nax/received_events"
                },
                "draft": false,
                "state": "open",
                "title": "feat: ability to cancel current run before any calls to LLM are made",
                "labels": [],
                "locked": false,
                "number": 5728,
                "node_id": "PR_kwDOMT5cIs6ihriD",
                "assignee": null,
                "comments": 3,
                "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T07:19:35Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/labels{/name}",
                "updated_at": "2025-08-07T07:22:05Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/comments",
                "pull_request": {
                  "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5728",
                  "diff_url": "https://github.com/elizaOS/eliza/pull/5728.diff",
                  "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                  "merged_at": null,
                  "patch_url": "https://github.com/elizaOS/eliza/pull/5728.patch"
                },
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "FIRST_TIME_CONTRIBUTOR",
                "performed_via_github_app": null
              },
              {
                "id": 3298692741,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727",
                "body": "# feat(scenarios): Implement natural language agent interaction and response validation\n\n## Description\n\nThis ticket enables scenarios to test agent behavior through natural language interactions rather than direct code execution. This allows testing of agent reasoning, decision-making, and response generation in realistic conversation contexts with proper evaluation of agent responses.\n\n## Acceptance Criteria\n\n1. Scenario `run` blocks support `input` field for natural language prompts to agents\n2. Agent responses are captured and available for evaluation (text, thoughts, actions)\n3. Evaluators can access both agent response text and execution context\n4. Support for multi-turn conversations in scenarios\n5. Agent responses include thought process and action decisions\n6. Integration with existing evaluation engine for response validation\n7. Support for conversation context across multiple steps\n8. Agent response timing and performance metrics\n\n## Technical Approach\n\n### 1. Enhanced Run Step Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst RunStepSchema = z.object({\n  name: z.string().optional(),\n  // Natural language input to agent\n  input: z.string().optional(),\n  // Direct code execution (existing)\n  lang: z.string().optional(),\n  code: z.string().optional(),\n  // Agent interaction specific\n  agent_context: z.object({\n    conversation_id: z.string().optional(),\n    user_id: z.string().optional(),\n    room_id: z.string().optional(),\n  }).optional(),\n  evaluations: z.array(EvaluationSchema),\n});\n```\n\n### 2. Agent Interaction Engine\n```typescript\n// packages/cli/src/scenarios/agent-interaction.ts\nexport class AgentInteractionEngine {\n  constructor(private runtime: IAgentRuntime) {}\n\n  async interactWithAgent(input: string, context?: AgentContext): Promise<AgentResponse> {\n    // Create message for agent\n    const message: Memory = {\n      entityId: context?.user_id || 'scenario-user',\n      roomId: context?.room_id || 'scenario-room',\n      content: {\n        type: 'text',\n        text: input,\n      },\n      metadata: {\n        type: 'message',\n        conversationId: context?.conversation_id,\n      },\n    };\n\n    // Send to agent and capture response\n    const startTime = Date.now();\n    const response = await this.runtime.processMessage(message);\n    const endTime = Date.now();\n\n    return {\n      text: response.text,\n      thoughts: response.thoughts,\n      actions: response.actions,\n      timing: {\n        startTime,\n        endTime,\n        duration: endTime - startTime,\n      },\n      context: {\n        conversationId: context?.conversation_id,\n        messageId: message.id,\n      },\n    };\n  }\n}\n```\n\n### 3. Enhanced Execution Result\n```typescript\n// packages/cli/src/scenarios/providers.ts\nexport interface ExecutionResult {\n  exitCode: number;\n  stdout: string;\n  stderr: string;\n  files: Record<string, string>;\n  // New: Agent interaction results\n  agentResponse?: AgentResponse;\n  conversationHistory?: AgentResponse[];\n}\n```\n\n## Test Scenario\n\nCreate `agent-interaction-test.scenario.yaml`:\n```yaml\nname: \"Agent Interaction Test\"\ndescription: \"Tests natural language interaction with agents\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Implement Dark Mode\"\n          number: 123\n          state: \"open\"\n          labels: [\"feature\", \"ui\"]\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"2.5\"\n\nrun:\n  - name: \"Ask agent about roadmap\"\n    input: \"What new features are you planning to add?\"\n    agent_context:\n      conversation_id: \"roadmap-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify agent searched for issues\"\n      \n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n        description: \"Verify agent mentioned the mocked issue\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent provide a helpful and coherent response about new features?\"\n        expected: \"yes\"\n        description: \"Verify agent response quality\"\n\n  - name: \"Ask agent about wallet\"\n    input: \"What's my current wallet balance?\"\n    agent_context:\n      conversation_id: \"wallet-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify agent checked wallet balance\"\n      \n      - type: \"string_contains\"\n        value: \"2.5 ETH\"\n        description: \"Verify agent reported the correct balance\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent clearly explain the wallet balance information?\"\n        expected: \"yes\"\n\n  - name: \"Multi-turn conversation\"\n    input: \"Can you help me with both my wallet and roadmap?\"\n    agent_context:\n      conversation_id: \"multi-turn-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"ETH\"\n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent address both wallet and roadmap questions comprehensively?\"\n        expected: \"yes\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Single Turn**: Test basic agent interaction and response\n2. **Multi-turn**: Test conversation context across steps\n3. **Action Tracking**: Verify agent uses appropriate actions\n4. **Response Quality**: Test LLM judge evaluation of responses\n5. **Performance**: Test response timing and metrics\n6. **Error Handling**: Test agent behavior with invalid inputs\n\n## Dependencies\n\n- Requires plugin system integration (Ticket 1)\n- Builds on advanced mocking system (Ticket 2)\n- Integrates with existing evaluation engine\n- Depends on agent runtime message processing",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement natural language agent interaction and response validation",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5727,
                "node_id": "I_kwDOMT5cIs7Eng6F",
                "assignee": null,
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5727",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:49:34Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/labels{/name}",
                "updated_at": "2025-08-07T05:35:40Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3298691383,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726",
                "body": "# feat(scenarios): Implement conditional mocking and complex response structures\n\n## Description\n\nThis ticket enhances the mocking system to support conditional responses based on input parameters and complex response structures with metadata. This enables realistic testing of service interactions like GitHub API calls or EVM transactions with proper request/response matching.\n\n## Acceptance Criteria\n\n1. Mock definitions support `when` clauses for conditional responses\n2. `when` clauses can match on method arguments, input parameters, or request context\n3. Mock responses support complex nested structures with metadata (timestamps, IDs, etc.)\n4. Multiple mock responses can be defined for the same service/method with different conditions\n5. Mock system provides clear logging of which mock was triggered and why\n6. Mock responses can include realistic error conditions and edge cases\n7. Support for dynamic response generation based on input parameters\n8. Mock validation ensures `when` clauses are syntactically correct\n\n## Technical Approach\n\n### 1. Enhanced Mock Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst MockSchema = z.object({\n  service: z.string(),\n  method: z.string(),\n  when: z.object({\n    // Match on method arguments\n    args: z.array(z.any()).optional(),\n    // Match on specific argument values\n    input: z.record(z.any()).optional(),\n    // Match on request context\n    context: z.record(z.any()).optional(),\n    // Custom matching function\n    matcher: z.string().optional(), // JavaScript expression\n  }).optional(),\n  response: z.any(), // Can be function or static value\n  // For dynamic responses\n  responseFn: z.string().optional(), // JavaScript function\n  // Error simulation\n  error: z.object({\n    code: z.string(),\n    message: z.string(),\n  }).optional(),\n});\n```\n\n### 2. Mock Engine Implementation\n```typescript\n// packages/cli/src/scenarios/mock-engine.ts\nexport class MockEngine {\n  private mocks: MockDefinition[] = [];\n\n  addMock(mock: MockDefinition) {\n    this.mocks.push(mock);\n  }\n\n  async findMock(service: string, method: string, args: any[]): Promise<any> {\n    const candidates = this.mocks.filter(m => \n      m.service === service && m.method === method\n    );\n\n    for (const mock of candidates) {\n      if (await this.matchesCondition(mock, args)) {\n        this.logger.info(`Mock triggered: ${service}.${method} with condition: ${JSON.stringify(mock.when)}`);\n        return this.generateResponse(mock, args);\n      }\n    }\n\n    return null; // No mock found\n  }\n\n  private async matchesCondition(mock: MockDefinition, args: any[]): Promise<boolean> {\n    if (!mock.when) return true; // Default mock\n\n    // Match on arguments\n    if (mock.when.args) {\n      if (!this.deepEqual(args, mock.when.args)) return false;\n    }\n\n    // Match on input parameters\n    if (mock.when.input) {\n      const input = this.extractInputFromArgs(args);\n      if (!this.deepEqual(input, mock.when.input)) return false;\n    }\n\n    // Custom matcher function\n    if (mock.when.matcher) {\n      const matcherFn = new Function('args', 'input', mock.when.matcher);\n      return matcherFn(args, this.extractInputFromArgs(args));\n    }\n\n    return true;\n  }\n\n  private generateResponse(mock: MockDefinition, args: any[]): any {\n    if (mock.error) {\n      throw new Error(`${mock.error.code}: ${mock.error.message}`);\n    }\n\n    if (mock.responseFn) {\n      const responseFn = new Function('args', 'input', mock.responseFn);\n      return responseFn(args, this.extractInputFromArgs(args));\n    }\n\n    return mock.response;\n  }\n}\n```\n\n## Test Scenario\n\nCreate `advanced-mocking-test.scenario.yaml`:\n```yaml\nname: \"Advanced Mocking Test\"\ndescription: \"Tests conditional mocking and complex response structures\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    # Conditional GitHub issue search\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"bug\"\n        matcher: \"input.labels.includes('bug')\"\n      response:\n        - title: \"Critical Bug Found\"\n          number: 456\n          state: \"open\"\n          labels: [\"bug\", \"critical\"]\n          created_at: \"2024-07-15T10:00:00Z\"\n\n    # Conditional GitHub issue search - different response\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"feature\"\n        matcher: \"input.labels.includes('feature')\"\n      response:\n        - title: \"New Feature Request\"\n          number: 789\n          state: \"open\"\n          labels: [\"feature\", \"enhancement\"]\n          created_at: \"2024-07-15T11:00:00Z\"\n\n    # Dynamic EVM balance response\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      when:\n        args: [\"0x1234567890abcdef\"]\n      responseFn: |\n        return {\n          chain: \"ethereum\",\n          address: args[0],\n          balances: [\n            { symbol: \"ETH\", amount: \"1.23\" },\n            { symbol: \"USDC\", amount: \"1000.00\" }\n          ],\n          last_updated: new Date().toISOString()\n        }\n\n    # Error simulation\n    - service: \"github-service\"\n      method: \"readFile\"\n      when:\n        input:\n          path: \"/docs/nonexistent.md\"\n      error:\n        code: \"FILE_NOT_FOUND\"\n        message: \"File does not exist\"\n\nrun:\n  - name: \"Test conditional GitHub search\"\n    input: \"Search for issues with bug label\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"Critical Bug Found\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent correctly search for bug issues?\"\n        expected: \"yes\"\n\n  - name: \"Test dynamic EVM response\"\n    input: \"What's the balance for address 0x1234567890abcdef?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n      - type: \"string_contains\"\n        value: \"1000.00 USDC\"\n\n  - name: \"Test error handling\"\n    input: \"Read the file /docs/nonexistent.md\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.readFile\"\n      - type: \"string_contains\"\n        value: \"File does not exist\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Conditional Matching**: Test different responses based on input parameters\n2. **Dynamic Responses**: Test response generation based on arguments\n3. **Error Simulation**: Test error handling and reporting\n4. **Complex Structures**: Test nested response objects with metadata\n5. **Multiple Mocks**: Test multiple mocks for same service/method\n6. **Logging**: Verify mock selection is logged clearly\n\n## Dependencies\n\n- Builds on existing mock system in scenarios\n- Requires plugin system integration (Ticket 1)\n- Integrates with agent interaction testing (Ticket 3) ",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement conditional mocking and complex response structures",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5726,
                "node_id": "I_kwDOMT5cIs7Engk3",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5726",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:49:00Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/labels{/name}",
                "updated_at": "2025-08-07T05:32:53Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3298689704,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725",
                "body": "# feat(scenarios): Implement plugin specification and dynamic loading\n\n## Description\n\nThis ticket implements plugin specification in scenario YAML files, allowing scenarios to declare which plugins are required for testing. This enables testing of agent behaviors that depend on specific plugins like `@elizaos/plugin-github` or `@elizaos/plugin-evm`. The system will dynamically load specified plugins during scenario execution and make their actions, providers, and services available to the agent.\n\n## Acceptance Criteria\n\n1. Scenario YAML supports a `plugins` array at the root level with string plugin names\n2. The `initializeAgent()` function respects scenario plugin specifications and loads them via `startAgent()`\n3. Plugin loading follows the same dependency resolution and error handling as the main CLI\n4. Scenarios can specify both string plugin names (`@elizaos/plugin-github`) and direct plugin objects\n5. Plugin loading errors are clearly reported with actionable guidance\n6. Default plugins (bootstrap, sql) are automatically included unless explicitly excluded via `exclude_defaults: true`\n7. Plugin conflicts are detected and reported during scenario validation\n8. Plugin initialization errors don't crash the scenario but are reported in results\n\n## Technical Approach\n\n### 1. Update Scenario Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst ScenarioSchema = z.object({\n  name: z.string(),\n  description: z.string(),\n  plugins: z.array(z.string()).optional(), // e.g., [\"@elizaos/plugin-github\"]\n  exclude_defaults: z.boolean().optional(), // exclude bootstrap/sql\n  environment: EnvironmentSchema,\n  setup: SetupSchema.optional(),\n  run: z.array(RunStepSchema),\n  judgment: JudgmentSchema,\n});\n```\n\n### 2. Enhance Runtime Factory\n```typescript\n// packages/cli/src/scenarios/runtime-factory.ts\nexport async function initializeAgent(scenario: Scenario): Promise<IAgentRuntime> {\n  const character: Character = {\n    name: 'scenario-runner',\n    id: stringToUuid('scenario-runner'),\n    bio: 'A minimal character for running scenarios',\n    plugins: scenario.plugins || []\n  };\n\n  // Load default plugins unless excluded\n  if (!scenario.exclude_defaults) {\n    character.plugins.push('@elizaos/plugin-bootstrap', '@elizaos/plugin-sql');\n  }\n\n  const runtime = await startAgent(\n    encryptedCharacter(character),\n    server,\n    undefined,\n    character.plugins,\n    { isTestMode: true }\n  );\n\n  return runtime;\n}\n```\n\n### 3. Plugin Validation\n```typescript\n// packages/cli/src/scenarios/plugin-validator.ts\nexport async function validateScenarioPlugins(scenario: Scenario): Promise<ValidationResult[]> {\n  const results: ValidationResult[] = [];\n  \n  for (const pluginName of scenario.plugins || []) {\n    try {\n      const plugin = await loadAndPreparePlugin(pluginName);\n      if (!plugin) {\n        results.push({\n          type: 'error',\n          message: `Plugin '${pluginName}' could not be loaded`,\n          suggestion: 'Check if plugin is installed or built correctly'\n        });\n      }\n    } catch (error) {\n      results.push({\n        type: 'error', \n        message: `Failed to validate plugin '${pluginName}': ${error.message}`,\n        suggestion: 'Verify plugin dependencies and configuration'\n      });\n    }\n  }\n  \n  return results;\n}\n```\n\n## Test Scenario\n\nCreate `plugin-integration-test.scenario.yaml`:\n```yaml\nname: \"Plugin Integration Test\"\ndescription: \"Tests loading and using plugins specified in scenario YAML\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Test Issue\"\n          number: 123\n          state: \"open\"\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"1.23\"\n\nrun:\n  - name: \"Test GitHub plugin actions\"\n    input: \"Search for issues with label 'bug'\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify GitHub plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"Test Issue\"\n        description: \"Verify agent found the mocked issue\"\n\n  - name: \"Test EVM plugin actions\"\n    input: \"What's my wallet balance?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify EVM plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n        description: \"Verify agent reported the mocked balance\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Plugin Loading Test**: Verify plugins load without errors\n2. **Action Availability Test**: Confirm agent can use plugin actions\n3. **Error Handling Test**: Test with non-existent plugin\n4. **Default Plugin Test**: Verify bootstrap/sql are included by default\n5. **Exclusion Test**: Test `exclude_defaults: true` behavior\n\n## Dependencies\n\n- Fixes the `startAgent` hanging issue (#5719) to enable plugin testing\n- Builds on existing `loadAndPreparePlugin` functionality\n- Integrates with current scenario execution flow ",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement plugin specification and dynamic loading",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5725,
                "node_id": "I_kwDOMT5cIs7EngKo",
                "assignee": null,
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5725",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:48:08Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/labels{/name}",
                "updated_at": "2025-08-07T05:37:32Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              }
            ]
          },
          "issues": [
            {
              "id": 3310285907,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754",
              "body": "## Issue Summary\nThe `elizaos publish --npm` command reports successful publishing but the plugin is not actually published to npm, despite showing success messages. The npm publish is failing with a 404 error, but the ElizaOS CLI incorrectly reports success.\n\n## Key Problems Identified\n\n### 1. Critical NPM Publishing Failure\n- **Error**: `npm error 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found`\n- **Issue**: The package scope `@elizaos` doesn't exist on npm, preventing publishing\n- **Impact**: Package cannot be published to npm, but CLI reports success\n\n### 2. False Success Reporting\n- **Issue**: CLI reports `[‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm`\n- **Reality**: npm publish failed with 404 error\n- **Impact**: Developers believe their plugin is published when it's not\n\n### 3. Registry Repository Mismatch\n- **Expected**: Should create PR against `https://github.com/elizaos-plugins/registry`\n- **Actual**: Still references old registry `https://github.com/elizaos/registry`\n- **Impact**: Plugin won't appear in the official ElizaOS registry\n\n## Steps to Reproduce\n\n```bash\n# Navigate to the plugin directory\ncd packages/plugin-polygon\n\n# Ensure you're on the correct branch with the changes\ngit checkout polygon\n\n# Run the publish command\nelizaos publish --npm\n\n# Verify the success message appears\n# [‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm\n\n# Check if package actually exists on npm\nnpm view @elizaos/plugin-polygon@1.0.0\n# Result: 404 Not Found - '@elizaos/plugin-polygon@1.0.0' is not in this registry\n```\n\n## Technical Details\n\n### NPM Error Analysis\nThe npm logs show the root cause:\n```\nhttp fetch PUT 404 https://registry.npmjs.org/@elizaos%2fplugin-polygon 507ms\nerror 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found\n```\n\nThis indicates that the `@elizaos` scope doesn't exist on npm, which is required for publishing scoped packages.\n\n### CLI Error Handling Failure\nThe ElizaOS CLI is not properly parsing npm error codes:\n- npm returns exit code 1 (failure)\n- CLI ignores the error and reports success\n- No validation that the package actually exists on npm\n\n## Expected Behavior\n1. CLI should detect npm publish failures (exit code 1)\n2. CLI should fail with clear error message when package scope doesn't exist\n3. CLI should validate that package actually exists on npm after publishing\n4. CLI should create PRs against the correct registry repository\n\n## Recommended Fixes\n\n### 1. Fix NPM Error Detection\n```typescript\n// In the publish command, check npm exit code\nconst npmResult = await exec('npm publish', { cwd: pluginDir });\nif (npmResult.exitCode !== 0) {\n  throw new Error(`NPM publish failed: ${npmResult.stderr}`);\n}\n```\n\n### 2. Add Package Scope Validation\n```typescript\n// Before publishing, check if scope exists\nconst scopeExists = await checkNpmScope('@elizaos');\nif (!scopeExists) {\n  throw new Error('Package scope @elizaos does not exist on npm. Contact npm support to create the scope.');\n}\n```\n\n### 3. Add Post-Publish Validation\n```typescript\n// After publishing, verify package exists\nconst packageExists = await checkPackageExists(packageName, version);\nif (!packageExists) {\n  throw new Error(`Package was not published successfully. Check npm logs for details.`);\n}\n```\n\n## Priority\n**Critical** - This completely blocks plugin publishing and creates false success reports.\n\n## Affected Components\n- `packages/cli/src/commands/publish.ts`\n- NPM publishing logic\n- Error handling and success reporting\n- Package scope validation\n- Registry repository configuration\n\n## Immediate Action Required\n1. **Create the `@elizaos` scope on npm** or use an existing scope\n2. Update CLI to properly detect and handle npm publish failures\n3. Add post-publish validation to ensure packages actually exist on npm\n4. Update registry repository configuration\n\n## Alternative Solutions\n1. **Use existing scope**: Change package name to `@monilpat/plugin-polygon`\n2. **Create organization scope**: Set up `@elizaos` organization on npm\n3. **Use unscoped package**: Publish as `elizaos-plugin-polygon`\n\nThis issue is critically blocking plugin developers from successfully publishing their work and needs immediate attention from the ElizaOS team.\n",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "Critical: Plugin Publishing Fails with False Success Reports",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5754,
              "node_id": "I_kwDOMT5cIs7FTvRT",
              "assignee": null,
              "comments": 0,
              "html_url": "https://github.com/elizaOS/eliza/issues/5754",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-11T14:20:08Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/labels{/name}",
              "updated_at": "2025-08-11T14:20:08Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3308102900,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749",
              "body": "### Problem Statement\nCurrently, ElizaOS scenario testing lacks the ability to mock internal agent runtime calls (particularly LLM interactions) when testing via the API client. This makes it difficult to create deterministic tests for agent behavior and workflows.\n\n### Current Limitations\n- Global function mocks only work for code executed in the same process\n- No way to intercept `runtime.useModel` calls from the bootstrap plugin\n- Agent behavior is non-deterministic due to real LLM calls\n- Difficult to test specific agent decision paths and responses\n\n### Why Different Approach Was Needed\n\nThe existing mocking system was designed for **code execution environments** (E2B sandbox and local `node -e` processes), where mocks are applied to the execution context. However, **agent testing** works differently:\n\n- **E2B/Local Execution**: Code runs in isolated processes/sandboxes where global mocks can be applied\n- **Agent Testing**: Agent runs as a service with API client interaction, requiring direct runtime method interception\n- **Architecture Gap**: The bootstrap plugin calls `runtime.useModel` internally, which can't be mocked through the execution environment approach\n\nThis architectural difference necessitated a new approach that directly intercepts runtime methods rather than relying on execution context mocking.\n\n### Proposed Solution: Runtime Method Mocking\n\nWe've implemented a new mocking approach that directly intercepts `IAgentRuntime` method calls:\n\n#### Key Components\n\n1. **MockEngine Enhancement**\n   - Added `runtimeMethodMocks` to support mocking runtime methods\n   - Priority system: `runtimeMethod` > `service` > `globalFunction`\n   - Direct method replacement on the runtime instance\n\n2. **Schema Updates**\n   - Extended `MockSchema` to include `runtimeMethod: z.string().optional()`\n   - Supports mocking any `IAgentRuntime` method (e.g., `useModel`, `getService`)\n\n3. **Conditional Matching**\n   - Matcher functions can inspect method arguments\n   - Example: `\"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"`\n   - Supports complex conditional logic for when to apply mocks\n\n#### Usage Example\n\n```yaml\nsetup:\n  mocks:\n    - runtimeMethod: \"useModel\"\n      method: \"useModel\"\n      when:\n        matcher: \"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"\n      response: \"<response><name>agent</name><reasoning>Mocked response</reasoning><action>RESPOND</action></response>\"\n```\n\n#### Benefits\n\n1. **Deterministic Testing**: Replace LLM calls with static responses\n2. **Full Workflow Testing**: Test complete agent decision flows\n3. **Conditional Mocking**: Apply mocks based on specific conditions\n4. **Runtime Integration**: Works seamlessly with existing agent architecture\n5. **Backward Compatibility**: Existing mocks continue to work\n\n#### Implementation Steps\n\n- MockEngine runtime method support\n- Schema updates for runtimeMethod mocks\n- Conditional matching with matcher functions\n- Integration with scenario runner\n- Basic useModel mocking working\n- Add support for mocking other runtime methods (getService, etc.)\n- Create comprehensive test scenarios\n- Add documentation and examples\n- Consider adding mock recording/replay capabilities\n\n### Technical Details\n\nThe implementation works by:\n1. Creating the `IAgentRuntime` instance in the scenario runner\n2. Applying mocks directly to the runtime object before agent initialization\n3. The bootstrap plugin receives the mocked runtime and uses the mocked methods\n4. Mocks are reverted after scenario completion\n\nThis approach provides the foundation for robust, deterministic agent testing while maintaining the existing architecture.",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "Implement Runtime Method Mocking for Deterministic Agent Testing",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 7668252177,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/testing",
                  "name": "testing",
                  "color": "2D3957",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAAByRA-EQ",
                  "description": ""
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5749,
              "node_id": "I_kwDOMT5cIs7FLaT0",
              "assignee": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "comments": 0,
              "html_url": "https://github.com/elizaOS/eliza/issues/5749",
              "assignees": [
                {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-11T00:08:49Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/labels{/name}",
              "updated_at": "2025-08-11T00:09:37Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3304516859,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747",
              "body": null,
              "type": null,
              "user": {
                "id": 48334430,
                "url": "https://api.github.com/users/samarth30",
                "type": "User",
                "login": "samarth30",
                "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                "html_url": "https://github.com/samarth30",
                "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/samarth30/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/samarth30/followers",
                "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/samarth30/orgs",
                "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                "received_events_url": "https://api.github.com/users/samarth30/received_events"
              },
              "state": "open",
              "title": "Fixing bugs in eliza-cloud",
              "labels": [],
              "locked": false,
              "number": 5747,
              "node_id": "I_kwDOMT5cIs7E9uz7",
              "assignee": {
                "id": 48334430,
                "url": "https://api.github.com/users/samarth30",
                "type": "User",
                "login": "samarth30",
                "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                "html_url": "https://github.com/samarth30",
                "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/samarth30/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/samarth30/followers",
                "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/samarth30/orgs",
                "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                "received_events_url": "https://api.github.com/users/samarth30/received_events"
              },
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5747",
              "assignees": [
                {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-08T16:01:56Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/labels{/name}",
              "updated_at": "2025-08-08T19:02:49Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "MEMBER",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": {
                "id": 20150,
                "name": "Linear",
                "slug": "linear",
                "owner": {
                  "id": 46686594,
                  "url": "https://api.github.com/users/linear",
                  "type": "Organization",
                  "login": "linear",
                  "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ2Njg2NTk0",
                  "html_url": "https://github.com/linear",
                  "gists_url": "https://api.github.com/users/linear/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/linear/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/46686594?v=4",
                  "events_url": "https://api.github.com/users/linear/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/linear/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/linear/followers",
                  "following_url": "https://api.github.com/users/linear/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/linear/orgs",
                  "subscriptions_url": "https://api.github.com/users/linear/subscriptions",
                  "received_events_url": "https://api.github.com/users/linear/received_events"
                },
                "events": [
                  "check_suite",
                  "issues",
                  "issue_comment",
                  "pull_request",
                  "pull_request_review",
                  "repository",
                  "sub_issues"
                ],
                "node_id": "MDM6QXBwMjAxNTA=",
                "html_url": "https://github.com/apps/linear",
                "client_id": "Iv1.085d682ea245c945",
                "created_at": "2018-11-02T18:07:23Z",
                "updated_at": "2025-02-07T14:59:56Z",
                "description": "",
                "permissions": {
                  "checks": "read",
                  "issues": "write",
                  "metadata": "read",
                  "pull_requests": "write"
                },
                "external_url": "https://linear.app"
              }
            },
            {
              "id": 3302237103,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738",
              "body": "## Description\n\nThe `bun run clean` command is failing due to TypeScript errors in `@elizaos/core` package during the DTS (type definition) build phase.\n\n## Error Details\n\n### Build Process\n```\n‚Ä¢ Running build in 17 packages\n‚Ä¢ Remote caching disabled\n@elizaos/config:build: cache miss\n@elizaos/autodoc:build: cache miss\n@elizaos/core:build: cache miss\n```\n\n### TypeScript Errors in @elizaos/core/src/utils.ts\n1. Line 218: `error TS2345: Argument of type '`${string}-${string}-${string}-${string}-${string}`' is not assignable to parameter of type 'never'.`\n2. Line 366: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n3. Line 409: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n4. Line 536: `error TS2345: Argument of type '{ numberOfChunks: number; averageChunkSize: number; }' is not assignable to parameter of type 'never'.`\n\n### Impact\n- Blocks `bun run clean` command\n- Prevents successful build of `@elizaos/core`\n- Affects dependent packages in the monorepo\n\n## Steps to Reproduce\n1. Run `bun run clean`\n2. Observe build failure in `@elizaos/core`\n3. Build fails with TypeScript errors during DTS generation\n\n## Expected Behavior\n- `bun run clean` should complete successfully\n- `@elizaos/core` should build without TypeScript errors\n- Type definitions should be generated correctly\n\n## Suggested Fix\n\nThe errors suggest type mismatches in `utils.ts`. Need to:\n1. Review type definitions in affected lines\n2. Update type assertions or generic constraints\n3. Ensure string template literal types are properly handled\n4. Fix object type assignments\n\n### Files to Update\n- `packages/core/src/utils.ts`\n\n## Priority\n**HIGH** - This is blocking clean builds and potentially affecting development workflow.",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "üêõ Build failure in @elizaos/core causing bun run clean to fail",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5738,
              "node_id": "I_kwDOMT5cIs7E1COv",
              "assignee": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5738",
              "assignees": [
                {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-08T00:26:11Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/labels{/name}",
              "updated_at": "2025-08-11T14:56:01Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3301116813,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734",
              "body": "**Describe the bug**\n\nOn project creation, ElizaOS CLI fails with the following error:\n```\n‚óá  Failed to build project\nstdout: src/index.ts(7,25): error TS2345: Argument of type 'string' is not assignable to parameter of type 'undefined'.\nstderr: $ tsc --noEmit && vite build && tsup\n```\n\n**To Reproduce**\n\n- Install ElizaOS through `bun`\n```\nbun i -g @elizaos/cli\n```\n- Create new ElizaOS project\n```\nelizaos create abcde\n```\n\n**Expected behavior**\n\nProject built successfully\n\n**Screenshots**\n\n<img width=\"1095\" height=\"572\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/967dd6a2-0d70-4e2e-8019-85a2eab5f225\" />\n\n**Additional context**\n\nElizaOS CLI version: `1.3.2`\n",
              "type": null,
              "user": {
                "id": 74447600,
                "url": "https://api.github.com/users/Kemystra",
                "type": "User",
                "login": "Kemystra",
                "node_id": "MDQ6VXNlcjc0NDQ3NjAw",
                "html_url": "https://github.com/Kemystra",
                "gists_url": "https://api.github.com/users/Kemystra/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/Kemystra/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/74447600?v=4",
                "events_url": "https://api.github.com/users/Kemystra/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/Kemystra/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/Kemystra/followers",
                "following_url": "https://api.github.com/users/Kemystra/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/Kemystra/orgs",
                "subscriptions_url": "https://api.github.com/users/Kemystra/subscriptions",
                "received_events_url": "https://api.github.com/users/Kemystra/received_events"
              },
              "state": "open",
              "title": "Eliza CLI failed to build project",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5734,
              "node_id": "I_kwDOMT5cIs7EwwuN",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5734",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T16:14:00Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/labels{/name}",
              "updated_at": "2025-08-08T19:43:52Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "NONE",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3299481897,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729",
              "body": "# Relates to\r\n\r\nN/A (Documentation improvement, not tied to a specific issue or ticket)\r\n\r\n# Risks\r\n\r\nLow.  \r\nThis change only updates documentation and does not affect any code or functionality.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR updates the elizaos README to include a fix for installation errors that may occur due to permission issues. It adds a note suggesting the use of sudo if users encounter a \"Permission denied\" or \"InstallFailed\" error when running the `elizaos create my-agent` command.\r\n\r\n## What kind of change is this?\r\n\r\nImprovements (misc. changes to existing features)  \r\nDocumentation update\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes require a change to the project documentation.  \r\nI have updated the documentation accordingly.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\nStart by reviewing the changes in the README.md file, specifically the section on creating a new project.\r\n\r\n## Detailed testing steps\r\n\r\n- Open the updated README.md.\r\n- Review the new instructions under \"Create Your First Project.\"\r\n- Confirm that the added note about using `sudo` is clear and helpful for users who encounter permission errors.",
              "type": null,
              "user": {
                "id": 32749185,
                "url": "https://api.github.com/users/mandatedisrael",
                "type": "User",
                "login": "mandatedisrael",
                "node_id": "MDQ6VXNlcjMyNzQ5MTg1",
                "html_url": "https://github.com/mandatedisrael",
                "gists_url": "https://api.github.com/users/mandatedisrael/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/mandatedisrael/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/32749185?v=4",
                "events_url": "https://api.github.com/users/mandatedisrael/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/mandatedisrael/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/mandatedisrael/followers",
                "following_url": "https://api.github.com/users/mandatedisrael/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/mandatedisrael/orgs",
                "subscriptions_url": "https://api.github.com/users/mandatedisrael/subscriptions",
                "received_events_url": "https://api.github.com/users/mandatedisrael/received_events"
              },
              "draft": false,
              "state": "open",
              "title": "Update README.md to fix error",
              "labels": [],
              "locked": false,
              "number": 5729,
              "node_id": "PR_kwDOMT5cIs6iiNWN",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/pull/5729",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T08:10:12Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/labels{/name}",
              "updated_at": "2025-08-07T08:10:24Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/comments",
              "pull_request": {
                "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5729",
                "diff_url": "https://github.com/elizaOS/eliza/pull/5729.diff",
                "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                "merged_at": null,
                "patch_url": "https://github.com/elizaOS/eliza/pull/5729.patch"
              },
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "FIRST_TIME_CONTRIBUTOR",
              "performed_via_github_app": null
            },
            {
              "id": 3299322983,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728",
              "body": "# Background\r\n\r\n## What does this PR do?\r\n\r\nIntroduce entity for cancelling runs `CancelRunSignal`\r\n\r\n## Why are we doing this? Any context or related work?\r\n\r\n- Calls to LLMs usually cost some credits\r\n- When we receive the `RUN_STARTED` event we can check current entity and end run to prevent credits spending\r\n\r\n# Documentation changes needed?\r\n\r\n## Methods\r\n\r\n- `static getSignal(runId: UUID)` - get signal by runId or create if null\r\n- `static clear(runId: UUID)` - clear signal from map\r\n- `cancel(content?: Content)` - cancel current run and and send `content` as a response to user\r\n\r\n## Example\r\n\r\n```typescript\r\nimport { Content, EventType, Plugin } from \"@elizaos/core\";\r\nimport { CancelRunSignal } from \"@elizaos/plugin-bootstrap\";\r\n\r\n// consider we have a service to determine eligibility for entity\r\ninterface EligibilityService {\r\n  check(entityId: UUID): Promise<{ result: boolean, reason?: Content }>\r\n}\r\n\r\nconst plugin: Plugin = {\r\n...\r\n  events: {\r\n    [EventType.RUN_STARTED]: ({ entityId, runId, runtime }) => {\r\n      const service = runtime.getService<EligibilityService>(\"USER_MANAGEMENT\");\r\n      const { result, reason } = await service.check(entityId);\r\n      \r\n      if (!result) {\r\n        const signal = CancelRunSignal.getSignal(runId);\r\n        signal.cancel(reason);\r\n      }\r\n    },\r\n    ...\r\n  },\r\n  ...\r\n}\r\n\r\nexport default Plugin;\r\n```\r\n\r\n## Discord username\r\n\r\nalexd000\r\n\r\n",
              "type": null,
              "user": {
                "id": 82507604,
                "url": "https://api.github.com/users/alex-nax",
                "type": "User",
                "login": "alex-nax",
                "node_id": "MDQ6VXNlcjgyNTA3NjA0",
                "html_url": "https://github.com/alex-nax",
                "gists_url": "https://api.github.com/users/alex-nax/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/alex-nax/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/82507604?v=4",
                "events_url": "https://api.github.com/users/alex-nax/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/alex-nax/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/alex-nax/followers",
                "following_url": "https://api.github.com/users/alex-nax/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/alex-nax/orgs",
                "subscriptions_url": "https://api.github.com/users/alex-nax/subscriptions",
                "received_events_url": "https://api.github.com/users/alex-nax/received_events"
              },
              "draft": false,
              "state": "open",
              "title": "feat: ability to cancel current run before any calls to LLM are made",
              "labels": [],
              "locked": false,
              "number": 5728,
              "node_id": "PR_kwDOMT5cIs6ihriD",
              "assignee": null,
              "comments": 3,
              "html_url": "https://github.com/elizaOS/eliza/pull/5728",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T07:19:35Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/labels{/name}",
              "updated_at": "2025-08-07T07:22:05Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/comments",
              "pull_request": {
                "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5728",
                "diff_url": "https://github.com/elizaOS/eliza/pull/5728.diff",
                "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                "merged_at": null,
                "patch_url": "https://github.com/elizaOS/eliza/pull/5728.patch"
              },
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "FIRST_TIME_CONTRIBUTOR",
              "performed_via_github_app": null
            },
            {
              "id": 3298692741,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727",
              "body": "# feat(scenarios): Implement natural language agent interaction and response validation\n\n## Description\n\nThis ticket enables scenarios to test agent behavior through natural language interactions rather than direct code execution. This allows testing of agent reasoning, decision-making, and response generation in realistic conversation contexts with proper evaluation of agent responses.\n\n## Acceptance Criteria\n\n1. Scenario `run` blocks support `input` field for natural language prompts to agents\n2. Agent responses are captured and available for evaluation (text, thoughts, actions)\n3. Evaluators can access both agent response text and execution context\n4. Support for multi-turn conversations in scenarios\n5. Agent responses include thought process and action decisions\n6. Integration with existing evaluation engine for response validation\n7. Support for conversation context across multiple steps\n8. Agent response timing and performance metrics\n\n## Technical Approach\n\n### 1. Enhanced Run Step Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst RunStepSchema = z.object({\n  name: z.string().optional(),\n  // Natural language input to agent\n  input: z.string().optional(),\n  // Direct code execution (existing)\n  lang: z.string().optional(),\n  code: z.string().optional(),\n  // Agent interaction specific\n  agent_context: z.object({\n    conversation_id: z.string().optional(),\n    user_id: z.string().optional(),\n    room_id: z.string().optional(),\n  }).optional(),\n  evaluations: z.array(EvaluationSchema),\n});\n```\n\n### 2. Agent Interaction Engine\n```typescript\n// packages/cli/src/scenarios/agent-interaction.ts\nexport class AgentInteractionEngine {\n  constructor(private runtime: IAgentRuntime) {}\n\n  async interactWithAgent(input: string, context?: AgentContext): Promise<AgentResponse> {\n    // Create message for agent\n    const message: Memory = {\n      entityId: context?.user_id || 'scenario-user',\n      roomId: context?.room_id || 'scenario-room',\n      content: {\n        type: 'text',\n        text: input,\n      },\n      metadata: {\n        type: 'message',\n        conversationId: context?.conversation_id,\n      },\n    };\n\n    // Send to agent and capture response\n    const startTime = Date.now();\n    const response = await this.runtime.processMessage(message);\n    const endTime = Date.now();\n\n    return {\n      text: response.text,\n      thoughts: response.thoughts,\n      actions: response.actions,\n      timing: {\n        startTime,\n        endTime,\n        duration: endTime - startTime,\n      },\n      context: {\n        conversationId: context?.conversation_id,\n        messageId: message.id,\n      },\n    };\n  }\n}\n```\n\n### 3. Enhanced Execution Result\n```typescript\n// packages/cli/src/scenarios/providers.ts\nexport interface ExecutionResult {\n  exitCode: number;\n  stdout: string;\n  stderr: string;\n  files: Record<string, string>;\n  // New: Agent interaction results\n  agentResponse?: AgentResponse;\n  conversationHistory?: AgentResponse[];\n}\n```\n\n## Test Scenario\n\nCreate `agent-interaction-test.scenario.yaml`:\n```yaml\nname: \"Agent Interaction Test\"\ndescription: \"Tests natural language interaction with agents\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Implement Dark Mode\"\n          number: 123\n          state: \"open\"\n          labels: [\"feature\", \"ui\"]\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"2.5\"\n\nrun:\n  - name: \"Ask agent about roadmap\"\n    input: \"What new features are you planning to add?\"\n    agent_context:\n      conversation_id: \"roadmap-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify agent searched for issues\"\n      \n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n        description: \"Verify agent mentioned the mocked issue\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent provide a helpful and coherent response about new features?\"\n        expected: \"yes\"\n        description: \"Verify agent response quality\"\n\n  - name: \"Ask agent about wallet\"\n    input: \"What's my current wallet balance?\"\n    agent_context:\n      conversation_id: \"wallet-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify agent checked wallet balance\"\n      \n      - type: \"string_contains\"\n        value: \"2.5 ETH\"\n        description: \"Verify agent reported the correct balance\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent clearly explain the wallet balance information?\"\n        expected: \"yes\"\n\n  - name: \"Multi-turn conversation\"\n    input: \"Can you help me with both my wallet and roadmap?\"\n    agent_context:\n      conversation_id: \"multi-turn-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"ETH\"\n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent address both wallet and roadmap questions comprehensively?\"\n        expected: \"yes\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Single Turn**: Test basic agent interaction and response\n2. **Multi-turn**: Test conversation context across steps\n3. **Action Tracking**: Verify agent uses appropriate actions\n4. **Response Quality**: Test LLM judge evaluation of responses\n5. **Performance**: Test response timing and metrics\n6. **Error Handling**: Test agent behavior with invalid inputs\n\n## Dependencies\n\n- Requires plugin system integration (Ticket 1)\n- Builds on advanced mocking system (Ticket 2)\n- Integrates with existing evaluation engine\n- Depends on agent runtime message processing",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement natural language agent interaction and response validation",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5727,
              "node_id": "I_kwDOMT5cIs7Eng6F",
              "assignee": null,
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5727",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:49:34Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/labels{/name}",
              "updated_at": "2025-08-07T05:35:40Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3298691383,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726",
              "body": "# feat(scenarios): Implement conditional mocking and complex response structures\n\n## Description\n\nThis ticket enhances the mocking system to support conditional responses based on input parameters and complex response structures with metadata. This enables realistic testing of service interactions like GitHub API calls or EVM transactions with proper request/response matching.\n\n## Acceptance Criteria\n\n1. Mock definitions support `when` clauses for conditional responses\n2. `when` clauses can match on method arguments, input parameters, or request context\n3. Mock responses support complex nested structures with metadata (timestamps, IDs, etc.)\n4. Multiple mock responses can be defined for the same service/method with different conditions\n5. Mock system provides clear logging of which mock was triggered and why\n6. Mock responses can include realistic error conditions and edge cases\n7. Support for dynamic response generation based on input parameters\n8. Mock validation ensures `when` clauses are syntactically correct\n\n## Technical Approach\n\n### 1. Enhanced Mock Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst MockSchema = z.object({\n  service: z.string(),\n  method: z.string(),\n  when: z.object({\n    // Match on method arguments\n    args: z.array(z.any()).optional(),\n    // Match on specific argument values\n    input: z.record(z.any()).optional(),\n    // Match on request context\n    context: z.record(z.any()).optional(),\n    // Custom matching function\n    matcher: z.string().optional(), // JavaScript expression\n  }).optional(),\n  response: z.any(), // Can be function or static value\n  // For dynamic responses\n  responseFn: z.string().optional(), // JavaScript function\n  // Error simulation\n  error: z.object({\n    code: z.string(),\n    message: z.string(),\n  }).optional(),\n});\n```\n\n### 2. Mock Engine Implementation\n```typescript\n// packages/cli/src/scenarios/mock-engine.ts\nexport class MockEngine {\n  private mocks: MockDefinition[] = [];\n\n  addMock(mock: MockDefinition) {\n    this.mocks.push(mock);\n  }\n\n  async findMock(service: string, method: string, args: any[]): Promise<any> {\n    const candidates = this.mocks.filter(m => \n      m.service === service && m.method === method\n    );\n\n    for (const mock of candidates) {\n      if (await this.matchesCondition(mock, args)) {\n        this.logger.info(`Mock triggered: ${service}.${method} with condition: ${JSON.stringify(mock.when)}`);\n        return this.generateResponse(mock, args);\n      }\n    }\n\n    return null; // No mock found\n  }\n\n  private async matchesCondition(mock: MockDefinition, args: any[]): Promise<boolean> {\n    if (!mock.when) return true; // Default mock\n\n    // Match on arguments\n    if (mock.when.args) {\n      if (!this.deepEqual(args, mock.when.args)) return false;\n    }\n\n    // Match on input parameters\n    if (mock.when.input) {\n      const input = this.extractInputFromArgs(args);\n      if (!this.deepEqual(input, mock.when.input)) return false;\n    }\n\n    // Custom matcher function\n    if (mock.when.matcher) {\n      const matcherFn = new Function('args', 'input', mock.when.matcher);\n      return matcherFn(args, this.extractInputFromArgs(args));\n    }\n\n    return true;\n  }\n\n  private generateResponse(mock: MockDefinition, args: any[]): any {\n    if (mock.error) {\n      throw new Error(`${mock.error.code}: ${mock.error.message}`);\n    }\n\n    if (mock.responseFn) {\n      const responseFn = new Function('args', 'input', mock.responseFn);\n      return responseFn(args, this.extractInputFromArgs(args));\n    }\n\n    return mock.response;\n  }\n}\n```\n\n## Test Scenario\n\nCreate `advanced-mocking-test.scenario.yaml`:\n```yaml\nname: \"Advanced Mocking Test\"\ndescription: \"Tests conditional mocking and complex response structures\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    # Conditional GitHub issue search\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"bug\"\n        matcher: \"input.labels.includes('bug')\"\n      response:\n        - title: \"Critical Bug Found\"\n          number: 456\n          state: \"open\"\n          labels: [\"bug\", \"critical\"]\n          created_at: \"2024-07-15T10:00:00Z\"\n\n    # Conditional GitHub issue search - different response\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"feature\"\n        matcher: \"input.labels.includes('feature')\"\n      response:\n        - title: \"New Feature Request\"\n          number: 789\n          state: \"open\"\n          labels: [\"feature\", \"enhancement\"]\n          created_at: \"2024-07-15T11:00:00Z\"\n\n    # Dynamic EVM balance response\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      when:\n        args: [\"0x1234567890abcdef\"]\n      responseFn: |\n        return {\n          chain: \"ethereum\",\n          address: args[0],\n          balances: [\n            { symbol: \"ETH\", amount: \"1.23\" },\n            { symbol: \"USDC\", amount: \"1000.00\" }\n          ],\n          last_updated: new Date().toISOString()\n        }\n\n    # Error simulation\n    - service: \"github-service\"\n      method: \"readFile\"\n      when:\n        input:\n          path: \"/docs/nonexistent.md\"\n      error:\n        code: \"FILE_NOT_FOUND\"\n        message: \"File does not exist\"\n\nrun:\n  - name: \"Test conditional GitHub search\"\n    input: \"Search for issues with bug label\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"Critical Bug Found\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent correctly search for bug issues?\"\n        expected: \"yes\"\n\n  - name: \"Test dynamic EVM response\"\n    input: \"What's the balance for address 0x1234567890abcdef?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n      - type: \"string_contains\"\n        value: \"1000.00 USDC\"\n\n  - name: \"Test error handling\"\n    input: \"Read the file /docs/nonexistent.md\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.readFile\"\n      - type: \"string_contains\"\n        value: \"File does not exist\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Conditional Matching**: Test different responses based on input parameters\n2. **Dynamic Responses**: Test response generation based on arguments\n3. **Error Simulation**: Test error handling and reporting\n4. **Complex Structures**: Test nested response objects with metadata\n5. **Multiple Mocks**: Test multiple mocks for same service/method\n6. **Logging**: Verify mock selection is logged clearly\n\n## Dependencies\n\n- Builds on existing mock system in scenarios\n- Requires plugin system integration (Ticket 1)\n- Integrates with agent interaction testing (Ticket 3) ",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement conditional mocking and complex response structures",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5726,
              "node_id": "I_kwDOMT5cIs7Engk3",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5726",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:49:00Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/labels{/name}",
              "updated_at": "2025-08-07T05:32:53Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3298689704,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725",
              "body": "# feat(scenarios): Implement plugin specification and dynamic loading\n\n## Description\n\nThis ticket implements plugin specification in scenario YAML files, allowing scenarios to declare which plugins are required for testing. This enables testing of agent behaviors that depend on specific plugins like `@elizaos/plugin-github` or `@elizaos/plugin-evm`. The system will dynamically load specified plugins during scenario execution and make their actions, providers, and services available to the agent.\n\n## Acceptance Criteria\n\n1. Scenario YAML supports a `plugins` array at the root level with string plugin names\n2. The `initializeAgent()` function respects scenario plugin specifications and loads them via `startAgent()`\n3. Plugin loading follows the same dependency resolution and error handling as the main CLI\n4. Scenarios can specify both string plugin names (`@elizaos/plugin-github`) and direct plugin objects\n5. Plugin loading errors are clearly reported with actionable guidance\n6. Default plugins (bootstrap, sql) are automatically included unless explicitly excluded via `exclude_defaults: true`\n7. Plugin conflicts are detected and reported during scenario validation\n8. Plugin initialization errors don't crash the scenario but are reported in results\n\n## Technical Approach\n\n### 1. Update Scenario Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst ScenarioSchema = z.object({\n  name: z.string(),\n  description: z.string(),\n  plugins: z.array(z.string()).optional(), // e.g., [\"@elizaos/plugin-github\"]\n  exclude_defaults: z.boolean().optional(), // exclude bootstrap/sql\n  environment: EnvironmentSchema,\n  setup: SetupSchema.optional(),\n  run: z.array(RunStepSchema),\n  judgment: JudgmentSchema,\n});\n```\n\n### 2. Enhance Runtime Factory\n```typescript\n// packages/cli/src/scenarios/runtime-factory.ts\nexport async function initializeAgent(scenario: Scenario): Promise<IAgentRuntime> {\n  const character: Character = {\n    name: 'scenario-runner',\n    id: stringToUuid('scenario-runner'),\n    bio: 'A minimal character for running scenarios',\n    plugins: scenario.plugins || []\n  };\n\n  // Load default plugins unless excluded\n  if (!scenario.exclude_defaults) {\n    character.plugins.push('@elizaos/plugin-bootstrap', '@elizaos/plugin-sql');\n  }\n\n  const runtime = await startAgent(\n    encryptedCharacter(character),\n    server,\n    undefined,\n    character.plugins,\n    { isTestMode: true }\n  );\n\n  return runtime;\n}\n```\n\n### 3. Plugin Validation\n```typescript\n// packages/cli/src/scenarios/plugin-validator.ts\nexport async function validateScenarioPlugins(scenario: Scenario): Promise<ValidationResult[]> {\n  const results: ValidationResult[] = [];\n  \n  for (const pluginName of scenario.plugins || []) {\n    try {\n      const plugin = await loadAndPreparePlugin(pluginName);\n      if (!plugin) {\n        results.push({\n          type: 'error',\n          message: `Plugin '${pluginName}' could not be loaded`,\n          suggestion: 'Check if plugin is installed or built correctly'\n        });\n      }\n    } catch (error) {\n      results.push({\n        type: 'error', \n        message: `Failed to validate plugin '${pluginName}': ${error.message}`,\n        suggestion: 'Verify plugin dependencies and configuration'\n      });\n    }\n  }\n  \n  return results;\n}\n```\n\n## Test Scenario\n\nCreate `plugin-integration-test.scenario.yaml`:\n```yaml\nname: \"Plugin Integration Test\"\ndescription: \"Tests loading and using plugins specified in scenario YAML\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Test Issue\"\n          number: 123\n          state: \"open\"\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"1.23\"\n\nrun:\n  - name: \"Test GitHub plugin actions\"\n    input: \"Search for issues with label 'bug'\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify GitHub plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"Test Issue\"\n        description: \"Verify agent found the mocked issue\"\n\n  - name: \"Test EVM plugin actions\"\n    input: \"What's my wallet balance?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify EVM plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n        description: \"Verify agent reported the mocked balance\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Plugin Loading Test**: Verify plugins load without errors\n2. **Action Availability Test**: Confirm agent can use plugin actions\n3. **Error Handling Test**: Test with non-existent plugin\n4. **Default Plugin Test**: Verify bootstrap/sql are included by default\n5. **Exclusion Test**: Test `exclude_defaults: true` behavior\n\n## Dependencies\n\n- Fixes the `startAgent` hanging issue (#5719) to enable plugin testing\n- Builds on existing `loadAndPreparePlugin` functionality\n- Integrates with current scenario execution flow ",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement plugin specification and dynamic loading",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5725,
              "node_id": "I_kwDOMT5cIs7EngKo",
              "assignee": null,
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5725",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:48:08Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/labels{/name}",
              "updated_at": "2025-08-07T05:37:32Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            }
          ]
        },
        "text": "Open issues for elizaOS/eliza (10 shown):\n‚Ä¢ #5754: Critical: Plugin Publishing Fails with False Success Reports (open) [bug]\n‚Ä¢ #5749: Implement Runtime Method Mocking for Deterministic Agent Testing (open) [enhancement, testing, Reality Spiral]\n‚Ä¢ #5747: Fixing bugs in eliza-cloud (open)\n‚Ä¢ #5738: üêõ Build failure in @elizaos/core causing bun run clean to fail (open) [bug]\n‚Ä¢ #5734: Eliza CLI failed to build project (open) [bug]\n‚Ä¢ #5729: Update README.md to fix error (open)\n‚Ä¢ #5728: feat: ability to cancel current run before any calls to LLM are made (open)\n‚Ä¢ #5727: feat(scenarios): Implement natural language agent interaction and response validation (open) [enhancement, Reality Spiral]\n‚Ä¢ #5726: feat(scenarios): Implement conditional mocking and complex response structures (open) [enhancement, Reality Spiral]\n‚Ä¢ #5725: feat(scenarios): Implement plugin specification and dynamic loading (open) [enhancement, Reality Spiral]",
        "values": {
          "issues": [
            {
              "id": 3310285907,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754",
              "body": "## Issue Summary\nThe `elizaos publish --npm` command reports successful publishing but the plugin is not actually published to npm, despite showing success messages. The npm publish is failing with a 404 error, but the ElizaOS CLI incorrectly reports success.\n\n## Key Problems Identified\n\n### 1. Critical NPM Publishing Failure\n- **Error**: `npm error 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found`\n- **Issue**: The package scope `@elizaos` doesn't exist on npm, preventing publishing\n- **Impact**: Package cannot be published to npm, but CLI reports success\n\n### 2. False Success Reporting\n- **Issue**: CLI reports `[‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm`\n- **Reality**: npm publish failed with 404 error\n- **Impact**: Developers believe their plugin is published when it's not\n\n### 3. Registry Repository Mismatch\n- **Expected**: Should create PR against `https://github.com/elizaos-plugins/registry`\n- **Actual**: Still references old registry `https://github.com/elizaos/registry`\n- **Impact**: Plugin won't appear in the official ElizaOS registry\n\n## Steps to Reproduce\n\n```bash\n# Navigate to the plugin directory\ncd packages/plugin-polygon\n\n# Ensure you're on the correct branch with the changes\ngit checkout polygon\n\n# Run the publish command\nelizaos publish --npm\n\n# Verify the success message appears\n# [‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm\n\n# Check if package actually exists on npm\nnpm view @elizaos/plugin-polygon@1.0.0\n# Result: 404 Not Found - '@elizaos/plugin-polygon@1.0.0' is not in this registry\n```\n\n## Technical Details\n\n### NPM Error Analysis\nThe npm logs show the root cause:\n```\nhttp fetch PUT 404 https://registry.npmjs.org/@elizaos%2fplugin-polygon 507ms\nerror 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found\n```\n\nThis indicates that the `@elizaos` scope doesn't exist on npm, which is required for publishing scoped packages.\n\n### CLI Error Handling Failure\nThe ElizaOS CLI is not properly parsing npm error codes:\n- npm returns exit code 1 (failure)\n- CLI ignores the error and reports success\n- No validation that the package actually exists on npm\n\n## Expected Behavior\n1. CLI should detect npm publish failures (exit code 1)\n2. CLI should fail with clear error message when package scope doesn't exist\n3. CLI should validate that package actually exists on npm after publishing\n4. CLI should create PRs against the correct registry repository\n\n## Recommended Fixes\n\n### 1. Fix NPM Error Detection\n```typescript\n// In the publish command, check npm exit code\nconst npmResult = await exec('npm publish', { cwd: pluginDir });\nif (npmResult.exitCode !== 0) {\n  throw new Error(`NPM publish failed: ${npmResult.stderr}`);\n}\n```\n\n### 2. Add Package Scope Validation\n```typescript\n// Before publishing, check if scope exists\nconst scopeExists = await checkNpmScope('@elizaos');\nif (!scopeExists) {\n  throw new Error('Package scope @elizaos does not exist on npm. Contact npm support to create the scope.');\n}\n```\n\n### 3. Add Post-Publish Validation\n```typescript\n// After publishing, verify package exists\nconst packageExists = await checkPackageExists(packageName, version);\nif (!packageExists) {\n  throw new Error(`Package was not published successfully. Check npm logs for details.`);\n}\n```\n\n## Priority\n**Critical** - This completely blocks plugin publishing and creates false success reports.\n\n## Affected Components\n- `packages/cli/src/commands/publish.ts`\n- NPM publishing logic\n- Error handling and success reporting\n- Package scope validation\n- Registry repository configuration\n\n## Immediate Action Required\n1. **Create the `@elizaos` scope on npm** or use an existing scope\n2. Update CLI to properly detect and handle npm publish failures\n3. Add post-publish validation to ensure packages actually exist on npm\n4. Update registry repository configuration\n\n## Alternative Solutions\n1. **Use existing scope**: Change package name to `@monilpat/plugin-polygon`\n2. **Create organization scope**: Set up `@elizaos` organization on npm\n3. **Use unscoped package**: Publish as `elizaos-plugin-polygon`\n\nThis issue is critically blocking plugin developers from successfully publishing their work and needs immediate attention from the ElizaOS team.\n",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "Critical: Plugin Publishing Fails with False Success Reports",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5754,
              "node_id": "I_kwDOMT5cIs7FTvRT",
              "assignee": null,
              "comments": 0,
              "html_url": "https://github.com/elizaOS/eliza/issues/5754",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-11T14:20:08Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/labels{/name}",
              "updated_at": "2025-08-11T14:20:08Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3308102900,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749",
              "body": "### Problem Statement\nCurrently, ElizaOS scenario testing lacks the ability to mock internal agent runtime calls (particularly LLM interactions) when testing via the API client. This makes it difficult to create deterministic tests for agent behavior and workflows.\n\n### Current Limitations\n- Global function mocks only work for code executed in the same process\n- No way to intercept `runtime.useModel` calls from the bootstrap plugin\n- Agent behavior is non-deterministic due to real LLM calls\n- Difficult to test specific agent decision paths and responses\n\n### Why Different Approach Was Needed\n\nThe existing mocking system was designed for **code execution environments** (E2B sandbox and local `node -e` processes), where mocks are applied to the execution context. However, **agent testing** works differently:\n\n- **E2B/Local Execution**: Code runs in isolated processes/sandboxes where global mocks can be applied\n- **Agent Testing**: Agent runs as a service with API client interaction, requiring direct runtime method interception\n- **Architecture Gap**: The bootstrap plugin calls `runtime.useModel` internally, which can't be mocked through the execution environment approach\n\nThis architectural difference necessitated a new approach that directly intercepts runtime methods rather than relying on execution context mocking.\n\n### Proposed Solution: Runtime Method Mocking\n\nWe've implemented a new mocking approach that directly intercepts `IAgentRuntime` method calls:\n\n#### Key Components\n\n1. **MockEngine Enhancement**\n   - Added `runtimeMethodMocks` to support mocking runtime methods\n   - Priority system: `runtimeMethod` > `service` > `globalFunction`\n   - Direct method replacement on the runtime instance\n\n2. **Schema Updates**\n   - Extended `MockSchema` to include `runtimeMethod: z.string().optional()`\n   - Supports mocking any `IAgentRuntime` method (e.g., `useModel`, `getService`)\n\n3. **Conditional Matching**\n   - Matcher functions can inspect method arguments\n   - Example: `\"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"`\n   - Supports complex conditional logic for when to apply mocks\n\n#### Usage Example\n\n```yaml\nsetup:\n  mocks:\n    - runtimeMethod: \"useModel\"\n      method: \"useModel\"\n      when:\n        matcher: \"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"\n      response: \"<response><name>agent</name><reasoning>Mocked response</reasoning><action>RESPOND</action></response>\"\n```\n\n#### Benefits\n\n1. **Deterministic Testing**: Replace LLM calls with static responses\n2. **Full Workflow Testing**: Test complete agent decision flows\n3. **Conditional Mocking**: Apply mocks based on specific conditions\n4. **Runtime Integration**: Works seamlessly with existing agent architecture\n5. **Backward Compatibility**: Existing mocks continue to work\n\n#### Implementation Steps\n\n- MockEngine runtime method support\n- Schema updates for runtimeMethod mocks\n- Conditional matching with matcher functions\n- Integration with scenario runner\n- Basic useModel mocking working\n- Add support for mocking other runtime methods (getService, etc.)\n- Create comprehensive test scenarios\n- Add documentation and examples\n- Consider adding mock recording/replay capabilities\n\n### Technical Details\n\nThe implementation works by:\n1. Creating the `IAgentRuntime` instance in the scenario runner\n2. Applying mocks directly to the runtime object before agent initialization\n3. The bootstrap plugin receives the mocked runtime and uses the mocked methods\n4. Mocks are reverted after scenario completion\n\nThis approach provides the foundation for robust, deterministic agent testing while maintaining the existing architecture.",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "Implement Runtime Method Mocking for Deterministic Agent Testing",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 7668252177,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/testing",
                  "name": "testing",
                  "color": "2D3957",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAAByRA-EQ",
                  "description": ""
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5749,
              "node_id": "I_kwDOMT5cIs7FLaT0",
              "assignee": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "comments": 0,
              "html_url": "https://github.com/elizaOS/eliza/issues/5749",
              "assignees": [
                {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-11T00:08:49Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/labels{/name}",
              "updated_at": "2025-08-11T00:09:37Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3304516859,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747",
              "body": null,
              "type": null,
              "user": {
                "id": 48334430,
                "url": "https://api.github.com/users/samarth30",
                "type": "User",
                "login": "samarth30",
                "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                "html_url": "https://github.com/samarth30",
                "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/samarth30/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/samarth30/followers",
                "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/samarth30/orgs",
                "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                "received_events_url": "https://api.github.com/users/samarth30/received_events"
              },
              "state": "open",
              "title": "Fixing bugs in eliza-cloud",
              "labels": [],
              "locked": false,
              "number": 5747,
              "node_id": "I_kwDOMT5cIs7E9uz7",
              "assignee": {
                "id": 48334430,
                "url": "https://api.github.com/users/samarth30",
                "type": "User",
                "login": "samarth30",
                "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                "html_url": "https://github.com/samarth30",
                "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/samarth30/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/samarth30/followers",
                "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/samarth30/orgs",
                "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                "received_events_url": "https://api.github.com/users/samarth30/received_events"
              },
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5747",
              "assignees": [
                {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-08T16:01:56Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/labels{/name}",
              "updated_at": "2025-08-08T19:02:49Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "MEMBER",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": {
                "id": 20150,
                "name": "Linear",
                "slug": "linear",
                "owner": {
                  "id": 46686594,
                  "url": "https://api.github.com/users/linear",
                  "type": "Organization",
                  "login": "linear",
                  "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ2Njg2NTk0",
                  "html_url": "https://github.com/linear",
                  "gists_url": "https://api.github.com/users/linear/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/linear/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/46686594?v=4",
                  "events_url": "https://api.github.com/users/linear/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/linear/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/linear/followers",
                  "following_url": "https://api.github.com/users/linear/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/linear/orgs",
                  "subscriptions_url": "https://api.github.com/users/linear/subscriptions",
                  "received_events_url": "https://api.github.com/users/linear/received_events"
                },
                "events": [
                  "check_suite",
                  "issues",
                  "issue_comment",
                  "pull_request",
                  "pull_request_review",
                  "repository",
                  "sub_issues"
                ],
                "node_id": "MDM6QXBwMjAxNTA=",
                "html_url": "https://github.com/apps/linear",
                "client_id": "Iv1.085d682ea245c945",
                "created_at": "2018-11-02T18:07:23Z",
                "updated_at": "2025-02-07T14:59:56Z",
                "description": "",
                "permissions": {
                  "checks": "read",
                  "issues": "write",
                  "metadata": "read",
                  "pull_requests": "write"
                },
                "external_url": "https://linear.app"
              }
            },
            {
              "id": 3302237103,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738",
              "body": "## Description\n\nThe `bun run clean` command is failing due to TypeScript errors in `@elizaos/core` package during the DTS (type definition) build phase.\n\n## Error Details\n\n### Build Process\n```\n‚Ä¢ Running build in 17 packages\n‚Ä¢ Remote caching disabled\n@elizaos/config:build: cache miss\n@elizaos/autodoc:build: cache miss\n@elizaos/core:build: cache miss\n```\n\n### TypeScript Errors in @elizaos/core/src/utils.ts\n1. Line 218: `error TS2345: Argument of type '`${string}-${string}-${string}-${string}-${string}`' is not assignable to parameter of type 'never'.`\n2. Line 366: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n3. Line 409: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n4. Line 536: `error TS2345: Argument of type '{ numberOfChunks: number; averageChunkSize: number; }' is not assignable to parameter of type 'never'.`\n\n### Impact\n- Blocks `bun run clean` command\n- Prevents successful build of `@elizaos/core`\n- Affects dependent packages in the monorepo\n\n## Steps to Reproduce\n1. Run `bun run clean`\n2. Observe build failure in `@elizaos/core`\n3. Build fails with TypeScript errors during DTS generation\n\n## Expected Behavior\n- `bun run clean` should complete successfully\n- `@elizaos/core` should build without TypeScript errors\n- Type definitions should be generated correctly\n\n## Suggested Fix\n\nThe errors suggest type mismatches in `utils.ts`. Need to:\n1. Review type definitions in affected lines\n2. Update type assertions or generic constraints\n3. Ensure string template literal types are properly handled\n4. Fix object type assignments\n\n### Files to Update\n- `packages/core/src/utils.ts`\n\n## Priority\n**HIGH** - This is blocking clean builds and potentially affecting development workflow.",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "üêõ Build failure in @elizaos/core causing bun run clean to fail",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5738,
              "node_id": "I_kwDOMT5cIs7E1COv",
              "assignee": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5738",
              "assignees": [
                {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-08T00:26:11Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/labels{/name}",
              "updated_at": "2025-08-11T14:56:01Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3301116813,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734",
              "body": "**Describe the bug**\n\nOn project creation, ElizaOS CLI fails with the following error:\n```\n‚óá  Failed to build project\nstdout: src/index.ts(7,25): error TS2345: Argument of type 'string' is not assignable to parameter of type 'undefined'.\nstderr: $ tsc --noEmit && vite build && tsup\n```\n\n**To Reproduce**\n\n- Install ElizaOS through `bun`\n```\nbun i -g @elizaos/cli\n```\n- Create new ElizaOS project\n```\nelizaos create abcde\n```\n\n**Expected behavior**\n\nProject built successfully\n\n**Screenshots**\n\n<img width=\"1095\" height=\"572\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/967dd6a2-0d70-4e2e-8019-85a2eab5f225\" />\n\n**Additional context**\n\nElizaOS CLI version: `1.3.2`\n",
              "type": null,
              "user": {
                "id": 74447600,
                "url": "https://api.github.com/users/Kemystra",
                "type": "User",
                "login": "Kemystra",
                "node_id": "MDQ6VXNlcjc0NDQ3NjAw",
                "html_url": "https://github.com/Kemystra",
                "gists_url": "https://api.github.com/users/Kemystra/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/Kemystra/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/74447600?v=4",
                "events_url": "https://api.github.com/users/Kemystra/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/Kemystra/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/Kemystra/followers",
                "following_url": "https://api.github.com/users/Kemystra/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/Kemystra/orgs",
                "subscriptions_url": "https://api.github.com/users/Kemystra/subscriptions",
                "received_events_url": "https://api.github.com/users/Kemystra/received_events"
              },
              "state": "open",
              "title": "Eliza CLI failed to build project",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5734,
              "node_id": "I_kwDOMT5cIs7EwwuN",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5734",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T16:14:00Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/labels{/name}",
              "updated_at": "2025-08-08T19:43:52Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "NONE",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3299481897,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729",
              "body": "# Relates to\r\n\r\nN/A (Documentation improvement, not tied to a specific issue or ticket)\r\n\r\n# Risks\r\n\r\nLow.  \r\nThis change only updates documentation and does not affect any code or functionality.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR updates the elizaos README to include a fix for installation errors that may occur due to permission issues. It adds a note suggesting the use of sudo if users encounter a \"Permission denied\" or \"InstallFailed\" error when running the `elizaos create my-agent` command.\r\n\r\n## What kind of change is this?\r\n\r\nImprovements (misc. changes to existing features)  \r\nDocumentation update\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes require a change to the project documentation.  \r\nI have updated the documentation accordingly.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\nStart by reviewing the changes in the README.md file, specifically the section on creating a new project.\r\n\r\n## Detailed testing steps\r\n\r\n- Open the updated README.md.\r\n- Review the new instructions under \"Create Your First Project.\"\r\n- Confirm that the added note about using `sudo` is clear and helpful for users who encounter permission errors.",
              "type": null,
              "user": {
                "id": 32749185,
                "url": "https://api.github.com/users/mandatedisrael",
                "type": "User",
                "login": "mandatedisrael",
                "node_id": "MDQ6VXNlcjMyNzQ5MTg1",
                "html_url": "https://github.com/mandatedisrael",
                "gists_url": "https://api.github.com/users/mandatedisrael/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/mandatedisrael/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/32749185?v=4",
                "events_url": "https://api.github.com/users/mandatedisrael/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/mandatedisrael/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/mandatedisrael/followers",
                "following_url": "https://api.github.com/users/mandatedisrael/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/mandatedisrael/orgs",
                "subscriptions_url": "https://api.github.com/users/mandatedisrael/subscriptions",
                "received_events_url": "https://api.github.com/users/mandatedisrael/received_events"
              },
              "draft": false,
              "state": "open",
              "title": "Update README.md to fix error",
              "labels": [],
              "locked": false,
              "number": 5729,
              "node_id": "PR_kwDOMT5cIs6iiNWN",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/pull/5729",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T08:10:12Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/labels{/name}",
              "updated_at": "2025-08-07T08:10:24Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/comments",
              "pull_request": {
                "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5729",
                "diff_url": "https://github.com/elizaOS/eliza/pull/5729.diff",
                "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                "merged_at": null,
                "patch_url": "https://github.com/elizaOS/eliza/pull/5729.patch"
              },
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "FIRST_TIME_CONTRIBUTOR",
              "performed_via_github_app": null
            },
            {
              "id": 3299322983,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728",
              "body": "# Background\r\n\r\n## What does this PR do?\r\n\r\nIntroduce entity for cancelling runs `CancelRunSignal`\r\n\r\n## Why are we doing this? Any context or related work?\r\n\r\n- Calls to LLMs usually cost some credits\r\n- When we receive the `RUN_STARTED` event we can check current entity and end run to prevent credits spending\r\n\r\n# Documentation changes needed?\r\n\r\n## Methods\r\n\r\n- `static getSignal(runId: UUID)` - get signal by runId or create if null\r\n- `static clear(runId: UUID)` - clear signal from map\r\n- `cancel(content?: Content)` - cancel current run and and send `content` as a response to user\r\n\r\n## Example\r\n\r\n```typescript\r\nimport { Content, EventType, Plugin } from \"@elizaos/core\";\r\nimport { CancelRunSignal } from \"@elizaos/plugin-bootstrap\";\r\n\r\n// consider we have a service to determine eligibility for entity\r\ninterface EligibilityService {\r\n  check(entityId: UUID): Promise<{ result: boolean, reason?: Content }>\r\n}\r\n\r\nconst plugin: Plugin = {\r\n...\r\n  events: {\r\n    [EventType.RUN_STARTED]: ({ entityId, runId, runtime }) => {\r\n      const service = runtime.getService<EligibilityService>(\"USER_MANAGEMENT\");\r\n      const { result, reason } = await service.check(entityId);\r\n      \r\n      if (!result) {\r\n        const signal = CancelRunSignal.getSignal(runId);\r\n        signal.cancel(reason);\r\n      }\r\n    },\r\n    ...\r\n  },\r\n  ...\r\n}\r\n\r\nexport default Plugin;\r\n```\r\n\r\n## Discord username\r\n\r\nalexd000\r\n\r\n",
              "type": null,
              "user": {
                "id": 82507604,
                "url": "https://api.github.com/users/alex-nax",
                "type": "User",
                "login": "alex-nax",
                "node_id": "MDQ6VXNlcjgyNTA3NjA0",
                "html_url": "https://github.com/alex-nax",
                "gists_url": "https://api.github.com/users/alex-nax/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/alex-nax/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/82507604?v=4",
                "events_url": "https://api.github.com/users/alex-nax/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/alex-nax/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/alex-nax/followers",
                "following_url": "https://api.github.com/users/alex-nax/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/alex-nax/orgs",
                "subscriptions_url": "https://api.github.com/users/alex-nax/subscriptions",
                "received_events_url": "https://api.github.com/users/alex-nax/received_events"
              },
              "draft": false,
              "state": "open",
              "title": "feat: ability to cancel current run before any calls to LLM are made",
              "labels": [],
              "locked": false,
              "number": 5728,
              "node_id": "PR_kwDOMT5cIs6ihriD",
              "assignee": null,
              "comments": 3,
              "html_url": "https://github.com/elizaOS/eliza/pull/5728",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T07:19:35Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/labels{/name}",
              "updated_at": "2025-08-07T07:22:05Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/comments",
              "pull_request": {
                "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5728",
                "diff_url": "https://github.com/elizaOS/eliza/pull/5728.diff",
                "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                "merged_at": null,
                "patch_url": "https://github.com/elizaOS/eliza/pull/5728.patch"
              },
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "FIRST_TIME_CONTRIBUTOR",
              "performed_via_github_app": null
            },
            {
              "id": 3298692741,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727",
              "body": "# feat(scenarios): Implement natural language agent interaction and response validation\n\n## Description\n\nThis ticket enables scenarios to test agent behavior through natural language interactions rather than direct code execution. This allows testing of agent reasoning, decision-making, and response generation in realistic conversation contexts with proper evaluation of agent responses.\n\n## Acceptance Criteria\n\n1. Scenario `run` blocks support `input` field for natural language prompts to agents\n2. Agent responses are captured and available for evaluation (text, thoughts, actions)\n3. Evaluators can access both agent response text and execution context\n4. Support for multi-turn conversations in scenarios\n5. Agent responses include thought process and action decisions\n6. Integration with existing evaluation engine for response validation\n7. Support for conversation context across multiple steps\n8. Agent response timing and performance metrics\n\n## Technical Approach\n\n### 1. Enhanced Run Step Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst RunStepSchema = z.object({\n  name: z.string().optional(),\n  // Natural language input to agent\n  input: z.string().optional(),\n  // Direct code execution (existing)\n  lang: z.string().optional(),\n  code: z.string().optional(),\n  // Agent interaction specific\n  agent_context: z.object({\n    conversation_id: z.string().optional(),\n    user_id: z.string().optional(),\n    room_id: z.string().optional(),\n  }).optional(),\n  evaluations: z.array(EvaluationSchema),\n});\n```\n\n### 2. Agent Interaction Engine\n```typescript\n// packages/cli/src/scenarios/agent-interaction.ts\nexport class AgentInteractionEngine {\n  constructor(private runtime: IAgentRuntime) {}\n\n  async interactWithAgent(input: string, context?: AgentContext): Promise<AgentResponse> {\n    // Create message for agent\n    const message: Memory = {\n      entityId: context?.user_id || 'scenario-user',\n      roomId: context?.room_id || 'scenario-room',\n      content: {\n        type: 'text',\n        text: input,\n      },\n      metadata: {\n        type: 'message',\n        conversationId: context?.conversation_id,\n      },\n    };\n\n    // Send to agent and capture response\n    const startTime = Date.now();\n    const response = await this.runtime.processMessage(message);\n    const endTime = Date.now();\n\n    return {\n      text: response.text,\n      thoughts: response.thoughts,\n      actions: response.actions,\n      timing: {\n        startTime,\n        endTime,\n        duration: endTime - startTime,\n      },\n      context: {\n        conversationId: context?.conversation_id,\n        messageId: message.id,\n      },\n    };\n  }\n}\n```\n\n### 3. Enhanced Execution Result\n```typescript\n// packages/cli/src/scenarios/providers.ts\nexport interface ExecutionResult {\n  exitCode: number;\n  stdout: string;\n  stderr: string;\n  files: Record<string, string>;\n  // New: Agent interaction results\n  agentResponse?: AgentResponse;\n  conversationHistory?: AgentResponse[];\n}\n```\n\n## Test Scenario\n\nCreate `agent-interaction-test.scenario.yaml`:\n```yaml\nname: \"Agent Interaction Test\"\ndescription: \"Tests natural language interaction with agents\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Implement Dark Mode\"\n          number: 123\n          state: \"open\"\n          labels: [\"feature\", \"ui\"]\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"2.5\"\n\nrun:\n  - name: \"Ask agent about roadmap\"\n    input: \"What new features are you planning to add?\"\n    agent_context:\n      conversation_id: \"roadmap-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify agent searched for issues\"\n      \n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n        description: \"Verify agent mentioned the mocked issue\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent provide a helpful and coherent response about new features?\"\n        expected: \"yes\"\n        description: \"Verify agent response quality\"\n\n  - name: \"Ask agent about wallet\"\n    input: \"What's my current wallet balance?\"\n    agent_context:\n      conversation_id: \"wallet-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify agent checked wallet balance\"\n      \n      - type: \"string_contains\"\n        value: \"2.5 ETH\"\n        description: \"Verify agent reported the correct balance\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent clearly explain the wallet balance information?\"\n        expected: \"yes\"\n\n  - name: \"Multi-turn conversation\"\n    input: \"Can you help me with both my wallet and roadmap?\"\n    agent_context:\n      conversation_id: \"multi-turn-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"ETH\"\n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent address both wallet and roadmap questions comprehensively?\"\n        expected: \"yes\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Single Turn**: Test basic agent interaction and response\n2. **Multi-turn**: Test conversation context across steps\n3. **Action Tracking**: Verify agent uses appropriate actions\n4. **Response Quality**: Test LLM judge evaluation of responses\n5. **Performance**: Test response timing and metrics\n6. **Error Handling**: Test agent behavior with invalid inputs\n\n## Dependencies\n\n- Requires plugin system integration (Ticket 1)\n- Builds on advanced mocking system (Ticket 2)\n- Integrates with existing evaluation engine\n- Depends on agent runtime message processing",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement natural language agent interaction and response validation",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5727,
              "node_id": "I_kwDOMT5cIs7Eng6F",
              "assignee": null,
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5727",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:49:34Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/labels{/name}",
              "updated_at": "2025-08-07T05:35:40Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3298691383,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726",
              "body": "# feat(scenarios): Implement conditional mocking and complex response structures\n\n## Description\n\nThis ticket enhances the mocking system to support conditional responses based on input parameters and complex response structures with metadata. This enables realistic testing of service interactions like GitHub API calls or EVM transactions with proper request/response matching.\n\n## Acceptance Criteria\n\n1. Mock definitions support `when` clauses for conditional responses\n2. `when` clauses can match on method arguments, input parameters, or request context\n3. Mock responses support complex nested structures with metadata (timestamps, IDs, etc.)\n4. Multiple mock responses can be defined for the same service/method with different conditions\n5. Mock system provides clear logging of which mock was triggered and why\n6. Mock responses can include realistic error conditions and edge cases\n7. Support for dynamic response generation based on input parameters\n8. Mock validation ensures `when` clauses are syntactically correct\n\n## Technical Approach\n\n### 1. Enhanced Mock Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst MockSchema = z.object({\n  service: z.string(),\n  method: z.string(),\n  when: z.object({\n    // Match on method arguments\n    args: z.array(z.any()).optional(),\n    // Match on specific argument values\n    input: z.record(z.any()).optional(),\n    // Match on request context\n    context: z.record(z.any()).optional(),\n    // Custom matching function\n    matcher: z.string().optional(), // JavaScript expression\n  }).optional(),\n  response: z.any(), // Can be function or static value\n  // For dynamic responses\n  responseFn: z.string().optional(), // JavaScript function\n  // Error simulation\n  error: z.object({\n    code: z.string(),\n    message: z.string(),\n  }).optional(),\n});\n```\n\n### 2. Mock Engine Implementation\n```typescript\n// packages/cli/src/scenarios/mock-engine.ts\nexport class MockEngine {\n  private mocks: MockDefinition[] = [];\n\n  addMock(mock: MockDefinition) {\n    this.mocks.push(mock);\n  }\n\n  async findMock(service: string, method: string, args: any[]): Promise<any> {\n    const candidates = this.mocks.filter(m => \n      m.service === service && m.method === method\n    );\n\n    for (const mock of candidates) {\n      if (await this.matchesCondition(mock, args)) {\n        this.logger.info(`Mock triggered: ${service}.${method} with condition: ${JSON.stringify(mock.when)}`);\n        return this.generateResponse(mock, args);\n      }\n    }\n\n    return null; // No mock found\n  }\n\n  private async matchesCondition(mock: MockDefinition, args: any[]): Promise<boolean> {\n    if (!mock.when) return true; // Default mock\n\n    // Match on arguments\n    if (mock.when.args) {\n      if (!this.deepEqual(args, mock.when.args)) return false;\n    }\n\n    // Match on input parameters\n    if (mock.when.input) {\n      const input = this.extractInputFromArgs(args);\n      if (!this.deepEqual(input, mock.when.input)) return false;\n    }\n\n    // Custom matcher function\n    if (mock.when.matcher) {\n      const matcherFn = new Function('args', 'input', mock.when.matcher);\n      return matcherFn(args, this.extractInputFromArgs(args));\n    }\n\n    return true;\n  }\n\n  private generateResponse(mock: MockDefinition, args: any[]): any {\n    if (mock.error) {\n      throw new Error(`${mock.error.code}: ${mock.error.message}`);\n    }\n\n    if (mock.responseFn) {\n      const responseFn = new Function('args', 'input', mock.responseFn);\n      return responseFn(args, this.extractInputFromArgs(args));\n    }\n\n    return mock.response;\n  }\n}\n```\n\n## Test Scenario\n\nCreate `advanced-mocking-test.scenario.yaml`:\n```yaml\nname: \"Advanced Mocking Test\"\ndescription: \"Tests conditional mocking and complex response structures\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    # Conditional GitHub issue search\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"bug\"\n        matcher: \"input.labels.includes('bug')\"\n      response:\n        - title: \"Critical Bug Found\"\n          number: 456\n          state: \"open\"\n          labels: [\"bug\", \"critical\"]\n          created_at: \"2024-07-15T10:00:00Z\"\n\n    # Conditional GitHub issue search - different response\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"feature\"\n        matcher: \"input.labels.includes('feature')\"\n      response:\n        - title: \"New Feature Request\"\n          number: 789\n          state: \"open\"\n          labels: [\"feature\", \"enhancement\"]\n          created_at: \"2024-07-15T11:00:00Z\"\n\n    # Dynamic EVM balance response\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      when:\n        args: [\"0x1234567890abcdef\"]\n      responseFn: |\n        return {\n          chain: \"ethereum\",\n          address: args[0],\n          balances: [\n            { symbol: \"ETH\", amount: \"1.23\" },\n            { symbol: \"USDC\", amount: \"1000.00\" }\n          ],\n          last_updated: new Date().toISOString()\n        }\n\n    # Error simulation\n    - service: \"github-service\"\n      method: \"readFile\"\n      when:\n        input:\n          path: \"/docs/nonexistent.md\"\n      error:\n        code: \"FILE_NOT_FOUND\"\n        message: \"File does not exist\"\n\nrun:\n  - name: \"Test conditional GitHub search\"\n    input: \"Search for issues with bug label\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"Critical Bug Found\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent correctly search for bug issues?\"\n        expected: \"yes\"\n\n  - name: \"Test dynamic EVM response\"\n    input: \"What's the balance for address 0x1234567890abcdef?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n      - type: \"string_contains\"\n        value: \"1000.00 USDC\"\n\n  - name: \"Test error handling\"\n    input: \"Read the file /docs/nonexistent.md\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.readFile\"\n      - type: \"string_contains\"\n        value: \"File does not exist\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Conditional Matching**: Test different responses based on input parameters\n2. **Dynamic Responses**: Test response generation based on arguments\n3. **Error Simulation**: Test error handling and reporting\n4. **Complex Structures**: Test nested response objects with metadata\n5. **Multiple Mocks**: Test multiple mocks for same service/method\n6. **Logging**: Verify mock selection is logged clearly\n\n## Dependencies\n\n- Builds on existing mock system in scenarios\n- Requires plugin system integration (Ticket 1)\n- Integrates with agent interaction testing (Ticket 3) ",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement conditional mocking and complex response structures",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5726,
              "node_id": "I_kwDOMT5cIs7Engk3",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5726",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:49:00Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/labels{/name}",
              "updated_at": "2025-08-07T05:32:53Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3298689704,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725",
              "body": "# feat(scenarios): Implement plugin specification and dynamic loading\n\n## Description\n\nThis ticket implements plugin specification in scenario YAML files, allowing scenarios to declare which plugins are required for testing. This enables testing of agent behaviors that depend on specific plugins like `@elizaos/plugin-github` or `@elizaos/plugin-evm`. The system will dynamically load specified plugins during scenario execution and make their actions, providers, and services available to the agent.\n\n## Acceptance Criteria\n\n1. Scenario YAML supports a `plugins` array at the root level with string plugin names\n2. The `initializeAgent()` function respects scenario plugin specifications and loads them via `startAgent()`\n3. Plugin loading follows the same dependency resolution and error handling as the main CLI\n4. Scenarios can specify both string plugin names (`@elizaos/plugin-github`) and direct plugin objects\n5. Plugin loading errors are clearly reported with actionable guidance\n6. Default plugins (bootstrap, sql) are automatically included unless explicitly excluded via `exclude_defaults: true`\n7. Plugin conflicts are detected and reported during scenario validation\n8. Plugin initialization errors don't crash the scenario but are reported in results\n\n## Technical Approach\n\n### 1. Update Scenario Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst ScenarioSchema = z.object({\n  name: z.string(),\n  description: z.string(),\n  plugins: z.array(z.string()).optional(), // e.g., [\"@elizaos/plugin-github\"]\n  exclude_defaults: z.boolean().optional(), // exclude bootstrap/sql\n  environment: EnvironmentSchema,\n  setup: SetupSchema.optional(),\n  run: z.array(RunStepSchema),\n  judgment: JudgmentSchema,\n});\n```\n\n### 2. Enhance Runtime Factory\n```typescript\n// packages/cli/src/scenarios/runtime-factory.ts\nexport async function initializeAgent(scenario: Scenario): Promise<IAgentRuntime> {\n  const character: Character = {\n    name: 'scenario-runner',\n    id: stringToUuid('scenario-runner'),\n    bio: 'A minimal character for running scenarios',\n    plugins: scenario.plugins || []\n  };\n\n  // Load default plugins unless excluded\n  if (!scenario.exclude_defaults) {\n    character.plugins.push('@elizaos/plugin-bootstrap', '@elizaos/plugin-sql');\n  }\n\n  const runtime = await startAgent(\n    encryptedCharacter(character),\n    server,\n    undefined,\n    character.plugins,\n    { isTestMode: true }\n  );\n\n  return runtime;\n}\n```\n\n### 3. Plugin Validation\n```typescript\n// packages/cli/src/scenarios/plugin-validator.ts\nexport async function validateScenarioPlugins(scenario: Scenario): Promise<ValidationResult[]> {\n  const results: ValidationResult[] = [];\n  \n  for (const pluginName of scenario.plugins || []) {\n    try {\n      const plugin = await loadAndPreparePlugin(pluginName);\n      if (!plugin) {\n        results.push({\n          type: 'error',\n          message: `Plugin '${pluginName}' could not be loaded`,\n          suggestion: 'Check if plugin is installed or built correctly'\n        });\n      }\n    } catch (error) {\n      results.push({\n        type: 'error', \n        message: `Failed to validate plugin '${pluginName}': ${error.message}`,\n        suggestion: 'Verify plugin dependencies and configuration'\n      });\n    }\n  }\n  \n  return results;\n}\n```\n\n## Test Scenario\n\nCreate `plugin-integration-test.scenario.yaml`:\n```yaml\nname: \"Plugin Integration Test\"\ndescription: \"Tests loading and using plugins specified in scenario YAML\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Test Issue\"\n          number: 123\n          state: \"open\"\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"1.23\"\n\nrun:\n  - name: \"Test GitHub plugin actions\"\n    input: \"Search for issues with label 'bug'\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify GitHub plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"Test Issue\"\n        description: \"Verify agent found the mocked issue\"\n\n  - name: \"Test EVM plugin actions\"\n    input: \"What's my wallet balance?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify EVM plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n        description: \"Verify agent reported the mocked balance\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Plugin Loading Test**: Verify plugins load without errors\n2. **Action Availability Test**: Confirm agent can use plugin actions\n3. **Error Handling Test**: Test with non-existent plugin\n4. **Default Plugin Test**: Verify bootstrap/sql are included by default\n5. **Exclusion Test**: Test `exclude_defaults: true` behavior\n\n## Dependencies\n\n- Fixes the `startAgent` hanging issue (#5719) to enable plugin testing\n- Builds on existing `loadAndPreparePlugin` functionality\n- Integrates with current scenario execution flow ",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement plugin specification and dynamic loading",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5725,
              "node_id": "I_kwDOMT5cIs7EngKo",
              "assignee": null,
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5725",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:48:08Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/labels{/name}",
              "updated_at": "2025-08-07T05:37:32Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            }
          ],
          "issueCount": 10,
          "repository": "elizaOS/eliza"
        },
        "success": true
      },
      "actionStatus": "completed"
    },
    "entityId": "0137f0e4-d2e2-0ee6-82e5-af58b88ec91b",
    "agentId": "0137f0e4-d2e2-0ee6-82e5-af58b88ec91b",
    "roomId": "101c080d-b556-0194-afee-48db0756c49d",
    "unique": true,
    "metadata": {
      "type": "action_result",
      "runId": "4c186386-5d50-4d79-95aa-cf11a7c3fe67",
      "actionId": "5128c8df-6b24-46c9-bf75-a2f4197808ec",
      "actionName": "LIST_GITHUB_ISSUES",
      "totalSteps": 2,
      "currentStep": 2
    }
  },
  {
    "id": "b7b42db0-00b5-4619-a1a4-a2e8bf6206f2",
    "type": "messages",
    "createdAt": 1754969612525,
    "content": {
      "text": "Generated reply: Let me fetch the open issues for the elizaOS/eliza repository. Please hold on for a moment...",
      "type": "action_result",
      "runId": "4c186386-5d50-4d79-95aa-cf11a7c3fe67",
      "source": "action",
      "planStep": "1/2",
      "actionName": "REPLY",
      "planThought": "I need to list the open issues for the elizaOS/eliza repository as requested by the user.",
      "actionResult": {
        "data": {
          "thought": "I need to list the open issues for the elizaOS/eliza repository as requested by the user.",
          "response": {
            "text": "Let me fetch the open issues for the elizaOS/eliza repository. Please hold on for a moment...",
            "actions": [
              "REPLY"
            ],
            "thought": "I need to list the open issues for the elizaOS/eliza repository as requested by the user."
          },
          "actionName": "REPLY",
          "messageGenerated": true
        },
        "text": "Generated reply: Let me fetch the open issues for the elizaOS/eliza repository. Please hold on for a moment...",
        "values": {
          "success": true,
          "lastReply": "Let me fetch the open issues for the elizaOS/eliza repository. Please hold on for a moment...",
          "responded": true,
          "lastReplyTime": 1754969612524,
          "thoughtProcess": "I need to list the open issues for the elizaOS/eliza repository as requested by the user."
        },
        "success": true
      },
      "actionStatus": "completed"
    },
    "entityId": "0137f0e4-d2e2-0ee6-82e5-af58b88ec91b",
    "agentId": "0137f0e4-d2e2-0ee6-82e5-af58b88ec91b",
    "roomId": "101c080d-b556-0194-afee-48db0756c49d",
    "unique": true,
    "metadata": {
      "type": "action_result",
      "runId": "4c186386-5d50-4d79-95aa-cf11a7c3fe67",
      "actionId": "b7b42db0-00b5-4619-a1a4-a2e8bf6206f2",
      "actionName": "REPLY",
      "totalSteps": 2,
      "currentStep": 1
    }
  },
  {
    "id": "02c1bc4a-f0fa-4b39-bc4f-1eba4444224f",
    "type": "messages",
    "createdAt": 1754969416759,
    "content": {
      "text": "Open issues for elizaOS/eliza (10 shown):\n‚Ä¢ #5754: Critical: Plugin Publishing Fails with False Success Reports (open) [bug]\n‚Ä¢ #5749: Implement Runtime Method Mocking for Deterministic Agent Testing (open) [enhancement, testing, Reality Spiral]\n‚Ä¢ #5747: Fixing bugs in eliza-cloud (open)\n‚Ä¢ #5738: üêõ Build failure in @elizaos/core causing bun run clean to fail (open) [bug]\n‚Ä¢ #5734: Eliza CLI failed to build project (open) [bug]\n‚Ä¢ #5729: Update README.md to fix error (open)\n‚Ä¢ #5728: feat: ability to cancel current run before any calls to LLM are made (open)\n‚Ä¢ #5727: feat(scenarios): Implement natural language agent interaction and response validation (open) [enhancement, Reality Spiral]\n‚Ä¢ #5726: feat(scenarios): Implement conditional mocking and complex response structures (open) [enhancement, Reality Spiral]\n‚Ä¢ #5725: feat(scenarios): Implement plugin specification and dynamic loading (open) [enhancement, Reality Spiral]",
      "type": "action_result",
      "runId": "ced299c7-2de6-474d-b7db-7bbd0c7659aa",
      "source": "action",
      "planStep": "2/2",
      "actionName": "LIST_GITHUB_ISSUES",
      "planThought": "I need to provide the list of open issues for the specified repository.",
      "actionResult": {
        "data": {
          "github": {
            "issues": {
              "elizaOS/eliza#5725": {
                "id": 3298689704,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725",
                "body": "# feat(scenarios): Implement plugin specification and dynamic loading\n\n## Description\n\nThis ticket implements plugin specification in scenario YAML files, allowing scenarios to declare which plugins are required for testing. This enables testing of agent behaviors that depend on specific plugins like `@elizaos/plugin-github` or `@elizaos/plugin-evm`. The system will dynamically load specified plugins during scenario execution and make their actions, providers, and services available to the agent.\n\n## Acceptance Criteria\n\n1. Scenario YAML supports a `plugins` array at the root level with string plugin names\n2. The `initializeAgent()` function respects scenario plugin specifications and loads them via `startAgent()`\n3. Plugin loading follows the same dependency resolution and error handling as the main CLI\n4. Scenarios can specify both string plugin names (`@elizaos/plugin-github`) and direct plugin objects\n5. Plugin loading errors are clearly reported with actionable guidance\n6. Default plugins (bootstrap, sql) are automatically included unless explicitly excluded via `exclude_defaults: true`\n7. Plugin conflicts are detected and reported during scenario validation\n8. Plugin initialization errors don't crash the scenario but are reported in results\n\n## Technical Approach\n\n### 1. Update Scenario Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst ScenarioSchema = z.object({\n  name: z.string(),\n  description: z.string(),\n  plugins: z.array(z.string()).optional(), // e.g., [\"@elizaos/plugin-github\"]\n  exclude_defaults: z.boolean().optional(), // exclude bootstrap/sql\n  environment: EnvironmentSchema,\n  setup: SetupSchema.optional(),\n  run: z.array(RunStepSchema),\n  judgment: JudgmentSchema,\n});\n```\n\n### 2. Enhance Runtime Factory\n```typescript\n// packages/cli/src/scenarios/runtime-factory.ts\nexport async function initializeAgent(scenario: Scenario): Promise<IAgentRuntime> {\n  const character: Character = {\n    name: 'scenario-runner',\n    id: stringToUuid('scenario-runner'),\n    bio: 'A minimal character for running scenarios',\n    plugins: scenario.plugins || []\n  };\n\n  // Load default plugins unless excluded\n  if (!scenario.exclude_defaults) {\n    character.plugins.push('@elizaos/plugin-bootstrap', '@elizaos/plugin-sql');\n  }\n\n  const runtime = await startAgent(\n    encryptedCharacter(character),\n    server,\n    undefined,\n    character.plugins,\n    { isTestMode: true }\n  );\n\n  return runtime;\n}\n```\n\n### 3. Plugin Validation\n```typescript\n// packages/cli/src/scenarios/plugin-validator.ts\nexport async function validateScenarioPlugins(scenario: Scenario): Promise<ValidationResult[]> {\n  const results: ValidationResult[] = [];\n  \n  for (const pluginName of scenario.plugins || []) {\n    try {\n      const plugin = await loadAndPreparePlugin(pluginName);\n      if (!plugin) {\n        results.push({\n          type: 'error',\n          message: `Plugin '${pluginName}' could not be loaded`,\n          suggestion: 'Check if plugin is installed or built correctly'\n        });\n      }\n    } catch (error) {\n      results.push({\n        type: 'error', \n        message: `Failed to validate plugin '${pluginName}': ${error.message}`,\n        suggestion: 'Verify plugin dependencies and configuration'\n      });\n    }\n  }\n  \n  return results;\n}\n```\n\n## Test Scenario\n\nCreate `plugin-integration-test.scenario.yaml`:\n```yaml\nname: \"Plugin Integration Test\"\ndescription: \"Tests loading and using plugins specified in scenario YAML\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Test Issue\"\n          number: 123\n          state: \"open\"\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"1.23\"\n\nrun:\n  - name: \"Test GitHub plugin actions\"\n    input: \"Search for issues with label 'bug'\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify GitHub plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"Test Issue\"\n        description: \"Verify agent found the mocked issue\"\n\n  - name: \"Test EVM plugin actions\"\n    input: \"What's my wallet balance?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify EVM plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n        description: \"Verify agent reported the mocked balance\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Plugin Loading Test**: Verify plugins load without errors\n2. **Action Availability Test**: Confirm agent can use plugin actions\n3. **Error Handling Test**: Test with non-existent plugin\n4. **Default Plugin Test**: Verify bootstrap/sql are included by default\n5. **Exclusion Test**: Test `exclude_defaults: true` behavior\n\n## Dependencies\n\n- Fixes the `startAgent` hanging issue (#5719) to enable plugin testing\n- Builds on existing `loadAndPreparePlugin` functionality\n- Integrates with current scenario execution flow ",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement plugin specification and dynamic loading",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5725,
                "node_id": "I_kwDOMT5cIs7EngKo",
                "assignee": null,
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5725",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:48:08Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/labels{/name}",
                "updated_at": "2025-08-07T05:37:32Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5726": {
                "id": 3298691383,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726",
                "body": "# feat(scenarios): Implement conditional mocking and complex response structures\n\n## Description\n\nThis ticket enhances the mocking system to support conditional responses based on input parameters and complex response structures with metadata. This enables realistic testing of service interactions like GitHub API calls or EVM transactions with proper request/response matching.\n\n## Acceptance Criteria\n\n1. Mock definitions support `when` clauses for conditional responses\n2. `when` clauses can match on method arguments, input parameters, or request context\n3. Mock responses support complex nested structures with metadata (timestamps, IDs, etc.)\n4. Multiple mock responses can be defined for the same service/method with different conditions\n5. Mock system provides clear logging of which mock was triggered and why\n6. Mock responses can include realistic error conditions and edge cases\n7. Support for dynamic response generation based on input parameters\n8. Mock validation ensures `when` clauses are syntactically correct\n\n## Technical Approach\n\n### 1. Enhanced Mock Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst MockSchema = z.object({\n  service: z.string(),\n  method: z.string(),\n  when: z.object({\n    // Match on method arguments\n    args: z.array(z.any()).optional(),\n    // Match on specific argument values\n    input: z.record(z.any()).optional(),\n    // Match on request context\n    context: z.record(z.any()).optional(),\n    // Custom matching function\n    matcher: z.string().optional(), // JavaScript expression\n  }).optional(),\n  response: z.any(), // Can be function or static value\n  // For dynamic responses\n  responseFn: z.string().optional(), // JavaScript function\n  // Error simulation\n  error: z.object({\n    code: z.string(),\n    message: z.string(),\n  }).optional(),\n});\n```\n\n### 2. Mock Engine Implementation\n```typescript\n// packages/cli/src/scenarios/mock-engine.ts\nexport class MockEngine {\n  private mocks: MockDefinition[] = [];\n\n  addMock(mock: MockDefinition) {\n    this.mocks.push(mock);\n  }\n\n  async findMock(service: string, method: string, args: any[]): Promise<any> {\n    const candidates = this.mocks.filter(m => \n      m.service === service && m.method === method\n    );\n\n    for (const mock of candidates) {\n      if (await this.matchesCondition(mock, args)) {\n        this.logger.info(`Mock triggered: ${service}.${method} with condition: ${JSON.stringify(mock.when)}`);\n        return this.generateResponse(mock, args);\n      }\n    }\n\n    return null; // No mock found\n  }\n\n  private async matchesCondition(mock: MockDefinition, args: any[]): Promise<boolean> {\n    if (!mock.when) return true; // Default mock\n\n    // Match on arguments\n    if (mock.when.args) {\n      if (!this.deepEqual(args, mock.when.args)) return false;\n    }\n\n    // Match on input parameters\n    if (mock.when.input) {\n      const input = this.extractInputFromArgs(args);\n      if (!this.deepEqual(input, mock.when.input)) return false;\n    }\n\n    // Custom matcher function\n    if (mock.when.matcher) {\n      const matcherFn = new Function('args', 'input', mock.when.matcher);\n      return matcherFn(args, this.extractInputFromArgs(args));\n    }\n\n    return true;\n  }\n\n  private generateResponse(mock: MockDefinition, args: any[]): any {\n    if (mock.error) {\n      throw new Error(`${mock.error.code}: ${mock.error.message}`);\n    }\n\n    if (mock.responseFn) {\n      const responseFn = new Function('args', 'input', mock.responseFn);\n      return responseFn(args, this.extractInputFromArgs(args));\n    }\n\n    return mock.response;\n  }\n}\n```\n\n## Test Scenario\n\nCreate `advanced-mocking-test.scenario.yaml`:\n```yaml\nname: \"Advanced Mocking Test\"\ndescription: \"Tests conditional mocking and complex response structures\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    # Conditional GitHub issue search\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"bug\"\n        matcher: \"input.labels.includes('bug')\"\n      response:\n        - title: \"Critical Bug Found\"\n          number: 456\n          state: \"open\"\n          labels: [\"bug\", \"critical\"]\n          created_at: \"2024-07-15T10:00:00Z\"\n\n    # Conditional GitHub issue search - different response\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"feature\"\n        matcher: \"input.labels.includes('feature')\"\n      response:\n        - title: \"New Feature Request\"\n          number: 789\n          state: \"open\"\n          labels: [\"feature\", \"enhancement\"]\n          created_at: \"2024-07-15T11:00:00Z\"\n\n    # Dynamic EVM balance response\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      when:\n        args: [\"0x1234567890abcdef\"]\n      responseFn: |\n        return {\n          chain: \"ethereum\",\n          address: args[0],\n          balances: [\n            { symbol: \"ETH\", amount: \"1.23\" },\n            { symbol: \"USDC\", amount: \"1000.00\" }\n          ],\n          last_updated: new Date().toISOString()\n        }\n\n    # Error simulation\n    - service: \"github-service\"\n      method: \"readFile\"\n      when:\n        input:\n          path: \"/docs/nonexistent.md\"\n      error:\n        code: \"FILE_NOT_FOUND\"\n        message: \"File does not exist\"\n\nrun:\n  - name: \"Test conditional GitHub search\"\n    input: \"Search for issues with bug label\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"Critical Bug Found\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent correctly search for bug issues?\"\n        expected: \"yes\"\n\n  - name: \"Test dynamic EVM response\"\n    input: \"What's the balance for address 0x1234567890abcdef?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n      - type: \"string_contains\"\n        value: \"1000.00 USDC\"\n\n  - name: \"Test error handling\"\n    input: \"Read the file /docs/nonexistent.md\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.readFile\"\n      - type: \"string_contains\"\n        value: \"File does not exist\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Conditional Matching**: Test different responses based on input parameters\n2. **Dynamic Responses**: Test response generation based on arguments\n3. **Error Simulation**: Test error handling and reporting\n4. **Complex Structures**: Test nested response objects with metadata\n5. **Multiple Mocks**: Test multiple mocks for same service/method\n6. **Logging**: Verify mock selection is logged clearly\n\n## Dependencies\n\n- Builds on existing mock system in scenarios\n- Requires plugin system integration (Ticket 1)\n- Integrates with agent interaction testing (Ticket 3) ",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement conditional mocking and complex response structures",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5726,
                "node_id": "I_kwDOMT5cIs7Engk3",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5726",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:49:00Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/labels{/name}",
                "updated_at": "2025-08-07T05:32:53Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5727": {
                "id": 3298692741,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727",
                "body": "# feat(scenarios): Implement natural language agent interaction and response validation\n\n## Description\n\nThis ticket enables scenarios to test agent behavior through natural language interactions rather than direct code execution. This allows testing of agent reasoning, decision-making, and response generation in realistic conversation contexts with proper evaluation of agent responses.\n\n## Acceptance Criteria\n\n1. Scenario `run` blocks support `input` field for natural language prompts to agents\n2. Agent responses are captured and available for evaluation (text, thoughts, actions)\n3. Evaluators can access both agent response text and execution context\n4. Support for multi-turn conversations in scenarios\n5. Agent responses include thought process and action decisions\n6. Integration with existing evaluation engine for response validation\n7. Support for conversation context across multiple steps\n8. Agent response timing and performance metrics\n\n## Technical Approach\n\n### 1. Enhanced Run Step Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst RunStepSchema = z.object({\n  name: z.string().optional(),\n  // Natural language input to agent\n  input: z.string().optional(),\n  // Direct code execution (existing)\n  lang: z.string().optional(),\n  code: z.string().optional(),\n  // Agent interaction specific\n  agent_context: z.object({\n    conversation_id: z.string().optional(),\n    user_id: z.string().optional(),\n    room_id: z.string().optional(),\n  }).optional(),\n  evaluations: z.array(EvaluationSchema),\n});\n```\n\n### 2. Agent Interaction Engine\n```typescript\n// packages/cli/src/scenarios/agent-interaction.ts\nexport class AgentInteractionEngine {\n  constructor(private runtime: IAgentRuntime) {}\n\n  async interactWithAgent(input: string, context?: AgentContext): Promise<AgentResponse> {\n    // Create message for agent\n    const message: Memory = {\n      entityId: context?.user_id || 'scenario-user',\n      roomId: context?.room_id || 'scenario-room',\n      content: {\n        type: 'text',\n        text: input,\n      },\n      metadata: {\n        type: 'message',\n        conversationId: context?.conversation_id,\n      },\n    };\n\n    // Send to agent and capture response\n    const startTime = Date.now();\n    const response = await this.runtime.processMessage(message);\n    const endTime = Date.now();\n\n    return {\n      text: response.text,\n      thoughts: response.thoughts,\n      actions: response.actions,\n      timing: {\n        startTime,\n        endTime,\n        duration: endTime - startTime,\n      },\n      context: {\n        conversationId: context?.conversation_id,\n        messageId: message.id,\n      },\n    };\n  }\n}\n```\n\n### 3. Enhanced Execution Result\n```typescript\n// packages/cli/src/scenarios/providers.ts\nexport interface ExecutionResult {\n  exitCode: number;\n  stdout: string;\n  stderr: string;\n  files: Record<string, string>;\n  // New: Agent interaction results\n  agentResponse?: AgentResponse;\n  conversationHistory?: AgentResponse[];\n}\n```\n\n## Test Scenario\n\nCreate `agent-interaction-test.scenario.yaml`:\n```yaml\nname: \"Agent Interaction Test\"\ndescription: \"Tests natural language interaction with agents\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Implement Dark Mode\"\n          number: 123\n          state: \"open\"\n          labels: [\"feature\", \"ui\"]\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"2.5\"\n\nrun:\n  - name: \"Ask agent about roadmap\"\n    input: \"What new features are you planning to add?\"\n    agent_context:\n      conversation_id: \"roadmap-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify agent searched for issues\"\n      \n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n        description: \"Verify agent mentioned the mocked issue\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent provide a helpful and coherent response about new features?\"\n        expected: \"yes\"\n        description: \"Verify agent response quality\"\n\n  - name: \"Ask agent about wallet\"\n    input: \"What's my current wallet balance?\"\n    agent_context:\n      conversation_id: \"wallet-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify agent checked wallet balance\"\n      \n      - type: \"string_contains\"\n        value: \"2.5 ETH\"\n        description: \"Verify agent reported the correct balance\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent clearly explain the wallet balance information?\"\n        expected: \"yes\"\n\n  - name: \"Multi-turn conversation\"\n    input: \"Can you help me with both my wallet and roadmap?\"\n    agent_context:\n      conversation_id: \"multi-turn-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"ETH\"\n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent address both wallet and roadmap questions comprehensively?\"\n        expected: \"yes\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Single Turn**: Test basic agent interaction and response\n2. **Multi-turn**: Test conversation context across steps\n3. **Action Tracking**: Verify agent uses appropriate actions\n4. **Response Quality**: Test LLM judge evaluation of responses\n5. **Performance**: Test response timing and metrics\n6. **Error Handling**: Test agent behavior with invalid inputs\n\n## Dependencies\n\n- Requires plugin system integration (Ticket 1)\n- Builds on advanced mocking system (Ticket 2)\n- Integrates with existing evaluation engine\n- Depends on agent runtime message processing",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement natural language agent interaction and response validation",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5727,
                "node_id": "I_kwDOMT5cIs7Eng6F",
                "assignee": null,
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5727",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:49:34Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/labels{/name}",
                "updated_at": "2025-08-07T05:35:40Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5728": {
                "id": 3299322983,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728",
                "body": "# Background\r\n\r\n## What does this PR do?\r\n\r\nIntroduce entity for cancelling runs `CancelRunSignal`\r\n\r\n## Why are we doing this? Any context or related work?\r\n\r\n- Calls to LLMs usually cost some credits\r\n- When we receive the `RUN_STARTED` event we can check current entity and end run to prevent credits spending\r\n\r\n# Documentation changes needed?\r\n\r\n## Methods\r\n\r\n- `static getSignal(runId: UUID)` - get signal by runId or create if null\r\n- `static clear(runId: UUID)` - clear signal from map\r\n- `cancel(content?: Content)` - cancel current run and and send `content` as a response to user\r\n\r\n## Example\r\n\r\n```typescript\r\nimport { Content, EventType, Plugin } from \"@elizaos/core\";\r\nimport { CancelRunSignal } from \"@elizaos/plugin-bootstrap\";\r\n\r\n// consider we have a service to determine eligibility for entity\r\ninterface EligibilityService {\r\n  check(entityId: UUID): Promise<{ result: boolean, reason?: Content }>\r\n}\r\n\r\nconst plugin: Plugin = {\r\n...\r\n  events: {\r\n    [EventType.RUN_STARTED]: ({ entityId, runId, runtime }) => {\r\n      const service = runtime.getService<EligibilityService>(\"USER_MANAGEMENT\");\r\n      const { result, reason } = await service.check(entityId);\r\n      \r\n      if (!result) {\r\n        const signal = CancelRunSignal.getSignal(runId);\r\n        signal.cancel(reason);\r\n      }\r\n    },\r\n    ...\r\n  },\r\n  ...\r\n}\r\n\r\nexport default Plugin;\r\n```\r\n\r\n## Discord username\r\n\r\nalexd000\r\n\r\n",
                "type": null,
                "user": {
                  "id": 82507604,
                  "url": "https://api.github.com/users/alex-nax",
                  "type": "User",
                  "login": "alex-nax",
                  "node_id": "MDQ6VXNlcjgyNTA3NjA0",
                  "html_url": "https://github.com/alex-nax",
                  "gists_url": "https://api.github.com/users/alex-nax/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/alex-nax/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/82507604?v=4",
                  "events_url": "https://api.github.com/users/alex-nax/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/alex-nax/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/alex-nax/followers",
                  "following_url": "https://api.github.com/users/alex-nax/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/alex-nax/orgs",
                  "subscriptions_url": "https://api.github.com/users/alex-nax/subscriptions",
                  "received_events_url": "https://api.github.com/users/alex-nax/received_events"
                },
                "draft": false,
                "state": "open",
                "title": "feat: ability to cancel current run before any calls to LLM are made",
                "labels": [],
                "locked": false,
                "number": 5728,
                "node_id": "PR_kwDOMT5cIs6ihriD",
                "assignee": null,
                "comments": 3,
                "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T07:19:35Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/labels{/name}",
                "updated_at": "2025-08-07T07:22:05Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/comments",
                "pull_request": {
                  "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5728",
                  "diff_url": "https://github.com/elizaOS/eliza/pull/5728.diff",
                  "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                  "merged_at": null,
                  "patch_url": "https://github.com/elizaOS/eliza/pull/5728.patch"
                },
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "FIRST_TIME_CONTRIBUTOR",
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5729": {
                "id": 3299481897,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729",
                "body": "# Relates to\r\n\r\nN/A (Documentation improvement, not tied to a specific issue or ticket)\r\n\r\n# Risks\r\n\r\nLow.  \r\nThis change only updates documentation and does not affect any code or functionality.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR updates the elizaos README to include a fix for installation errors that may occur due to permission issues. It adds a note suggesting the use of sudo if users encounter a \"Permission denied\" or \"InstallFailed\" error when running the `elizaos create my-agent` command.\r\n\r\n## What kind of change is this?\r\n\r\nImprovements (misc. changes to existing features)  \r\nDocumentation update\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes require a change to the project documentation.  \r\nI have updated the documentation accordingly.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\nStart by reviewing the changes in the README.md file, specifically the section on creating a new project.\r\n\r\n## Detailed testing steps\r\n\r\n- Open the updated README.md.\r\n- Review the new instructions under \"Create Your First Project.\"\r\n- Confirm that the added note about using `sudo` is clear and helpful for users who encounter permission errors.",
                "type": null,
                "user": {
                  "id": 32749185,
                  "url": "https://api.github.com/users/mandatedisrael",
                  "type": "User",
                  "login": "mandatedisrael",
                  "node_id": "MDQ6VXNlcjMyNzQ5MTg1",
                  "html_url": "https://github.com/mandatedisrael",
                  "gists_url": "https://api.github.com/users/mandatedisrael/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/mandatedisrael/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/32749185?v=4",
                  "events_url": "https://api.github.com/users/mandatedisrael/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/mandatedisrael/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/mandatedisrael/followers",
                  "following_url": "https://api.github.com/users/mandatedisrael/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/mandatedisrael/orgs",
                  "subscriptions_url": "https://api.github.com/users/mandatedisrael/subscriptions",
                  "received_events_url": "https://api.github.com/users/mandatedisrael/received_events"
                },
                "draft": false,
                "state": "open",
                "title": "Update README.md to fix error",
                "labels": [],
                "locked": false,
                "number": 5729,
                "node_id": "PR_kwDOMT5cIs6iiNWN",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T08:10:12Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/labels{/name}",
                "updated_at": "2025-08-07T08:10:24Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/comments",
                "pull_request": {
                  "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5729",
                  "diff_url": "https://github.com/elizaOS/eliza/pull/5729.diff",
                  "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                  "merged_at": null,
                  "patch_url": "https://github.com/elizaOS/eliza/pull/5729.patch"
                },
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "FIRST_TIME_CONTRIBUTOR",
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5734": {
                "id": 3301116813,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734",
                "body": "**Describe the bug**\n\nOn project creation, ElizaOS CLI fails with the following error:\n```\n‚óá  Failed to build project\nstdout: src/index.ts(7,25): error TS2345: Argument of type 'string' is not assignable to parameter of type 'undefined'.\nstderr: $ tsc --noEmit && vite build && tsup\n```\n\n**To Reproduce**\n\n- Install ElizaOS through `bun`\n```\nbun i -g @elizaos/cli\n```\n- Create new ElizaOS project\n```\nelizaos create abcde\n```\n\n**Expected behavior**\n\nProject built successfully\n\n**Screenshots**\n\n<img width=\"1095\" height=\"572\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/967dd6a2-0d70-4e2e-8019-85a2eab5f225\" />\n\n**Additional context**\n\nElizaOS CLI version: `1.3.2`\n",
                "type": null,
                "user": {
                  "id": 74447600,
                  "url": "https://api.github.com/users/Kemystra",
                  "type": "User",
                  "login": "Kemystra",
                  "node_id": "MDQ6VXNlcjc0NDQ3NjAw",
                  "html_url": "https://github.com/Kemystra",
                  "gists_url": "https://api.github.com/users/Kemystra/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/Kemystra/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/74447600?v=4",
                  "events_url": "https://api.github.com/users/Kemystra/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/Kemystra/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/Kemystra/followers",
                  "following_url": "https://api.github.com/users/Kemystra/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/Kemystra/orgs",
                  "subscriptions_url": "https://api.github.com/users/Kemystra/subscriptions",
                  "received_events_url": "https://api.github.com/users/Kemystra/received_events"
                },
                "state": "open",
                "title": "Eliza CLI failed to build project",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5734,
                "node_id": "I_kwDOMT5cIs7EwwuN",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5734",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T16:14:00Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/labels{/name}",
                "updated_at": "2025-08-08T19:43:52Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "NONE",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5738": {
                "id": 3302237103,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738",
                "body": "## Description\n\nThe `bun run clean` command is failing due to TypeScript errors in `@elizaos/core` package during the DTS (type definition) build phase.\n\n## Error Details\n\n### Build Process\n```\n‚Ä¢ Running build in 17 packages\n‚Ä¢ Remote caching disabled\n@elizaos/config:build: cache miss\n@elizaos/autodoc:build: cache miss\n@elizaos/core:build: cache miss\n```\n\n### TypeScript Errors in @elizaos/core/src/utils.ts\n1. Line 218: `error TS2345: Argument of type '`${string}-${string}-${string}-${string}-${string}`' is not assignable to parameter of type 'never'.`\n2. Line 366: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n3. Line 409: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n4. Line 536: `error TS2345: Argument of type '{ numberOfChunks: number; averageChunkSize: number; }' is not assignable to parameter of type 'never'.`\n\n### Impact\n- Blocks `bun run clean` command\n- Prevents successful build of `@elizaos/core`\n- Affects dependent packages in the monorepo\n\n## Steps to Reproduce\n1. Run `bun run clean`\n2. Observe build failure in `@elizaos/core`\n3. Build fails with TypeScript errors during DTS generation\n\n## Expected Behavior\n- `bun run clean` should complete successfully\n- `@elizaos/core` should build without TypeScript errors\n- Type definitions should be generated correctly\n\n## Suggested Fix\n\nThe errors suggest type mismatches in `utils.ts`. Need to:\n1. Review type definitions in affected lines\n2. Update type assertions or generic constraints\n3. Ensure string template literal types are properly handled\n4. Fix object type assignments\n\n### Files to Update\n- `packages/core/src/utils.ts`\n\n## Priority\n**HIGH** - This is blocking clean builds and potentially affecting development workflow.",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "üêõ Build failure in @elizaos/core causing bun run clean to fail",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5738,
                "node_id": "I_kwDOMT5cIs7E1COv",
                "assignee": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5738",
                "assignees": [
                  {
                    "id": 15067321,
                    "url": "https://api.github.com/users/monilpat",
                    "type": "User",
                    "login": "monilpat",
                    "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                    "html_url": "https://github.com/monilpat",
                    "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/monilpat/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                    "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/monilpat/followers",
                    "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/monilpat/orgs",
                    "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                    "received_events_url": "https://api.github.com/users/monilpat/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-08T00:26:11Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/labels{/name}",
                "updated_at": "2025-08-11T14:56:01Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5747": {
                "id": 3304516859,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747",
                "body": null,
                "type": null,
                "user": {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                },
                "state": "open",
                "title": "Fixing bugs in eliza-cloud",
                "labels": [],
                "locked": false,
                "number": 5747,
                "node_id": "I_kwDOMT5cIs7E9uz7",
                "assignee": {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                },
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5747",
                "assignees": [
                  {
                    "id": 48334430,
                    "url": "https://api.github.com/users/samarth30",
                    "type": "User",
                    "login": "samarth30",
                    "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                    "html_url": "https://github.com/samarth30",
                    "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/samarth30/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                    "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/samarth30/followers",
                    "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/samarth30/orgs",
                    "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                    "received_events_url": "https://api.github.com/users/samarth30/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-08T16:01:56Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/labels{/name}",
                "updated_at": "2025-08-08T19:02:49Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "MEMBER",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": {
                  "id": 20150,
                  "name": "Linear",
                  "slug": "linear",
                  "owner": {
                    "id": 46686594,
                    "url": "https://api.github.com/users/linear",
                    "type": "Organization",
                    "login": "linear",
                    "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ2Njg2NTk0",
                    "html_url": "https://github.com/linear",
                    "gists_url": "https://api.github.com/users/linear/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/linear/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/46686594?v=4",
                    "events_url": "https://api.github.com/users/linear/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/linear/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/linear/followers",
                    "following_url": "https://api.github.com/users/linear/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/linear/orgs",
                    "subscriptions_url": "https://api.github.com/users/linear/subscriptions",
                    "received_events_url": "https://api.github.com/users/linear/received_events"
                  },
                  "events": [
                    "check_suite",
                    "issues",
                    "issue_comment",
                    "pull_request",
                    "pull_request_review",
                    "repository",
                    "sub_issues"
                  ],
                  "node_id": "MDM6QXBwMjAxNTA=",
                  "html_url": "https://github.com/apps/linear",
                  "client_id": "Iv1.085d682ea245c945",
                  "created_at": "2018-11-02T18:07:23Z",
                  "updated_at": "2025-02-07T14:59:56Z",
                  "description": "",
                  "permissions": {
                    "checks": "read",
                    "issues": "write",
                    "metadata": "read",
                    "pull_requests": "write"
                  },
                  "external_url": "https://linear.app"
                }
              },
              "elizaOS/eliza#5749": {
                "id": 3308102900,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749",
                "body": "### Problem Statement\nCurrently, ElizaOS scenario testing lacks the ability to mock internal agent runtime calls (particularly LLM interactions) when testing via the API client. This makes it difficult to create deterministic tests for agent behavior and workflows.\n\n### Current Limitations\n- Global function mocks only work for code executed in the same process\n- No way to intercept `runtime.useModel` calls from the bootstrap plugin\n- Agent behavior is non-deterministic due to real LLM calls\n- Difficult to test specific agent decision paths and responses\n\n### Why Different Approach Was Needed\n\nThe existing mocking system was designed for **code execution environments** (E2B sandbox and local `node -e` processes), where mocks are applied to the execution context. However, **agent testing** works differently:\n\n- **E2B/Local Execution**: Code runs in isolated processes/sandboxes where global mocks can be applied\n- **Agent Testing**: Agent runs as a service with API client interaction, requiring direct runtime method interception\n- **Architecture Gap**: The bootstrap plugin calls `runtime.useModel` internally, which can't be mocked through the execution environment approach\n\nThis architectural difference necessitated a new approach that directly intercepts runtime methods rather than relying on execution context mocking.\n\n### Proposed Solution: Runtime Method Mocking\n\nWe've implemented a new mocking approach that directly intercepts `IAgentRuntime` method calls:\n\n#### Key Components\n\n1. **MockEngine Enhancement**\n   - Added `runtimeMethodMocks` to support mocking runtime methods\n   - Priority system: `runtimeMethod` > `service` > `globalFunction`\n   - Direct method replacement on the runtime instance\n\n2. **Schema Updates**\n   - Extended `MockSchema` to include `runtimeMethod: z.string().optional()`\n   - Supports mocking any `IAgentRuntime` method (e.g., `useModel`, `getService`)\n\n3. **Conditional Matching**\n   - Matcher functions can inspect method arguments\n   - Example: `\"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"`\n   - Supports complex conditional logic for when to apply mocks\n\n#### Usage Example\n\n```yaml\nsetup:\n  mocks:\n    - runtimeMethod: \"useModel\"\n      method: \"useModel\"\n      when:\n        matcher: \"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"\n      response: \"<response><name>agent</name><reasoning>Mocked response</reasoning><action>RESPOND</action></response>\"\n```\n\n#### Benefits\n\n1. **Deterministic Testing**: Replace LLM calls with static responses\n2. **Full Workflow Testing**: Test complete agent decision flows\n3. **Conditional Mocking**: Apply mocks based on specific conditions\n4. **Runtime Integration**: Works seamlessly with existing agent architecture\n5. **Backward Compatibility**: Existing mocks continue to work\n\n#### Implementation Steps\n\n- MockEngine runtime method support\n- Schema updates for runtimeMethod mocks\n- Conditional matching with matcher functions\n- Integration with scenario runner\n- Basic useModel mocking working\n- Add support for mocking other runtime methods (getService, etc.)\n- Create comprehensive test scenarios\n- Add documentation and examples\n- Consider adding mock recording/replay capabilities\n\n### Technical Details\n\nThe implementation works by:\n1. Creating the `IAgentRuntime` instance in the scenario runner\n2. Applying mocks directly to the runtime object before agent initialization\n3. The bootstrap plugin receives the mocked runtime and uses the mocked methods\n4. Mocks are reverted after scenario completion\n\nThis approach provides the foundation for robust, deterministic agent testing while maintaining the existing architecture.",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "Implement Runtime Method Mocking for Deterministic Agent Testing",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 7668252177,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/testing",
                    "name": "testing",
                    "color": "2D3957",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAAByRA-EQ",
                    "description": ""
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5749,
                "node_id": "I_kwDOMT5cIs7FLaT0",
                "assignee": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "comments": 0,
                "html_url": "https://github.com/elizaOS/eliza/issues/5749",
                "assignees": [
                  {
                    "id": 15067321,
                    "url": "https://api.github.com/users/monilpat",
                    "type": "User",
                    "login": "monilpat",
                    "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                    "html_url": "https://github.com/monilpat",
                    "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/monilpat/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                    "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/monilpat/followers",
                    "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/monilpat/orgs",
                    "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                    "received_events_url": "https://api.github.com/users/monilpat/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-11T00:08:49Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/labels{/name}",
                "updated_at": "2025-08-11T00:09:37Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5754": {
                "id": 3310285907,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754",
                "body": "## Issue Summary\nThe `elizaos publish --npm` command reports successful publishing but the plugin is not actually published to npm, despite showing success messages. The npm publish is failing with a 404 error, but the ElizaOS CLI incorrectly reports success.\n\n## Key Problems Identified\n\n### 1. Critical NPM Publishing Failure\n- **Error**: `npm error 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found`\n- **Issue**: The package scope `@elizaos` doesn't exist on npm, preventing publishing\n- **Impact**: Package cannot be published to npm, but CLI reports success\n\n### 2. False Success Reporting\n- **Issue**: CLI reports `[‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm`\n- **Reality**: npm publish failed with 404 error\n- **Impact**: Developers believe their plugin is published when it's not\n\n### 3. Registry Repository Mismatch\n- **Expected**: Should create PR against `https://github.com/elizaos-plugins/registry`\n- **Actual**: Still references old registry `https://github.com/elizaos/registry`\n- **Impact**: Plugin won't appear in the official ElizaOS registry\n\n## Steps to Reproduce\n\n```bash\n# Navigate to the plugin directory\ncd packages/plugin-polygon\n\n# Ensure you're on the correct branch with the changes\ngit checkout polygon\n\n# Run the publish command\nelizaos publish --npm\n\n# Verify the success message appears\n# [‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm\n\n# Check if package actually exists on npm\nnpm view @elizaos/plugin-polygon@1.0.0\n# Result: 404 Not Found - '@elizaos/plugin-polygon@1.0.0' is not in this registry\n```\n\n## Technical Details\n\n### NPM Error Analysis\nThe npm logs show the root cause:\n```\nhttp fetch PUT 404 https://registry.npmjs.org/@elizaos%2fplugin-polygon 507ms\nerror 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found\n```\n\nThis indicates that the `@elizaos` scope doesn't exist on npm, which is required for publishing scoped packages.\n\n### CLI Error Handling Failure\nThe ElizaOS CLI is not properly parsing npm error codes:\n- npm returns exit code 1 (failure)\n- CLI ignores the error and reports success\n- No validation that the package actually exists on npm\n\n## Expected Behavior\n1. CLI should detect npm publish failures (exit code 1)\n2. CLI should fail with clear error message when package scope doesn't exist\n3. CLI should validate that package actually exists on npm after publishing\n4. CLI should create PRs against the correct registry repository\n\n## Recommended Fixes\n\n### 1. Fix NPM Error Detection\n```typescript\n// In the publish command, check npm exit code\nconst npmResult = await exec('npm publish', { cwd: pluginDir });\nif (npmResult.exitCode !== 0) {\n  throw new Error(`NPM publish failed: ${npmResult.stderr}`);\n}\n```\n\n### 2. Add Package Scope Validation\n```typescript\n// Before publishing, check if scope exists\nconst scopeExists = await checkNpmScope('@elizaos');\nif (!scopeExists) {\n  throw new Error('Package scope @elizaos does not exist on npm. Contact npm support to create the scope.');\n}\n```\n\n### 3. Add Post-Publish Validation\n```typescript\n// After publishing, verify package exists\nconst packageExists = await checkPackageExists(packageName, version);\nif (!packageExists) {\n  throw new Error(`Package was not published successfully. Check npm logs for details.`);\n}\n```\n\n## Priority\n**Critical** - This completely blocks plugin publishing and creates false success reports.\n\n## Affected Components\n- `packages/cli/src/commands/publish.ts`\n- NPM publishing logic\n- Error handling and success reporting\n- Package scope validation\n- Registry repository configuration\n\n## Immediate Action Required\n1. **Create the `@elizaos` scope on npm** or use an existing scope\n2. Update CLI to properly detect and handle npm publish failures\n3. Add post-publish validation to ensure packages actually exist on npm\n4. Update registry repository configuration\n\n## Alternative Solutions\n1. **Use existing scope**: Change package name to `@monilpat/plugin-polygon`\n2. **Create organization scope**: Set up `@elizaos` organization on npm\n3. **Use unscoped package**: Publish as `elizaos-plugin-polygon`\n\nThis issue is critically blocking plugin developers from successfully publishing their work and needs immediate attention from the ElizaOS team.\n",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "Critical: Plugin Publishing Fails with False Success Reports",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5754,
                "node_id": "I_kwDOMT5cIs7FTvRT",
                "assignee": null,
                "comments": 0,
                "html_url": "https://github.com/elizaOS/eliza/issues/5754",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-11T14:20:08Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/labels{/name}",
                "updated_at": "2025-08-11T14:20:08Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              }
            },
            "lastIssues": [
              {
                "id": 3310285907,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754",
                "body": "## Issue Summary\nThe `elizaos publish --npm` command reports successful publishing but the plugin is not actually published to npm, despite showing success messages. The npm publish is failing with a 404 error, but the ElizaOS CLI incorrectly reports success.\n\n## Key Problems Identified\n\n### 1. Critical NPM Publishing Failure\n- **Error**: `npm error 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found`\n- **Issue**: The package scope `@elizaos` doesn't exist on npm, preventing publishing\n- **Impact**: Package cannot be published to npm, but CLI reports success\n\n### 2. False Success Reporting\n- **Issue**: CLI reports `[‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm`\n- **Reality**: npm publish failed with 404 error\n- **Impact**: Developers believe their plugin is published when it's not\n\n### 3. Registry Repository Mismatch\n- **Expected**: Should create PR against `https://github.com/elizaos-plugins/registry`\n- **Actual**: Still references old registry `https://github.com/elizaos/registry`\n- **Impact**: Plugin won't appear in the official ElizaOS registry\n\n## Steps to Reproduce\n\n```bash\n# Navigate to the plugin directory\ncd packages/plugin-polygon\n\n# Ensure you're on the correct branch with the changes\ngit checkout polygon\n\n# Run the publish command\nelizaos publish --npm\n\n# Verify the success message appears\n# [‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm\n\n# Check if package actually exists on npm\nnpm view @elizaos/plugin-polygon@1.0.0\n# Result: 404 Not Found - '@elizaos/plugin-polygon@1.0.0' is not in this registry\n```\n\n## Technical Details\n\n### NPM Error Analysis\nThe npm logs show the root cause:\n```\nhttp fetch PUT 404 https://registry.npmjs.org/@elizaos%2fplugin-polygon 507ms\nerror 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found\n```\n\nThis indicates that the `@elizaos` scope doesn't exist on npm, which is required for publishing scoped packages.\n\n### CLI Error Handling Failure\nThe ElizaOS CLI is not properly parsing npm error codes:\n- npm returns exit code 1 (failure)\n- CLI ignores the error and reports success\n- No validation that the package actually exists on npm\n\n## Expected Behavior\n1. CLI should detect npm publish failures (exit code 1)\n2. CLI should fail with clear error message when package scope doesn't exist\n3. CLI should validate that package actually exists on npm after publishing\n4. CLI should create PRs against the correct registry repository\n\n## Recommended Fixes\n\n### 1. Fix NPM Error Detection\n```typescript\n// In the publish command, check npm exit code\nconst npmResult = await exec('npm publish', { cwd: pluginDir });\nif (npmResult.exitCode !== 0) {\n  throw new Error(`NPM publish failed: ${npmResult.stderr}`);\n}\n```\n\n### 2. Add Package Scope Validation\n```typescript\n// Before publishing, check if scope exists\nconst scopeExists = await checkNpmScope('@elizaos');\nif (!scopeExists) {\n  throw new Error('Package scope @elizaos does not exist on npm. Contact npm support to create the scope.');\n}\n```\n\n### 3. Add Post-Publish Validation\n```typescript\n// After publishing, verify package exists\nconst packageExists = await checkPackageExists(packageName, version);\nif (!packageExists) {\n  throw new Error(`Package was not published successfully. Check npm logs for details.`);\n}\n```\n\n## Priority\n**Critical** - This completely blocks plugin publishing and creates false success reports.\n\n## Affected Components\n- `packages/cli/src/commands/publish.ts`\n- NPM publishing logic\n- Error handling and success reporting\n- Package scope validation\n- Registry repository configuration\n\n## Immediate Action Required\n1. **Create the `@elizaos` scope on npm** or use an existing scope\n2. Update CLI to properly detect and handle npm publish failures\n3. Add post-publish validation to ensure packages actually exist on npm\n4. Update registry repository configuration\n\n## Alternative Solutions\n1. **Use existing scope**: Change package name to `@monilpat/plugin-polygon`\n2. **Create organization scope**: Set up `@elizaos` organization on npm\n3. **Use unscoped package**: Publish as `elizaos-plugin-polygon`\n\nThis issue is critically blocking plugin developers from successfully publishing their work and needs immediate attention from the ElizaOS team.\n",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "Critical: Plugin Publishing Fails with False Success Reports",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5754,
                "node_id": "I_kwDOMT5cIs7FTvRT",
                "assignee": null,
                "comments": 0,
                "html_url": "https://github.com/elizaOS/eliza/issues/5754",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-11T14:20:08Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/labels{/name}",
                "updated_at": "2025-08-11T14:20:08Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3308102900,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749",
                "body": "### Problem Statement\nCurrently, ElizaOS scenario testing lacks the ability to mock internal agent runtime calls (particularly LLM interactions) when testing via the API client. This makes it difficult to create deterministic tests for agent behavior and workflows.\n\n### Current Limitations\n- Global function mocks only work for code executed in the same process\n- No way to intercept `runtime.useModel` calls from the bootstrap plugin\n- Agent behavior is non-deterministic due to real LLM calls\n- Difficult to test specific agent decision paths and responses\n\n### Why Different Approach Was Needed\n\nThe existing mocking system was designed for **code execution environments** (E2B sandbox and local `node -e` processes), where mocks are applied to the execution context. However, **agent testing** works differently:\n\n- **E2B/Local Execution**: Code runs in isolated processes/sandboxes where global mocks can be applied\n- **Agent Testing**: Agent runs as a service with API client interaction, requiring direct runtime method interception\n- **Architecture Gap**: The bootstrap plugin calls `runtime.useModel` internally, which can't be mocked through the execution environment approach\n\nThis architectural difference necessitated a new approach that directly intercepts runtime methods rather than relying on execution context mocking.\n\n### Proposed Solution: Runtime Method Mocking\n\nWe've implemented a new mocking approach that directly intercepts `IAgentRuntime` method calls:\n\n#### Key Components\n\n1. **MockEngine Enhancement**\n   - Added `runtimeMethodMocks` to support mocking runtime methods\n   - Priority system: `runtimeMethod` > `service` > `globalFunction`\n   - Direct method replacement on the runtime instance\n\n2. **Schema Updates**\n   - Extended `MockSchema` to include `runtimeMethod: z.string().optional()`\n   - Supports mocking any `IAgentRuntime` method (e.g., `useModel`, `getService`)\n\n3. **Conditional Matching**\n   - Matcher functions can inspect method arguments\n   - Example: `\"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"`\n   - Supports complex conditional logic for when to apply mocks\n\n#### Usage Example\n\n```yaml\nsetup:\n  mocks:\n    - runtimeMethod: \"useModel\"\n      method: \"useModel\"\n      when:\n        matcher: \"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"\n      response: \"<response><name>agent</name><reasoning>Mocked response</reasoning><action>RESPOND</action></response>\"\n```\n\n#### Benefits\n\n1. **Deterministic Testing**: Replace LLM calls with static responses\n2. **Full Workflow Testing**: Test complete agent decision flows\n3. **Conditional Mocking**: Apply mocks based on specific conditions\n4. **Runtime Integration**: Works seamlessly with existing agent architecture\n5. **Backward Compatibility**: Existing mocks continue to work\n\n#### Implementation Steps\n\n- MockEngine runtime method support\n- Schema updates for runtimeMethod mocks\n- Conditional matching with matcher functions\n- Integration with scenario runner\n- Basic useModel mocking working\n- Add support for mocking other runtime methods (getService, etc.)\n- Create comprehensive test scenarios\n- Add documentation and examples\n- Consider adding mock recording/replay capabilities\n\n### Technical Details\n\nThe implementation works by:\n1. Creating the `IAgentRuntime` instance in the scenario runner\n2. Applying mocks directly to the runtime object before agent initialization\n3. The bootstrap plugin receives the mocked runtime and uses the mocked methods\n4. Mocks are reverted after scenario completion\n\nThis approach provides the foundation for robust, deterministic agent testing while maintaining the existing architecture.",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "Implement Runtime Method Mocking for Deterministic Agent Testing",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 7668252177,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/testing",
                    "name": "testing",
                    "color": "2D3957",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAAByRA-EQ",
                    "description": ""
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5749,
                "node_id": "I_kwDOMT5cIs7FLaT0",
                "assignee": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "comments": 0,
                "html_url": "https://github.com/elizaOS/eliza/issues/5749",
                "assignees": [
                  {
                    "id": 15067321,
                    "url": "https://api.github.com/users/monilpat",
                    "type": "User",
                    "login": "monilpat",
                    "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                    "html_url": "https://github.com/monilpat",
                    "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/monilpat/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                    "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/monilpat/followers",
                    "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/monilpat/orgs",
                    "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                    "received_events_url": "https://api.github.com/users/monilpat/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-11T00:08:49Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/labels{/name}",
                "updated_at": "2025-08-11T00:09:37Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3304516859,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747",
                "body": null,
                "type": null,
                "user": {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                },
                "state": "open",
                "title": "Fixing bugs in eliza-cloud",
                "labels": [],
                "locked": false,
                "number": 5747,
                "node_id": "I_kwDOMT5cIs7E9uz7",
                "assignee": {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                },
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5747",
                "assignees": [
                  {
                    "id": 48334430,
                    "url": "https://api.github.com/users/samarth30",
                    "type": "User",
                    "login": "samarth30",
                    "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                    "html_url": "https://github.com/samarth30",
                    "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/samarth30/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                    "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/samarth30/followers",
                    "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/samarth30/orgs",
                    "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                    "received_events_url": "https://api.github.com/users/samarth30/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-08T16:01:56Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/labels{/name}",
                "updated_at": "2025-08-08T19:02:49Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "MEMBER",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": {
                  "id": 20150,
                  "name": "Linear",
                  "slug": "linear",
                  "owner": {
                    "id": 46686594,
                    "url": "https://api.github.com/users/linear",
                    "type": "Organization",
                    "login": "linear",
                    "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ2Njg2NTk0",
                    "html_url": "https://github.com/linear",
                    "gists_url": "https://api.github.com/users/linear/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/linear/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/46686594?v=4",
                    "events_url": "https://api.github.com/users/linear/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/linear/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/linear/followers",
                    "following_url": "https://api.github.com/users/linear/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/linear/orgs",
                    "subscriptions_url": "https://api.github.com/users/linear/subscriptions",
                    "received_events_url": "https://api.github.com/users/linear/received_events"
                  },
                  "events": [
                    "check_suite",
                    "issues",
                    "issue_comment",
                    "pull_request",
                    "pull_request_review",
                    "repository",
                    "sub_issues"
                  ],
                  "node_id": "MDM6QXBwMjAxNTA=",
                  "html_url": "https://github.com/apps/linear",
                  "client_id": "Iv1.085d682ea245c945",
                  "created_at": "2018-11-02T18:07:23Z",
                  "updated_at": "2025-02-07T14:59:56Z",
                  "description": "",
                  "permissions": {
                    "checks": "read",
                    "issues": "write",
                    "metadata": "read",
                    "pull_requests": "write"
                  },
                  "external_url": "https://linear.app"
                }
              },
              {
                "id": 3302237103,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738",
                "body": "## Description\n\nThe `bun run clean` command is failing due to TypeScript errors in `@elizaos/core` package during the DTS (type definition) build phase.\n\n## Error Details\n\n### Build Process\n```\n‚Ä¢ Running build in 17 packages\n‚Ä¢ Remote caching disabled\n@elizaos/config:build: cache miss\n@elizaos/autodoc:build: cache miss\n@elizaos/core:build: cache miss\n```\n\n### TypeScript Errors in @elizaos/core/src/utils.ts\n1. Line 218: `error TS2345: Argument of type '`${string}-${string}-${string}-${string}-${string}`' is not assignable to parameter of type 'never'.`\n2. Line 366: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n3. Line 409: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n4. Line 536: `error TS2345: Argument of type '{ numberOfChunks: number; averageChunkSize: number; }' is not assignable to parameter of type 'never'.`\n\n### Impact\n- Blocks `bun run clean` command\n- Prevents successful build of `@elizaos/core`\n- Affects dependent packages in the monorepo\n\n## Steps to Reproduce\n1. Run `bun run clean`\n2. Observe build failure in `@elizaos/core`\n3. Build fails with TypeScript errors during DTS generation\n\n## Expected Behavior\n- `bun run clean` should complete successfully\n- `@elizaos/core` should build without TypeScript errors\n- Type definitions should be generated correctly\n\n## Suggested Fix\n\nThe errors suggest type mismatches in `utils.ts`. Need to:\n1. Review type definitions in affected lines\n2. Update type assertions or generic constraints\n3. Ensure string template literal types are properly handled\n4. Fix object type assignments\n\n### Files to Update\n- `packages/core/src/utils.ts`\n\n## Priority\n**HIGH** - This is blocking clean builds and potentially affecting development workflow.",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "üêõ Build failure in @elizaos/core causing bun run clean to fail",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5738,
                "node_id": "I_kwDOMT5cIs7E1COv",
                "assignee": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5738",
                "assignees": [
                  {
                    "id": 15067321,
                    "url": "https://api.github.com/users/monilpat",
                    "type": "User",
                    "login": "monilpat",
                    "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                    "html_url": "https://github.com/monilpat",
                    "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/monilpat/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                    "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/monilpat/followers",
                    "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/monilpat/orgs",
                    "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                    "received_events_url": "https://api.github.com/users/monilpat/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-08T00:26:11Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/labels{/name}",
                "updated_at": "2025-08-11T14:56:01Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3301116813,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734",
                "body": "**Describe the bug**\n\nOn project creation, ElizaOS CLI fails with the following error:\n```\n‚óá  Failed to build project\nstdout: src/index.ts(7,25): error TS2345: Argument of type 'string' is not assignable to parameter of type 'undefined'.\nstderr: $ tsc --noEmit && vite build && tsup\n```\n\n**To Reproduce**\n\n- Install ElizaOS through `bun`\n```\nbun i -g @elizaos/cli\n```\n- Create new ElizaOS project\n```\nelizaos create abcde\n```\n\n**Expected behavior**\n\nProject built successfully\n\n**Screenshots**\n\n<img width=\"1095\" height=\"572\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/967dd6a2-0d70-4e2e-8019-85a2eab5f225\" />\n\n**Additional context**\n\nElizaOS CLI version: `1.3.2`\n",
                "type": null,
                "user": {
                  "id": 74447600,
                  "url": "https://api.github.com/users/Kemystra",
                  "type": "User",
                  "login": "Kemystra",
                  "node_id": "MDQ6VXNlcjc0NDQ3NjAw",
                  "html_url": "https://github.com/Kemystra",
                  "gists_url": "https://api.github.com/users/Kemystra/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/Kemystra/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/74447600?v=4",
                  "events_url": "https://api.github.com/users/Kemystra/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/Kemystra/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/Kemystra/followers",
                  "following_url": "https://api.github.com/users/Kemystra/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/Kemystra/orgs",
                  "subscriptions_url": "https://api.github.com/users/Kemystra/subscriptions",
                  "received_events_url": "https://api.github.com/users/Kemystra/received_events"
                },
                "state": "open",
                "title": "Eliza CLI failed to build project",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5734,
                "node_id": "I_kwDOMT5cIs7EwwuN",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5734",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T16:14:00Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/labels{/name}",
                "updated_at": "2025-08-08T19:43:52Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "NONE",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3299481897,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729",
                "body": "# Relates to\r\n\r\nN/A (Documentation improvement, not tied to a specific issue or ticket)\r\n\r\n# Risks\r\n\r\nLow.  \r\nThis change only updates documentation and does not affect any code or functionality.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR updates the elizaos README to include a fix for installation errors that may occur due to permission issues. It adds a note suggesting the use of sudo if users encounter a \"Permission denied\" or \"InstallFailed\" error when running the `elizaos create my-agent` command.\r\n\r\n## What kind of change is this?\r\n\r\nImprovements (misc. changes to existing features)  \r\nDocumentation update\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes require a change to the project documentation.  \r\nI have updated the documentation accordingly.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\nStart by reviewing the changes in the README.md file, specifically the section on creating a new project.\r\n\r\n## Detailed testing steps\r\n\r\n- Open the updated README.md.\r\n- Review the new instructions under \"Create Your First Project.\"\r\n- Confirm that the added note about using `sudo` is clear and helpful for users who encounter permission errors.",
                "type": null,
                "user": {
                  "id": 32749185,
                  "url": "https://api.github.com/users/mandatedisrael",
                  "type": "User",
                  "login": "mandatedisrael",
                  "node_id": "MDQ6VXNlcjMyNzQ5MTg1",
                  "html_url": "https://github.com/mandatedisrael",
                  "gists_url": "https://api.github.com/users/mandatedisrael/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/mandatedisrael/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/32749185?v=4",
                  "events_url": "https://api.github.com/users/mandatedisrael/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/mandatedisrael/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/mandatedisrael/followers",
                  "following_url": "https://api.github.com/users/mandatedisrael/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/mandatedisrael/orgs",
                  "subscriptions_url": "https://api.github.com/users/mandatedisrael/subscriptions",
                  "received_events_url": "https://api.github.com/users/mandatedisrael/received_events"
                },
                "draft": false,
                "state": "open",
                "title": "Update README.md to fix error",
                "labels": [],
                "locked": false,
                "number": 5729,
                "node_id": "PR_kwDOMT5cIs6iiNWN",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T08:10:12Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/labels{/name}",
                "updated_at": "2025-08-07T08:10:24Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/comments",
                "pull_request": {
                  "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5729",
                  "diff_url": "https://github.com/elizaOS/eliza/pull/5729.diff",
                  "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                  "merged_at": null,
                  "patch_url": "https://github.com/elizaOS/eliza/pull/5729.patch"
                },
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "FIRST_TIME_CONTRIBUTOR",
                "performed_via_github_app": null
              },
              {
                "id": 3299322983,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728",
                "body": "# Background\r\n\r\n## What does this PR do?\r\n\r\nIntroduce entity for cancelling runs `CancelRunSignal`\r\n\r\n## Why are we doing this? Any context or related work?\r\n\r\n- Calls to LLMs usually cost some credits\r\n- When we receive the `RUN_STARTED` event we can check current entity and end run to prevent credits spending\r\n\r\n# Documentation changes needed?\r\n\r\n## Methods\r\n\r\n- `static getSignal(runId: UUID)` - get signal by runId or create if null\r\n- `static clear(runId: UUID)` - clear signal from map\r\n- `cancel(content?: Content)` - cancel current run and and send `content` as a response to user\r\n\r\n## Example\r\n\r\n```typescript\r\nimport { Content, EventType, Plugin } from \"@elizaos/core\";\r\nimport { CancelRunSignal } from \"@elizaos/plugin-bootstrap\";\r\n\r\n// consider we have a service to determine eligibility for entity\r\ninterface EligibilityService {\r\n  check(entityId: UUID): Promise<{ result: boolean, reason?: Content }>\r\n}\r\n\r\nconst plugin: Plugin = {\r\n...\r\n  events: {\r\n    [EventType.RUN_STARTED]: ({ entityId, runId, runtime }) => {\r\n      const service = runtime.getService<EligibilityService>(\"USER_MANAGEMENT\");\r\n      const { result, reason } = await service.check(entityId);\r\n      \r\n      if (!result) {\r\n        const signal = CancelRunSignal.getSignal(runId);\r\n        signal.cancel(reason);\r\n      }\r\n    },\r\n    ...\r\n  },\r\n  ...\r\n}\r\n\r\nexport default Plugin;\r\n```\r\n\r\n## Discord username\r\n\r\nalexd000\r\n\r\n",
                "type": null,
                "user": {
                  "id": 82507604,
                  "url": "https://api.github.com/users/alex-nax",
                  "type": "User",
                  "login": "alex-nax",
                  "node_id": "MDQ6VXNlcjgyNTA3NjA0",
                  "html_url": "https://github.com/alex-nax",
                  "gists_url": "https://api.github.com/users/alex-nax/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/alex-nax/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/82507604?v=4",
                  "events_url": "https://api.github.com/users/alex-nax/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/alex-nax/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/alex-nax/followers",
                  "following_url": "https://api.github.com/users/alex-nax/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/alex-nax/orgs",
                  "subscriptions_url": "https://api.github.com/users/alex-nax/subscriptions",
                  "received_events_url": "https://api.github.com/users/alex-nax/received_events"
                },
                "draft": false,
                "state": "open",
                "title": "feat: ability to cancel current run before any calls to LLM are made",
                "labels": [],
                "locked": false,
                "number": 5728,
                "node_id": "PR_kwDOMT5cIs6ihriD",
                "assignee": null,
                "comments": 3,
                "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T07:19:35Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/labels{/name}",
                "updated_at": "2025-08-07T07:22:05Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/comments",
                "pull_request": {
                  "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5728",
                  "diff_url": "https://github.com/elizaOS/eliza/pull/5728.diff",
                  "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                  "merged_at": null,
                  "patch_url": "https://github.com/elizaOS/eliza/pull/5728.patch"
                },
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "FIRST_TIME_CONTRIBUTOR",
                "performed_via_github_app": null
              },
              {
                "id": 3298692741,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727",
                "body": "# feat(scenarios): Implement natural language agent interaction and response validation\n\n## Description\n\nThis ticket enables scenarios to test agent behavior through natural language interactions rather than direct code execution. This allows testing of agent reasoning, decision-making, and response generation in realistic conversation contexts with proper evaluation of agent responses.\n\n## Acceptance Criteria\n\n1. Scenario `run` blocks support `input` field for natural language prompts to agents\n2. Agent responses are captured and available for evaluation (text, thoughts, actions)\n3. Evaluators can access both agent response text and execution context\n4. Support for multi-turn conversations in scenarios\n5. Agent responses include thought process and action decisions\n6. Integration with existing evaluation engine for response validation\n7. Support for conversation context across multiple steps\n8. Agent response timing and performance metrics\n\n## Technical Approach\n\n### 1. Enhanced Run Step Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst RunStepSchema = z.object({\n  name: z.string().optional(),\n  // Natural language input to agent\n  input: z.string().optional(),\n  // Direct code execution (existing)\n  lang: z.string().optional(),\n  code: z.string().optional(),\n  // Agent interaction specific\n  agent_context: z.object({\n    conversation_id: z.string().optional(),\n    user_id: z.string().optional(),\n    room_id: z.string().optional(),\n  }).optional(),\n  evaluations: z.array(EvaluationSchema),\n});\n```\n\n### 2. Agent Interaction Engine\n```typescript\n// packages/cli/src/scenarios/agent-interaction.ts\nexport class AgentInteractionEngine {\n  constructor(private runtime: IAgentRuntime) {}\n\n  async interactWithAgent(input: string, context?: AgentContext): Promise<AgentResponse> {\n    // Create message for agent\n    const message: Memory = {\n      entityId: context?.user_id || 'scenario-user',\n      roomId: context?.room_id || 'scenario-room',\n      content: {\n        type: 'text',\n        text: input,\n      },\n      metadata: {\n        type: 'message',\n        conversationId: context?.conversation_id,\n      },\n    };\n\n    // Send to agent and capture response\n    const startTime = Date.now();\n    const response = await this.runtime.processMessage(message);\n    const endTime = Date.now();\n\n    return {\n      text: response.text,\n      thoughts: response.thoughts,\n      actions: response.actions,\n      timing: {\n        startTime,\n        endTime,\n        duration: endTime - startTime,\n      },\n      context: {\n        conversationId: context?.conversation_id,\n        messageId: message.id,\n      },\n    };\n  }\n}\n```\n\n### 3. Enhanced Execution Result\n```typescript\n// packages/cli/src/scenarios/providers.ts\nexport interface ExecutionResult {\n  exitCode: number;\n  stdout: string;\n  stderr: string;\n  files: Record<string, string>;\n  // New: Agent interaction results\n  agentResponse?: AgentResponse;\n  conversationHistory?: AgentResponse[];\n}\n```\n\n## Test Scenario\n\nCreate `agent-interaction-test.scenario.yaml`:\n```yaml\nname: \"Agent Interaction Test\"\ndescription: \"Tests natural language interaction with agents\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Implement Dark Mode\"\n          number: 123\n          state: \"open\"\n          labels: [\"feature\", \"ui\"]\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"2.5\"\n\nrun:\n  - name: \"Ask agent about roadmap\"\n    input: \"What new features are you planning to add?\"\n    agent_context:\n      conversation_id: \"roadmap-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify agent searched for issues\"\n      \n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n        description: \"Verify agent mentioned the mocked issue\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent provide a helpful and coherent response about new features?\"\n        expected: \"yes\"\n        description: \"Verify agent response quality\"\n\n  - name: \"Ask agent about wallet\"\n    input: \"What's my current wallet balance?\"\n    agent_context:\n      conversation_id: \"wallet-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify agent checked wallet balance\"\n      \n      - type: \"string_contains\"\n        value: \"2.5 ETH\"\n        description: \"Verify agent reported the correct balance\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent clearly explain the wallet balance information?\"\n        expected: \"yes\"\n\n  - name: \"Multi-turn conversation\"\n    input: \"Can you help me with both my wallet and roadmap?\"\n    agent_context:\n      conversation_id: \"multi-turn-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"ETH\"\n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent address both wallet and roadmap questions comprehensively?\"\n        expected: \"yes\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Single Turn**: Test basic agent interaction and response\n2. **Multi-turn**: Test conversation context across steps\n3. **Action Tracking**: Verify agent uses appropriate actions\n4. **Response Quality**: Test LLM judge evaluation of responses\n5. **Performance**: Test response timing and metrics\n6. **Error Handling**: Test agent behavior with invalid inputs\n\n## Dependencies\n\n- Requires plugin system integration (Ticket 1)\n- Builds on advanced mocking system (Ticket 2)\n- Integrates with existing evaluation engine\n- Depends on agent runtime message processing",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement natural language agent interaction and response validation",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5727,
                "node_id": "I_kwDOMT5cIs7Eng6F",
                "assignee": null,
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5727",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:49:34Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/labels{/name}",
                "updated_at": "2025-08-07T05:35:40Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3298691383,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726",
                "body": "# feat(scenarios): Implement conditional mocking and complex response structures\n\n## Description\n\nThis ticket enhances the mocking system to support conditional responses based on input parameters and complex response structures with metadata. This enables realistic testing of service interactions like GitHub API calls or EVM transactions with proper request/response matching.\n\n## Acceptance Criteria\n\n1. Mock definitions support `when` clauses for conditional responses\n2. `when` clauses can match on method arguments, input parameters, or request context\n3. Mock responses support complex nested structures with metadata (timestamps, IDs, etc.)\n4. Multiple mock responses can be defined for the same service/method with different conditions\n5. Mock system provides clear logging of which mock was triggered and why\n6. Mock responses can include realistic error conditions and edge cases\n7. Support for dynamic response generation based on input parameters\n8. Mock validation ensures `when` clauses are syntactically correct\n\n## Technical Approach\n\n### 1. Enhanced Mock Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst MockSchema = z.object({\n  service: z.string(),\n  method: z.string(),\n  when: z.object({\n    // Match on method arguments\n    args: z.array(z.any()).optional(),\n    // Match on specific argument values\n    input: z.record(z.any()).optional(),\n    // Match on request context\n    context: z.record(z.any()).optional(),\n    // Custom matching function\n    matcher: z.string().optional(), // JavaScript expression\n  }).optional(),\n  response: z.any(), // Can be function or static value\n  // For dynamic responses\n  responseFn: z.string().optional(), // JavaScript function\n  // Error simulation\n  error: z.object({\n    code: z.string(),\n    message: z.string(),\n  }).optional(),\n});\n```\n\n### 2. Mock Engine Implementation\n```typescript\n// packages/cli/src/scenarios/mock-engine.ts\nexport class MockEngine {\n  private mocks: MockDefinition[] = [];\n\n  addMock(mock: MockDefinition) {\n    this.mocks.push(mock);\n  }\n\n  async findMock(service: string, method: string, args: any[]): Promise<any> {\n    const candidates = this.mocks.filter(m => \n      m.service === service && m.method === method\n    );\n\n    for (const mock of candidates) {\n      if (await this.matchesCondition(mock, args)) {\n        this.logger.info(`Mock triggered: ${service}.${method} with condition: ${JSON.stringify(mock.when)}`);\n        return this.generateResponse(mock, args);\n      }\n    }\n\n    return null; // No mock found\n  }\n\n  private async matchesCondition(mock: MockDefinition, args: any[]): Promise<boolean> {\n    if (!mock.when) return true; // Default mock\n\n    // Match on arguments\n    if (mock.when.args) {\n      if (!this.deepEqual(args, mock.when.args)) return false;\n    }\n\n    // Match on input parameters\n    if (mock.when.input) {\n      const input = this.extractInputFromArgs(args);\n      if (!this.deepEqual(input, mock.when.input)) return false;\n    }\n\n    // Custom matcher function\n    if (mock.when.matcher) {\n      const matcherFn = new Function('args', 'input', mock.when.matcher);\n      return matcherFn(args, this.extractInputFromArgs(args));\n    }\n\n    return true;\n  }\n\n  private generateResponse(mock: MockDefinition, args: any[]): any {\n    if (mock.error) {\n      throw new Error(`${mock.error.code}: ${mock.error.message}`);\n    }\n\n    if (mock.responseFn) {\n      const responseFn = new Function('args', 'input', mock.responseFn);\n      return responseFn(args, this.extractInputFromArgs(args));\n    }\n\n    return mock.response;\n  }\n}\n```\n\n## Test Scenario\n\nCreate `advanced-mocking-test.scenario.yaml`:\n```yaml\nname: \"Advanced Mocking Test\"\ndescription: \"Tests conditional mocking and complex response structures\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    # Conditional GitHub issue search\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"bug\"\n        matcher: \"input.labels.includes('bug')\"\n      response:\n        - title: \"Critical Bug Found\"\n          number: 456\n          state: \"open\"\n          labels: [\"bug\", \"critical\"]\n          created_at: \"2024-07-15T10:00:00Z\"\n\n    # Conditional GitHub issue search - different response\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"feature\"\n        matcher: \"input.labels.includes('feature')\"\n      response:\n        - title: \"New Feature Request\"\n          number: 789\n          state: \"open\"\n          labels: [\"feature\", \"enhancement\"]\n          created_at: \"2024-07-15T11:00:00Z\"\n\n    # Dynamic EVM balance response\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      when:\n        args: [\"0x1234567890abcdef\"]\n      responseFn: |\n        return {\n          chain: \"ethereum\",\n          address: args[0],\n          balances: [\n            { symbol: \"ETH\", amount: \"1.23\" },\n            { symbol: \"USDC\", amount: \"1000.00\" }\n          ],\n          last_updated: new Date().toISOString()\n        }\n\n    # Error simulation\n    - service: \"github-service\"\n      method: \"readFile\"\n      when:\n        input:\n          path: \"/docs/nonexistent.md\"\n      error:\n        code: \"FILE_NOT_FOUND\"\n        message: \"File does not exist\"\n\nrun:\n  - name: \"Test conditional GitHub search\"\n    input: \"Search for issues with bug label\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"Critical Bug Found\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent correctly search for bug issues?\"\n        expected: \"yes\"\n\n  - name: \"Test dynamic EVM response\"\n    input: \"What's the balance for address 0x1234567890abcdef?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n      - type: \"string_contains\"\n        value: \"1000.00 USDC\"\n\n  - name: \"Test error handling\"\n    input: \"Read the file /docs/nonexistent.md\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.readFile\"\n      - type: \"string_contains\"\n        value: \"File does not exist\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Conditional Matching**: Test different responses based on input parameters\n2. **Dynamic Responses**: Test response generation based on arguments\n3. **Error Simulation**: Test error handling and reporting\n4. **Complex Structures**: Test nested response objects with metadata\n5. **Multiple Mocks**: Test multiple mocks for same service/method\n6. **Logging**: Verify mock selection is logged clearly\n\n## Dependencies\n\n- Builds on existing mock system in scenarios\n- Requires plugin system integration (Ticket 1)\n- Integrates with agent interaction testing (Ticket 3) ",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement conditional mocking and complex response structures",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5726,
                "node_id": "I_kwDOMT5cIs7Engk3",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5726",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:49:00Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/labels{/name}",
                "updated_at": "2025-08-07T05:32:53Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3298689704,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725",
                "body": "# feat(scenarios): Implement plugin specification and dynamic loading\n\n## Description\n\nThis ticket implements plugin specification in scenario YAML files, allowing scenarios to declare which plugins are required for testing. This enables testing of agent behaviors that depend on specific plugins like `@elizaos/plugin-github` or `@elizaos/plugin-evm`. The system will dynamically load specified plugins during scenario execution and make their actions, providers, and services available to the agent.\n\n## Acceptance Criteria\n\n1. Scenario YAML supports a `plugins` array at the root level with string plugin names\n2. The `initializeAgent()` function respects scenario plugin specifications and loads them via `startAgent()`\n3. Plugin loading follows the same dependency resolution and error handling as the main CLI\n4. Scenarios can specify both string plugin names (`@elizaos/plugin-github`) and direct plugin objects\n5. Plugin loading errors are clearly reported with actionable guidance\n6. Default plugins (bootstrap, sql) are automatically included unless explicitly excluded via `exclude_defaults: true`\n7. Plugin conflicts are detected and reported during scenario validation\n8. Plugin initialization errors don't crash the scenario but are reported in results\n\n## Technical Approach\n\n### 1. Update Scenario Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst ScenarioSchema = z.object({\n  name: z.string(),\n  description: z.string(),\n  plugins: z.array(z.string()).optional(), // e.g., [\"@elizaos/plugin-github\"]\n  exclude_defaults: z.boolean().optional(), // exclude bootstrap/sql\n  environment: EnvironmentSchema,\n  setup: SetupSchema.optional(),\n  run: z.array(RunStepSchema),\n  judgment: JudgmentSchema,\n});\n```\n\n### 2. Enhance Runtime Factory\n```typescript\n// packages/cli/src/scenarios/runtime-factory.ts\nexport async function initializeAgent(scenario: Scenario): Promise<IAgentRuntime> {\n  const character: Character = {\n    name: 'scenario-runner',\n    id: stringToUuid('scenario-runner'),\n    bio: 'A minimal character for running scenarios',\n    plugins: scenario.plugins || []\n  };\n\n  // Load default plugins unless excluded\n  if (!scenario.exclude_defaults) {\n    character.plugins.push('@elizaos/plugin-bootstrap', '@elizaos/plugin-sql');\n  }\n\n  const runtime = await startAgent(\n    encryptedCharacter(character),\n    server,\n    undefined,\n    character.plugins,\n    { isTestMode: true }\n  );\n\n  return runtime;\n}\n```\n\n### 3. Plugin Validation\n```typescript\n// packages/cli/src/scenarios/plugin-validator.ts\nexport async function validateScenarioPlugins(scenario: Scenario): Promise<ValidationResult[]> {\n  const results: ValidationResult[] = [];\n  \n  for (const pluginName of scenario.plugins || []) {\n    try {\n      const plugin = await loadAndPreparePlugin(pluginName);\n      if (!plugin) {\n        results.push({\n          type: 'error',\n          message: `Plugin '${pluginName}' could not be loaded`,\n          suggestion: 'Check if plugin is installed or built correctly'\n        });\n      }\n    } catch (error) {\n      results.push({\n        type: 'error', \n        message: `Failed to validate plugin '${pluginName}': ${error.message}`,\n        suggestion: 'Verify plugin dependencies and configuration'\n      });\n    }\n  }\n  \n  return results;\n}\n```\n\n## Test Scenario\n\nCreate `plugin-integration-test.scenario.yaml`:\n```yaml\nname: \"Plugin Integration Test\"\ndescription: \"Tests loading and using plugins specified in scenario YAML\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Test Issue\"\n          number: 123\n          state: \"open\"\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"1.23\"\n\nrun:\n  - name: \"Test GitHub plugin actions\"\n    input: \"Search for issues with label 'bug'\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify GitHub plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"Test Issue\"\n        description: \"Verify agent found the mocked issue\"\n\n  - name: \"Test EVM plugin actions\"\n    input: \"What's my wallet balance?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify EVM plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n        description: \"Verify agent reported the mocked balance\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Plugin Loading Test**: Verify plugins load without errors\n2. **Action Availability Test**: Confirm agent can use plugin actions\n3. **Error Handling Test**: Test with non-existent plugin\n4. **Default Plugin Test**: Verify bootstrap/sql are included by default\n5. **Exclusion Test**: Test `exclude_defaults: true` behavior\n\n## Dependencies\n\n- Fixes the `startAgent` hanging issue (#5719) to enable plugin testing\n- Builds on existing `loadAndPreparePlugin` functionality\n- Integrates with current scenario execution flow ",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement plugin specification and dynamic loading",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5725,
                "node_id": "I_kwDOMT5cIs7EngKo",
                "assignee": null,
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5725",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:48:08Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/labels{/name}",
                "updated_at": "2025-08-07T05:37:32Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              }
            ]
          },
          "issues": [
            {
              "id": 3310285907,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754",
              "body": "## Issue Summary\nThe `elizaos publish --npm` command reports successful publishing but the plugin is not actually published to npm, despite showing success messages. The npm publish is failing with a 404 error, but the ElizaOS CLI incorrectly reports success.\n\n## Key Problems Identified\n\n### 1. Critical NPM Publishing Failure\n- **Error**: `npm error 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found`\n- **Issue**: The package scope `@elizaos` doesn't exist on npm, preventing publishing\n- **Impact**: Package cannot be published to npm, but CLI reports success\n\n### 2. False Success Reporting\n- **Issue**: CLI reports `[‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm`\n- **Reality**: npm publish failed with 404 error\n- **Impact**: Developers believe their plugin is published when it's not\n\n### 3. Registry Repository Mismatch\n- **Expected**: Should create PR against `https://github.com/elizaos-plugins/registry`\n- **Actual**: Still references old registry `https://github.com/elizaos/registry`\n- **Impact**: Plugin won't appear in the official ElizaOS registry\n\n## Steps to Reproduce\n\n```bash\n# Navigate to the plugin directory\ncd packages/plugin-polygon\n\n# Ensure you're on the correct branch with the changes\ngit checkout polygon\n\n# Run the publish command\nelizaos publish --npm\n\n# Verify the success message appears\n# [‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm\n\n# Check if package actually exists on npm\nnpm view @elizaos/plugin-polygon@1.0.0\n# Result: 404 Not Found - '@elizaos/plugin-polygon@1.0.0' is not in this registry\n```\n\n## Technical Details\n\n### NPM Error Analysis\nThe npm logs show the root cause:\n```\nhttp fetch PUT 404 https://registry.npmjs.org/@elizaos%2fplugin-polygon 507ms\nerror 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found\n```\n\nThis indicates that the `@elizaos` scope doesn't exist on npm, which is required for publishing scoped packages.\n\n### CLI Error Handling Failure\nThe ElizaOS CLI is not properly parsing npm error codes:\n- npm returns exit code 1 (failure)\n- CLI ignores the error and reports success\n- No validation that the package actually exists on npm\n\n## Expected Behavior\n1. CLI should detect npm publish failures (exit code 1)\n2. CLI should fail with clear error message when package scope doesn't exist\n3. CLI should validate that package actually exists on npm after publishing\n4. CLI should create PRs against the correct registry repository\n\n## Recommended Fixes\n\n### 1. Fix NPM Error Detection\n```typescript\n// In the publish command, check npm exit code\nconst npmResult = await exec('npm publish', { cwd: pluginDir });\nif (npmResult.exitCode !== 0) {\n  throw new Error(`NPM publish failed: ${npmResult.stderr}`);\n}\n```\n\n### 2. Add Package Scope Validation\n```typescript\n// Before publishing, check if scope exists\nconst scopeExists = await checkNpmScope('@elizaos');\nif (!scopeExists) {\n  throw new Error('Package scope @elizaos does not exist on npm. Contact npm support to create the scope.');\n}\n```\n\n### 3. Add Post-Publish Validation\n```typescript\n// After publishing, verify package exists\nconst packageExists = await checkPackageExists(packageName, version);\nif (!packageExists) {\n  throw new Error(`Package was not published successfully. Check npm logs for details.`);\n}\n```\n\n## Priority\n**Critical** - This completely blocks plugin publishing and creates false success reports.\n\n## Affected Components\n- `packages/cli/src/commands/publish.ts`\n- NPM publishing logic\n- Error handling and success reporting\n- Package scope validation\n- Registry repository configuration\n\n## Immediate Action Required\n1. **Create the `@elizaos` scope on npm** or use an existing scope\n2. Update CLI to properly detect and handle npm publish failures\n3. Add post-publish validation to ensure packages actually exist on npm\n4. Update registry repository configuration\n\n## Alternative Solutions\n1. **Use existing scope**: Change package name to `@monilpat/plugin-polygon`\n2. **Create organization scope**: Set up `@elizaos` organization on npm\n3. **Use unscoped package**: Publish as `elizaos-plugin-polygon`\n\nThis issue is critically blocking plugin developers from successfully publishing their work and needs immediate attention from the ElizaOS team.\n",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "Critical: Plugin Publishing Fails with False Success Reports",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5754,
              "node_id": "I_kwDOMT5cIs7FTvRT",
              "assignee": null,
              "comments": 0,
              "html_url": "https://github.com/elizaOS/eliza/issues/5754",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-11T14:20:08Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/labels{/name}",
              "updated_at": "2025-08-11T14:20:08Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3308102900,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749",
              "body": "### Problem Statement\nCurrently, ElizaOS scenario testing lacks the ability to mock internal agent runtime calls (particularly LLM interactions) when testing via the API client. This makes it difficult to create deterministic tests for agent behavior and workflows.\n\n### Current Limitations\n- Global function mocks only work for code executed in the same process\n- No way to intercept `runtime.useModel` calls from the bootstrap plugin\n- Agent behavior is non-deterministic due to real LLM calls\n- Difficult to test specific agent decision paths and responses\n\n### Why Different Approach Was Needed\n\nThe existing mocking system was designed for **code execution environments** (E2B sandbox and local `node -e` processes), where mocks are applied to the execution context. However, **agent testing** works differently:\n\n- **E2B/Local Execution**: Code runs in isolated processes/sandboxes where global mocks can be applied\n- **Agent Testing**: Agent runs as a service with API client interaction, requiring direct runtime method interception\n- **Architecture Gap**: The bootstrap plugin calls `runtime.useModel` internally, which can't be mocked through the execution environment approach\n\nThis architectural difference necessitated a new approach that directly intercepts runtime methods rather than relying on execution context mocking.\n\n### Proposed Solution: Runtime Method Mocking\n\nWe've implemented a new mocking approach that directly intercepts `IAgentRuntime` method calls:\n\n#### Key Components\n\n1. **MockEngine Enhancement**\n   - Added `runtimeMethodMocks` to support mocking runtime methods\n   - Priority system: `runtimeMethod` > `service` > `globalFunction`\n   - Direct method replacement on the runtime instance\n\n2. **Schema Updates**\n   - Extended `MockSchema` to include `runtimeMethod: z.string().optional()`\n   - Supports mocking any `IAgentRuntime` method (e.g., `useModel`, `getService`)\n\n3. **Conditional Matching**\n   - Matcher functions can inspect method arguments\n   - Example: `\"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"`\n   - Supports complex conditional logic for when to apply mocks\n\n#### Usage Example\n\n```yaml\nsetup:\n  mocks:\n    - runtimeMethod: \"useModel\"\n      method: \"useModel\"\n      when:\n        matcher: \"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"\n      response: \"<response><name>agent</name><reasoning>Mocked response</reasoning><action>RESPOND</action></response>\"\n```\n\n#### Benefits\n\n1. **Deterministic Testing**: Replace LLM calls with static responses\n2. **Full Workflow Testing**: Test complete agent decision flows\n3. **Conditional Mocking**: Apply mocks based on specific conditions\n4. **Runtime Integration**: Works seamlessly with existing agent architecture\n5. **Backward Compatibility**: Existing mocks continue to work\n\n#### Implementation Steps\n\n- MockEngine runtime method support\n- Schema updates for runtimeMethod mocks\n- Conditional matching with matcher functions\n- Integration with scenario runner\n- Basic useModel mocking working\n- Add support for mocking other runtime methods (getService, etc.)\n- Create comprehensive test scenarios\n- Add documentation and examples\n- Consider adding mock recording/replay capabilities\n\n### Technical Details\n\nThe implementation works by:\n1. Creating the `IAgentRuntime` instance in the scenario runner\n2. Applying mocks directly to the runtime object before agent initialization\n3. The bootstrap plugin receives the mocked runtime and uses the mocked methods\n4. Mocks are reverted after scenario completion\n\nThis approach provides the foundation for robust, deterministic agent testing while maintaining the existing architecture.",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "Implement Runtime Method Mocking for Deterministic Agent Testing",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 7668252177,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/testing",
                  "name": "testing",
                  "color": "2D3957",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAAByRA-EQ",
                  "description": ""
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5749,
              "node_id": "I_kwDOMT5cIs7FLaT0",
              "assignee": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "comments": 0,
              "html_url": "https://github.com/elizaOS/eliza/issues/5749",
              "assignees": [
                {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-11T00:08:49Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/labels{/name}",
              "updated_at": "2025-08-11T00:09:37Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3304516859,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747",
              "body": null,
              "type": null,
              "user": {
                "id": 48334430,
                "url": "https://api.github.com/users/samarth30",
                "type": "User",
                "login": "samarth30",
                "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                "html_url": "https://github.com/samarth30",
                "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/samarth30/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/samarth30/followers",
                "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/samarth30/orgs",
                "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                "received_events_url": "https://api.github.com/users/samarth30/received_events"
              },
              "state": "open",
              "title": "Fixing bugs in eliza-cloud",
              "labels": [],
              "locked": false,
              "number": 5747,
              "node_id": "I_kwDOMT5cIs7E9uz7",
              "assignee": {
                "id": 48334430,
                "url": "https://api.github.com/users/samarth30",
                "type": "User",
                "login": "samarth30",
                "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                "html_url": "https://github.com/samarth30",
                "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/samarth30/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/samarth30/followers",
                "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/samarth30/orgs",
                "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                "received_events_url": "https://api.github.com/users/samarth30/received_events"
              },
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5747",
              "assignees": [
                {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-08T16:01:56Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/labels{/name}",
              "updated_at": "2025-08-08T19:02:49Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "MEMBER",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": {
                "id": 20150,
                "name": "Linear",
                "slug": "linear",
                "owner": {
                  "id": 46686594,
                  "url": "https://api.github.com/users/linear",
                  "type": "Organization",
                  "login": "linear",
                  "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ2Njg2NTk0",
                  "html_url": "https://github.com/linear",
                  "gists_url": "https://api.github.com/users/linear/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/linear/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/46686594?v=4",
                  "events_url": "https://api.github.com/users/linear/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/linear/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/linear/followers",
                  "following_url": "https://api.github.com/users/linear/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/linear/orgs",
                  "subscriptions_url": "https://api.github.com/users/linear/subscriptions",
                  "received_events_url": "https://api.github.com/users/linear/received_events"
                },
                "events": [
                  "check_suite",
                  "issues",
                  "issue_comment",
                  "pull_request",
                  "pull_request_review",
                  "repository",
                  "sub_issues"
                ],
                "node_id": "MDM6QXBwMjAxNTA=",
                "html_url": "https://github.com/apps/linear",
                "client_id": "Iv1.085d682ea245c945",
                "created_at": "2018-11-02T18:07:23Z",
                "updated_at": "2025-02-07T14:59:56Z",
                "description": "",
                "permissions": {
                  "checks": "read",
                  "issues": "write",
                  "metadata": "read",
                  "pull_requests": "write"
                },
                "external_url": "https://linear.app"
              }
            },
            {
              "id": 3302237103,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738",
              "body": "## Description\n\nThe `bun run clean` command is failing due to TypeScript errors in `@elizaos/core` package during the DTS (type definition) build phase.\n\n## Error Details\n\n### Build Process\n```\n‚Ä¢ Running build in 17 packages\n‚Ä¢ Remote caching disabled\n@elizaos/config:build: cache miss\n@elizaos/autodoc:build: cache miss\n@elizaos/core:build: cache miss\n```\n\n### TypeScript Errors in @elizaos/core/src/utils.ts\n1. Line 218: `error TS2345: Argument of type '`${string}-${string}-${string}-${string}-${string}`' is not assignable to parameter of type 'never'.`\n2. Line 366: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n3. Line 409: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n4. Line 536: `error TS2345: Argument of type '{ numberOfChunks: number; averageChunkSize: number; }' is not assignable to parameter of type 'never'.`\n\n### Impact\n- Blocks `bun run clean` command\n- Prevents successful build of `@elizaos/core`\n- Affects dependent packages in the monorepo\n\n## Steps to Reproduce\n1. Run `bun run clean`\n2. Observe build failure in `@elizaos/core`\n3. Build fails with TypeScript errors during DTS generation\n\n## Expected Behavior\n- `bun run clean` should complete successfully\n- `@elizaos/core` should build without TypeScript errors\n- Type definitions should be generated correctly\n\n## Suggested Fix\n\nThe errors suggest type mismatches in `utils.ts`. Need to:\n1. Review type definitions in affected lines\n2. Update type assertions or generic constraints\n3. Ensure string template literal types are properly handled\n4. Fix object type assignments\n\n### Files to Update\n- `packages/core/src/utils.ts`\n\n## Priority\n**HIGH** - This is blocking clean builds and potentially affecting development workflow.",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "üêõ Build failure in @elizaos/core causing bun run clean to fail",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5738,
              "node_id": "I_kwDOMT5cIs7E1COv",
              "assignee": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5738",
              "assignees": [
                {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-08T00:26:11Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/labels{/name}",
              "updated_at": "2025-08-11T14:56:01Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3301116813,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734",
              "body": "**Describe the bug**\n\nOn project creation, ElizaOS CLI fails with the following error:\n```\n‚óá  Failed to build project\nstdout: src/index.ts(7,25): error TS2345: Argument of type 'string' is not assignable to parameter of type 'undefined'.\nstderr: $ tsc --noEmit && vite build && tsup\n```\n\n**To Reproduce**\n\n- Install ElizaOS through `bun`\n```\nbun i -g @elizaos/cli\n```\n- Create new ElizaOS project\n```\nelizaos create abcde\n```\n\n**Expected behavior**\n\nProject built successfully\n\n**Screenshots**\n\n<img width=\"1095\" height=\"572\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/967dd6a2-0d70-4e2e-8019-85a2eab5f225\" />\n\n**Additional context**\n\nElizaOS CLI version: `1.3.2`\n",
              "type": null,
              "user": {
                "id": 74447600,
                "url": "https://api.github.com/users/Kemystra",
                "type": "User",
                "login": "Kemystra",
                "node_id": "MDQ6VXNlcjc0NDQ3NjAw",
                "html_url": "https://github.com/Kemystra",
                "gists_url": "https://api.github.com/users/Kemystra/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/Kemystra/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/74447600?v=4",
                "events_url": "https://api.github.com/users/Kemystra/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/Kemystra/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/Kemystra/followers",
                "following_url": "https://api.github.com/users/Kemystra/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/Kemystra/orgs",
                "subscriptions_url": "https://api.github.com/users/Kemystra/subscriptions",
                "received_events_url": "https://api.github.com/users/Kemystra/received_events"
              },
              "state": "open",
              "title": "Eliza CLI failed to build project",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5734,
              "node_id": "I_kwDOMT5cIs7EwwuN",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5734",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T16:14:00Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/labels{/name}",
              "updated_at": "2025-08-08T19:43:52Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "NONE",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3299481897,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729",
              "body": "# Relates to\r\n\r\nN/A (Documentation improvement, not tied to a specific issue or ticket)\r\n\r\n# Risks\r\n\r\nLow.  \r\nThis change only updates documentation and does not affect any code or functionality.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR updates the elizaos README to include a fix for installation errors that may occur due to permission issues. It adds a note suggesting the use of sudo if users encounter a \"Permission denied\" or \"InstallFailed\" error when running the `elizaos create my-agent` command.\r\n\r\n## What kind of change is this?\r\n\r\nImprovements (misc. changes to existing features)  \r\nDocumentation update\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes require a change to the project documentation.  \r\nI have updated the documentation accordingly.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\nStart by reviewing the changes in the README.md file, specifically the section on creating a new project.\r\n\r\n## Detailed testing steps\r\n\r\n- Open the updated README.md.\r\n- Review the new instructions under \"Create Your First Project.\"\r\n- Confirm that the added note about using `sudo` is clear and helpful for users who encounter permission errors.",
              "type": null,
              "user": {
                "id": 32749185,
                "url": "https://api.github.com/users/mandatedisrael",
                "type": "User",
                "login": "mandatedisrael",
                "node_id": "MDQ6VXNlcjMyNzQ5MTg1",
                "html_url": "https://github.com/mandatedisrael",
                "gists_url": "https://api.github.com/users/mandatedisrael/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/mandatedisrael/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/32749185?v=4",
                "events_url": "https://api.github.com/users/mandatedisrael/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/mandatedisrael/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/mandatedisrael/followers",
                "following_url": "https://api.github.com/users/mandatedisrael/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/mandatedisrael/orgs",
                "subscriptions_url": "https://api.github.com/users/mandatedisrael/subscriptions",
                "received_events_url": "https://api.github.com/users/mandatedisrael/received_events"
              },
              "draft": false,
              "state": "open",
              "title": "Update README.md to fix error",
              "labels": [],
              "locked": false,
              "number": 5729,
              "node_id": "PR_kwDOMT5cIs6iiNWN",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/pull/5729",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T08:10:12Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/labels{/name}",
              "updated_at": "2025-08-07T08:10:24Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/comments",
              "pull_request": {
                "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5729",
                "diff_url": "https://github.com/elizaOS/eliza/pull/5729.diff",
                "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                "merged_at": null,
                "patch_url": "https://github.com/elizaOS/eliza/pull/5729.patch"
              },
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "FIRST_TIME_CONTRIBUTOR",
              "performed_via_github_app": null
            },
            {
              "id": 3299322983,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728",
              "body": "# Background\r\n\r\n## What does this PR do?\r\n\r\nIntroduce entity for cancelling runs `CancelRunSignal`\r\n\r\n## Why are we doing this? Any context or related work?\r\n\r\n- Calls to LLMs usually cost some credits\r\n- When we receive the `RUN_STARTED` event we can check current entity and end run to prevent credits spending\r\n\r\n# Documentation changes needed?\r\n\r\n## Methods\r\n\r\n- `static getSignal(runId: UUID)` - get signal by runId or create if null\r\n- `static clear(runId: UUID)` - clear signal from map\r\n- `cancel(content?: Content)` - cancel current run and and send `content` as a response to user\r\n\r\n## Example\r\n\r\n```typescript\r\nimport { Content, EventType, Plugin } from \"@elizaos/core\";\r\nimport { CancelRunSignal } from \"@elizaos/plugin-bootstrap\";\r\n\r\n// consider we have a service to determine eligibility for entity\r\ninterface EligibilityService {\r\n  check(entityId: UUID): Promise<{ result: boolean, reason?: Content }>\r\n}\r\n\r\nconst plugin: Plugin = {\r\n...\r\n  events: {\r\n    [EventType.RUN_STARTED]: ({ entityId, runId, runtime }) => {\r\n      const service = runtime.getService<EligibilityService>(\"USER_MANAGEMENT\");\r\n      const { result, reason } = await service.check(entityId);\r\n      \r\n      if (!result) {\r\n        const signal = CancelRunSignal.getSignal(runId);\r\n        signal.cancel(reason);\r\n      }\r\n    },\r\n    ...\r\n  },\r\n  ...\r\n}\r\n\r\nexport default Plugin;\r\n```\r\n\r\n## Discord username\r\n\r\nalexd000\r\n\r\n",
              "type": null,
              "user": {
                "id": 82507604,
                "url": "https://api.github.com/users/alex-nax",
                "type": "User",
                "login": "alex-nax",
                "node_id": "MDQ6VXNlcjgyNTA3NjA0",
                "html_url": "https://github.com/alex-nax",
                "gists_url": "https://api.github.com/users/alex-nax/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/alex-nax/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/82507604?v=4",
                "events_url": "https://api.github.com/users/alex-nax/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/alex-nax/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/alex-nax/followers",
                "following_url": "https://api.github.com/users/alex-nax/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/alex-nax/orgs",
                "subscriptions_url": "https://api.github.com/users/alex-nax/subscriptions",
                "received_events_url": "https://api.github.com/users/alex-nax/received_events"
              },
              "draft": false,
              "state": "open",
              "title": "feat: ability to cancel current run before any calls to LLM are made",
              "labels": [],
              "locked": false,
              "number": 5728,
              "node_id": "PR_kwDOMT5cIs6ihriD",
              "assignee": null,
              "comments": 3,
              "html_url": "https://github.com/elizaOS/eliza/pull/5728",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T07:19:35Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/labels{/name}",
              "updated_at": "2025-08-07T07:22:05Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/comments",
              "pull_request": {
                "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5728",
                "diff_url": "https://github.com/elizaOS/eliza/pull/5728.diff",
                "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                "merged_at": null,
                "patch_url": "https://github.com/elizaOS/eliza/pull/5728.patch"
              },
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "FIRST_TIME_CONTRIBUTOR",
              "performed_via_github_app": null
            },
            {
              "id": 3298692741,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727",
              "body": "# feat(scenarios): Implement natural language agent interaction and response validation\n\n## Description\n\nThis ticket enables scenarios to test agent behavior through natural language interactions rather than direct code execution. This allows testing of agent reasoning, decision-making, and response generation in realistic conversation contexts with proper evaluation of agent responses.\n\n## Acceptance Criteria\n\n1. Scenario `run` blocks support `input` field for natural language prompts to agents\n2. Agent responses are captured and available for evaluation (text, thoughts, actions)\n3. Evaluators can access both agent response text and execution context\n4. Support for multi-turn conversations in scenarios\n5. Agent responses include thought process and action decisions\n6. Integration with existing evaluation engine for response validation\n7. Support for conversation context across multiple steps\n8. Agent response timing and performance metrics\n\n## Technical Approach\n\n### 1. Enhanced Run Step Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst RunStepSchema = z.object({\n  name: z.string().optional(),\n  // Natural language input to agent\n  input: z.string().optional(),\n  // Direct code execution (existing)\n  lang: z.string().optional(),\n  code: z.string().optional(),\n  // Agent interaction specific\n  agent_context: z.object({\n    conversation_id: z.string().optional(),\n    user_id: z.string().optional(),\n    room_id: z.string().optional(),\n  }).optional(),\n  evaluations: z.array(EvaluationSchema),\n});\n```\n\n### 2. Agent Interaction Engine\n```typescript\n// packages/cli/src/scenarios/agent-interaction.ts\nexport class AgentInteractionEngine {\n  constructor(private runtime: IAgentRuntime) {}\n\n  async interactWithAgent(input: string, context?: AgentContext): Promise<AgentResponse> {\n    // Create message for agent\n    const message: Memory = {\n      entityId: context?.user_id || 'scenario-user',\n      roomId: context?.room_id || 'scenario-room',\n      content: {\n        type: 'text',\n        text: input,\n      },\n      metadata: {\n        type: 'message',\n        conversationId: context?.conversation_id,\n      },\n    };\n\n    // Send to agent and capture response\n    const startTime = Date.now();\n    const response = await this.runtime.processMessage(message);\n    const endTime = Date.now();\n\n    return {\n      text: response.text,\n      thoughts: response.thoughts,\n      actions: response.actions,\n      timing: {\n        startTime,\n        endTime,\n        duration: endTime - startTime,\n      },\n      context: {\n        conversationId: context?.conversation_id,\n        messageId: message.id,\n      },\n    };\n  }\n}\n```\n\n### 3. Enhanced Execution Result\n```typescript\n// packages/cli/src/scenarios/providers.ts\nexport interface ExecutionResult {\n  exitCode: number;\n  stdout: string;\n  stderr: string;\n  files: Record<string, string>;\n  // New: Agent interaction results\n  agentResponse?: AgentResponse;\n  conversationHistory?: AgentResponse[];\n}\n```\n\n## Test Scenario\n\nCreate `agent-interaction-test.scenario.yaml`:\n```yaml\nname: \"Agent Interaction Test\"\ndescription: \"Tests natural language interaction with agents\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Implement Dark Mode\"\n          number: 123\n          state: \"open\"\n          labels: [\"feature\", \"ui\"]\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"2.5\"\n\nrun:\n  - name: \"Ask agent about roadmap\"\n    input: \"What new features are you planning to add?\"\n    agent_context:\n      conversation_id: \"roadmap-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify agent searched for issues\"\n      \n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n        description: \"Verify agent mentioned the mocked issue\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent provide a helpful and coherent response about new features?\"\n        expected: \"yes\"\n        description: \"Verify agent response quality\"\n\n  - name: \"Ask agent about wallet\"\n    input: \"What's my current wallet balance?\"\n    agent_context:\n      conversation_id: \"wallet-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify agent checked wallet balance\"\n      \n      - type: \"string_contains\"\n        value: \"2.5 ETH\"\n        description: \"Verify agent reported the correct balance\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent clearly explain the wallet balance information?\"\n        expected: \"yes\"\n\n  - name: \"Multi-turn conversation\"\n    input: \"Can you help me with both my wallet and roadmap?\"\n    agent_context:\n      conversation_id: \"multi-turn-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"ETH\"\n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent address both wallet and roadmap questions comprehensively?\"\n        expected: \"yes\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Single Turn**: Test basic agent interaction and response\n2. **Multi-turn**: Test conversation context across steps\n3. **Action Tracking**: Verify agent uses appropriate actions\n4. **Response Quality**: Test LLM judge evaluation of responses\n5. **Performance**: Test response timing and metrics\n6. **Error Handling**: Test agent behavior with invalid inputs\n\n## Dependencies\n\n- Requires plugin system integration (Ticket 1)\n- Builds on advanced mocking system (Ticket 2)\n- Integrates with existing evaluation engine\n- Depends on agent runtime message processing",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement natural language agent interaction and response validation",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5727,
              "node_id": "I_kwDOMT5cIs7Eng6F",
              "assignee": null,
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5727",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:49:34Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/labels{/name}",
              "updated_at": "2025-08-07T05:35:40Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3298691383,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726",
              "body": "# feat(scenarios): Implement conditional mocking and complex response structures\n\n## Description\n\nThis ticket enhances the mocking system to support conditional responses based on input parameters and complex response structures with metadata. This enables realistic testing of service interactions like GitHub API calls or EVM transactions with proper request/response matching.\n\n## Acceptance Criteria\n\n1. Mock definitions support `when` clauses for conditional responses\n2. `when` clauses can match on method arguments, input parameters, or request context\n3. Mock responses support complex nested structures with metadata (timestamps, IDs, etc.)\n4. Multiple mock responses can be defined for the same service/method with different conditions\n5. Mock system provides clear logging of which mock was triggered and why\n6. Mock responses can include realistic error conditions and edge cases\n7. Support for dynamic response generation based on input parameters\n8. Mock validation ensures `when` clauses are syntactically correct\n\n## Technical Approach\n\n### 1. Enhanced Mock Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst MockSchema = z.object({\n  service: z.string(),\n  method: z.string(),\n  when: z.object({\n    // Match on method arguments\n    args: z.array(z.any()).optional(),\n    // Match on specific argument values\n    input: z.record(z.any()).optional(),\n    // Match on request context\n    context: z.record(z.any()).optional(),\n    // Custom matching function\n    matcher: z.string().optional(), // JavaScript expression\n  }).optional(),\n  response: z.any(), // Can be function or static value\n  // For dynamic responses\n  responseFn: z.string().optional(), // JavaScript function\n  // Error simulation\n  error: z.object({\n    code: z.string(),\n    message: z.string(),\n  }).optional(),\n});\n```\n\n### 2. Mock Engine Implementation\n```typescript\n// packages/cli/src/scenarios/mock-engine.ts\nexport class MockEngine {\n  private mocks: MockDefinition[] = [];\n\n  addMock(mock: MockDefinition) {\n    this.mocks.push(mock);\n  }\n\n  async findMock(service: string, method: string, args: any[]): Promise<any> {\n    const candidates = this.mocks.filter(m => \n      m.service === service && m.method === method\n    );\n\n    for (const mock of candidates) {\n      if (await this.matchesCondition(mock, args)) {\n        this.logger.info(`Mock triggered: ${service}.${method} with condition: ${JSON.stringify(mock.when)}`);\n        return this.generateResponse(mock, args);\n      }\n    }\n\n    return null; // No mock found\n  }\n\n  private async matchesCondition(mock: MockDefinition, args: any[]): Promise<boolean> {\n    if (!mock.when) return true; // Default mock\n\n    // Match on arguments\n    if (mock.when.args) {\n      if (!this.deepEqual(args, mock.when.args)) return false;\n    }\n\n    // Match on input parameters\n    if (mock.when.input) {\n      const input = this.extractInputFromArgs(args);\n      if (!this.deepEqual(input, mock.when.input)) return false;\n    }\n\n    // Custom matcher function\n    if (mock.when.matcher) {\n      const matcherFn = new Function('args', 'input', mock.when.matcher);\n      return matcherFn(args, this.extractInputFromArgs(args));\n    }\n\n    return true;\n  }\n\n  private generateResponse(mock: MockDefinition, args: any[]): any {\n    if (mock.error) {\n      throw new Error(`${mock.error.code}: ${mock.error.message}`);\n    }\n\n    if (mock.responseFn) {\n      const responseFn = new Function('args', 'input', mock.responseFn);\n      return responseFn(args, this.extractInputFromArgs(args));\n    }\n\n    return mock.response;\n  }\n}\n```\n\n## Test Scenario\n\nCreate `advanced-mocking-test.scenario.yaml`:\n```yaml\nname: \"Advanced Mocking Test\"\ndescription: \"Tests conditional mocking and complex response structures\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    # Conditional GitHub issue search\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"bug\"\n        matcher: \"input.labels.includes('bug')\"\n      response:\n        - title: \"Critical Bug Found\"\n          number: 456\n          state: \"open\"\n          labels: [\"bug\", \"critical\"]\n          created_at: \"2024-07-15T10:00:00Z\"\n\n    # Conditional GitHub issue search - different response\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"feature\"\n        matcher: \"input.labels.includes('feature')\"\n      response:\n        - title: \"New Feature Request\"\n          number: 789\n          state: \"open\"\n          labels: [\"feature\", \"enhancement\"]\n          created_at: \"2024-07-15T11:00:00Z\"\n\n    # Dynamic EVM balance response\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      when:\n        args: [\"0x1234567890abcdef\"]\n      responseFn: |\n        return {\n          chain: \"ethereum\",\n          address: args[0],\n          balances: [\n            { symbol: \"ETH\", amount: \"1.23\" },\n            { symbol: \"USDC\", amount: \"1000.00\" }\n          ],\n          last_updated: new Date().toISOString()\n        }\n\n    # Error simulation\n    - service: \"github-service\"\n      method: \"readFile\"\n      when:\n        input:\n          path: \"/docs/nonexistent.md\"\n      error:\n        code: \"FILE_NOT_FOUND\"\n        message: \"File does not exist\"\n\nrun:\n  - name: \"Test conditional GitHub search\"\n    input: \"Search for issues with bug label\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"Critical Bug Found\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent correctly search for bug issues?\"\n        expected: \"yes\"\n\n  - name: \"Test dynamic EVM response\"\n    input: \"What's the balance for address 0x1234567890abcdef?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n      - type: \"string_contains\"\n        value: \"1000.00 USDC\"\n\n  - name: \"Test error handling\"\n    input: \"Read the file /docs/nonexistent.md\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.readFile\"\n      - type: \"string_contains\"\n        value: \"File does not exist\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Conditional Matching**: Test different responses based on input parameters\n2. **Dynamic Responses**: Test response generation based on arguments\n3. **Error Simulation**: Test error handling and reporting\n4. **Complex Structures**: Test nested response objects with metadata\n5. **Multiple Mocks**: Test multiple mocks for same service/method\n6. **Logging**: Verify mock selection is logged clearly\n\n## Dependencies\n\n- Builds on existing mock system in scenarios\n- Requires plugin system integration (Ticket 1)\n- Integrates with agent interaction testing (Ticket 3) ",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement conditional mocking and complex response structures",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5726,
              "node_id": "I_kwDOMT5cIs7Engk3",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5726",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:49:00Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/labels{/name}",
              "updated_at": "2025-08-07T05:32:53Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3298689704,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725",
              "body": "# feat(scenarios): Implement plugin specification and dynamic loading\n\n## Description\n\nThis ticket implements plugin specification in scenario YAML files, allowing scenarios to declare which plugins are required for testing. This enables testing of agent behaviors that depend on specific plugins like `@elizaos/plugin-github` or `@elizaos/plugin-evm`. The system will dynamically load specified plugins during scenario execution and make their actions, providers, and services available to the agent.\n\n## Acceptance Criteria\n\n1. Scenario YAML supports a `plugins` array at the root level with string plugin names\n2. The `initializeAgent()` function respects scenario plugin specifications and loads them via `startAgent()`\n3. Plugin loading follows the same dependency resolution and error handling as the main CLI\n4. Scenarios can specify both string plugin names (`@elizaos/plugin-github`) and direct plugin objects\n5. Plugin loading errors are clearly reported with actionable guidance\n6. Default plugins (bootstrap, sql) are automatically included unless explicitly excluded via `exclude_defaults: true`\n7. Plugin conflicts are detected and reported during scenario validation\n8. Plugin initialization errors don't crash the scenario but are reported in results\n\n## Technical Approach\n\n### 1. Update Scenario Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst ScenarioSchema = z.object({\n  name: z.string(),\n  description: z.string(),\n  plugins: z.array(z.string()).optional(), // e.g., [\"@elizaos/plugin-github\"]\n  exclude_defaults: z.boolean().optional(), // exclude bootstrap/sql\n  environment: EnvironmentSchema,\n  setup: SetupSchema.optional(),\n  run: z.array(RunStepSchema),\n  judgment: JudgmentSchema,\n});\n```\n\n### 2. Enhance Runtime Factory\n```typescript\n// packages/cli/src/scenarios/runtime-factory.ts\nexport async function initializeAgent(scenario: Scenario): Promise<IAgentRuntime> {\n  const character: Character = {\n    name: 'scenario-runner',\n    id: stringToUuid('scenario-runner'),\n    bio: 'A minimal character for running scenarios',\n    plugins: scenario.plugins || []\n  };\n\n  // Load default plugins unless excluded\n  if (!scenario.exclude_defaults) {\n    character.plugins.push('@elizaos/plugin-bootstrap', '@elizaos/plugin-sql');\n  }\n\n  const runtime = await startAgent(\n    encryptedCharacter(character),\n    server,\n    undefined,\n    character.plugins,\n    { isTestMode: true }\n  );\n\n  return runtime;\n}\n```\n\n### 3. Plugin Validation\n```typescript\n// packages/cli/src/scenarios/plugin-validator.ts\nexport async function validateScenarioPlugins(scenario: Scenario): Promise<ValidationResult[]> {\n  const results: ValidationResult[] = [];\n  \n  for (const pluginName of scenario.plugins || []) {\n    try {\n      const plugin = await loadAndPreparePlugin(pluginName);\n      if (!plugin) {\n        results.push({\n          type: 'error',\n          message: `Plugin '${pluginName}' could not be loaded`,\n          suggestion: 'Check if plugin is installed or built correctly'\n        });\n      }\n    } catch (error) {\n      results.push({\n        type: 'error', \n        message: `Failed to validate plugin '${pluginName}': ${error.message}`,\n        suggestion: 'Verify plugin dependencies and configuration'\n      });\n    }\n  }\n  \n  return results;\n}\n```\n\n## Test Scenario\n\nCreate `plugin-integration-test.scenario.yaml`:\n```yaml\nname: \"Plugin Integration Test\"\ndescription: \"Tests loading and using plugins specified in scenario YAML\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Test Issue\"\n          number: 123\n          state: \"open\"\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"1.23\"\n\nrun:\n  - name: \"Test GitHub plugin actions\"\n    input: \"Search for issues with label 'bug'\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify GitHub plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"Test Issue\"\n        description: \"Verify agent found the mocked issue\"\n\n  - name: \"Test EVM plugin actions\"\n    input: \"What's my wallet balance?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify EVM plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n        description: \"Verify agent reported the mocked balance\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Plugin Loading Test**: Verify plugins load without errors\n2. **Action Availability Test**: Confirm agent can use plugin actions\n3. **Error Handling Test**: Test with non-existent plugin\n4. **Default Plugin Test**: Verify bootstrap/sql are included by default\n5. **Exclusion Test**: Test `exclude_defaults: true` behavior\n\n## Dependencies\n\n- Fixes the `startAgent` hanging issue (#5719) to enable plugin testing\n- Builds on existing `loadAndPreparePlugin` functionality\n- Integrates with current scenario execution flow ",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement plugin specification and dynamic loading",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5725,
              "node_id": "I_kwDOMT5cIs7EngKo",
              "assignee": null,
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5725",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:48:08Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/labels{/name}",
              "updated_at": "2025-08-07T05:37:32Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            }
          ]
        },
        "text": "Open issues for elizaOS/eliza (10 shown):\n‚Ä¢ #5754: Critical: Plugin Publishing Fails with False Success Reports (open) [bug]\n‚Ä¢ #5749: Implement Runtime Method Mocking for Deterministic Agent Testing (open) [enhancement, testing, Reality Spiral]\n‚Ä¢ #5747: Fixing bugs in eliza-cloud (open)\n‚Ä¢ #5738: üêõ Build failure in @elizaos/core causing bun run clean to fail (open) [bug]\n‚Ä¢ #5734: Eliza CLI failed to build project (open) [bug]\n‚Ä¢ #5729: Update README.md to fix error (open)\n‚Ä¢ #5728: feat: ability to cancel current run before any calls to LLM are made (open)\n‚Ä¢ #5727: feat(scenarios): Implement natural language agent interaction and response validation (open) [enhancement, Reality Spiral]\n‚Ä¢ #5726: feat(scenarios): Implement conditional mocking and complex response structures (open) [enhancement, Reality Spiral]\n‚Ä¢ #5725: feat(scenarios): Implement plugin specification and dynamic loading (open) [enhancement, Reality Spiral]",
        "values": {
          "issues": [
            {
              "id": 3310285907,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754",
              "body": "## Issue Summary\nThe `elizaos publish --npm` command reports successful publishing but the plugin is not actually published to npm, despite showing success messages. The npm publish is failing with a 404 error, but the ElizaOS CLI incorrectly reports success.\n\n## Key Problems Identified\n\n### 1. Critical NPM Publishing Failure\n- **Error**: `npm error 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found`\n- **Issue**: The package scope `@elizaos` doesn't exist on npm, preventing publishing\n- **Impact**: Package cannot be published to npm, but CLI reports success\n\n### 2. False Success Reporting\n- **Issue**: CLI reports `[‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm`\n- **Reality**: npm publish failed with 404 error\n- **Impact**: Developers believe their plugin is published when it's not\n\n### 3. Registry Repository Mismatch\n- **Expected**: Should create PR against `https://github.com/elizaos-plugins/registry`\n- **Actual**: Still references old registry `https://github.com/elizaos/registry`\n- **Impact**: Plugin won't appear in the official ElizaOS registry\n\n## Steps to Reproduce\n\n```bash\n# Navigate to the plugin directory\ncd packages/plugin-polygon\n\n# Ensure you're on the correct branch with the changes\ngit checkout polygon\n\n# Run the publish command\nelizaos publish --npm\n\n# Verify the success message appears\n# [‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm\n\n# Check if package actually exists on npm\nnpm view @elizaos/plugin-polygon@1.0.0\n# Result: 404 Not Found - '@elizaos/plugin-polygon@1.0.0' is not in this registry\n```\n\n## Technical Details\n\n### NPM Error Analysis\nThe npm logs show the root cause:\n```\nhttp fetch PUT 404 https://registry.npmjs.org/@elizaos%2fplugin-polygon 507ms\nerror 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found\n```\n\nThis indicates that the `@elizaos` scope doesn't exist on npm, which is required for publishing scoped packages.\n\n### CLI Error Handling Failure\nThe ElizaOS CLI is not properly parsing npm error codes:\n- npm returns exit code 1 (failure)\n- CLI ignores the error and reports success\n- No validation that the package actually exists on npm\n\n## Expected Behavior\n1. CLI should detect npm publish failures (exit code 1)\n2. CLI should fail with clear error message when package scope doesn't exist\n3. CLI should validate that package actually exists on npm after publishing\n4. CLI should create PRs against the correct registry repository\n\n## Recommended Fixes\n\n### 1. Fix NPM Error Detection\n```typescript\n// In the publish command, check npm exit code\nconst npmResult = await exec('npm publish', { cwd: pluginDir });\nif (npmResult.exitCode !== 0) {\n  throw new Error(`NPM publish failed: ${npmResult.stderr}`);\n}\n```\n\n### 2. Add Package Scope Validation\n```typescript\n// Before publishing, check if scope exists\nconst scopeExists = await checkNpmScope('@elizaos');\nif (!scopeExists) {\n  throw new Error('Package scope @elizaos does not exist on npm. Contact npm support to create the scope.');\n}\n```\n\n### 3. Add Post-Publish Validation\n```typescript\n// After publishing, verify package exists\nconst packageExists = await checkPackageExists(packageName, version);\nif (!packageExists) {\n  throw new Error(`Package was not published successfully. Check npm logs for details.`);\n}\n```\n\n## Priority\n**Critical** - This completely blocks plugin publishing and creates false success reports.\n\n## Affected Components\n- `packages/cli/src/commands/publish.ts`\n- NPM publishing logic\n- Error handling and success reporting\n- Package scope validation\n- Registry repository configuration\n\n## Immediate Action Required\n1. **Create the `@elizaos` scope on npm** or use an existing scope\n2. Update CLI to properly detect and handle npm publish failures\n3. Add post-publish validation to ensure packages actually exist on npm\n4. Update registry repository configuration\n\n## Alternative Solutions\n1. **Use existing scope**: Change package name to `@monilpat/plugin-polygon`\n2. **Create organization scope**: Set up `@elizaos` organization on npm\n3. **Use unscoped package**: Publish as `elizaos-plugin-polygon`\n\nThis issue is critically blocking plugin developers from successfully publishing their work and needs immediate attention from the ElizaOS team.\n",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "Critical: Plugin Publishing Fails with False Success Reports",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5754,
              "node_id": "I_kwDOMT5cIs7FTvRT",
              "assignee": null,
              "comments": 0,
              "html_url": "https://github.com/elizaOS/eliza/issues/5754",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-11T14:20:08Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/labels{/name}",
              "updated_at": "2025-08-11T14:20:08Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3308102900,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749",
              "body": "### Problem Statement\nCurrently, ElizaOS scenario testing lacks the ability to mock internal agent runtime calls (particularly LLM interactions) when testing via the API client. This makes it difficult to create deterministic tests for agent behavior and workflows.\n\n### Current Limitations\n- Global function mocks only work for code executed in the same process\n- No way to intercept `runtime.useModel` calls from the bootstrap plugin\n- Agent behavior is non-deterministic due to real LLM calls\n- Difficult to test specific agent decision paths and responses\n\n### Why Different Approach Was Needed\n\nThe existing mocking system was designed for **code execution environments** (E2B sandbox and local `node -e` processes), where mocks are applied to the execution context. However, **agent testing** works differently:\n\n- **E2B/Local Execution**: Code runs in isolated processes/sandboxes where global mocks can be applied\n- **Agent Testing**: Agent runs as a service with API client interaction, requiring direct runtime method interception\n- **Architecture Gap**: The bootstrap plugin calls `runtime.useModel` internally, which can't be mocked through the execution environment approach\n\nThis architectural difference necessitated a new approach that directly intercepts runtime methods rather than relying on execution context mocking.\n\n### Proposed Solution: Runtime Method Mocking\n\nWe've implemented a new mocking approach that directly intercepts `IAgentRuntime` method calls:\n\n#### Key Components\n\n1. **MockEngine Enhancement**\n   - Added `runtimeMethodMocks` to support mocking runtime methods\n   - Priority system: `runtimeMethod` > `service` > `globalFunction`\n   - Direct method replacement on the runtime instance\n\n2. **Schema Updates**\n   - Extended `MockSchema` to include `runtimeMethod: z.string().optional()`\n   - Supports mocking any `IAgentRuntime` method (e.g., `useModel`, `getService`)\n\n3. **Conditional Matching**\n   - Matcher functions can inspect method arguments\n   - Example: `\"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"`\n   - Supports complex conditional logic for when to apply mocks\n\n#### Usage Example\n\n```yaml\nsetup:\n  mocks:\n    - runtimeMethod: \"useModel\"\n      method: \"useModel\"\n      when:\n        matcher: \"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"\n      response: \"<response><name>agent</name><reasoning>Mocked response</reasoning><action>RESPOND</action></response>\"\n```\n\n#### Benefits\n\n1. **Deterministic Testing**: Replace LLM calls with static responses\n2. **Full Workflow Testing**: Test complete agent decision flows\n3. **Conditional Mocking**: Apply mocks based on specific conditions\n4. **Runtime Integration**: Works seamlessly with existing agent architecture\n5. **Backward Compatibility**: Existing mocks continue to work\n\n#### Implementation Steps\n\n- MockEngine runtime method support\n- Schema updates for runtimeMethod mocks\n- Conditional matching with matcher functions\n- Integration with scenario runner\n- Basic useModel mocking working\n- Add support for mocking other runtime methods (getService, etc.)\n- Create comprehensive test scenarios\n- Add documentation and examples\n- Consider adding mock recording/replay capabilities\n\n### Technical Details\n\nThe implementation works by:\n1. Creating the `IAgentRuntime` instance in the scenario runner\n2. Applying mocks directly to the runtime object before agent initialization\n3. The bootstrap plugin receives the mocked runtime and uses the mocked methods\n4. Mocks are reverted after scenario completion\n\nThis approach provides the foundation for robust, deterministic agent testing while maintaining the existing architecture.",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "Implement Runtime Method Mocking for Deterministic Agent Testing",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 7668252177,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/testing",
                  "name": "testing",
                  "color": "2D3957",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAAByRA-EQ",
                  "description": ""
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5749,
              "node_id": "I_kwDOMT5cIs7FLaT0",
              "assignee": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "comments": 0,
              "html_url": "https://github.com/elizaOS/eliza/issues/5749",
              "assignees": [
                {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-11T00:08:49Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/labels{/name}",
              "updated_at": "2025-08-11T00:09:37Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3304516859,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747",
              "body": null,
              "type": null,
              "user": {
                "id": 48334430,
                "url": "https://api.github.com/users/samarth30",
                "type": "User",
                "login": "samarth30",
                "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                "html_url": "https://github.com/samarth30",
                "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/samarth30/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/samarth30/followers",
                "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/samarth30/orgs",
                "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                "received_events_url": "https://api.github.com/users/samarth30/received_events"
              },
              "state": "open",
              "title": "Fixing bugs in eliza-cloud",
              "labels": [],
              "locked": false,
              "number": 5747,
              "node_id": "I_kwDOMT5cIs7E9uz7",
              "assignee": {
                "id": 48334430,
                "url": "https://api.github.com/users/samarth30",
                "type": "User",
                "login": "samarth30",
                "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                "html_url": "https://github.com/samarth30",
                "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/samarth30/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/samarth30/followers",
                "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/samarth30/orgs",
                "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                "received_events_url": "https://api.github.com/users/samarth30/received_events"
              },
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5747",
              "assignees": [
                {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-08T16:01:56Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/labels{/name}",
              "updated_at": "2025-08-08T19:02:49Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "MEMBER",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": {
                "id": 20150,
                "name": "Linear",
                "slug": "linear",
                "owner": {
                  "id": 46686594,
                  "url": "https://api.github.com/users/linear",
                  "type": "Organization",
                  "login": "linear",
                  "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ2Njg2NTk0",
                  "html_url": "https://github.com/linear",
                  "gists_url": "https://api.github.com/users/linear/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/linear/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/46686594?v=4",
                  "events_url": "https://api.github.com/users/linear/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/linear/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/linear/followers",
                  "following_url": "https://api.github.com/users/linear/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/linear/orgs",
                  "subscriptions_url": "https://api.github.com/users/linear/subscriptions",
                  "received_events_url": "https://api.github.com/users/linear/received_events"
                },
                "events": [
                  "check_suite",
                  "issues",
                  "issue_comment",
                  "pull_request",
                  "pull_request_review",
                  "repository",
                  "sub_issues"
                ],
                "node_id": "MDM6QXBwMjAxNTA=",
                "html_url": "https://github.com/apps/linear",
                "client_id": "Iv1.085d682ea245c945",
                "created_at": "2018-11-02T18:07:23Z",
                "updated_at": "2025-02-07T14:59:56Z",
                "description": "",
                "permissions": {
                  "checks": "read",
                  "issues": "write",
                  "metadata": "read",
                  "pull_requests": "write"
                },
                "external_url": "https://linear.app"
              }
            },
            {
              "id": 3302237103,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738",
              "body": "## Description\n\nThe `bun run clean` command is failing due to TypeScript errors in `@elizaos/core` package during the DTS (type definition) build phase.\n\n## Error Details\n\n### Build Process\n```\n‚Ä¢ Running build in 17 packages\n‚Ä¢ Remote caching disabled\n@elizaos/config:build: cache miss\n@elizaos/autodoc:build: cache miss\n@elizaos/core:build: cache miss\n```\n\n### TypeScript Errors in @elizaos/core/src/utils.ts\n1. Line 218: `error TS2345: Argument of type '`${string}-${string}-${string}-${string}-${string}`' is not assignable to parameter of type 'never'.`\n2. Line 366: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n3. Line 409: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n4. Line 536: `error TS2345: Argument of type '{ numberOfChunks: number; averageChunkSize: number; }' is not assignable to parameter of type 'never'.`\n\n### Impact\n- Blocks `bun run clean` command\n- Prevents successful build of `@elizaos/core`\n- Affects dependent packages in the monorepo\n\n## Steps to Reproduce\n1. Run `bun run clean`\n2. Observe build failure in `@elizaos/core`\n3. Build fails with TypeScript errors during DTS generation\n\n## Expected Behavior\n- `bun run clean` should complete successfully\n- `@elizaos/core` should build without TypeScript errors\n- Type definitions should be generated correctly\n\n## Suggested Fix\n\nThe errors suggest type mismatches in `utils.ts`. Need to:\n1. Review type definitions in affected lines\n2. Update type assertions or generic constraints\n3. Ensure string template literal types are properly handled\n4. Fix object type assignments\n\n### Files to Update\n- `packages/core/src/utils.ts`\n\n## Priority\n**HIGH** - This is blocking clean builds and potentially affecting development workflow.",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "üêõ Build failure in @elizaos/core causing bun run clean to fail",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5738,
              "node_id": "I_kwDOMT5cIs7E1COv",
              "assignee": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5738",
              "assignees": [
                {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-08T00:26:11Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/labels{/name}",
              "updated_at": "2025-08-11T14:56:01Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3301116813,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734",
              "body": "**Describe the bug**\n\nOn project creation, ElizaOS CLI fails with the following error:\n```\n‚óá  Failed to build project\nstdout: src/index.ts(7,25): error TS2345: Argument of type 'string' is not assignable to parameter of type 'undefined'.\nstderr: $ tsc --noEmit && vite build && tsup\n```\n\n**To Reproduce**\n\n- Install ElizaOS through `bun`\n```\nbun i -g @elizaos/cli\n```\n- Create new ElizaOS project\n```\nelizaos create abcde\n```\n\n**Expected behavior**\n\nProject built successfully\n\n**Screenshots**\n\n<img width=\"1095\" height=\"572\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/967dd6a2-0d70-4e2e-8019-85a2eab5f225\" />\n\n**Additional context**\n\nElizaOS CLI version: `1.3.2`\n",
              "type": null,
              "user": {
                "id": 74447600,
                "url": "https://api.github.com/users/Kemystra",
                "type": "User",
                "login": "Kemystra",
                "node_id": "MDQ6VXNlcjc0NDQ3NjAw",
                "html_url": "https://github.com/Kemystra",
                "gists_url": "https://api.github.com/users/Kemystra/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/Kemystra/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/74447600?v=4",
                "events_url": "https://api.github.com/users/Kemystra/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/Kemystra/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/Kemystra/followers",
                "following_url": "https://api.github.com/users/Kemystra/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/Kemystra/orgs",
                "subscriptions_url": "https://api.github.com/users/Kemystra/subscriptions",
                "received_events_url": "https://api.github.com/users/Kemystra/received_events"
              },
              "state": "open",
              "title": "Eliza CLI failed to build project",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5734,
              "node_id": "I_kwDOMT5cIs7EwwuN",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5734",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T16:14:00Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/labels{/name}",
              "updated_at": "2025-08-08T19:43:52Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "NONE",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3299481897,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729",
              "body": "# Relates to\r\n\r\nN/A (Documentation improvement, not tied to a specific issue or ticket)\r\n\r\n# Risks\r\n\r\nLow.  \r\nThis change only updates documentation and does not affect any code or functionality.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR updates the elizaos README to include a fix for installation errors that may occur due to permission issues. It adds a note suggesting the use of sudo if users encounter a \"Permission denied\" or \"InstallFailed\" error when running the `elizaos create my-agent` command.\r\n\r\n## What kind of change is this?\r\n\r\nImprovements (misc. changes to existing features)  \r\nDocumentation update\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes require a change to the project documentation.  \r\nI have updated the documentation accordingly.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\nStart by reviewing the changes in the README.md file, specifically the section on creating a new project.\r\n\r\n## Detailed testing steps\r\n\r\n- Open the updated README.md.\r\n- Review the new instructions under \"Create Your First Project.\"\r\n- Confirm that the added note about using `sudo` is clear and helpful for users who encounter permission errors.",
              "type": null,
              "user": {
                "id": 32749185,
                "url": "https://api.github.com/users/mandatedisrael",
                "type": "User",
                "login": "mandatedisrael",
                "node_id": "MDQ6VXNlcjMyNzQ5MTg1",
                "html_url": "https://github.com/mandatedisrael",
                "gists_url": "https://api.github.com/users/mandatedisrael/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/mandatedisrael/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/32749185?v=4",
                "events_url": "https://api.github.com/users/mandatedisrael/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/mandatedisrael/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/mandatedisrael/followers",
                "following_url": "https://api.github.com/users/mandatedisrael/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/mandatedisrael/orgs",
                "subscriptions_url": "https://api.github.com/users/mandatedisrael/subscriptions",
                "received_events_url": "https://api.github.com/users/mandatedisrael/received_events"
              },
              "draft": false,
              "state": "open",
              "title": "Update README.md to fix error",
              "labels": [],
              "locked": false,
              "number": 5729,
              "node_id": "PR_kwDOMT5cIs6iiNWN",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/pull/5729",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T08:10:12Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/labels{/name}",
              "updated_at": "2025-08-07T08:10:24Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/comments",
              "pull_request": {
                "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5729",
                "diff_url": "https://github.com/elizaOS/eliza/pull/5729.diff",
                "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                "merged_at": null,
                "patch_url": "https://github.com/elizaOS/eliza/pull/5729.patch"
              },
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "FIRST_TIME_CONTRIBUTOR",
              "performed_via_github_app": null
            },
            {
              "id": 3299322983,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728",
              "body": "# Background\r\n\r\n## What does this PR do?\r\n\r\nIntroduce entity for cancelling runs `CancelRunSignal`\r\n\r\n## Why are we doing this? Any context or related work?\r\n\r\n- Calls to LLMs usually cost some credits\r\n- When we receive the `RUN_STARTED` event we can check current entity and end run to prevent credits spending\r\n\r\n# Documentation changes needed?\r\n\r\n## Methods\r\n\r\n- `static getSignal(runId: UUID)` - get signal by runId or create if null\r\n- `static clear(runId: UUID)` - clear signal from map\r\n- `cancel(content?: Content)` - cancel current run and and send `content` as a response to user\r\n\r\n## Example\r\n\r\n```typescript\r\nimport { Content, EventType, Plugin } from \"@elizaos/core\";\r\nimport { CancelRunSignal } from \"@elizaos/plugin-bootstrap\";\r\n\r\n// consider we have a service to determine eligibility for entity\r\ninterface EligibilityService {\r\n  check(entityId: UUID): Promise<{ result: boolean, reason?: Content }>\r\n}\r\n\r\nconst plugin: Plugin = {\r\n...\r\n  events: {\r\n    [EventType.RUN_STARTED]: ({ entityId, runId, runtime }) => {\r\n      const service = runtime.getService<EligibilityService>(\"USER_MANAGEMENT\");\r\n      const { result, reason } = await service.check(entityId);\r\n      \r\n      if (!result) {\r\n        const signal = CancelRunSignal.getSignal(runId);\r\n        signal.cancel(reason);\r\n      }\r\n    },\r\n    ...\r\n  },\r\n  ...\r\n}\r\n\r\nexport default Plugin;\r\n```\r\n\r\n## Discord username\r\n\r\nalexd000\r\n\r\n",
              "type": null,
              "user": {
                "id": 82507604,
                "url": "https://api.github.com/users/alex-nax",
                "type": "User",
                "login": "alex-nax",
                "node_id": "MDQ6VXNlcjgyNTA3NjA0",
                "html_url": "https://github.com/alex-nax",
                "gists_url": "https://api.github.com/users/alex-nax/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/alex-nax/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/82507604?v=4",
                "events_url": "https://api.github.com/users/alex-nax/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/alex-nax/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/alex-nax/followers",
                "following_url": "https://api.github.com/users/alex-nax/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/alex-nax/orgs",
                "subscriptions_url": "https://api.github.com/users/alex-nax/subscriptions",
                "received_events_url": "https://api.github.com/users/alex-nax/received_events"
              },
              "draft": false,
              "state": "open",
              "title": "feat: ability to cancel current run before any calls to LLM are made",
              "labels": [],
              "locked": false,
              "number": 5728,
              "node_id": "PR_kwDOMT5cIs6ihriD",
              "assignee": null,
              "comments": 3,
              "html_url": "https://github.com/elizaOS/eliza/pull/5728",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T07:19:35Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/labels{/name}",
              "updated_at": "2025-08-07T07:22:05Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/comments",
              "pull_request": {
                "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5728",
                "diff_url": "https://github.com/elizaOS/eliza/pull/5728.diff",
                "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                "merged_at": null,
                "patch_url": "https://github.com/elizaOS/eliza/pull/5728.patch"
              },
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "FIRST_TIME_CONTRIBUTOR",
              "performed_via_github_app": null
            },
            {
              "id": 3298692741,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727",
              "body": "# feat(scenarios): Implement natural language agent interaction and response validation\n\n## Description\n\nThis ticket enables scenarios to test agent behavior through natural language interactions rather than direct code execution. This allows testing of agent reasoning, decision-making, and response generation in realistic conversation contexts with proper evaluation of agent responses.\n\n## Acceptance Criteria\n\n1. Scenario `run` blocks support `input` field for natural language prompts to agents\n2. Agent responses are captured and available for evaluation (text, thoughts, actions)\n3. Evaluators can access both agent response text and execution context\n4. Support for multi-turn conversations in scenarios\n5. Agent responses include thought process and action decisions\n6. Integration with existing evaluation engine for response validation\n7. Support for conversation context across multiple steps\n8. Agent response timing and performance metrics\n\n## Technical Approach\n\n### 1. Enhanced Run Step Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst RunStepSchema = z.object({\n  name: z.string().optional(),\n  // Natural language input to agent\n  input: z.string().optional(),\n  // Direct code execution (existing)\n  lang: z.string().optional(),\n  code: z.string().optional(),\n  // Agent interaction specific\n  agent_context: z.object({\n    conversation_id: z.string().optional(),\n    user_id: z.string().optional(),\n    room_id: z.string().optional(),\n  }).optional(),\n  evaluations: z.array(EvaluationSchema),\n});\n```\n\n### 2. Agent Interaction Engine\n```typescript\n// packages/cli/src/scenarios/agent-interaction.ts\nexport class AgentInteractionEngine {\n  constructor(private runtime: IAgentRuntime) {}\n\n  async interactWithAgent(input: string, context?: AgentContext): Promise<AgentResponse> {\n    // Create message for agent\n    const message: Memory = {\n      entityId: context?.user_id || 'scenario-user',\n      roomId: context?.room_id || 'scenario-room',\n      content: {\n        type: 'text',\n        text: input,\n      },\n      metadata: {\n        type: 'message',\n        conversationId: context?.conversation_id,\n      },\n    };\n\n    // Send to agent and capture response\n    const startTime = Date.now();\n    const response = await this.runtime.processMessage(message);\n    const endTime = Date.now();\n\n    return {\n      text: response.text,\n      thoughts: response.thoughts,\n      actions: response.actions,\n      timing: {\n        startTime,\n        endTime,\n        duration: endTime - startTime,\n      },\n      context: {\n        conversationId: context?.conversation_id,\n        messageId: message.id,\n      },\n    };\n  }\n}\n```\n\n### 3. Enhanced Execution Result\n```typescript\n// packages/cli/src/scenarios/providers.ts\nexport interface ExecutionResult {\n  exitCode: number;\n  stdout: string;\n  stderr: string;\n  files: Record<string, string>;\n  // New: Agent interaction results\n  agentResponse?: AgentResponse;\n  conversationHistory?: AgentResponse[];\n}\n```\n\n## Test Scenario\n\nCreate `agent-interaction-test.scenario.yaml`:\n```yaml\nname: \"Agent Interaction Test\"\ndescription: \"Tests natural language interaction with agents\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Implement Dark Mode\"\n          number: 123\n          state: \"open\"\n          labels: [\"feature\", \"ui\"]\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"2.5\"\n\nrun:\n  - name: \"Ask agent about roadmap\"\n    input: \"What new features are you planning to add?\"\n    agent_context:\n      conversation_id: \"roadmap-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify agent searched for issues\"\n      \n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n        description: \"Verify agent mentioned the mocked issue\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent provide a helpful and coherent response about new features?\"\n        expected: \"yes\"\n        description: \"Verify agent response quality\"\n\n  - name: \"Ask agent about wallet\"\n    input: \"What's my current wallet balance?\"\n    agent_context:\n      conversation_id: \"wallet-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify agent checked wallet balance\"\n      \n      - type: \"string_contains\"\n        value: \"2.5 ETH\"\n        description: \"Verify agent reported the correct balance\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent clearly explain the wallet balance information?\"\n        expected: \"yes\"\n\n  - name: \"Multi-turn conversation\"\n    input: \"Can you help me with both my wallet and roadmap?\"\n    agent_context:\n      conversation_id: \"multi-turn-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"ETH\"\n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent address both wallet and roadmap questions comprehensively?\"\n        expected: \"yes\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Single Turn**: Test basic agent interaction and response\n2. **Multi-turn**: Test conversation context across steps\n3. **Action Tracking**: Verify agent uses appropriate actions\n4. **Response Quality**: Test LLM judge evaluation of responses\n5. **Performance**: Test response timing and metrics\n6. **Error Handling**: Test agent behavior with invalid inputs\n\n## Dependencies\n\n- Requires plugin system integration (Ticket 1)\n- Builds on advanced mocking system (Ticket 2)\n- Integrates with existing evaluation engine\n- Depends on agent runtime message processing",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement natural language agent interaction and response validation",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5727,
              "node_id": "I_kwDOMT5cIs7Eng6F",
              "assignee": null,
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5727",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:49:34Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/labels{/name}",
              "updated_at": "2025-08-07T05:35:40Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3298691383,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726",
              "body": "# feat(scenarios): Implement conditional mocking and complex response structures\n\n## Description\n\nThis ticket enhances the mocking system to support conditional responses based on input parameters and complex response structures with metadata. This enables realistic testing of service interactions like GitHub API calls or EVM transactions with proper request/response matching.\n\n## Acceptance Criteria\n\n1. Mock definitions support `when` clauses for conditional responses\n2. `when` clauses can match on method arguments, input parameters, or request context\n3. Mock responses support complex nested structures with metadata (timestamps, IDs, etc.)\n4. Multiple mock responses can be defined for the same service/method with different conditions\n5. Mock system provides clear logging of which mock was triggered and why\n6. Mock responses can include realistic error conditions and edge cases\n7. Support for dynamic response generation based on input parameters\n8. Mock validation ensures `when` clauses are syntactically correct\n\n## Technical Approach\n\n### 1. Enhanced Mock Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst MockSchema = z.object({\n  service: z.string(),\n  method: z.string(),\n  when: z.object({\n    // Match on method arguments\n    args: z.array(z.any()).optional(),\n    // Match on specific argument values\n    input: z.record(z.any()).optional(),\n    // Match on request context\n    context: z.record(z.any()).optional(),\n    // Custom matching function\n    matcher: z.string().optional(), // JavaScript expression\n  }).optional(),\n  response: z.any(), // Can be function or static value\n  // For dynamic responses\n  responseFn: z.string().optional(), // JavaScript function\n  // Error simulation\n  error: z.object({\n    code: z.string(),\n    message: z.string(),\n  }).optional(),\n});\n```\n\n### 2. Mock Engine Implementation\n```typescript\n// packages/cli/src/scenarios/mock-engine.ts\nexport class MockEngine {\n  private mocks: MockDefinition[] = [];\n\n  addMock(mock: MockDefinition) {\n    this.mocks.push(mock);\n  }\n\n  async findMock(service: string, method: string, args: any[]): Promise<any> {\n    const candidates = this.mocks.filter(m => \n      m.service === service && m.method === method\n    );\n\n    for (const mock of candidates) {\n      if (await this.matchesCondition(mock, args)) {\n        this.logger.info(`Mock triggered: ${service}.${method} with condition: ${JSON.stringify(mock.when)}`);\n        return this.generateResponse(mock, args);\n      }\n    }\n\n    return null; // No mock found\n  }\n\n  private async matchesCondition(mock: MockDefinition, args: any[]): Promise<boolean> {\n    if (!mock.when) return true; // Default mock\n\n    // Match on arguments\n    if (mock.when.args) {\n      if (!this.deepEqual(args, mock.when.args)) return false;\n    }\n\n    // Match on input parameters\n    if (mock.when.input) {\n      const input = this.extractInputFromArgs(args);\n      if (!this.deepEqual(input, mock.when.input)) return false;\n    }\n\n    // Custom matcher function\n    if (mock.when.matcher) {\n      const matcherFn = new Function('args', 'input', mock.when.matcher);\n      return matcherFn(args, this.extractInputFromArgs(args));\n    }\n\n    return true;\n  }\n\n  private generateResponse(mock: MockDefinition, args: any[]): any {\n    if (mock.error) {\n      throw new Error(`${mock.error.code}: ${mock.error.message}`);\n    }\n\n    if (mock.responseFn) {\n      const responseFn = new Function('args', 'input', mock.responseFn);\n      return responseFn(args, this.extractInputFromArgs(args));\n    }\n\n    return mock.response;\n  }\n}\n```\n\n## Test Scenario\n\nCreate `advanced-mocking-test.scenario.yaml`:\n```yaml\nname: \"Advanced Mocking Test\"\ndescription: \"Tests conditional mocking and complex response structures\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    # Conditional GitHub issue search\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"bug\"\n        matcher: \"input.labels.includes('bug')\"\n      response:\n        - title: \"Critical Bug Found\"\n          number: 456\n          state: \"open\"\n          labels: [\"bug\", \"critical\"]\n          created_at: \"2024-07-15T10:00:00Z\"\n\n    # Conditional GitHub issue search - different response\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"feature\"\n        matcher: \"input.labels.includes('feature')\"\n      response:\n        - title: \"New Feature Request\"\n          number: 789\n          state: \"open\"\n          labels: [\"feature\", \"enhancement\"]\n          created_at: \"2024-07-15T11:00:00Z\"\n\n    # Dynamic EVM balance response\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      when:\n        args: [\"0x1234567890abcdef\"]\n      responseFn: |\n        return {\n          chain: \"ethereum\",\n          address: args[0],\n          balances: [\n            { symbol: \"ETH\", amount: \"1.23\" },\n            { symbol: \"USDC\", amount: \"1000.00\" }\n          ],\n          last_updated: new Date().toISOString()\n        }\n\n    # Error simulation\n    - service: \"github-service\"\n      method: \"readFile\"\n      when:\n        input:\n          path: \"/docs/nonexistent.md\"\n      error:\n        code: \"FILE_NOT_FOUND\"\n        message: \"File does not exist\"\n\nrun:\n  - name: \"Test conditional GitHub search\"\n    input: \"Search for issues with bug label\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"Critical Bug Found\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent correctly search for bug issues?\"\n        expected: \"yes\"\n\n  - name: \"Test dynamic EVM response\"\n    input: \"What's the balance for address 0x1234567890abcdef?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n      - type: \"string_contains\"\n        value: \"1000.00 USDC\"\n\n  - name: \"Test error handling\"\n    input: \"Read the file /docs/nonexistent.md\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.readFile\"\n      - type: \"string_contains\"\n        value: \"File does not exist\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Conditional Matching**: Test different responses based on input parameters\n2. **Dynamic Responses**: Test response generation based on arguments\n3. **Error Simulation**: Test error handling and reporting\n4. **Complex Structures**: Test nested response objects with metadata\n5. **Multiple Mocks**: Test multiple mocks for same service/method\n6. **Logging**: Verify mock selection is logged clearly\n\n## Dependencies\n\n- Builds on existing mock system in scenarios\n- Requires plugin system integration (Ticket 1)\n- Integrates with agent interaction testing (Ticket 3) ",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement conditional mocking and complex response structures",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5726,
              "node_id": "I_kwDOMT5cIs7Engk3",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5726",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:49:00Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/labels{/name}",
              "updated_at": "2025-08-07T05:32:53Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3298689704,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725",
              "body": "# feat(scenarios): Implement plugin specification and dynamic loading\n\n## Description\n\nThis ticket implements plugin specification in scenario YAML files, allowing scenarios to declare which plugins are required for testing. This enables testing of agent behaviors that depend on specific plugins like `@elizaos/plugin-github` or `@elizaos/plugin-evm`. The system will dynamically load specified plugins during scenario execution and make their actions, providers, and services available to the agent.\n\n## Acceptance Criteria\n\n1. Scenario YAML supports a `plugins` array at the root level with string plugin names\n2. The `initializeAgent()` function respects scenario plugin specifications and loads them via `startAgent()`\n3. Plugin loading follows the same dependency resolution and error handling as the main CLI\n4. Scenarios can specify both string plugin names (`@elizaos/plugin-github`) and direct plugin objects\n5. Plugin loading errors are clearly reported with actionable guidance\n6. Default plugins (bootstrap, sql) are automatically included unless explicitly excluded via `exclude_defaults: true`\n7. Plugin conflicts are detected and reported during scenario validation\n8. Plugin initialization errors don't crash the scenario but are reported in results\n\n## Technical Approach\n\n### 1. Update Scenario Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst ScenarioSchema = z.object({\n  name: z.string(),\n  description: z.string(),\n  plugins: z.array(z.string()).optional(), // e.g., [\"@elizaos/plugin-github\"]\n  exclude_defaults: z.boolean().optional(), // exclude bootstrap/sql\n  environment: EnvironmentSchema,\n  setup: SetupSchema.optional(),\n  run: z.array(RunStepSchema),\n  judgment: JudgmentSchema,\n});\n```\n\n### 2. Enhance Runtime Factory\n```typescript\n// packages/cli/src/scenarios/runtime-factory.ts\nexport async function initializeAgent(scenario: Scenario): Promise<IAgentRuntime> {\n  const character: Character = {\n    name: 'scenario-runner',\n    id: stringToUuid('scenario-runner'),\n    bio: 'A minimal character for running scenarios',\n    plugins: scenario.plugins || []\n  };\n\n  // Load default plugins unless excluded\n  if (!scenario.exclude_defaults) {\n    character.plugins.push('@elizaos/plugin-bootstrap', '@elizaos/plugin-sql');\n  }\n\n  const runtime = await startAgent(\n    encryptedCharacter(character),\n    server,\n    undefined,\n    character.plugins,\n    { isTestMode: true }\n  );\n\n  return runtime;\n}\n```\n\n### 3. Plugin Validation\n```typescript\n// packages/cli/src/scenarios/plugin-validator.ts\nexport async function validateScenarioPlugins(scenario: Scenario): Promise<ValidationResult[]> {\n  const results: ValidationResult[] = [];\n  \n  for (const pluginName of scenario.plugins || []) {\n    try {\n      const plugin = await loadAndPreparePlugin(pluginName);\n      if (!plugin) {\n        results.push({\n          type: 'error',\n          message: `Plugin '${pluginName}' could not be loaded`,\n          suggestion: 'Check if plugin is installed or built correctly'\n        });\n      }\n    } catch (error) {\n      results.push({\n        type: 'error', \n        message: `Failed to validate plugin '${pluginName}': ${error.message}`,\n        suggestion: 'Verify plugin dependencies and configuration'\n      });\n    }\n  }\n  \n  return results;\n}\n```\n\n## Test Scenario\n\nCreate `plugin-integration-test.scenario.yaml`:\n```yaml\nname: \"Plugin Integration Test\"\ndescription: \"Tests loading and using plugins specified in scenario YAML\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Test Issue\"\n          number: 123\n          state: \"open\"\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"1.23\"\n\nrun:\n  - name: \"Test GitHub plugin actions\"\n    input: \"Search for issues with label 'bug'\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify GitHub plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"Test Issue\"\n        description: \"Verify agent found the mocked issue\"\n\n  - name: \"Test EVM plugin actions\"\n    input: \"What's my wallet balance?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify EVM plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n        description: \"Verify agent reported the mocked balance\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Plugin Loading Test**: Verify plugins load without errors\n2. **Action Availability Test**: Confirm agent can use plugin actions\n3. **Error Handling Test**: Test with non-existent plugin\n4. **Default Plugin Test**: Verify bootstrap/sql are included by default\n5. **Exclusion Test**: Test `exclude_defaults: true` behavior\n\n## Dependencies\n\n- Fixes the `startAgent` hanging issue (#5719) to enable plugin testing\n- Builds on existing `loadAndPreparePlugin` functionality\n- Integrates with current scenario execution flow ",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement plugin specification and dynamic loading",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5725,
              "node_id": "I_kwDOMT5cIs7EngKo",
              "assignee": null,
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5725",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:48:08Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/labels{/name}",
              "updated_at": "2025-08-07T05:37:32Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            }
          ],
          "issueCount": 10,
          "repository": "elizaOS/eliza"
        },
        "success": true
      },
      "actionStatus": "completed"
    },
    "entityId": "0137f0e4-d2e2-0ee6-82e5-af58b88ec91b",
    "agentId": "0137f0e4-d2e2-0ee6-82e5-af58b88ec91b",
    "roomId": "8756c98a-e695-05f5-8244-d938914f2d5c",
    "unique": true,
    "metadata": {
      "type": "action_result",
      "runId": "ced299c7-2de6-474d-b7db-7bbd0c7659aa",
      "actionId": "02c1bc4a-f0fa-4b39-bc4f-1eba4444224f",
      "actionName": "LIST_GITHUB_ISSUES",
      "totalSteps": 2,
      "currentStep": 2
    }
  },
  {
    "id": "f41033ee-d4b9-4706-b8e0-7f2c3706b4ee",
    "type": "messages",
    "createdAt": 1754969413083,
    "content": {
      "text": "Generated reply: Let me find the open issues for the elizaOS/eliza repository. I'll list them shortly.",
      "type": "action_result",
      "runId": "ced299c7-2de6-474d-b7db-7bbd0c7659aa",
      "source": "action",
      "planStep": "1/2",
      "actionName": "REPLY",
      "planThought": "I need to provide the list of open issues for the specified repository.",
      "actionResult": {
        "data": {
          "thought": "I'm preparing to list the open issues for the elizaOS/eliza repository.",
          "response": {
            "text": "Let me find the open issues for the elizaOS/eliza repository. I'll list them shortly.",
            "actions": [
              "REPLY"
            ],
            "thought": "I'm preparing to list the open issues for the elizaOS/eliza repository."
          },
          "actionName": "REPLY",
          "messageGenerated": true
        },
        "text": "Generated reply: Let me find the open issues for the elizaOS/eliza repository. I'll list them shortly.",
        "values": {
          "success": true,
          "lastReply": "Let me find the open issues for the elizaOS/eliza repository. I'll list them shortly.",
          "responded": true,
          "lastReplyTime": 1754969413082,
          "thoughtProcess": "I'm preparing to list the open issues for the elizaOS/eliza repository."
        },
        "success": true
      },
      "actionStatus": "completed"
    },
    "entityId": "0137f0e4-d2e2-0ee6-82e5-af58b88ec91b",
    "agentId": "0137f0e4-d2e2-0ee6-82e5-af58b88ec91b",
    "roomId": "8756c98a-e695-05f5-8244-d938914f2d5c",
    "unique": true,
    "metadata": {
      "type": "action_result",
      "runId": "ced299c7-2de6-474d-b7db-7bbd0c7659aa",
      "actionId": "f41033ee-d4b9-4706-b8e0-7f2c3706b4ee",
      "actionName": "REPLY",
      "totalSteps": 2,
      "currentStep": 1
    }
  },
  {
    "id": "017b8bca-d14a-44c8-a0b4-7a8d5777bc9c",
    "type": "messages",
    "createdAt": 1754969183967,
    "content": {
      "text": "Open issues for elizaOS/eliza (10 shown):\n‚Ä¢ #5754: Critical: Plugin Publishing Fails with False Success Reports (open) [bug]\n‚Ä¢ #5749: Implement Runtime Method Mocking for Deterministic Agent Testing (open) [enhancement, testing, Reality Spiral]\n‚Ä¢ #5747: Fixing bugs in eliza-cloud (open)\n‚Ä¢ #5738: üêõ Build failure in @elizaos/core causing bun run clean to fail (open) [bug]\n‚Ä¢ #5734: Eliza CLI failed to build project (open) [bug]\n‚Ä¢ #5729: Update README.md to fix error (open)\n‚Ä¢ #5728: feat: ability to cancel current run before any calls to LLM are made (open)\n‚Ä¢ #5727: feat(scenarios): Implement natural language agent interaction and response validation (open) [enhancement, Reality Spiral]\n‚Ä¢ #5726: feat(scenarios): Implement conditional mocking and complex response structures (open) [enhancement, Reality Spiral]\n‚Ä¢ #5725: feat(scenarios): Implement plugin specification and dynamic loading (open) [enhancement, Reality Spiral]",
      "type": "action_result",
      "runId": "b1397f56-9e2e-48ec-9f8b-aebabd16fd68",
      "source": "action",
      "planStep": "2/2",
      "actionName": "LIST_GITHUB_ISSUES",
      "planThought": "I'm going to list the open issues for the elizaOS/eliza repository as requested.",
      "actionResult": {
        "data": {
          "github": {
            "issues": {
              "elizaOS/eliza#5725": {
                "id": 3298689704,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725",
                "body": "# feat(scenarios): Implement plugin specification and dynamic loading\n\n## Description\n\nThis ticket implements plugin specification in scenario YAML files, allowing scenarios to declare which plugins are required for testing. This enables testing of agent behaviors that depend on specific plugins like `@elizaos/plugin-github` or `@elizaos/plugin-evm`. The system will dynamically load specified plugins during scenario execution and make their actions, providers, and services available to the agent.\n\n## Acceptance Criteria\n\n1. Scenario YAML supports a `plugins` array at the root level with string plugin names\n2. The `initializeAgent()` function respects scenario plugin specifications and loads them via `startAgent()`\n3. Plugin loading follows the same dependency resolution and error handling as the main CLI\n4. Scenarios can specify both string plugin names (`@elizaos/plugin-github`) and direct plugin objects\n5. Plugin loading errors are clearly reported with actionable guidance\n6. Default plugins (bootstrap, sql) are automatically included unless explicitly excluded via `exclude_defaults: true`\n7. Plugin conflicts are detected and reported during scenario validation\n8. Plugin initialization errors don't crash the scenario but are reported in results\n\n## Technical Approach\n\n### 1. Update Scenario Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst ScenarioSchema = z.object({\n  name: z.string(),\n  description: z.string(),\n  plugins: z.array(z.string()).optional(), // e.g., [\"@elizaos/plugin-github\"]\n  exclude_defaults: z.boolean().optional(), // exclude bootstrap/sql\n  environment: EnvironmentSchema,\n  setup: SetupSchema.optional(),\n  run: z.array(RunStepSchema),\n  judgment: JudgmentSchema,\n});\n```\n\n### 2. Enhance Runtime Factory\n```typescript\n// packages/cli/src/scenarios/runtime-factory.ts\nexport async function initializeAgent(scenario: Scenario): Promise<IAgentRuntime> {\n  const character: Character = {\n    name: 'scenario-runner',\n    id: stringToUuid('scenario-runner'),\n    bio: 'A minimal character for running scenarios',\n    plugins: scenario.plugins || []\n  };\n\n  // Load default plugins unless excluded\n  if (!scenario.exclude_defaults) {\n    character.plugins.push('@elizaos/plugin-bootstrap', '@elizaos/plugin-sql');\n  }\n\n  const runtime = await startAgent(\n    encryptedCharacter(character),\n    server,\n    undefined,\n    character.plugins,\n    { isTestMode: true }\n  );\n\n  return runtime;\n}\n```\n\n### 3. Plugin Validation\n```typescript\n// packages/cli/src/scenarios/plugin-validator.ts\nexport async function validateScenarioPlugins(scenario: Scenario): Promise<ValidationResult[]> {\n  const results: ValidationResult[] = [];\n  \n  for (const pluginName of scenario.plugins || []) {\n    try {\n      const plugin = await loadAndPreparePlugin(pluginName);\n      if (!plugin) {\n        results.push({\n          type: 'error',\n          message: `Plugin '${pluginName}' could not be loaded`,\n          suggestion: 'Check if plugin is installed or built correctly'\n        });\n      }\n    } catch (error) {\n      results.push({\n        type: 'error', \n        message: `Failed to validate plugin '${pluginName}': ${error.message}`,\n        suggestion: 'Verify plugin dependencies and configuration'\n      });\n    }\n  }\n  \n  return results;\n}\n```\n\n## Test Scenario\n\nCreate `plugin-integration-test.scenario.yaml`:\n```yaml\nname: \"Plugin Integration Test\"\ndescription: \"Tests loading and using plugins specified in scenario YAML\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Test Issue\"\n          number: 123\n          state: \"open\"\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"1.23\"\n\nrun:\n  - name: \"Test GitHub plugin actions\"\n    input: \"Search for issues with label 'bug'\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify GitHub plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"Test Issue\"\n        description: \"Verify agent found the mocked issue\"\n\n  - name: \"Test EVM plugin actions\"\n    input: \"What's my wallet balance?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify EVM plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n        description: \"Verify agent reported the mocked balance\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Plugin Loading Test**: Verify plugins load without errors\n2. **Action Availability Test**: Confirm agent can use plugin actions\n3. **Error Handling Test**: Test with non-existent plugin\n4. **Default Plugin Test**: Verify bootstrap/sql are included by default\n5. **Exclusion Test**: Test `exclude_defaults: true` behavior\n\n## Dependencies\n\n- Fixes the `startAgent` hanging issue (#5719) to enable plugin testing\n- Builds on existing `loadAndPreparePlugin` functionality\n- Integrates with current scenario execution flow ",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement plugin specification and dynamic loading",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5725,
                "node_id": "I_kwDOMT5cIs7EngKo",
                "assignee": null,
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5725",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:48:08Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/labels{/name}",
                "updated_at": "2025-08-07T05:37:32Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5726": {
                "id": 3298691383,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726",
                "body": "# feat(scenarios): Implement conditional mocking and complex response structures\n\n## Description\n\nThis ticket enhances the mocking system to support conditional responses based on input parameters and complex response structures with metadata. This enables realistic testing of service interactions like GitHub API calls or EVM transactions with proper request/response matching.\n\n## Acceptance Criteria\n\n1. Mock definitions support `when` clauses for conditional responses\n2. `when` clauses can match on method arguments, input parameters, or request context\n3. Mock responses support complex nested structures with metadata (timestamps, IDs, etc.)\n4. Multiple mock responses can be defined for the same service/method with different conditions\n5. Mock system provides clear logging of which mock was triggered and why\n6. Mock responses can include realistic error conditions and edge cases\n7. Support for dynamic response generation based on input parameters\n8. Mock validation ensures `when` clauses are syntactically correct\n\n## Technical Approach\n\n### 1. Enhanced Mock Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst MockSchema = z.object({\n  service: z.string(),\n  method: z.string(),\n  when: z.object({\n    // Match on method arguments\n    args: z.array(z.any()).optional(),\n    // Match on specific argument values\n    input: z.record(z.any()).optional(),\n    // Match on request context\n    context: z.record(z.any()).optional(),\n    // Custom matching function\n    matcher: z.string().optional(), // JavaScript expression\n  }).optional(),\n  response: z.any(), // Can be function or static value\n  // For dynamic responses\n  responseFn: z.string().optional(), // JavaScript function\n  // Error simulation\n  error: z.object({\n    code: z.string(),\n    message: z.string(),\n  }).optional(),\n});\n```\n\n### 2. Mock Engine Implementation\n```typescript\n// packages/cli/src/scenarios/mock-engine.ts\nexport class MockEngine {\n  private mocks: MockDefinition[] = [];\n\n  addMock(mock: MockDefinition) {\n    this.mocks.push(mock);\n  }\n\n  async findMock(service: string, method: string, args: any[]): Promise<any> {\n    const candidates = this.mocks.filter(m => \n      m.service === service && m.method === method\n    );\n\n    for (const mock of candidates) {\n      if (await this.matchesCondition(mock, args)) {\n        this.logger.info(`Mock triggered: ${service}.${method} with condition: ${JSON.stringify(mock.when)}`);\n        return this.generateResponse(mock, args);\n      }\n    }\n\n    return null; // No mock found\n  }\n\n  private async matchesCondition(mock: MockDefinition, args: any[]): Promise<boolean> {\n    if (!mock.when) return true; // Default mock\n\n    // Match on arguments\n    if (mock.when.args) {\n      if (!this.deepEqual(args, mock.when.args)) return false;\n    }\n\n    // Match on input parameters\n    if (mock.when.input) {\n      const input = this.extractInputFromArgs(args);\n      if (!this.deepEqual(input, mock.when.input)) return false;\n    }\n\n    // Custom matcher function\n    if (mock.when.matcher) {\n      const matcherFn = new Function('args', 'input', mock.when.matcher);\n      return matcherFn(args, this.extractInputFromArgs(args));\n    }\n\n    return true;\n  }\n\n  private generateResponse(mock: MockDefinition, args: any[]): any {\n    if (mock.error) {\n      throw new Error(`${mock.error.code}: ${mock.error.message}`);\n    }\n\n    if (mock.responseFn) {\n      const responseFn = new Function('args', 'input', mock.responseFn);\n      return responseFn(args, this.extractInputFromArgs(args));\n    }\n\n    return mock.response;\n  }\n}\n```\n\n## Test Scenario\n\nCreate `advanced-mocking-test.scenario.yaml`:\n```yaml\nname: \"Advanced Mocking Test\"\ndescription: \"Tests conditional mocking and complex response structures\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    # Conditional GitHub issue search\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"bug\"\n        matcher: \"input.labels.includes('bug')\"\n      response:\n        - title: \"Critical Bug Found\"\n          number: 456\n          state: \"open\"\n          labels: [\"bug\", \"critical\"]\n          created_at: \"2024-07-15T10:00:00Z\"\n\n    # Conditional GitHub issue search - different response\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"feature\"\n        matcher: \"input.labels.includes('feature')\"\n      response:\n        - title: \"New Feature Request\"\n          number: 789\n          state: \"open\"\n          labels: [\"feature\", \"enhancement\"]\n          created_at: \"2024-07-15T11:00:00Z\"\n\n    # Dynamic EVM balance response\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      when:\n        args: [\"0x1234567890abcdef\"]\n      responseFn: |\n        return {\n          chain: \"ethereum\",\n          address: args[0],\n          balances: [\n            { symbol: \"ETH\", amount: \"1.23\" },\n            { symbol: \"USDC\", amount: \"1000.00\" }\n          ],\n          last_updated: new Date().toISOString()\n        }\n\n    # Error simulation\n    - service: \"github-service\"\n      method: \"readFile\"\n      when:\n        input:\n          path: \"/docs/nonexistent.md\"\n      error:\n        code: \"FILE_NOT_FOUND\"\n        message: \"File does not exist\"\n\nrun:\n  - name: \"Test conditional GitHub search\"\n    input: \"Search for issues with bug label\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"Critical Bug Found\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent correctly search for bug issues?\"\n        expected: \"yes\"\n\n  - name: \"Test dynamic EVM response\"\n    input: \"What's the balance for address 0x1234567890abcdef?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n      - type: \"string_contains\"\n        value: \"1000.00 USDC\"\n\n  - name: \"Test error handling\"\n    input: \"Read the file /docs/nonexistent.md\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.readFile\"\n      - type: \"string_contains\"\n        value: \"File does not exist\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Conditional Matching**: Test different responses based on input parameters\n2. **Dynamic Responses**: Test response generation based on arguments\n3. **Error Simulation**: Test error handling and reporting\n4. **Complex Structures**: Test nested response objects with metadata\n5. **Multiple Mocks**: Test multiple mocks for same service/method\n6. **Logging**: Verify mock selection is logged clearly\n\n## Dependencies\n\n- Builds on existing mock system in scenarios\n- Requires plugin system integration (Ticket 1)\n- Integrates with agent interaction testing (Ticket 3) ",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement conditional mocking and complex response structures",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5726,
                "node_id": "I_kwDOMT5cIs7Engk3",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5726",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:49:00Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/labels{/name}",
                "updated_at": "2025-08-07T05:32:53Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5727": {
                "id": 3298692741,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727",
                "body": "# feat(scenarios): Implement natural language agent interaction and response validation\n\n## Description\n\nThis ticket enables scenarios to test agent behavior through natural language interactions rather than direct code execution. This allows testing of agent reasoning, decision-making, and response generation in realistic conversation contexts with proper evaluation of agent responses.\n\n## Acceptance Criteria\n\n1. Scenario `run` blocks support `input` field for natural language prompts to agents\n2. Agent responses are captured and available for evaluation (text, thoughts, actions)\n3. Evaluators can access both agent response text and execution context\n4. Support for multi-turn conversations in scenarios\n5. Agent responses include thought process and action decisions\n6. Integration with existing evaluation engine for response validation\n7. Support for conversation context across multiple steps\n8. Agent response timing and performance metrics\n\n## Technical Approach\n\n### 1. Enhanced Run Step Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst RunStepSchema = z.object({\n  name: z.string().optional(),\n  // Natural language input to agent\n  input: z.string().optional(),\n  // Direct code execution (existing)\n  lang: z.string().optional(),\n  code: z.string().optional(),\n  // Agent interaction specific\n  agent_context: z.object({\n    conversation_id: z.string().optional(),\n    user_id: z.string().optional(),\n    room_id: z.string().optional(),\n  }).optional(),\n  evaluations: z.array(EvaluationSchema),\n});\n```\n\n### 2. Agent Interaction Engine\n```typescript\n// packages/cli/src/scenarios/agent-interaction.ts\nexport class AgentInteractionEngine {\n  constructor(private runtime: IAgentRuntime) {}\n\n  async interactWithAgent(input: string, context?: AgentContext): Promise<AgentResponse> {\n    // Create message for agent\n    const message: Memory = {\n      entityId: context?.user_id || 'scenario-user',\n      roomId: context?.room_id || 'scenario-room',\n      content: {\n        type: 'text',\n        text: input,\n      },\n      metadata: {\n        type: 'message',\n        conversationId: context?.conversation_id,\n      },\n    };\n\n    // Send to agent and capture response\n    const startTime = Date.now();\n    const response = await this.runtime.processMessage(message);\n    const endTime = Date.now();\n\n    return {\n      text: response.text,\n      thoughts: response.thoughts,\n      actions: response.actions,\n      timing: {\n        startTime,\n        endTime,\n        duration: endTime - startTime,\n      },\n      context: {\n        conversationId: context?.conversation_id,\n        messageId: message.id,\n      },\n    };\n  }\n}\n```\n\n### 3. Enhanced Execution Result\n```typescript\n// packages/cli/src/scenarios/providers.ts\nexport interface ExecutionResult {\n  exitCode: number;\n  stdout: string;\n  stderr: string;\n  files: Record<string, string>;\n  // New: Agent interaction results\n  agentResponse?: AgentResponse;\n  conversationHistory?: AgentResponse[];\n}\n```\n\n## Test Scenario\n\nCreate `agent-interaction-test.scenario.yaml`:\n```yaml\nname: \"Agent Interaction Test\"\ndescription: \"Tests natural language interaction with agents\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Implement Dark Mode\"\n          number: 123\n          state: \"open\"\n          labels: [\"feature\", \"ui\"]\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"2.5\"\n\nrun:\n  - name: \"Ask agent about roadmap\"\n    input: \"What new features are you planning to add?\"\n    agent_context:\n      conversation_id: \"roadmap-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify agent searched for issues\"\n      \n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n        description: \"Verify agent mentioned the mocked issue\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent provide a helpful and coherent response about new features?\"\n        expected: \"yes\"\n        description: \"Verify agent response quality\"\n\n  - name: \"Ask agent about wallet\"\n    input: \"What's my current wallet balance?\"\n    agent_context:\n      conversation_id: \"wallet-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify agent checked wallet balance\"\n      \n      - type: \"string_contains\"\n        value: \"2.5 ETH\"\n        description: \"Verify agent reported the correct balance\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent clearly explain the wallet balance information?\"\n        expected: \"yes\"\n\n  - name: \"Multi-turn conversation\"\n    input: \"Can you help me with both my wallet and roadmap?\"\n    agent_context:\n      conversation_id: \"multi-turn-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"ETH\"\n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent address both wallet and roadmap questions comprehensively?\"\n        expected: \"yes\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Single Turn**: Test basic agent interaction and response\n2. **Multi-turn**: Test conversation context across steps\n3. **Action Tracking**: Verify agent uses appropriate actions\n4. **Response Quality**: Test LLM judge evaluation of responses\n5. **Performance**: Test response timing and metrics\n6. **Error Handling**: Test agent behavior with invalid inputs\n\n## Dependencies\n\n- Requires plugin system integration (Ticket 1)\n- Builds on advanced mocking system (Ticket 2)\n- Integrates with existing evaluation engine\n- Depends on agent runtime message processing",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement natural language agent interaction and response validation",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5727,
                "node_id": "I_kwDOMT5cIs7Eng6F",
                "assignee": null,
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5727",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:49:34Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/labels{/name}",
                "updated_at": "2025-08-07T05:35:40Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5728": {
                "id": 3299322983,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728",
                "body": "# Background\r\n\r\n## What does this PR do?\r\n\r\nIntroduce entity for cancelling runs `CancelRunSignal`\r\n\r\n## Why are we doing this? Any context or related work?\r\n\r\n- Calls to LLMs usually cost some credits\r\n- When we receive the `RUN_STARTED` event we can check current entity and end run to prevent credits spending\r\n\r\n# Documentation changes needed?\r\n\r\n## Methods\r\n\r\n- `static getSignal(runId: UUID)` - get signal by runId or create if null\r\n- `static clear(runId: UUID)` - clear signal from map\r\n- `cancel(content?: Content)` - cancel current run and and send `content` as a response to user\r\n\r\n## Example\r\n\r\n```typescript\r\nimport { Content, EventType, Plugin } from \"@elizaos/core\";\r\nimport { CancelRunSignal } from \"@elizaos/plugin-bootstrap\";\r\n\r\n// consider we have a service to determine eligibility for entity\r\ninterface EligibilityService {\r\n  check(entityId: UUID): Promise<{ result: boolean, reason?: Content }>\r\n}\r\n\r\nconst plugin: Plugin = {\r\n...\r\n  events: {\r\n    [EventType.RUN_STARTED]: ({ entityId, runId, runtime }) => {\r\n      const service = runtime.getService<EligibilityService>(\"USER_MANAGEMENT\");\r\n      const { result, reason } = await service.check(entityId);\r\n      \r\n      if (!result) {\r\n        const signal = CancelRunSignal.getSignal(runId);\r\n        signal.cancel(reason);\r\n      }\r\n    },\r\n    ...\r\n  },\r\n  ...\r\n}\r\n\r\nexport default Plugin;\r\n```\r\n\r\n## Discord username\r\n\r\nalexd000\r\n\r\n",
                "type": null,
                "user": {
                  "id": 82507604,
                  "url": "https://api.github.com/users/alex-nax",
                  "type": "User",
                  "login": "alex-nax",
                  "node_id": "MDQ6VXNlcjgyNTA3NjA0",
                  "html_url": "https://github.com/alex-nax",
                  "gists_url": "https://api.github.com/users/alex-nax/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/alex-nax/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/82507604?v=4",
                  "events_url": "https://api.github.com/users/alex-nax/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/alex-nax/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/alex-nax/followers",
                  "following_url": "https://api.github.com/users/alex-nax/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/alex-nax/orgs",
                  "subscriptions_url": "https://api.github.com/users/alex-nax/subscriptions",
                  "received_events_url": "https://api.github.com/users/alex-nax/received_events"
                },
                "draft": false,
                "state": "open",
                "title": "feat: ability to cancel current run before any calls to LLM are made",
                "labels": [],
                "locked": false,
                "number": 5728,
                "node_id": "PR_kwDOMT5cIs6ihriD",
                "assignee": null,
                "comments": 3,
                "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T07:19:35Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/labels{/name}",
                "updated_at": "2025-08-07T07:22:05Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/comments",
                "pull_request": {
                  "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5728",
                  "diff_url": "https://github.com/elizaOS/eliza/pull/5728.diff",
                  "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                  "merged_at": null,
                  "patch_url": "https://github.com/elizaOS/eliza/pull/5728.patch"
                },
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "FIRST_TIME_CONTRIBUTOR",
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5729": {
                "id": 3299481897,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729",
                "body": "# Relates to\r\n\r\nN/A (Documentation improvement, not tied to a specific issue or ticket)\r\n\r\n# Risks\r\n\r\nLow.  \r\nThis change only updates documentation and does not affect any code or functionality.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR updates the elizaos README to include a fix for installation errors that may occur due to permission issues. It adds a note suggesting the use of sudo if users encounter a \"Permission denied\" or \"InstallFailed\" error when running the `elizaos create my-agent` command.\r\n\r\n## What kind of change is this?\r\n\r\nImprovements (misc. changes to existing features)  \r\nDocumentation update\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes require a change to the project documentation.  \r\nI have updated the documentation accordingly.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\nStart by reviewing the changes in the README.md file, specifically the section on creating a new project.\r\n\r\n## Detailed testing steps\r\n\r\n- Open the updated README.md.\r\n- Review the new instructions under \"Create Your First Project.\"\r\n- Confirm that the added note about using `sudo` is clear and helpful for users who encounter permission errors.",
                "type": null,
                "user": {
                  "id": 32749185,
                  "url": "https://api.github.com/users/mandatedisrael",
                  "type": "User",
                  "login": "mandatedisrael",
                  "node_id": "MDQ6VXNlcjMyNzQ5MTg1",
                  "html_url": "https://github.com/mandatedisrael",
                  "gists_url": "https://api.github.com/users/mandatedisrael/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/mandatedisrael/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/32749185?v=4",
                  "events_url": "https://api.github.com/users/mandatedisrael/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/mandatedisrael/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/mandatedisrael/followers",
                  "following_url": "https://api.github.com/users/mandatedisrael/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/mandatedisrael/orgs",
                  "subscriptions_url": "https://api.github.com/users/mandatedisrael/subscriptions",
                  "received_events_url": "https://api.github.com/users/mandatedisrael/received_events"
                },
                "draft": false,
                "state": "open",
                "title": "Update README.md to fix error",
                "labels": [],
                "locked": false,
                "number": 5729,
                "node_id": "PR_kwDOMT5cIs6iiNWN",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T08:10:12Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/labels{/name}",
                "updated_at": "2025-08-07T08:10:24Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/comments",
                "pull_request": {
                  "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5729",
                  "diff_url": "https://github.com/elizaOS/eliza/pull/5729.diff",
                  "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                  "merged_at": null,
                  "patch_url": "https://github.com/elizaOS/eliza/pull/5729.patch"
                },
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "FIRST_TIME_CONTRIBUTOR",
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5734": {
                "id": 3301116813,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734",
                "body": "**Describe the bug**\n\nOn project creation, ElizaOS CLI fails with the following error:\n```\n‚óá  Failed to build project\nstdout: src/index.ts(7,25): error TS2345: Argument of type 'string' is not assignable to parameter of type 'undefined'.\nstderr: $ tsc --noEmit && vite build && tsup\n```\n\n**To Reproduce**\n\n- Install ElizaOS through `bun`\n```\nbun i -g @elizaos/cli\n```\n- Create new ElizaOS project\n```\nelizaos create abcde\n```\n\n**Expected behavior**\n\nProject built successfully\n\n**Screenshots**\n\n<img width=\"1095\" height=\"572\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/967dd6a2-0d70-4e2e-8019-85a2eab5f225\" />\n\n**Additional context**\n\nElizaOS CLI version: `1.3.2`\n",
                "type": null,
                "user": {
                  "id": 74447600,
                  "url": "https://api.github.com/users/Kemystra",
                  "type": "User",
                  "login": "Kemystra",
                  "node_id": "MDQ6VXNlcjc0NDQ3NjAw",
                  "html_url": "https://github.com/Kemystra",
                  "gists_url": "https://api.github.com/users/Kemystra/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/Kemystra/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/74447600?v=4",
                  "events_url": "https://api.github.com/users/Kemystra/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/Kemystra/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/Kemystra/followers",
                  "following_url": "https://api.github.com/users/Kemystra/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/Kemystra/orgs",
                  "subscriptions_url": "https://api.github.com/users/Kemystra/subscriptions",
                  "received_events_url": "https://api.github.com/users/Kemystra/received_events"
                },
                "state": "open",
                "title": "Eliza CLI failed to build project",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5734,
                "node_id": "I_kwDOMT5cIs7EwwuN",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5734",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T16:14:00Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/labels{/name}",
                "updated_at": "2025-08-08T19:43:52Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "NONE",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5738": {
                "id": 3302237103,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738",
                "body": "## Description\n\nThe `bun run clean` command is failing due to TypeScript errors in `@elizaos/core` package during the DTS (type definition) build phase.\n\n## Error Details\n\n### Build Process\n```\n‚Ä¢ Running build in 17 packages\n‚Ä¢ Remote caching disabled\n@elizaos/config:build: cache miss\n@elizaos/autodoc:build: cache miss\n@elizaos/core:build: cache miss\n```\n\n### TypeScript Errors in @elizaos/core/src/utils.ts\n1. Line 218: `error TS2345: Argument of type '`${string}-${string}-${string}-${string}-${string}`' is not assignable to parameter of type 'never'.`\n2. Line 366: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n3. Line 409: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n4. Line 536: `error TS2345: Argument of type '{ numberOfChunks: number; averageChunkSize: number; }' is not assignable to parameter of type 'never'.`\n\n### Impact\n- Blocks `bun run clean` command\n- Prevents successful build of `@elizaos/core`\n- Affects dependent packages in the monorepo\n\n## Steps to Reproduce\n1. Run `bun run clean`\n2. Observe build failure in `@elizaos/core`\n3. Build fails with TypeScript errors during DTS generation\n\n## Expected Behavior\n- `bun run clean` should complete successfully\n- `@elizaos/core` should build without TypeScript errors\n- Type definitions should be generated correctly\n\n## Suggested Fix\n\nThe errors suggest type mismatches in `utils.ts`. Need to:\n1. Review type definitions in affected lines\n2. Update type assertions or generic constraints\n3. Ensure string template literal types are properly handled\n4. Fix object type assignments\n\n### Files to Update\n- `packages/core/src/utils.ts`\n\n## Priority\n**HIGH** - This is blocking clean builds and potentially affecting development workflow.",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "üêõ Build failure in @elizaos/core causing bun run clean to fail",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5738,
                "node_id": "I_kwDOMT5cIs7E1COv",
                "assignee": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5738",
                "assignees": [
                  {
                    "id": 15067321,
                    "url": "https://api.github.com/users/monilpat",
                    "type": "User",
                    "login": "monilpat",
                    "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                    "html_url": "https://github.com/monilpat",
                    "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/monilpat/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                    "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/monilpat/followers",
                    "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/monilpat/orgs",
                    "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                    "received_events_url": "https://api.github.com/users/monilpat/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-08T00:26:11Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/labels{/name}",
                "updated_at": "2025-08-11T14:56:01Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5747": {
                "id": 3304516859,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747",
                "body": null,
                "type": null,
                "user": {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                },
                "state": "open",
                "title": "Fixing bugs in eliza-cloud",
                "labels": [],
                "locked": false,
                "number": 5747,
                "node_id": "I_kwDOMT5cIs7E9uz7",
                "assignee": {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                },
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5747",
                "assignees": [
                  {
                    "id": 48334430,
                    "url": "https://api.github.com/users/samarth30",
                    "type": "User",
                    "login": "samarth30",
                    "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                    "html_url": "https://github.com/samarth30",
                    "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/samarth30/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                    "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/samarth30/followers",
                    "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/samarth30/orgs",
                    "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                    "received_events_url": "https://api.github.com/users/samarth30/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-08T16:01:56Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/labels{/name}",
                "updated_at": "2025-08-08T19:02:49Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "MEMBER",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": {
                  "id": 20150,
                  "name": "Linear",
                  "slug": "linear",
                  "owner": {
                    "id": 46686594,
                    "url": "https://api.github.com/users/linear",
                    "type": "Organization",
                    "login": "linear",
                    "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ2Njg2NTk0",
                    "html_url": "https://github.com/linear",
                    "gists_url": "https://api.github.com/users/linear/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/linear/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/46686594?v=4",
                    "events_url": "https://api.github.com/users/linear/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/linear/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/linear/followers",
                    "following_url": "https://api.github.com/users/linear/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/linear/orgs",
                    "subscriptions_url": "https://api.github.com/users/linear/subscriptions",
                    "received_events_url": "https://api.github.com/users/linear/received_events"
                  },
                  "events": [
                    "check_suite",
                    "issues",
                    "issue_comment",
                    "pull_request",
                    "pull_request_review",
                    "repository",
                    "sub_issues"
                  ],
                  "node_id": "MDM6QXBwMjAxNTA=",
                  "html_url": "https://github.com/apps/linear",
                  "client_id": "Iv1.085d682ea245c945",
                  "created_at": "2018-11-02T18:07:23Z",
                  "updated_at": "2025-02-07T14:59:56Z",
                  "description": "",
                  "permissions": {
                    "checks": "read",
                    "issues": "write",
                    "metadata": "read",
                    "pull_requests": "write"
                  },
                  "external_url": "https://linear.app"
                }
              },
              "elizaOS/eliza#5749": {
                "id": 3308102900,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749",
                "body": "### Problem Statement\nCurrently, ElizaOS scenario testing lacks the ability to mock internal agent runtime calls (particularly LLM interactions) when testing via the API client. This makes it difficult to create deterministic tests for agent behavior and workflows.\n\n### Current Limitations\n- Global function mocks only work for code executed in the same process\n- No way to intercept `runtime.useModel` calls from the bootstrap plugin\n- Agent behavior is non-deterministic due to real LLM calls\n- Difficult to test specific agent decision paths and responses\n\n### Why Different Approach Was Needed\n\nThe existing mocking system was designed for **code execution environments** (E2B sandbox and local `node -e` processes), where mocks are applied to the execution context. However, **agent testing** works differently:\n\n- **E2B/Local Execution**: Code runs in isolated processes/sandboxes where global mocks can be applied\n- **Agent Testing**: Agent runs as a service with API client interaction, requiring direct runtime method interception\n- **Architecture Gap**: The bootstrap plugin calls `runtime.useModel` internally, which can't be mocked through the execution environment approach\n\nThis architectural difference necessitated a new approach that directly intercepts runtime methods rather than relying on execution context mocking.\n\n### Proposed Solution: Runtime Method Mocking\n\nWe've implemented a new mocking approach that directly intercepts `IAgentRuntime` method calls:\n\n#### Key Components\n\n1. **MockEngine Enhancement**\n   - Added `runtimeMethodMocks` to support mocking runtime methods\n   - Priority system: `runtimeMethod` > `service` > `globalFunction`\n   - Direct method replacement on the runtime instance\n\n2. **Schema Updates**\n   - Extended `MockSchema` to include `runtimeMethod: z.string().optional()`\n   - Supports mocking any `IAgentRuntime` method (e.g., `useModel`, `getService`)\n\n3. **Conditional Matching**\n   - Matcher functions can inspect method arguments\n   - Example: `\"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"`\n   - Supports complex conditional logic for when to apply mocks\n\n#### Usage Example\n\n```yaml\nsetup:\n  mocks:\n    - runtimeMethod: \"useModel\"\n      method: \"useModel\"\n      when:\n        matcher: \"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"\n      response: \"<response><name>agent</name><reasoning>Mocked response</reasoning><action>RESPOND</action></response>\"\n```\n\n#### Benefits\n\n1. **Deterministic Testing**: Replace LLM calls with static responses\n2. **Full Workflow Testing**: Test complete agent decision flows\n3. **Conditional Mocking**: Apply mocks based on specific conditions\n4. **Runtime Integration**: Works seamlessly with existing agent architecture\n5. **Backward Compatibility**: Existing mocks continue to work\n\n#### Implementation Steps\n\n- MockEngine runtime method support\n- Schema updates for runtimeMethod mocks\n- Conditional matching with matcher functions\n- Integration with scenario runner\n- Basic useModel mocking working\n- Add support for mocking other runtime methods (getService, etc.)\n- Create comprehensive test scenarios\n- Add documentation and examples\n- Consider adding mock recording/replay capabilities\n\n### Technical Details\n\nThe implementation works by:\n1. Creating the `IAgentRuntime` instance in the scenario runner\n2. Applying mocks directly to the runtime object before agent initialization\n3. The bootstrap plugin receives the mocked runtime and uses the mocked methods\n4. Mocks are reverted after scenario completion\n\nThis approach provides the foundation for robust, deterministic agent testing while maintaining the existing architecture.",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "Implement Runtime Method Mocking for Deterministic Agent Testing",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 7668252177,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/testing",
                    "name": "testing",
                    "color": "2D3957",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAAByRA-EQ",
                    "description": ""
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5749,
                "node_id": "I_kwDOMT5cIs7FLaT0",
                "assignee": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "comments": 0,
                "html_url": "https://github.com/elizaOS/eliza/issues/5749",
                "assignees": [
                  {
                    "id": 15067321,
                    "url": "https://api.github.com/users/monilpat",
                    "type": "User",
                    "login": "monilpat",
                    "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                    "html_url": "https://github.com/monilpat",
                    "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/monilpat/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                    "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/monilpat/followers",
                    "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/monilpat/orgs",
                    "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                    "received_events_url": "https://api.github.com/users/monilpat/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-11T00:08:49Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/labels{/name}",
                "updated_at": "2025-08-11T00:09:37Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5754": {
                "id": 3310285907,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754",
                "body": "## Issue Summary\nThe `elizaos publish --npm` command reports successful publishing but the plugin is not actually published to npm, despite showing success messages. The npm publish is failing with a 404 error, but the ElizaOS CLI incorrectly reports success.\n\n## Key Problems Identified\n\n### 1. Critical NPM Publishing Failure\n- **Error**: `npm error 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found`\n- **Issue**: The package scope `@elizaos` doesn't exist on npm, preventing publishing\n- **Impact**: Package cannot be published to npm, but CLI reports success\n\n### 2. False Success Reporting\n- **Issue**: CLI reports `[‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm`\n- **Reality**: npm publish failed with 404 error\n- **Impact**: Developers believe their plugin is published when it's not\n\n### 3. Registry Repository Mismatch\n- **Expected**: Should create PR against `https://github.com/elizaos-plugins/registry`\n- **Actual**: Still references old registry `https://github.com/elizaos/registry`\n- **Impact**: Plugin won't appear in the official ElizaOS registry\n\n## Steps to Reproduce\n\n```bash\n# Navigate to the plugin directory\ncd packages/plugin-polygon\n\n# Ensure you're on the correct branch with the changes\ngit checkout polygon\n\n# Run the publish command\nelizaos publish --npm\n\n# Verify the success message appears\n# [‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm\n\n# Check if package actually exists on npm\nnpm view @elizaos/plugin-polygon@1.0.0\n# Result: 404 Not Found - '@elizaos/plugin-polygon@1.0.0' is not in this registry\n```\n\n## Technical Details\n\n### NPM Error Analysis\nThe npm logs show the root cause:\n```\nhttp fetch PUT 404 https://registry.npmjs.org/@elizaos%2fplugin-polygon 507ms\nerror 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found\n```\n\nThis indicates that the `@elizaos` scope doesn't exist on npm, which is required for publishing scoped packages.\n\n### CLI Error Handling Failure\nThe ElizaOS CLI is not properly parsing npm error codes:\n- npm returns exit code 1 (failure)\n- CLI ignores the error and reports success\n- No validation that the package actually exists on npm\n\n## Expected Behavior\n1. CLI should detect npm publish failures (exit code 1)\n2. CLI should fail with clear error message when package scope doesn't exist\n3. CLI should validate that package actually exists on npm after publishing\n4. CLI should create PRs against the correct registry repository\n\n## Recommended Fixes\n\n### 1. Fix NPM Error Detection\n```typescript\n// In the publish command, check npm exit code\nconst npmResult = await exec('npm publish', { cwd: pluginDir });\nif (npmResult.exitCode !== 0) {\n  throw new Error(`NPM publish failed: ${npmResult.stderr}`);\n}\n```\n\n### 2. Add Package Scope Validation\n```typescript\n// Before publishing, check if scope exists\nconst scopeExists = await checkNpmScope('@elizaos');\nif (!scopeExists) {\n  throw new Error('Package scope @elizaos does not exist on npm. Contact npm support to create the scope.');\n}\n```\n\n### 3. Add Post-Publish Validation\n```typescript\n// After publishing, verify package exists\nconst packageExists = await checkPackageExists(packageName, version);\nif (!packageExists) {\n  throw new Error(`Package was not published successfully. Check npm logs for details.`);\n}\n```\n\n## Priority\n**Critical** - This completely blocks plugin publishing and creates false success reports.\n\n## Affected Components\n- `packages/cli/src/commands/publish.ts`\n- NPM publishing logic\n- Error handling and success reporting\n- Package scope validation\n- Registry repository configuration\n\n## Immediate Action Required\n1. **Create the `@elizaos` scope on npm** or use an existing scope\n2. Update CLI to properly detect and handle npm publish failures\n3. Add post-publish validation to ensure packages actually exist on npm\n4. Update registry repository configuration\n\n## Alternative Solutions\n1. **Use existing scope**: Change package name to `@monilpat/plugin-polygon`\n2. **Create organization scope**: Set up `@elizaos` organization on npm\n3. **Use unscoped package**: Publish as `elizaos-plugin-polygon`\n\nThis issue is critically blocking plugin developers from successfully publishing their work and needs immediate attention from the ElizaOS team.\n",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "Critical: Plugin Publishing Fails with False Success Reports",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5754,
                "node_id": "I_kwDOMT5cIs7FTvRT",
                "assignee": null,
                "comments": 0,
                "html_url": "https://github.com/elizaOS/eliza/issues/5754",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-11T14:20:08Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/labels{/name}",
                "updated_at": "2025-08-11T14:20:08Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              }
            },
            "lastIssues": [
              {
                "id": 3310285907,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754",
                "body": "## Issue Summary\nThe `elizaos publish --npm` command reports successful publishing but the plugin is not actually published to npm, despite showing success messages. The npm publish is failing with a 404 error, but the ElizaOS CLI incorrectly reports success.\n\n## Key Problems Identified\n\n### 1. Critical NPM Publishing Failure\n- **Error**: `npm error 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found`\n- **Issue**: The package scope `@elizaos` doesn't exist on npm, preventing publishing\n- **Impact**: Package cannot be published to npm, but CLI reports success\n\n### 2. False Success Reporting\n- **Issue**: CLI reports `[‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm`\n- **Reality**: npm publish failed with 404 error\n- **Impact**: Developers believe their plugin is published when it's not\n\n### 3. Registry Repository Mismatch\n- **Expected**: Should create PR against `https://github.com/elizaos-plugins/registry`\n- **Actual**: Still references old registry `https://github.com/elizaos/registry`\n- **Impact**: Plugin won't appear in the official ElizaOS registry\n\n## Steps to Reproduce\n\n```bash\n# Navigate to the plugin directory\ncd packages/plugin-polygon\n\n# Ensure you're on the correct branch with the changes\ngit checkout polygon\n\n# Run the publish command\nelizaos publish --npm\n\n# Verify the success message appears\n# [‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm\n\n# Check if package actually exists on npm\nnpm view @elizaos/plugin-polygon@1.0.0\n# Result: 404 Not Found - '@elizaos/plugin-polygon@1.0.0' is not in this registry\n```\n\n## Technical Details\n\n### NPM Error Analysis\nThe npm logs show the root cause:\n```\nhttp fetch PUT 404 https://registry.npmjs.org/@elizaos%2fplugin-polygon 507ms\nerror 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found\n```\n\nThis indicates that the `@elizaos` scope doesn't exist on npm, which is required for publishing scoped packages.\n\n### CLI Error Handling Failure\nThe ElizaOS CLI is not properly parsing npm error codes:\n- npm returns exit code 1 (failure)\n- CLI ignores the error and reports success\n- No validation that the package actually exists on npm\n\n## Expected Behavior\n1. CLI should detect npm publish failures (exit code 1)\n2. CLI should fail with clear error message when package scope doesn't exist\n3. CLI should validate that package actually exists on npm after publishing\n4. CLI should create PRs against the correct registry repository\n\n## Recommended Fixes\n\n### 1. Fix NPM Error Detection\n```typescript\n// In the publish command, check npm exit code\nconst npmResult = await exec('npm publish', { cwd: pluginDir });\nif (npmResult.exitCode !== 0) {\n  throw new Error(`NPM publish failed: ${npmResult.stderr}`);\n}\n```\n\n### 2. Add Package Scope Validation\n```typescript\n// Before publishing, check if scope exists\nconst scopeExists = await checkNpmScope('@elizaos');\nif (!scopeExists) {\n  throw new Error('Package scope @elizaos does not exist on npm. Contact npm support to create the scope.');\n}\n```\n\n### 3. Add Post-Publish Validation\n```typescript\n// After publishing, verify package exists\nconst packageExists = await checkPackageExists(packageName, version);\nif (!packageExists) {\n  throw new Error(`Package was not published successfully. Check npm logs for details.`);\n}\n```\n\n## Priority\n**Critical** - This completely blocks plugin publishing and creates false success reports.\n\n## Affected Components\n- `packages/cli/src/commands/publish.ts`\n- NPM publishing logic\n- Error handling and success reporting\n- Package scope validation\n- Registry repository configuration\n\n## Immediate Action Required\n1. **Create the `@elizaos` scope on npm** or use an existing scope\n2. Update CLI to properly detect and handle npm publish failures\n3. Add post-publish validation to ensure packages actually exist on npm\n4. Update registry repository configuration\n\n## Alternative Solutions\n1. **Use existing scope**: Change package name to `@monilpat/plugin-polygon`\n2. **Create organization scope**: Set up `@elizaos` organization on npm\n3. **Use unscoped package**: Publish as `elizaos-plugin-polygon`\n\nThis issue is critically blocking plugin developers from successfully publishing their work and needs immediate attention from the ElizaOS team.\n",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "Critical: Plugin Publishing Fails with False Success Reports",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5754,
                "node_id": "I_kwDOMT5cIs7FTvRT",
                "assignee": null,
                "comments": 0,
                "html_url": "https://github.com/elizaOS/eliza/issues/5754",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-11T14:20:08Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/labels{/name}",
                "updated_at": "2025-08-11T14:20:08Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3308102900,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749",
                "body": "### Problem Statement\nCurrently, ElizaOS scenario testing lacks the ability to mock internal agent runtime calls (particularly LLM interactions) when testing via the API client. This makes it difficult to create deterministic tests for agent behavior and workflows.\n\n### Current Limitations\n- Global function mocks only work for code executed in the same process\n- No way to intercept `runtime.useModel` calls from the bootstrap plugin\n- Agent behavior is non-deterministic due to real LLM calls\n- Difficult to test specific agent decision paths and responses\n\n### Why Different Approach Was Needed\n\nThe existing mocking system was designed for **code execution environments** (E2B sandbox and local `node -e` processes), where mocks are applied to the execution context. However, **agent testing** works differently:\n\n- **E2B/Local Execution**: Code runs in isolated processes/sandboxes where global mocks can be applied\n- **Agent Testing**: Agent runs as a service with API client interaction, requiring direct runtime method interception\n- **Architecture Gap**: The bootstrap plugin calls `runtime.useModel` internally, which can't be mocked through the execution environment approach\n\nThis architectural difference necessitated a new approach that directly intercepts runtime methods rather than relying on execution context mocking.\n\n### Proposed Solution: Runtime Method Mocking\n\nWe've implemented a new mocking approach that directly intercepts `IAgentRuntime` method calls:\n\n#### Key Components\n\n1. **MockEngine Enhancement**\n   - Added `runtimeMethodMocks` to support mocking runtime methods\n   - Priority system: `runtimeMethod` > `service` > `globalFunction`\n   - Direct method replacement on the runtime instance\n\n2. **Schema Updates**\n   - Extended `MockSchema` to include `runtimeMethod: z.string().optional()`\n   - Supports mocking any `IAgentRuntime` method (e.g., `useModel`, `getService`)\n\n3. **Conditional Matching**\n   - Matcher functions can inspect method arguments\n   - Example: `\"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"`\n   - Supports complex conditional logic for when to apply mocks\n\n#### Usage Example\n\n```yaml\nsetup:\n  mocks:\n    - runtimeMethod: \"useModel\"\n      method: \"useModel\"\n      when:\n        matcher: \"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"\n      response: \"<response><name>agent</name><reasoning>Mocked response</reasoning><action>RESPOND</action></response>\"\n```\n\n#### Benefits\n\n1. **Deterministic Testing**: Replace LLM calls with static responses\n2. **Full Workflow Testing**: Test complete agent decision flows\n3. **Conditional Mocking**: Apply mocks based on specific conditions\n4. **Runtime Integration**: Works seamlessly with existing agent architecture\n5. **Backward Compatibility**: Existing mocks continue to work\n\n#### Implementation Steps\n\n- MockEngine runtime method support\n- Schema updates for runtimeMethod mocks\n- Conditional matching with matcher functions\n- Integration with scenario runner\n- Basic useModel mocking working\n- Add support for mocking other runtime methods (getService, etc.)\n- Create comprehensive test scenarios\n- Add documentation and examples\n- Consider adding mock recording/replay capabilities\n\n### Technical Details\n\nThe implementation works by:\n1. Creating the `IAgentRuntime` instance in the scenario runner\n2. Applying mocks directly to the runtime object before agent initialization\n3. The bootstrap plugin receives the mocked runtime and uses the mocked methods\n4. Mocks are reverted after scenario completion\n\nThis approach provides the foundation for robust, deterministic agent testing while maintaining the existing architecture.",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "Implement Runtime Method Mocking for Deterministic Agent Testing",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 7668252177,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/testing",
                    "name": "testing",
                    "color": "2D3957",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAAByRA-EQ",
                    "description": ""
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5749,
                "node_id": "I_kwDOMT5cIs7FLaT0",
                "assignee": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "comments": 0,
                "html_url": "https://github.com/elizaOS/eliza/issues/5749",
                "assignees": [
                  {
                    "id": 15067321,
                    "url": "https://api.github.com/users/monilpat",
                    "type": "User",
                    "login": "monilpat",
                    "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                    "html_url": "https://github.com/monilpat",
                    "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/monilpat/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                    "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/monilpat/followers",
                    "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/monilpat/orgs",
                    "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                    "received_events_url": "https://api.github.com/users/monilpat/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-11T00:08:49Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/labels{/name}",
                "updated_at": "2025-08-11T00:09:37Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3304516859,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747",
                "body": null,
                "type": null,
                "user": {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                },
                "state": "open",
                "title": "Fixing bugs in eliza-cloud",
                "labels": [],
                "locked": false,
                "number": 5747,
                "node_id": "I_kwDOMT5cIs7E9uz7",
                "assignee": {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                },
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5747",
                "assignees": [
                  {
                    "id": 48334430,
                    "url": "https://api.github.com/users/samarth30",
                    "type": "User",
                    "login": "samarth30",
                    "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                    "html_url": "https://github.com/samarth30",
                    "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/samarth30/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                    "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/samarth30/followers",
                    "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/samarth30/orgs",
                    "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                    "received_events_url": "https://api.github.com/users/samarth30/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-08T16:01:56Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/labels{/name}",
                "updated_at": "2025-08-08T19:02:49Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "MEMBER",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": {
                  "id": 20150,
                  "name": "Linear",
                  "slug": "linear",
                  "owner": {
                    "id": 46686594,
                    "url": "https://api.github.com/users/linear",
                    "type": "Organization",
                    "login": "linear",
                    "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ2Njg2NTk0",
                    "html_url": "https://github.com/linear",
                    "gists_url": "https://api.github.com/users/linear/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/linear/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/46686594?v=4",
                    "events_url": "https://api.github.com/users/linear/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/linear/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/linear/followers",
                    "following_url": "https://api.github.com/users/linear/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/linear/orgs",
                    "subscriptions_url": "https://api.github.com/users/linear/subscriptions",
                    "received_events_url": "https://api.github.com/users/linear/received_events"
                  },
                  "events": [
                    "check_suite",
                    "issues",
                    "issue_comment",
                    "pull_request",
                    "pull_request_review",
                    "repository",
                    "sub_issues"
                  ],
                  "node_id": "MDM6QXBwMjAxNTA=",
                  "html_url": "https://github.com/apps/linear",
                  "client_id": "Iv1.085d682ea245c945",
                  "created_at": "2018-11-02T18:07:23Z",
                  "updated_at": "2025-02-07T14:59:56Z",
                  "description": "",
                  "permissions": {
                    "checks": "read",
                    "issues": "write",
                    "metadata": "read",
                    "pull_requests": "write"
                  },
                  "external_url": "https://linear.app"
                }
              },
              {
                "id": 3302237103,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738",
                "body": "## Description\n\nThe `bun run clean` command is failing due to TypeScript errors in `@elizaos/core` package during the DTS (type definition) build phase.\n\n## Error Details\n\n### Build Process\n```\n‚Ä¢ Running build in 17 packages\n‚Ä¢ Remote caching disabled\n@elizaos/config:build: cache miss\n@elizaos/autodoc:build: cache miss\n@elizaos/core:build: cache miss\n```\n\n### TypeScript Errors in @elizaos/core/src/utils.ts\n1. Line 218: `error TS2345: Argument of type '`${string}-${string}-${string}-${string}-${string}`' is not assignable to parameter of type 'never'.`\n2. Line 366: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n3. Line 409: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n4. Line 536: `error TS2345: Argument of type '{ numberOfChunks: number; averageChunkSize: number; }' is not assignable to parameter of type 'never'.`\n\n### Impact\n- Blocks `bun run clean` command\n- Prevents successful build of `@elizaos/core`\n- Affects dependent packages in the monorepo\n\n## Steps to Reproduce\n1. Run `bun run clean`\n2. Observe build failure in `@elizaos/core`\n3. Build fails with TypeScript errors during DTS generation\n\n## Expected Behavior\n- `bun run clean` should complete successfully\n- `@elizaos/core` should build without TypeScript errors\n- Type definitions should be generated correctly\n\n## Suggested Fix\n\nThe errors suggest type mismatches in `utils.ts`. Need to:\n1. Review type definitions in affected lines\n2. Update type assertions or generic constraints\n3. Ensure string template literal types are properly handled\n4. Fix object type assignments\n\n### Files to Update\n- `packages/core/src/utils.ts`\n\n## Priority\n**HIGH** - This is blocking clean builds and potentially affecting development workflow.",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "üêõ Build failure in @elizaos/core causing bun run clean to fail",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5738,
                "node_id": "I_kwDOMT5cIs7E1COv",
                "assignee": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5738",
                "assignees": [
                  {
                    "id": 15067321,
                    "url": "https://api.github.com/users/monilpat",
                    "type": "User",
                    "login": "monilpat",
                    "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                    "html_url": "https://github.com/monilpat",
                    "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/monilpat/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                    "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/monilpat/followers",
                    "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/monilpat/orgs",
                    "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                    "received_events_url": "https://api.github.com/users/monilpat/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-08T00:26:11Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/labels{/name}",
                "updated_at": "2025-08-11T14:56:01Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3301116813,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734",
                "body": "**Describe the bug**\n\nOn project creation, ElizaOS CLI fails with the following error:\n```\n‚óá  Failed to build project\nstdout: src/index.ts(7,25): error TS2345: Argument of type 'string' is not assignable to parameter of type 'undefined'.\nstderr: $ tsc --noEmit && vite build && tsup\n```\n\n**To Reproduce**\n\n- Install ElizaOS through `bun`\n```\nbun i -g @elizaos/cli\n```\n- Create new ElizaOS project\n```\nelizaos create abcde\n```\n\n**Expected behavior**\n\nProject built successfully\n\n**Screenshots**\n\n<img width=\"1095\" height=\"572\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/967dd6a2-0d70-4e2e-8019-85a2eab5f225\" />\n\n**Additional context**\n\nElizaOS CLI version: `1.3.2`\n",
                "type": null,
                "user": {
                  "id": 74447600,
                  "url": "https://api.github.com/users/Kemystra",
                  "type": "User",
                  "login": "Kemystra",
                  "node_id": "MDQ6VXNlcjc0NDQ3NjAw",
                  "html_url": "https://github.com/Kemystra",
                  "gists_url": "https://api.github.com/users/Kemystra/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/Kemystra/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/74447600?v=4",
                  "events_url": "https://api.github.com/users/Kemystra/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/Kemystra/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/Kemystra/followers",
                  "following_url": "https://api.github.com/users/Kemystra/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/Kemystra/orgs",
                  "subscriptions_url": "https://api.github.com/users/Kemystra/subscriptions",
                  "received_events_url": "https://api.github.com/users/Kemystra/received_events"
                },
                "state": "open",
                "title": "Eliza CLI failed to build project",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5734,
                "node_id": "I_kwDOMT5cIs7EwwuN",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5734",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T16:14:00Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/labels{/name}",
                "updated_at": "2025-08-08T19:43:52Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "NONE",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3299481897,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729",
                "body": "# Relates to\r\n\r\nN/A (Documentation improvement, not tied to a specific issue or ticket)\r\n\r\n# Risks\r\n\r\nLow.  \r\nThis change only updates documentation and does not affect any code or functionality.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR updates the elizaos README to include a fix for installation errors that may occur due to permission issues. It adds a note suggesting the use of sudo if users encounter a \"Permission denied\" or \"InstallFailed\" error when running the `elizaos create my-agent` command.\r\n\r\n## What kind of change is this?\r\n\r\nImprovements (misc. changes to existing features)  \r\nDocumentation update\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes require a change to the project documentation.  \r\nI have updated the documentation accordingly.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\nStart by reviewing the changes in the README.md file, specifically the section on creating a new project.\r\n\r\n## Detailed testing steps\r\n\r\n- Open the updated README.md.\r\n- Review the new instructions under \"Create Your First Project.\"\r\n- Confirm that the added note about using `sudo` is clear and helpful for users who encounter permission errors.",
                "type": null,
                "user": {
                  "id": 32749185,
                  "url": "https://api.github.com/users/mandatedisrael",
                  "type": "User",
                  "login": "mandatedisrael",
                  "node_id": "MDQ6VXNlcjMyNzQ5MTg1",
                  "html_url": "https://github.com/mandatedisrael",
                  "gists_url": "https://api.github.com/users/mandatedisrael/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/mandatedisrael/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/32749185?v=4",
                  "events_url": "https://api.github.com/users/mandatedisrael/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/mandatedisrael/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/mandatedisrael/followers",
                  "following_url": "https://api.github.com/users/mandatedisrael/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/mandatedisrael/orgs",
                  "subscriptions_url": "https://api.github.com/users/mandatedisrael/subscriptions",
                  "received_events_url": "https://api.github.com/users/mandatedisrael/received_events"
                },
                "draft": false,
                "state": "open",
                "title": "Update README.md to fix error",
                "labels": [],
                "locked": false,
                "number": 5729,
                "node_id": "PR_kwDOMT5cIs6iiNWN",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T08:10:12Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/labels{/name}",
                "updated_at": "2025-08-07T08:10:24Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/comments",
                "pull_request": {
                  "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5729",
                  "diff_url": "https://github.com/elizaOS/eliza/pull/5729.diff",
                  "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                  "merged_at": null,
                  "patch_url": "https://github.com/elizaOS/eliza/pull/5729.patch"
                },
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "FIRST_TIME_CONTRIBUTOR",
                "performed_via_github_app": null
              },
              {
                "id": 3299322983,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728",
                "body": "# Background\r\n\r\n## What does this PR do?\r\n\r\nIntroduce entity for cancelling runs `CancelRunSignal`\r\n\r\n## Why are we doing this? Any context or related work?\r\n\r\n- Calls to LLMs usually cost some credits\r\n- When we receive the `RUN_STARTED` event we can check current entity and end run to prevent credits spending\r\n\r\n# Documentation changes needed?\r\n\r\n## Methods\r\n\r\n- `static getSignal(runId: UUID)` - get signal by runId or create if null\r\n- `static clear(runId: UUID)` - clear signal from map\r\n- `cancel(content?: Content)` - cancel current run and and send `content` as a response to user\r\n\r\n## Example\r\n\r\n```typescript\r\nimport { Content, EventType, Plugin } from \"@elizaos/core\";\r\nimport { CancelRunSignal } from \"@elizaos/plugin-bootstrap\";\r\n\r\n// consider we have a service to determine eligibility for entity\r\ninterface EligibilityService {\r\n  check(entityId: UUID): Promise<{ result: boolean, reason?: Content }>\r\n}\r\n\r\nconst plugin: Plugin = {\r\n...\r\n  events: {\r\n    [EventType.RUN_STARTED]: ({ entityId, runId, runtime }) => {\r\n      const service = runtime.getService<EligibilityService>(\"USER_MANAGEMENT\");\r\n      const { result, reason } = await service.check(entityId);\r\n      \r\n      if (!result) {\r\n        const signal = CancelRunSignal.getSignal(runId);\r\n        signal.cancel(reason);\r\n      }\r\n    },\r\n    ...\r\n  },\r\n  ...\r\n}\r\n\r\nexport default Plugin;\r\n```\r\n\r\n## Discord username\r\n\r\nalexd000\r\n\r\n",
                "type": null,
                "user": {
                  "id": 82507604,
                  "url": "https://api.github.com/users/alex-nax",
                  "type": "User",
                  "login": "alex-nax",
                  "node_id": "MDQ6VXNlcjgyNTA3NjA0",
                  "html_url": "https://github.com/alex-nax",
                  "gists_url": "https://api.github.com/users/alex-nax/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/alex-nax/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/82507604?v=4",
                  "events_url": "https://api.github.com/users/alex-nax/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/alex-nax/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/alex-nax/followers",
                  "following_url": "https://api.github.com/users/alex-nax/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/alex-nax/orgs",
                  "subscriptions_url": "https://api.github.com/users/alex-nax/subscriptions",
                  "received_events_url": "https://api.github.com/users/alex-nax/received_events"
                },
                "draft": false,
                "state": "open",
                "title": "feat: ability to cancel current run before any calls to LLM are made",
                "labels": [],
                "locked": false,
                "number": 5728,
                "node_id": "PR_kwDOMT5cIs6ihriD",
                "assignee": null,
                "comments": 3,
                "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T07:19:35Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/labels{/name}",
                "updated_at": "2025-08-07T07:22:05Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/comments",
                "pull_request": {
                  "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5728",
                  "diff_url": "https://github.com/elizaOS/eliza/pull/5728.diff",
                  "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                  "merged_at": null,
                  "patch_url": "https://github.com/elizaOS/eliza/pull/5728.patch"
                },
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "FIRST_TIME_CONTRIBUTOR",
                "performed_via_github_app": null
              },
              {
                "id": 3298692741,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727",
                "body": "# feat(scenarios): Implement natural language agent interaction and response validation\n\n## Description\n\nThis ticket enables scenarios to test agent behavior through natural language interactions rather than direct code execution. This allows testing of agent reasoning, decision-making, and response generation in realistic conversation contexts with proper evaluation of agent responses.\n\n## Acceptance Criteria\n\n1. Scenario `run` blocks support `input` field for natural language prompts to agents\n2. Agent responses are captured and available for evaluation (text, thoughts, actions)\n3. Evaluators can access both agent response text and execution context\n4. Support for multi-turn conversations in scenarios\n5. Agent responses include thought process and action decisions\n6. Integration with existing evaluation engine for response validation\n7. Support for conversation context across multiple steps\n8. Agent response timing and performance metrics\n\n## Technical Approach\n\n### 1. Enhanced Run Step Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst RunStepSchema = z.object({\n  name: z.string().optional(),\n  // Natural language input to agent\n  input: z.string().optional(),\n  // Direct code execution (existing)\n  lang: z.string().optional(),\n  code: z.string().optional(),\n  // Agent interaction specific\n  agent_context: z.object({\n    conversation_id: z.string().optional(),\n    user_id: z.string().optional(),\n    room_id: z.string().optional(),\n  }).optional(),\n  evaluations: z.array(EvaluationSchema),\n});\n```\n\n### 2. Agent Interaction Engine\n```typescript\n// packages/cli/src/scenarios/agent-interaction.ts\nexport class AgentInteractionEngine {\n  constructor(private runtime: IAgentRuntime) {}\n\n  async interactWithAgent(input: string, context?: AgentContext): Promise<AgentResponse> {\n    // Create message for agent\n    const message: Memory = {\n      entityId: context?.user_id || 'scenario-user',\n      roomId: context?.room_id || 'scenario-room',\n      content: {\n        type: 'text',\n        text: input,\n      },\n      metadata: {\n        type: 'message',\n        conversationId: context?.conversation_id,\n      },\n    };\n\n    // Send to agent and capture response\n    const startTime = Date.now();\n    const response = await this.runtime.processMessage(message);\n    const endTime = Date.now();\n\n    return {\n      text: response.text,\n      thoughts: response.thoughts,\n      actions: response.actions,\n      timing: {\n        startTime,\n        endTime,\n        duration: endTime - startTime,\n      },\n      context: {\n        conversationId: context?.conversation_id,\n        messageId: message.id,\n      },\n    };\n  }\n}\n```\n\n### 3. Enhanced Execution Result\n```typescript\n// packages/cli/src/scenarios/providers.ts\nexport interface ExecutionResult {\n  exitCode: number;\n  stdout: string;\n  stderr: string;\n  files: Record<string, string>;\n  // New: Agent interaction results\n  agentResponse?: AgentResponse;\n  conversationHistory?: AgentResponse[];\n}\n```\n\n## Test Scenario\n\nCreate `agent-interaction-test.scenario.yaml`:\n```yaml\nname: \"Agent Interaction Test\"\ndescription: \"Tests natural language interaction with agents\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Implement Dark Mode\"\n          number: 123\n          state: \"open\"\n          labels: [\"feature\", \"ui\"]\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"2.5\"\n\nrun:\n  - name: \"Ask agent about roadmap\"\n    input: \"What new features are you planning to add?\"\n    agent_context:\n      conversation_id: \"roadmap-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify agent searched for issues\"\n      \n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n        description: \"Verify agent mentioned the mocked issue\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent provide a helpful and coherent response about new features?\"\n        expected: \"yes\"\n        description: \"Verify agent response quality\"\n\n  - name: \"Ask agent about wallet\"\n    input: \"What's my current wallet balance?\"\n    agent_context:\n      conversation_id: \"wallet-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify agent checked wallet balance\"\n      \n      - type: \"string_contains\"\n        value: \"2.5 ETH\"\n        description: \"Verify agent reported the correct balance\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent clearly explain the wallet balance information?\"\n        expected: \"yes\"\n\n  - name: \"Multi-turn conversation\"\n    input: \"Can you help me with both my wallet and roadmap?\"\n    agent_context:\n      conversation_id: \"multi-turn-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"ETH\"\n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent address both wallet and roadmap questions comprehensively?\"\n        expected: \"yes\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Single Turn**: Test basic agent interaction and response\n2. **Multi-turn**: Test conversation context across steps\n3. **Action Tracking**: Verify agent uses appropriate actions\n4. **Response Quality**: Test LLM judge evaluation of responses\n5. **Performance**: Test response timing and metrics\n6. **Error Handling**: Test agent behavior with invalid inputs\n\n## Dependencies\n\n- Requires plugin system integration (Ticket 1)\n- Builds on advanced mocking system (Ticket 2)\n- Integrates with existing evaluation engine\n- Depends on agent runtime message processing",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement natural language agent interaction and response validation",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5727,
                "node_id": "I_kwDOMT5cIs7Eng6F",
                "assignee": null,
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5727",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:49:34Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/labels{/name}",
                "updated_at": "2025-08-07T05:35:40Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3298691383,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726",
                "body": "# feat(scenarios): Implement conditional mocking and complex response structures\n\n## Description\n\nThis ticket enhances the mocking system to support conditional responses based on input parameters and complex response structures with metadata. This enables realistic testing of service interactions like GitHub API calls or EVM transactions with proper request/response matching.\n\n## Acceptance Criteria\n\n1. Mock definitions support `when` clauses for conditional responses\n2. `when` clauses can match on method arguments, input parameters, or request context\n3. Mock responses support complex nested structures with metadata (timestamps, IDs, etc.)\n4. Multiple mock responses can be defined for the same service/method with different conditions\n5. Mock system provides clear logging of which mock was triggered and why\n6. Mock responses can include realistic error conditions and edge cases\n7. Support for dynamic response generation based on input parameters\n8. Mock validation ensures `when` clauses are syntactically correct\n\n## Technical Approach\n\n### 1. Enhanced Mock Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst MockSchema = z.object({\n  service: z.string(),\n  method: z.string(),\n  when: z.object({\n    // Match on method arguments\n    args: z.array(z.any()).optional(),\n    // Match on specific argument values\n    input: z.record(z.any()).optional(),\n    // Match on request context\n    context: z.record(z.any()).optional(),\n    // Custom matching function\n    matcher: z.string().optional(), // JavaScript expression\n  }).optional(),\n  response: z.any(), // Can be function or static value\n  // For dynamic responses\n  responseFn: z.string().optional(), // JavaScript function\n  // Error simulation\n  error: z.object({\n    code: z.string(),\n    message: z.string(),\n  }).optional(),\n});\n```\n\n### 2. Mock Engine Implementation\n```typescript\n// packages/cli/src/scenarios/mock-engine.ts\nexport class MockEngine {\n  private mocks: MockDefinition[] = [];\n\n  addMock(mock: MockDefinition) {\n    this.mocks.push(mock);\n  }\n\n  async findMock(service: string, method: string, args: any[]): Promise<any> {\n    const candidates = this.mocks.filter(m => \n      m.service === service && m.method === method\n    );\n\n    for (const mock of candidates) {\n      if (await this.matchesCondition(mock, args)) {\n        this.logger.info(`Mock triggered: ${service}.${method} with condition: ${JSON.stringify(mock.when)}`);\n        return this.generateResponse(mock, args);\n      }\n    }\n\n    return null; // No mock found\n  }\n\n  private async matchesCondition(mock: MockDefinition, args: any[]): Promise<boolean> {\n    if (!mock.when) return true; // Default mock\n\n    // Match on arguments\n    if (mock.when.args) {\n      if (!this.deepEqual(args, mock.when.args)) return false;\n    }\n\n    // Match on input parameters\n    if (mock.when.input) {\n      const input = this.extractInputFromArgs(args);\n      if (!this.deepEqual(input, mock.when.input)) return false;\n    }\n\n    // Custom matcher function\n    if (mock.when.matcher) {\n      const matcherFn = new Function('args', 'input', mock.when.matcher);\n      return matcherFn(args, this.extractInputFromArgs(args));\n    }\n\n    return true;\n  }\n\n  private generateResponse(mock: MockDefinition, args: any[]): any {\n    if (mock.error) {\n      throw new Error(`${mock.error.code}: ${mock.error.message}`);\n    }\n\n    if (mock.responseFn) {\n      const responseFn = new Function('args', 'input', mock.responseFn);\n      return responseFn(args, this.extractInputFromArgs(args));\n    }\n\n    return mock.response;\n  }\n}\n```\n\n## Test Scenario\n\nCreate `advanced-mocking-test.scenario.yaml`:\n```yaml\nname: \"Advanced Mocking Test\"\ndescription: \"Tests conditional mocking and complex response structures\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    # Conditional GitHub issue search\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"bug\"\n        matcher: \"input.labels.includes('bug')\"\n      response:\n        - title: \"Critical Bug Found\"\n          number: 456\n          state: \"open\"\n          labels: [\"bug\", \"critical\"]\n          created_at: \"2024-07-15T10:00:00Z\"\n\n    # Conditional GitHub issue search - different response\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"feature\"\n        matcher: \"input.labels.includes('feature')\"\n      response:\n        - title: \"New Feature Request\"\n          number: 789\n          state: \"open\"\n          labels: [\"feature\", \"enhancement\"]\n          created_at: \"2024-07-15T11:00:00Z\"\n\n    # Dynamic EVM balance response\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      when:\n        args: [\"0x1234567890abcdef\"]\n      responseFn: |\n        return {\n          chain: \"ethereum\",\n          address: args[0],\n          balances: [\n            { symbol: \"ETH\", amount: \"1.23\" },\n            { symbol: \"USDC\", amount: \"1000.00\" }\n          ],\n          last_updated: new Date().toISOString()\n        }\n\n    # Error simulation\n    - service: \"github-service\"\n      method: \"readFile\"\n      when:\n        input:\n          path: \"/docs/nonexistent.md\"\n      error:\n        code: \"FILE_NOT_FOUND\"\n        message: \"File does not exist\"\n\nrun:\n  - name: \"Test conditional GitHub search\"\n    input: \"Search for issues with bug label\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"Critical Bug Found\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent correctly search for bug issues?\"\n        expected: \"yes\"\n\n  - name: \"Test dynamic EVM response\"\n    input: \"What's the balance for address 0x1234567890abcdef?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n      - type: \"string_contains\"\n        value: \"1000.00 USDC\"\n\n  - name: \"Test error handling\"\n    input: \"Read the file /docs/nonexistent.md\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.readFile\"\n      - type: \"string_contains\"\n        value: \"File does not exist\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Conditional Matching**: Test different responses based on input parameters\n2. **Dynamic Responses**: Test response generation based on arguments\n3. **Error Simulation**: Test error handling and reporting\n4. **Complex Structures**: Test nested response objects with metadata\n5. **Multiple Mocks**: Test multiple mocks for same service/method\n6. **Logging**: Verify mock selection is logged clearly\n\n## Dependencies\n\n- Builds on existing mock system in scenarios\n- Requires plugin system integration (Ticket 1)\n- Integrates with agent interaction testing (Ticket 3) ",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement conditional mocking and complex response structures",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5726,
                "node_id": "I_kwDOMT5cIs7Engk3",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5726",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:49:00Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/labels{/name}",
                "updated_at": "2025-08-07T05:32:53Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3298689704,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725",
                "body": "# feat(scenarios): Implement plugin specification and dynamic loading\n\n## Description\n\nThis ticket implements plugin specification in scenario YAML files, allowing scenarios to declare which plugins are required for testing. This enables testing of agent behaviors that depend on specific plugins like `@elizaos/plugin-github` or `@elizaos/plugin-evm`. The system will dynamically load specified plugins during scenario execution and make their actions, providers, and services available to the agent.\n\n## Acceptance Criteria\n\n1. Scenario YAML supports a `plugins` array at the root level with string plugin names\n2. The `initializeAgent()` function respects scenario plugin specifications and loads them via `startAgent()`\n3. Plugin loading follows the same dependency resolution and error handling as the main CLI\n4. Scenarios can specify both string plugin names (`@elizaos/plugin-github`) and direct plugin objects\n5. Plugin loading errors are clearly reported with actionable guidance\n6. Default plugins (bootstrap, sql) are automatically included unless explicitly excluded via `exclude_defaults: true`\n7. Plugin conflicts are detected and reported during scenario validation\n8. Plugin initialization errors don't crash the scenario but are reported in results\n\n## Technical Approach\n\n### 1. Update Scenario Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst ScenarioSchema = z.object({\n  name: z.string(),\n  description: z.string(),\n  plugins: z.array(z.string()).optional(), // e.g., [\"@elizaos/plugin-github\"]\n  exclude_defaults: z.boolean().optional(), // exclude bootstrap/sql\n  environment: EnvironmentSchema,\n  setup: SetupSchema.optional(),\n  run: z.array(RunStepSchema),\n  judgment: JudgmentSchema,\n});\n```\n\n### 2. Enhance Runtime Factory\n```typescript\n// packages/cli/src/scenarios/runtime-factory.ts\nexport async function initializeAgent(scenario: Scenario): Promise<IAgentRuntime> {\n  const character: Character = {\n    name: 'scenario-runner',\n    id: stringToUuid('scenario-runner'),\n    bio: 'A minimal character for running scenarios',\n    plugins: scenario.plugins || []\n  };\n\n  // Load default plugins unless excluded\n  if (!scenario.exclude_defaults) {\n    character.plugins.push('@elizaos/plugin-bootstrap', '@elizaos/plugin-sql');\n  }\n\n  const runtime = await startAgent(\n    encryptedCharacter(character),\n    server,\n    undefined,\n    character.plugins,\n    { isTestMode: true }\n  );\n\n  return runtime;\n}\n```\n\n### 3. Plugin Validation\n```typescript\n// packages/cli/src/scenarios/plugin-validator.ts\nexport async function validateScenarioPlugins(scenario: Scenario): Promise<ValidationResult[]> {\n  const results: ValidationResult[] = [];\n  \n  for (const pluginName of scenario.plugins || []) {\n    try {\n      const plugin = await loadAndPreparePlugin(pluginName);\n      if (!plugin) {\n        results.push({\n          type: 'error',\n          message: `Plugin '${pluginName}' could not be loaded`,\n          suggestion: 'Check if plugin is installed or built correctly'\n        });\n      }\n    } catch (error) {\n      results.push({\n        type: 'error', \n        message: `Failed to validate plugin '${pluginName}': ${error.message}`,\n        suggestion: 'Verify plugin dependencies and configuration'\n      });\n    }\n  }\n  \n  return results;\n}\n```\n\n## Test Scenario\n\nCreate `plugin-integration-test.scenario.yaml`:\n```yaml\nname: \"Plugin Integration Test\"\ndescription: \"Tests loading and using plugins specified in scenario YAML\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Test Issue\"\n          number: 123\n          state: \"open\"\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"1.23\"\n\nrun:\n  - name: \"Test GitHub plugin actions\"\n    input: \"Search for issues with label 'bug'\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify GitHub plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"Test Issue\"\n        description: \"Verify agent found the mocked issue\"\n\n  - name: \"Test EVM plugin actions\"\n    input: \"What's my wallet balance?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify EVM plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n        description: \"Verify agent reported the mocked balance\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Plugin Loading Test**: Verify plugins load without errors\n2. **Action Availability Test**: Confirm agent can use plugin actions\n3. **Error Handling Test**: Test with non-existent plugin\n4. **Default Plugin Test**: Verify bootstrap/sql are included by default\n5. **Exclusion Test**: Test `exclude_defaults: true` behavior\n\n## Dependencies\n\n- Fixes the `startAgent` hanging issue (#5719) to enable plugin testing\n- Builds on existing `loadAndPreparePlugin` functionality\n- Integrates with current scenario execution flow ",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement plugin specification and dynamic loading",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5725,
                "node_id": "I_kwDOMT5cIs7EngKo",
                "assignee": null,
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5725",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:48:08Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/labels{/name}",
                "updated_at": "2025-08-07T05:37:32Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              }
            ]
          },
          "issues": [
            {
              "id": 3310285907,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754",
              "body": "## Issue Summary\nThe `elizaos publish --npm` command reports successful publishing but the plugin is not actually published to npm, despite showing success messages. The npm publish is failing with a 404 error, but the ElizaOS CLI incorrectly reports success.\n\n## Key Problems Identified\n\n### 1. Critical NPM Publishing Failure\n- **Error**: `npm error 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found`\n- **Issue**: The package scope `@elizaos` doesn't exist on npm, preventing publishing\n- **Impact**: Package cannot be published to npm, but CLI reports success\n\n### 2. False Success Reporting\n- **Issue**: CLI reports `[‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm`\n- **Reality**: npm publish failed with 404 error\n- **Impact**: Developers believe their plugin is published when it's not\n\n### 3. Registry Repository Mismatch\n- **Expected**: Should create PR against `https://github.com/elizaos-plugins/registry`\n- **Actual**: Still references old registry `https://github.com/elizaos/registry`\n- **Impact**: Plugin won't appear in the official ElizaOS registry\n\n## Steps to Reproduce\n\n```bash\n# Navigate to the plugin directory\ncd packages/plugin-polygon\n\n# Ensure you're on the correct branch with the changes\ngit checkout polygon\n\n# Run the publish command\nelizaos publish --npm\n\n# Verify the success message appears\n# [‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm\n\n# Check if package actually exists on npm\nnpm view @elizaos/plugin-polygon@1.0.0\n# Result: 404 Not Found - '@elizaos/plugin-polygon@1.0.0' is not in this registry\n```\n\n## Technical Details\n\n### NPM Error Analysis\nThe npm logs show the root cause:\n```\nhttp fetch PUT 404 https://registry.npmjs.org/@elizaos%2fplugin-polygon 507ms\nerror 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found\n```\n\nThis indicates that the `@elizaos` scope doesn't exist on npm, which is required for publishing scoped packages.\n\n### CLI Error Handling Failure\nThe ElizaOS CLI is not properly parsing npm error codes:\n- npm returns exit code 1 (failure)\n- CLI ignores the error and reports success\n- No validation that the package actually exists on npm\n\n## Expected Behavior\n1. CLI should detect npm publish failures (exit code 1)\n2. CLI should fail with clear error message when package scope doesn't exist\n3. CLI should validate that package actually exists on npm after publishing\n4. CLI should create PRs against the correct registry repository\n\n## Recommended Fixes\n\n### 1. Fix NPM Error Detection\n```typescript\n// In the publish command, check npm exit code\nconst npmResult = await exec('npm publish', { cwd: pluginDir });\nif (npmResult.exitCode !== 0) {\n  throw new Error(`NPM publish failed: ${npmResult.stderr}`);\n}\n```\n\n### 2. Add Package Scope Validation\n```typescript\n// Before publishing, check if scope exists\nconst scopeExists = await checkNpmScope('@elizaos');\nif (!scopeExists) {\n  throw new Error('Package scope @elizaos does not exist on npm. Contact npm support to create the scope.');\n}\n```\n\n### 3. Add Post-Publish Validation\n```typescript\n// After publishing, verify package exists\nconst packageExists = await checkPackageExists(packageName, version);\nif (!packageExists) {\n  throw new Error(`Package was not published successfully. Check npm logs for details.`);\n}\n```\n\n## Priority\n**Critical** - This completely blocks plugin publishing and creates false success reports.\n\n## Affected Components\n- `packages/cli/src/commands/publish.ts`\n- NPM publishing logic\n- Error handling and success reporting\n- Package scope validation\n- Registry repository configuration\n\n## Immediate Action Required\n1. **Create the `@elizaos` scope on npm** or use an existing scope\n2. Update CLI to properly detect and handle npm publish failures\n3. Add post-publish validation to ensure packages actually exist on npm\n4. Update registry repository configuration\n\n## Alternative Solutions\n1. **Use existing scope**: Change package name to `@monilpat/plugin-polygon`\n2. **Create organization scope**: Set up `@elizaos` organization on npm\n3. **Use unscoped package**: Publish as `elizaos-plugin-polygon`\n\nThis issue is critically blocking plugin developers from successfully publishing their work and needs immediate attention from the ElizaOS team.\n",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "Critical: Plugin Publishing Fails with False Success Reports",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5754,
              "node_id": "I_kwDOMT5cIs7FTvRT",
              "assignee": null,
              "comments": 0,
              "html_url": "https://github.com/elizaOS/eliza/issues/5754",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-11T14:20:08Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/labels{/name}",
              "updated_at": "2025-08-11T14:20:08Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3308102900,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749",
              "body": "### Problem Statement\nCurrently, ElizaOS scenario testing lacks the ability to mock internal agent runtime calls (particularly LLM interactions) when testing via the API client. This makes it difficult to create deterministic tests for agent behavior and workflows.\n\n### Current Limitations\n- Global function mocks only work for code executed in the same process\n- No way to intercept `runtime.useModel` calls from the bootstrap plugin\n- Agent behavior is non-deterministic due to real LLM calls\n- Difficult to test specific agent decision paths and responses\n\n### Why Different Approach Was Needed\n\nThe existing mocking system was designed for **code execution environments** (E2B sandbox and local `node -e` processes), where mocks are applied to the execution context. However, **agent testing** works differently:\n\n- **E2B/Local Execution**: Code runs in isolated processes/sandboxes where global mocks can be applied\n- **Agent Testing**: Agent runs as a service with API client interaction, requiring direct runtime method interception\n- **Architecture Gap**: The bootstrap plugin calls `runtime.useModel` internally, which can't be mocked through the execution environment approach\n\nThis architectural difference necessitated a new approach that directly intercepts runtime methods rather than relying on execution context mocking.\n\n### Proposed Solution: Runtime Method Mocking\n\nWe've implemented a new mocking approach that directly intercepts `IAgentRuntime` method calls:\n\n#### Key Components\n\n1. **MockEngine Enhancement**\n   - Added `runtimeMethodMocks` to support mocking runtime methods\n   - Priority system: `runtimeMethod` > `service` > `globalFunction`\n   - Direct method replacement on the runtime instance\n\n2. **Schema Updates**\n   - Extended `MockSchema` to include `runtimeMethod: z.string().optional()`\n   - Supports mocking any `IAgentRuntime` method (e.g., `useModel`, `getService`)\n\n3. **Conditional Matching**\n   - Matcher functions can inspect method arguments\n   - Example: `\"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"`\n   - Supports complex conditional logic for when to apply mocks\n\n#### Usage Example\n\n```yaml\nsetup:\n  mocks:\n    - runtimeMethod: \"useModel\"\n      method: \"useModel\"\n      when:\n        matcher: \"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"\n      response: \"<response><name>agent</name><reasoning>Mocked response</reasoning><action>RESPOND</action></response>\"\n```\n\n#### Benefits\n\n1. **Deterministic Testing**: Replace LLM calls with static responses\n2. **Full Workflow Testing**: Test complete agent decision flows\n3. **Conditional Mocking**: Apply mocks based on specific conditions\n4. **Runtime Integration**: Works seamlessly with existing agent architecture\n5. **Backward Compatibility**: Existing mocks continue to work\n\n#### Implementation Steps\n\n- MockEngine runtime method support\n- Schema updates for runtimeMethod mocks\n- Conditional matching with matcher functions\n- Integration with scenario runner\n- Basic useModel mocking working\n- Add support for mocking other runtime methods (getService, etc.)\n- Create comprehensive test scenarios\n- Add documentation and examples\n- Consider adding mock recording/replay capabilities\n\n### Technical Details\n\nThe implementation works by:\n1. Creating the `IAgentRuntime` instance in the scenario runner\n2. Applying mocks directly to the runtime object before agent initialization\n3. The bootstrap plugin receives the mocked runtime and uses the mocked methods\n4. Mocks are reverted after scenario completion\n\nThis approach provides the foundation for robust, deterministic agent testing while maintaining the existing architecture.",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "Implement Runtime Method Mocking for Deterministic Agent Testing",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 7668252177,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/testing",
                  "name": "testing",
                  "color": "2D3957",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAAByRA-EQ",
                  "description": ""
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5749,
              "node_id": "I_kwDOMT5cIs7FLaT0",
              "assignee": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "comments": 0,
              "html_url": "https://github.com/elizaOS/eliza/issues/5749",
              "assignees": [
                {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-11T00:08:49Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/labels{/name}",
              "updated_at": "2025-08-11T00:09:37Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3304516859,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747",
              "body": null,
              "type": null,
              "user": {
                "id": 48334430,
                "url": "https://api.github.com/users/samarth30",
                "type": "User",
                "login": "samarth30",
                "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                "html_url": "https://github.com/samarth30",
                "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/samarth30/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/samarth30/followers",
                "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/samarth30/orgs",
                "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                "received_events_url": "https://api.github.com/users/samarth30/received_events"
              },
              "state": "open",
              "title": "Fixing bugs in eliza-cloud",
              "labels": [],
              "locked": false,
              "number": 5747,
              "node_id": "I_kwDOMT5cIs7E9uz7",
              "assignee": {
                "id": 48334430,
                "url": "https://api.github.com/users/samarth30",
                "type": "User",
                "login": "samarth30",
                "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                "html_url": "https://github.com/samarth30",
                "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/samarth30/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/samarth30/followers",
                "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/samarth30/orgs",
                "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                "received_events_url": "https://api.github.com/users/samarth30/received_events"
              },
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5747",
              "assignees": [
                {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-08T16:01:56Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/labels{/name}",
              "updated_at": "2025-08-08T19:02:49Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "MEMBER",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": {
                "id": 20150,
                "name": "Linear",
                "slug": "linear",
                "owner": {
                  "id": 46686594,
                  "url": "https://api.github.com/users/linear",
                  "type": "Organization",
                  "login": "linear",
                  "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ2Njg2NTk0",
                  "html_url": "https://github.com/linear",
                  "gists_url": "https://api.github.com/users/linear/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/linear/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/46686594?v=4",
                  "events_url": "https://api.github.com/users/linear/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/linear/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/linear/followers",
                  "following_url": "https://api.github.com/users/linear/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/linear/orgs",
                  "subscriptions_url": "https://api.github.com/users/linear/subscriptions",
                  "received_events_url": "https://api.github.com/users/linear/received_events"
                },
                "events": [
                  "check_suite",
                  "issues",
                  "issue_comment",
                  "pull_request",
                  "pull_request_review",
                  "repository",
                  "sub_issues"
                ],
                "node_id": "MDM6QXBwMjAxNTA=",
                "html_url": "https://github.com/apps/linear",
                "client_id": "Iv1.085d682ea245c945",
                "created_at": "2018-11-02T18:07:23Z",
                "updated_at": "2025-02-07T14:59:56Z",
                "description": "",
                "permissions": {
                  "checks": "read",
                  "issues": "write",
                  "metadata": "read",
                  "pull_requests": "write"
                },
                "external_url": "https://linear.app"
              }
            },
            {
              "id": 3302237103,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738",
              "body": "## Description\n\nThe `bun run clean` command is failing due to TypeScript errors in `@elizaos/core` package during the DTS (type definition) build phase.\n\n## Error Details\n\n### Build Process\n```\n‚Ä¢ Running build in 17 packages\n‚Ä¢ Remote caching disabled\n@elizaos/config:build: cache miss\n@elizaos/autodoc:build: cache miss\n@elizaos/core:build: cache miss\n```\n\n### TypeScript Errors in @elizaos/core/src/utils.ts\n1. Line 218: `error TS2345: Argument of type '`${string}-${string}-${string}-${string}-${string}`' is not assignable to parameter of type 'never'.`\n2. Line 366: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n3. Line 409: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n4. Line 536: `error TS2345: Argument of type '{ numberOfChunks: number; averageChunkSize: number; }' is not assignable to parameter of type 'never'.`\n\n### Impact\n- Blocks `bun run clean` command\n- Prevents successful build of `@elizaos/core`\n- Affects dependent packages in the monorepo\n\n## Steps to Reproduce\n1. Run `bun run clean`\n2. Observe build failure in `@elizaos/core`\n3. Build fails with TypeScript errors during DTS generation\n\n## Expected Behavior\n- `bun run clean` should complete successfully\n- `@elizaos/core` should build without TypeScript errors\n- Type definitions should be generated correctly\n\n## Suggested Fix\n\nThe errors suggest type mismatches in `utils.ts`. Need to:\n1. Review type definitions in affected lines\n2. Update type assertions or generic constraints\n3. Ensure string template literal types are properly handled\n4. Fix object type assignments\n\n### Files to Update\n- `packages/core/src/utils.ts`\n\n## Priority\n**HIGH** - This is blocking clean builds and potentially affecting development workflow.",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "üêõ Build failure in @elizaos/core causing bun run clean to fail",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5738,
              "node_id": "I_kwDOMT5cIs7E1COv",
              "assignee": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5738",
              "assignees": [
                {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-08T00:26:11Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/labels{/name}",
              "updated_at": "2025-08-11T14:56:01Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3301116813,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734",
              "body": "**Describe the bug**\n\nOn project creation, ElizaOS CLI fails with the following error:\n```\n‚óá  Failed to build project\nstdout: src/index.ts(7,25): error TS2345: Argument of type 'string' is not assignable to parameter of type 'undefined'.\nstderr: $ tsc --noEmit && vite build && tsup\n```\n\n**To Reproduce**\n\n- Install ElizaOS through `bun`\n```\nbun i -g @elizaos/cli\n```\n- Create new ElizaOS project\n```\nelizaos create abcde\n```\n\n**Expected behavior**\n\nProject built successfully\n\n**Screenshots**\n\n<img width=\"1095\" height=\"572\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/967dd6a2-0d70-4e2e-8019-85a2eab5f225\" />\n\n**Additional context**\n\nElizaOS CLI version: `1.3.2`\n",
              "type": null,
              "user": {
                "id": 74447600,
                "url": "https://api.github.com/users/Kemystra",
                "type": "User",
                "login": "Kemystra",
                "node_id": "MDQ6VXNlcjc0NDQ3NjAw",
                "html_url": "https://github.com/Kemystra",
                "gists_url": "https://api.github.com/users/Kemystra/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/Kemystra/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/74447600?v=4",
                "events_url": "https://api.github.com/users/Kemystra/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/Kemystra/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/Kemystra/followers",
                "following_url": "https://api.github.com/users/Kemystra/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/Kemystra/orgs",
                "subscriptions_url": "https://api.github.com/users/Kemystra/subscriptions",
                "received_events_url": "https://api.github.com/users/Kemystra/received_events"
              },
              "state": "open",
              "title": "Eliza CLI failed to build project",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5734,
              "node_id": "I_kwDOMT5cIs7EwwuN",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5734",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T16:14:00Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/labels{/name}",
              "updated_at": "2025-08-08T19:43:52Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "NONE",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3299481897,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729",
              "body": "# Relates to\r\n\r\nN/A (Documentation improvement, not tied to a specific issue or ticket)\r\n\r\n# Risks\r\n\r\nLow.  \r\nThis change only updates documentation and does not affect any code or functionality.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR updates the elizaos README to include a fix for installation errors that may occur due to permission issues. It adds a note suggesting the use of sudo if users encounter a \"Permission denied\" or \"InstallFailed\" error when running the `elizaos create my-agent` command.\r\n\r\n## What kind of change is this?\r\n\r\nImprovements (misc. changes to existing features)  \r\nDocumentation update\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes require a change to the project documentation.  \r\nI have updated the documentation accordingly.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\nStart by reviewing the changes in the README.md file, specifically the section on creating a new project.\r\n\r\n## Detailed testing steps\r\n\r\n- Open the updated README.md.\r\n- Review the new instructions under \"Create Your First Project.\"\r\n- Confirm that the added note about using `sudo` is clear and helpful for users who encounter permission errors.",
              "type": null,
              "user": {
                "id": 32749185,
                "url": "https://api.github.com/users/mandatedisrael",
                "type": "User",
                "login": "mandatedisrael",
                "node_id": "MDQ6VXNlcjMyNzQ5MTg1",
                "html_url": "https://github.com/mandatedisrael",
                "gists_url": "https://api.github.com/users/mandatedisrael/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/mandatedisrael/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/32749185?v=4",
                "events_url": "https://api.github.com/users/mandatedisrael/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/mandatedisrael/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/mandatedisrael/followers",
                "following_url": "https://api.github.com/users/mandatedisrael/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/mandatedisrael/orgs",
                "subscriptions_url": "https://api.github.com/users/mandatedisrael/subscriptions",
                "received_events_url": "https://api.github.com/users/mandatedisrael/received_events"
              },
              "draft": false,
              "state": "open",
              "title": "Update README.md to fix error",
              "labels": [],
              "locked": false,
              "number": 5729,
              "node_id": "PR_kwDOMT5cIs6iiNWN",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/pull/5729",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T08:10:12Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/labels{/name}",
              "updated_at": "2025-08-07T08:10:24Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/comments",
              "pull_request": {
                "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5729",
                "diff_url": "https://github.com/elizaOS/eliza/pull/5729.diff",
                "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                "merged_at": null,
                "patch_url": "https://github.com/elizaOS/eliza/pull/5729.patch"
              },
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "FIRST_TIME_CONTRIBUTOR",
              "performed_via_github_app": null
            },
            {
              "id": 3299322983,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728",
              "body": "# Background\r\n\r\n## What does this PR do?\r\n\r\nIntroduce entity for cancelling runs `CancelRunSignal`\r\n\r\n## Why are we doing this? Any context or related work?\r\n\r\n- Calls to LLMs usually cost some credits\r\n- When we receive the `RUN_STARTED` event we can check current entity and end run to prevent credits spending\r\n\r\n# Documentation changes needed?\r\n\r\n## Methods\r\n\r\n- `static getSignal(runId: UUID)` - get signal by runId or create if null\r\n- `static clear(runId: UUID)` - clear signal from map\r\n- `cancel(content?: Content)` - cancel current run and and send `content` as a response to user\r\n\r\n## Example\r\n\r\n```typescript\r\nimport { Content, EventType, Plugin } from \"@elizaos/core\";\r\nimport { CancelRunSignal } from \"@elizaos/plugin-bootstrap\";\r\n\r\n// consider we have a service to determine eligibility for entity\r\ninterface EligibilityService {\r\n  check(entityId: UUID): Promise<{ result: boolean, reason?: Content }>\r\n}\r\n\r\nconst plugin: Plugin = {\r\n...\r\n  events: {\r\n    [EventType.RUN_STARTED]: ({ entityId, runId, runtime }) => {\r\n      const service = runtime.getService<EligibilityService>(\"USER_MANAGEMENT\");\r\n      const { result, reason } = await service.check(entityId);\r\n      \r\n      if (!result) {\r\n        const signal = CancelRunSignal.getSignal(runId);\r\n        signal.cancel(reason);\r\n      }\r\n    },\r\n    ...\r\n  },\r\n  ...\r\n}\r\n\r\nexport default Plugin;\r\n```\r\n\r\n## Discord username\r\n\r\nalexd000\r\n\r\n",
              "type": null,
              "user": {
                "id": 82507604,
                "url": "https://api.github.com/users/alex-nax",
                "type": "User",
                "login": "alex-nax",
                "node_id": "MDQ6VXNlcjgyNTA3NjA0",
                "html_url": "https://github.com/alex-nax",
                "gists_url": "https://api.github.com/users/alex-nax/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/alex-nax/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/82507604?v=4",
                "events_url": "https://api.github.com/users/alex-nax/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/alex-nax/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/alex-nax/followers",
                "following_url": "https://api.github.com/users/alex-nax/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/alex-nax/orgs",
                "subscriptions_url": "https://api.github.com/users/alex-nax/subscriptions",
                "received_events_url": "https://api.github.com/users/alex-nax/received_events"
              },
              "draft": false,
              "state": "open",
              "title": "feat: ability to cancel current run before any calls to LLM are made",
              "labels": [],
              "locked": false,
              "number": 5728,
              "node_id": "PR_kwDOMT5cIs6ihriD",
              "assignee": null,
              "comments": 3,
              "html_url": "https://github.com/elizaOS/eliza/pull/5728",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T07:19:35Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/labels{/name}",
              "updated_at": "2025-08-07T07:22:05Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/comments",
              "pull_request": {
                "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5728",
                "diff_url": "https://github.com/elizaOS/eliza/pull/5728.diff",
                "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                "merged_at": null,
                "patch_url": "https://github.com/elizaOS/eliza/pull/5728.patch"
              },
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "FIRST_TIME_CONTRIBUTOR",
              "performed_via_github_app": null
            },
            {
              "id": 3298692741,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727",
              "body": "# feat(scenarios): Implement natural language agent interaction and response validation\n\n## Description\n\nThis ticket enables scenarios to test agent behavior through natural language interactions rather than direct code execution. This allows testing of agent reasoning, decision-making, and response generation in realistic conversation contexts with proper evaluation of agent responses.\n\n## Acceptance Criteria\n\n1. Scenario `run` blocks support `input` field for natural language prompts to agents\n2. Agent responses are captured and available for evaluation (text, thoughts, actions)\n3. Evaluators can access both agent response text and execution context\n4. Support for multi-turn conversations in scenarios\n5. Agent responses include thought process and action decisions\n6. Integration with existing evaluation engine for response validation\n7. Support for conversation context across multiple steps\n8. Agent response timing and performance metrics\n\n## Technical Approach\n\n### 1. Enhanced Run Step Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst RunStepSchema = z.object({\n  name: z.string().optional(),\n  // Natural language input to agent\n  input: z.string().optional(),\n  // Direct code execution (existing)\n  lang: z.string().optional(),\n  code: z.string().optional(),\n  // Agent interaction specific\n  agent_context: z.object({\n    conversation_id: z.string().optional(),\n    user_id: z.string().optional(),\n    room_id: z.string().optional(),\n  }).optional(),\n  evaluations: z.array(EvaluationSchema),\n});\n```\n\n### 2. Agent Interaction Engine\n```typescript\n// packages/cli/src/scenarios/agent-interaction.ts\nexport class AgentInteractionEngine {\n  constructor(private runtime: IAgentRuntime) {}\n\n  async interactWithAgent(input: string, context?: AgentContext): Promise<AgentResponse> {\n    // Create message for agent\n    const message: Memory = {\n      entityId: context?.user_id || 'scenario-user',\n      roomId: context?.room_id || 'scenario-room',\n      content: {\n        type: 'text',\n        text: input,\n      },\n      metadata: {\n        type: 'message',\n        conversationId: context?.conversation_id,\n      },\n    };\n\n    // Send to agent and capture response\n    const startTime = Date.now();\n    const response = await this.runtime.processMessage(message);\n    const endTime = Date.now();\n\n    return {\n      text: response.text,\n      thoughts: response.thoughts,\n      actions: response.actions,\n      timing: {\n        startTime,\n        endTime,\n        duration: endTime - startTime,\n      },\n      context: {\n        conversationId: context?.conversation_id,\n        messageId: message.id,\n      },\n    };\n  }\n}\n```\n\n### 3. Enhanced Execution Result\n```typescript\n// packages/cli/src/scenarios/providers.ts\nexport interface ExecutionResult {\n  exitCode: number;\n  stdout: string;\n  stderr: string;\n  files: Record<string, string>;\n  // New: Agent interaction results\n  agentResponse?: AgentResponse;\n  conversationHistory?: AgentResponse[];\n}\n```\n\n## Test Scenario\n\nCreate `agent-interaction-test.scenario.yaml`:\n```yaml\nname: \"Agent Interaction Test\"\ndescription: \"Tests natural language interaction with agents\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Implement Dark Mode\"\n          number: 123\n          state: \"open\"\n          labels: [\"feature\", \"ui\"]\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"2.5\"\n\nrun:\n  - name: \"Ask agent about roadmap\"\n    input: \"What new features are you planning to add?\"\n    agent_context:\n      conversation_id: \"roadmap-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify agent searched for issues\"\n      \n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n        description: \"Verify agent mentioned the mocked issue\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent provide a helpful and coherent response about new features?\"\n        expected: \"yes\"\n        description: \"Verify agent response quality\"\n\n  - name: \"Ask agent about wallet\"\n    input: \"What's my current wallet balance?\"\n    agent_context:\n      conversation_id: \"wallet-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify agent checked wallet balance\"\n      \n      - type: \"string_contains\"\n        value: \"2.5 ETH\"\n        description: \"Verify agent reported the correct balance\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent clearly explain the wallet balance information?\"\n        expected: \"yes\"\n\n  - name: \"Multi-turn conversation\"\n    input: \"Can you help me with both my wallet and roadmap?\"\n    agent_context:\n      conversation_id: \"multi-turn-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"ETH\"\n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent address both wallet and roadmap questions comprehensively?\"\n        expected: \"yes\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Single Turn**: Test basic agent interaction and response\n2. **Multi-turn**: Test conversation context across steps\n3. **Action Tracking**: Verify agent uses appropriate actions\n4. **Response Quality**: Test LLM judge evaluation of responses\n5. **Performance**: Test response timing and metrics\n6. **Error Handling**: Test agent behavior with invalid inputs\n\n## Dependencies\n\n- Requires plugin system integration (Ticket 1)\n- Builds on advanced mocking system (Ticket 2)\n- Integrates with existing evaluation engine\n- Depends on agent runtime message processing",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement natural language agent interaction and response validation",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5727,
              "node_id": "I_kwDOMT5cIs7Eng6F",
              "assignee": null,
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5727",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:49:34Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/labels{/name}",
              "updated_at": "2025-08-07T05:35:40Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3298691383,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726",
              "body": "# feat(scenarios): Implement conditional mocking and complex response structures\n\n## Description\n\nThis ticket enhances the mocking system to support conditional responses based on input parameters and complex response structures with metadata. This enables realistic testing of service interactions like GitHub API calls or EVM transactions with proper request/response matching.\n\n## Acceptance Criteria\n\n1. Mock definitions support `when` clauses for conditional responses\n2. `when` clauses can match on method arguments, input parameters, or request context\n3. Mock responses support complex nested structures with metadata (timestamps, IDs, etc.)\n4. Multiple mock responses can be defined for the same service/method with different conditions\n5. Mock system provides clear logging of which mock was triggered and why\n6. Mock responses can include realistic error conditions and edge cases\n7. Support for dynamic response generation based on input parameters\n8. Mock validation ensures `when` clauses are syntactically correct\n\n## Technical Approach\n\n### 1. Enhanced Mock Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst MockSchema = z.object({\n  service: z.string(),\n  method: z.string(),\n  when: z.object({\n    // Match on method arguments\n    args: z.array(z.any()).optional(),\n    // Match on specific argument values\n    input: z.record(z.any()).optional(),\n    // Match on request context\n    context: z.record(z.any()).optional(),\n    // Custom matching function\n    matcher: z.string().optional(), // JavaScript expression\n  }).optional(),\n  response: z.any(), // Can be function or static value\n  // For dynamic responses\n  responseFn: z.string().optional(), // JavaScript function\n  // Error simulation\n  error: z.object({\n    code: z.string(),\n    message: z.string(),\n  }).optional(),\n});\n```\n\n### 2. Mock Engine Implementation\n```typescript\n// packages/cli/src/scenarios/mock-engine.ts\nexport class MockEngine {\n  private mocks: MockDefinition[] = [];\n\n  addMock(mock: MockDefinition) {\n    this.mocks.push(mock);\n  }\n\n  async findMock(service: string, method: string, args: any[]): Promise<any> {\n    const candidates = this.mocks.filter(m => \n      m.service === service && m.method === method\n    );\n\n    for (const mock of candidates) {\n      if (await this.matchesCondition(mock, args)) {\n        this.logger.info(`Mock triggered: ${service}.${method} with condition: ${JSON.stringify(mock.when)}`);\n        return this.generateResponse(mock, args);\n      }\n    }\n\n    return null; // No mock found\n  }\n\n  private async matchesCondition(mock: MockDefinition, args: any[]): Promise<boolean> {\n    if (!mock.when) return true; // Default mock\n\n    // Match on arguments\n    if (mock.when.args) {\n      if (!this.deepEqual(args, mock.when.args)) return false;\n    }\n\n    // Match on input parameters\n    if (mock.when.input) {\n      const input = this.extractInputFromArgs(args);\n      if (!this.deepEqual(input, mock.when.input)) return false;\n    }\n\n    // Custom matcher function\n    if (mock.when.matcher) {\n      const matcherFn = new Function('args', 'input', mock.when.matcher);\n      return matcherFn(args, this.extractInputFromArgs(args));\n    }\n\n    return true;\n  }\n\n  private generateResponse(mock: MockDefinition, args: any[]): any {\n    if (mock.error) {\n      throw new Error(`${mock.error.code}: ${mock.error.message}`);\n    }\n\n    if (mock.responseFn) {\n      const responseFn = new Function('args', 'input', mock.responseFn);\n      return responseFn(args, this.extractInputFromArgs(args));\n    }\n\n    return mock.response;\n  }\n}\n```\n\n## Test Scenario\n\nCreate `advanced-mocking-test.scenario.yaml`:\n```yaml\nname: \"Advanced Mocking Test\"\ndescription: \"Tests conditional mocking and complex response structures\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    # Conditional GitHub issue search\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"bug\"\n        matcher: \"input.labels.includes('bug')\"\n      response:\n        - title: \"Critical Bug Found\"\n          number: 456\n          state: \"open\"\n          labels: [\"bug\", \"critical\"]\n          created_at: \"2024-07-15T10:00:00Z\"\n\n    # Conditional GitHub issue search - different response\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"feature\"\n        matcher: \"input.labels.includes('feature')\"\n      response:\n        - title: \"New Feature Request\"\n          number: 789\n          state: \"open\"\n          labels: [\"feature\", \"enhancement\"]\n          created_at: \"2024-07-15T11:00:00Z\"\n\n    # Dynamic EVM balance response\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      when:\n        args: [\"0x1234567890abcdef\"]\n      responseFn: |\n        return {\n          chain: \"ethereum\",\n          address: args[0],\n          balances: [\n            { symbol: \"ETH\", amount: \"1.23\" },\n            { symbol: \"USDC\", amount: \"1000.00\" }\n          ],\n          last_updated: new Date().toISOString()\n        }\n\n    # Error simulation\n    - service: \"github-service\"\n      method: \"readFile\"\n      when:\n        input:\n          path: \"/docs/nonexistent.md\"\n      error:\n        code: \"FILE_NOT_FOUND\"\n        message: \"File does not exist\"\n\nrun:\n  - name: \"Test conditional GitHub search\"\n    input: \"Search for issues with bug label\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"Critical Bug Found\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent correctly search for bug issues?\"\n        expected: \"yes\"\n\n  - name: \"Test dynamic EVM response\"\n    input: \"What's the balance for address 0x1234567890abcdef?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n      - type: \"string_contains\"\n        value: \"1000.00 USDC\"\n\n  - name: \"Test error handling\"\n    input: \"Read the file /docs/nonexistent.md\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.readFile\"\n      - type: \"string_contains\"\n        value: \"File does not exist\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Conditional Matching**: Test different responses based on input parameters\n2. **Dynamic Responses**: Test response generation based on arguments\n3. **Error Simulation**: Test error handling and reporting\n4. **Complex Structures**: Test nested response objects with metadata\n5. **Multiple Mocks**: Test multiple mocks for same service/method\n6. **Logging**: Verify mock selection is logged clearly\n\n## Dependencies\n\n- Builds on existing mock system in scenarios\n- Requires plugin system integration (Ticket 1)\n- Integrates with agent interaction testing (Ticket 3) ",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement conditional mocking and complex response structures",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5726,
              "node_id": "I_kwDOMT5cIs7Engk3",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5726",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:49:00Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/labels{/name}",
              "updated_at": "2025-08-07T05:32:53Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3298689704,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725",
              "body": "# feat(scenarios): Implement plugin specification and dynamic loading\n\n## Description\n\nThis ticket implements plugin specification in scenario YAML files, allowing scenarios to declare which plugins are required for testing. This enables testing of agent behaviors that depend on specific plugins like `@elizaos/plugin-github` or `@elizaos/plugin-evm`. The system will dynamically load specified plugins during scenario execution and make their actions, providers, and services available to the agent.\n\n## Acceptance Criteria\n\n1. Scenario YAML supports a `plugins` array at the root level with string plugin names\n2. The `initializeAgent()` function respects scenario plugin specifications and loads them via `startAgent()`\n3. Plugin loading follows the same dependency resolution and error handling as the main CLI\n4. Scenarios can specify both string plugin names (`@elizaos/plugin-github`) and direct plugin objects\n5. Plugin loading errors are clearly reported with actionable guidance\n6. Default plugins (bootstrap, sql) are automatically included unless explicitly excluded via `exclude_defaults: true`\n7. Plugin conflicts are detected and reported during scenario validation\n8. Plugin initialization errors don't crash the scenario but are reported in results\n\n## Technical Approach\n\n### 1. Update Scenario Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst ScenarioSchema = z.object({\n  name: z.string(),\n  description: z.string(),\n  plugins: z.array(z.string()).optional(), // e.g., [\"@elizaos/plugin-github\"]\n  exclude_defaults: z.boolean().optional(), // exclude bootstrap/sql\n  environment: EnvironmentSchema,\n  setup: SetupSchema.optional(),\n  run: z.array(RunStepSchema),\n  judgment: JudgmentSchema,\n});\n```\n\n### 2. Enhance Runtime Factory\n```typescript\n// packages/cli/src/scenarios/runtime-factory.ts\nexport async function initializeAgent(scenario: Scenario): Promise<IAgentRuntime> {\n  const character: Character = {\n    name: 'scenario-runner',\n    id: stringToUuid('scenario-runner'),\n    bio: 'A minimal character for running scenarios',\n    plugins: scenario.plugins || []\n  };\n\n  // Load default plugins unless excluded\n  if (!scenario.exclude_defaults) {\n    character.plugins.push('@elizaos/plugin-bootstrap', '@elizaos/plugin-sql');\n  }\n\n  const runtime = await startAgent(\n    encryptedCharacter(character),\n    server,\n    undefined,\n    character.plugins,\n    { isTestMode: true }\n  );\n\n  return runtime;\n}\n```\n\n### 3. Plugin Validation\n```typescript\n// packages/cli/src/scenarios/plugin-validator.ts\nexport async function validateScenarioPlugins(scenario: Scenario): Promise<ValidationResult[]> {\n  const results: ValidationResult[] = [];\n  \n  for (const pluginName of scenario.plugins || []) {\n    try {\n      const plugin = await loadAndPreparePlugin(pluginName);\n      if (!plugin) {\n        results.push({\n          type: 'error',\n          message: `Plugin '${pluginName}' could not be loaded`,\n          suggestion: 'Check if plugin is installed or built correctly'\n        });\n      }\n    } catch (error) {\n      results.push({\n        type: 'error', \n        message: `Failed to validate plugin '${pluginName}': ${error.message}`,\n        suggestion: 'Verify plugin dependencies and configuration'\n      });\n    }\n  }\n  \n  return results;\n}\n```\n\n## Test Scenario\n\nCreate `plugin-integration-test.scenario.yaml`:\n```yaml\nname: \"Plugin Integration Test\"\ndescription: \"Tests loading and using plugins specified in scenario YAML\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Test Issue\"\n          number: 123\n          state: \"open\"\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"1.23\"\n\nrun:\n  - name: \"Test GitHub plugin actions\"\n    input: \"Search for issues with label 'bug'\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify GitHub plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"Test Issue\"\n        description: \"Verify agent found the mocked issue\"\n\n  - name: \"Test EVM plugin actions\"\n    input: \"What's my wallet balance?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify EVM plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n        description: \"Verify agent reported the mocked balance\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Plugin Loading Test**: Verify plugins load without errors\n2. **Action Availability Test**: Confirm agent can use plugin actions\n3. **Error Handling Test**: Test with non-existent plugin\n4. **Default Plugin Test**: Verify bootstrap/sql are included by default\n5. **Exclusion Test**: Test `exclude_defaults: true` behavior\n\n## Dependencies\n\n- Fixes the `startAgent` hanging issue (#5719) to enable plugin testing\n- Builds on existing `loadAndPreparePlugin` functionality\n- Integrates with current scenario execution flow ",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement plugin specification and dynamic loading",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5725,
              "node_id": "I_kwDOMT5cIs7EngKo",
              "assignee": null,
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5725",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:48:08Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/labels{/name}",
              "updated_at": "2025-08-07T05:37:32Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            }
          ]
        },
        "text": "Open issues for elizaOS/eliza (10 shown):\n‚Ä¢ #5754: Critical: Plugin Publishing Fails with False Success Reports (open) [bug]\n‚Ä¢ #5749: Implement Runtime Method Mocking for Deterministic Agent Testing (open) [enhancement, testing, Reality Spiral]\n‚Ä¢ #5747: Fixing bugs in eliza-cloud (open)\n‚Ä¢ #5738: üêõ Build failure in @elizaos/core causing bun run clean to fail (open) [bug]\n‚Ä¢ #5734: Eliza CLI failed to build project (open) [bug]\n‚Ä¢ #5729: Update README.md to fix error (open)\n‚Ä¢ #5728: feat: ability to cancel current run before any calls to LLM are made (open)\n‚Ä¢ #5727: feat(scenarios): Implement natural language agent interaction and response validation (open) [enhancement, Reality Spiral]\n‚Ä¢ #5726: feat(scenarios): Implement conditional mocking and complex response structures (open) [enhancement, Reality Spiral]\n‚Ä¢ #5725: feat(scenarios): Implement plugin specification and dynamic loading (open) [enhancement, Reality Spiral]",
        "values": {
          "issues": [
            {
              "id": 3310285907,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754",
              "body": "## Issue Summary\nThe `elizaos publish --npm` command reports successful publishing but the plugin is not actually published to npm, despite showing success messages. The npm publish is failing with a 404 error, but the ElizaOS CLI incorrectly reports success.\n\n## Key Problems Identified\n\n### 1. Critical NPM Publishing Failure\n- **Error**: `npm error 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found`\n- **Issue**: The package scope `@elizaos` doesn't exist on npm, preventing publishing\n- **Impact**: Package cannot be published to npm, but CLI reports success\n\n### 2. False Success Reporting\n- **Issue**: CLI reports `[‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm`\n- **Reality**: npm publish failed with 404 error\n- **Impact**: Developers believe their plugin is published when it's not\n\n### 3. Registry Repository Mismatch\n- **Expected**: Should create PR against `https://github.com/elizaos-plugins/registry`\n- **Actual**: Still references old registry `https://github.com/elizaos/registry`\n- **Impact**: Plugin won't appear in the official ElizaOS registry\n\n## Steps to Reproduce\n\n```bash\n# Navigate to the plugin directory\ncd packages/plugin-polygon\n\n# Ensure you're on the correct branch with the changes\ngit checkout polygon\n\n# Run the publish command\nelizaos publish --npm\n\n# Verify the success message appears\n# [‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm\n\n# Check if package actually exists on npm\nnpm view @elizaos/plugin-polygon@1.0.0\n# Result: 404 Not Found - '@elizaos/plugin-polygon@1.0.0' is not in this registry\n```\n\n## Technical Details\n\n### NPM Error Analysis\nThe npm logs show the root cause:\n```\nhttp fetch PUT 404 https://registry.npmjs.org/@elizaos%2fplugin-polygon 507ms\nerror 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found\n```\n\nThis indicates that the `@elizaos` scope doesn't exist on npm, which is required for publishing scoped packages.\n\n### CLI Error Handling Failure\nThe ElizaOS CLI is not properly parsing npm error codes:\n- npm returns exit code 1 (failure)\n- CLI ignores the error and reports success\n- No validation that the package actually exists on npm\n\n## Expected Behavior\n1. CLI should detect npm publish failures (exit code 1)\n2. CLI should fail with clear error message when package scope doesn't exist\n3. CLI should validate that package actually exists on npm after publishing\n4. CLI should create PRs against the correct registry repository\n\n## Recommended Fixes\n\n### 1. Fix NPM Error Detection\n```typescript\n// In the publish command, check npm exit code\nconst npmResult = await exec('npm publish', { cwd: pluginDir });\nif (npmResult.exitCode !== 0) {\n  throw new Error(`NPM publish failed: ${npmResult.stderr}`);\n}\n```\n\n### 2. Add Package Scope Validation\n```typescript\n// Before publishing, check if scope exists\nconst scopeExists = await checkNpmScope('@elizaos');\nif (!scopeExists) {\n  throw new Error('Package scope @elizaos does not exist on npm. Contact npm support to create the scope.');\n}\n```\n\n### 3. Add Post-Publish Validation\n```typescript\n// After publishing, verify package exists\nconst packageExists = await checkPackageExists(packageName, version);\nif (!packageExists) {\n  throw new Error(`Package was not published successfully. Check npm logs for details.`);\n}\n```\n\n## Priority\n**Critical** - This completely blocks plugin publishing and creates false success reports.\n\n## Affected Components\n- `packages/cli/src/commands/publish.ts`\n- NPM publishing logic\n- Error handling and success reporting\n- Package scope validation\n- Registry repository configuration\n\n## Immediate Action Required\n1. **Create the `@elizaos` scope on npm** or use an existing scope\n2. Update CLI to properly detect and handle npm publish failures\n3. Add post-publish validation to ensure packages actually exist on npm\n4. Update registry repository configuration\n\n## Alternative Solutions\n1. **Use existing scope**: Change package name to `@monilpat/plugin-polygon`\n2. **Create organization scope**: Set up `@elizaos` organization on npm\n3. **Use unscoped package**: Publish as `elizaos-plugin-polygon`\n\nThis issue is critically blocking plugin developers from successfully publishing their work and needs immediate attention from the ElizaOS team.\n",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "Critical: Plugin Publishing Fails with False Success Reports",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5754,
              "node_id": "I_kwDOMT5cIs7FTvRT",
              "assignee": null,
              "comments": 0,
              "html_url": "https://github.com/elizaOS/eliza/issues/5754",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-11T14:20:08Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/labels{/name}",
              "updated_at": "2025-08-11T14:20:08Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3308102900,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749",
              "body": "### Problem Statement\nCurrently, ElizaOS scenario testing lacks the ability to mock internal agent runtime calls (particularly LLM interactions) when testing via the API client. This makes it difficult to create deterministic tests for agent behavior and workflows.\n\n### Current Limitations\n- Global function mocks only work for code executed in the same process\n- No way to intercept `runtime.useModel` calls from the bootstrap plugin\n- Agent behavior is non-deterministic due to real LLM calls\n- Difficult to test specific agent decision paths and responses\n\n### Why Different Approach Was Needed\n\nThe existing mocking system was designed for **code execution environments** (E2B sandbox and local `node -e` processes), where mocks are applied to the execution context. However, **agent testing** works differently:\n\n- **E2B/Local Execution**: Code runs in isolated processes/sandboxes where global mocks can be applied\n- **Agent Testing**: Agent runs as a service with API client interaction, requiring direct runtime method interception\n- **Architecture Gap**: The bootstrap plugin calls `runtime.useModel` internally, which can't be mocked through the execution environment approach\n\nThis architectural difference necessitated a new approach that directly intercepts runtime methods rather than relying on execution context mocking.\n\n### Proposed Solution: Runtime Method Mocking\n\nWe've implemented a new mocking approach that directly intercepts `IAgentRuntime` method calls:\n\n#### Key Components\n\n1. **MockEngine Enhancement**\n   - Added `runtimeMethodMocks` to support mocking runtime methods\n   - Priority system: `runtimeMethod` > `service` > `globalFunction`\n   - Direct method replacement on the runtime instance\n\n2. **Schema Updates**\n   - Extended `MockSchema` to include `runtimeMethod: z.string().optional()`\n   - Supports mocking any `IAgentRuntime` method (e.g., `useModel`, `getService`)\n\n3. **Conditional Matching**\n   - Matcher functions can inspect method arguments\n   - Example: `\"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"`\n   - Supports complex conditional logic for when to apply mocks\n\n#### Usage Example\n\n```yaml\nsetup:\n  mocks:\n    - runtimeMethod: \"useModel\"\n      method: \"useModel\"\n      when:\n        matcher: \"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"\n      response: \"<response><name>agent</name><reasoning>Mocked response</reasoning><action>RESPOND</action></response>\"\n```\n\n#### Benefits\n\n1. **Deterministic Testing**: Replace LLM calls with static responses\n2. **Full Workflow Testing**: Test complete agent decision flows\n3. **Conditional Mocking**: Apply mocks based on specific conditions\n4. **Runtime Integration**: Works seamlessly with existing agent architecture\n5. **Backward Compatibility**: Existing mocks continue to work\n\n#### Implementation Steps\n\n- MockEngine runtime method support\n- Schema updates for runtimeMethod mocks\n- Conditional matching with matcher functions\n- Integration with scenario runner\n- Basic useModel mocking working\n- Add support for mocking other runtime methods (getService, etc.)\n- Create comprehensive test scenarios\n- Add documentation and examples\n- Consider adding mock recording/replay capabilities\n\n### Technical Details\n\nThe implementation works by:\n1. Creating the `IAgentRuntime` instance in the scenario runner\n2. Applying mocks directly to the runtime object before agent initialization\n3. The bootstrap plugin receives the mocked runtime and uses the mocked methods\n4. Mocks are reverted after scenario completion\n\nThis approach provides the foundation for robust, deterministic agent testing while maintaining the existing architecture.",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "Implement Runtime Method Mocking for Deterministic Agent Testing",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 7668252177,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/testing",
                  "name": "testing",
                  "color": "2D3957",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAAByRA-EQ",
                  "description": ""
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5749,
              "node_id": "I_kwDOMT5cIs7FLaT0",
              "assignee": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "comments": 0,
              "html_url": "https://github.com/elizaOS/eliza/issues/5749",
              "assignees": [
                {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-11T00:08:49Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/labels{/name}",
              "updated_at": "2025-08-11T00:09:37Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3304516859,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747",
              "body": null,
              "type": null,
              "user": {
                "id": 48334430,
                "url": "https://api.github.com/users/samarth30",
                "type": "User",
                "login": "samarth30",
                "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                "html_url": "https://github.com/samarth30",
                "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/samarth30/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/samarth30/followers",
                "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/samarth30/orgs",
                "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                "received_events_url": "https://api.github.com/users/samarth30/received_events"
              },
              "state": "open",
              "title": "Fixing bugs in eliza-cloud",
              "labels": [],
              "locked": false,
              "number": 5747,
              "node_id": "I_kwDOMT5cIs7E9uz7",
              "assignee": {
                "id": 48334430,
                "url": "https://api.github.com/users/samarth30",
                "type": "User",
                "login": "samarth30",
                "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                "html_url": "https://github.com/samarth30",
                "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/samarth30/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/samarth30/followers",
                "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/samarth30/orgs",
                "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                "received_events_url": "https://api.github.com/users/samarth30/received_events"
              },
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5747",
              "assignees": [
                {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-08T16:01:56Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/labels{/name}",
              "updated_at": "2025-08-08T19:02:49Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "MEMBER",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": {
                "id": 20150,
                "name": "Linear",
                "slug": "linear",
                "owner": {
                  "id": 46686594,
                  "url": "https://api.github.com/users/linear",
                  "type": "Organization",
                  "login": "linear",
                  "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ2Njg2NTk0",
                  "html_url": "https://github.com/linear",
                  "gists_url": "https://api.github.com/users/linear/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/linear/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/46686594?v=4",
                  "events_url": "https://api.github.com/users/linear/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/linear/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/linear/followers",
                  "following_url": "https://api.github.com/users/linear/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/linear/orgs",
                  "subscriptions_url": "https://api.github.com/users/linear/subscriptions",
                  "received_events_url": "https://api.github.com/users/linear/received_events"
                },
                "events": [
                  "check_suite",
                  "issues",
                  "issue_comment",
                  "pull_request",
                  "pull_request_review",
                  "repository",
                  "sub_issues"
                ],
                "node_id": "MDM6QXBwMjAxNTA=",
                "html_url": "https://github.com/apps/linear",
                "client_id": "Iv1.085d682ea245c945",
                "created_at": "2018-11-02T18:07:23Z",
                "updated_at": "2025-02-07T14:59:56Z",
                "description": "",
                "permissions": {
                  "checks": "read",
                  "issues": "write",
                  "metadata": "read",
                  "pull_requests": "write"
                },
                "external_url": "https://linear.app"
              }
            },
            {
              "id": 3302237103,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738",
              "body": "## Description\n\nThe `bun run clean` command is failing due to TypeScript errors in `@elizaos/core` package during the DTS (type definition) build phase.\n\n## Error Details\n\n### Build Process\n```\n‚Ä¢ Running build in 17 packages\n‚Ä¢ Remote caching disabled\n@elizaos/config:build: cache miss\n@elizaos/autodoc:build: cache miss\n@elizaos/core:build: cache miss\n```\n\n### TypeScript Errors in @elizaos/core/src/utils.ts\n1. Line 218: `error TS2345: Argument of type '`${string}-${string}-${string}-${string}-${string}`' is not assignable to parameter of type 'never'.`\n2. Line 366: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n3. Line 409: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n4. Line 536: `error TS2345: Argument of type '{ numberOfChunks: number; averageChunkSize: number; }' is not assignable to parameter of type 'never'.`\n\n### Impact\n- Blocks `bun run clean` command\n- Prevents successful build of `@elizaos/core`\n- Affects dependent packages in the monorepo\n\n## Steps to Reproduce\n1. Run `bun run clean`\n2. Observe build failure in `@elizaos/core`\n3. Build fails with TypeScript errors during DTS generation\n\n## Expected Behavior\n- `bun run clean` should complete successfully\n- `@elizaos/core` should build without TypeScript errors\n- Type definitions should be generated correctly\n\n## Suggested Fix\n\nThe errors suggest type mismatches in `utils.ts`. Need to:\n1. Review type definitions in affected lines\n2. Update type assertions or generic constraints\n3. Ensure string template literal types are properly handled\n4. Fix object type assignments\n\n### Files to Update\n- `packages/core/src/utils.ts`\n\n## Priority\n**HIGH** - This is blocking clean builds and potentially affecting development workflow.",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "üêõ Build failure in @elizaos/core causing bun run clean to fail",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5738,
              "node_id": "I_kwDOMT5cIs7E1COv",
              "assignee": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5738",
              "assignees": [
                {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-08T00:26:11Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/labels{/name}",
              "updated_at": "2025-08-11T14:56:01Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3301116813,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734",
              "body": "**Describe the bug**\n\nOn project creation, ElizaOS CLI fails with the following error:\n```\n‚óá  Failed to build project\nstdout: src/index.ts(7,25): error TS2345: Argument of type 'string' is not assignable to parameter of type 'undefined'.\nstderr: $ tsc --noEmit && vite build && tsup\n```\n\n**To Reproduce**\n\n- Install ElizaOS through `bun`\n```\nbun i -g @elizaos/cli\n```\n- Create new ElizaOS project\n```\nelizaos create abcde\n```\n\n**Expected behavior**\n\nProject built successfully\n\n**Screenshots**\n\n<img width=\"1095\" height=\"572\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/967dd6a2-0d70-4e2e-8019-85a2eab5f225\" />\n\n**Additional context**\n\nElizaOS CLI version: `1.3.2`\n",
              "type": null,
              "user": {
                "id": 74447600,
                "url": "https://api.github.com/users/Kemystra",
                "type": "User",
                "login": "Kemystra",
                "node_id": "MDQ6VXNlcjc0NDQ3NjAw",
                "html_url": "https://github.com/Kemystra",
                "gists_url": "https://api.github.com/users/Kemystra/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/Kemystra/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/74447600?v=4",
                "events_url": "https://api.github.com/users/Kemystra/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/Kemystra/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/Kemystra/followers",
                "following_url": "https://api.github.com/users/Kemystra/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/Kemystra/orgs",
                "subscriptions_url": "https://api.github.com/users/Kemystra/subscriptions",
                "received_events_url": "https://api.github.com/users/Kemystra/received_events"
              },
              "state": "open",
              "title": "Eliza CLI failed to build project",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5734,
              "node_id": "I_kwDOMT5cIs7EwwuN",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5734",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T16:14:00Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/labels{/name}",
              "updated_at": "2025-08-08T19:43:52Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "NONE",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3299481897,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729",
              "body": "# Relates to\r\n\r\nN/A (Documentation improvement, not tied to a specific issue or ticket)\r\n\r\n# Risks\r\n\r\nLow.  \r\nThis change only updates documentation and does not affect any code or functionality.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR updates the elizaos README to include a fix for installation errors that may occur due to permission issues. It adds a note suggesting the use of sudo if users encounter a \"Permission denied\" or \"InstallFailed\" error when running the `elizaos create my-agent` command.\r\n\r\n## What kind of change is this?\r\n\r\nImprovements (misc. changes to existing features)  \r\nDocumentation update\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes require a change to the project documentation.  \r\nI have updated the documentation accordingly.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\nStart by reviewing the changes in the README.md file, specifically the section on creating a new project.\r\n\r\n## Detailed testing steps\r\n\r\n- Open the updated README.md.\r\n- Review the new instructions under \"Create Your First Project.\"\r\n- Confirm that the added note about using `sudo` is clear and helpful for users who encounter permission errors.",
              "type": null,
              "user": {
                "id": 32749185,
                "url": "https://api.github.com/users/mandatedisrael",
                "type": "User",
                "login": "mandatedisrael",
                "node_id": "MDQ6VXNlcjMyNzQ5MTg1",
                "html_url": "https://github.com/mandatedisrael",
                "gists_url": "https://api.github.com/users/mandatedisrael/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/mandatedisrael/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/32749185?v=4",
                "events_url": "https://api.github.com/users/mandatedisrael/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/mandatedisrael/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/mandatedisrael/followers",
                "following_url": "https://api.github.com/users/mandatedisrael/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/mandatedisrael/orgs",
                "subscriptions_url": "https://api.github.com/users/mandatedisrael/subscriptions",
                "received_events_url": "https://api.github.com/users/mandatedisrael/received_events"
              },
              "draft": false,
              "state": "open",
              "title": "Update README.md to fix error",
              "labels": [],
              "locked": false,
              "number": 5729,
              "node_id": "PR_kwDOMT5cIs6iiNWN",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/pull/5729",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T08:10:12Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/labels{/name}",
              "updated_at": "2025-08-07T08:10:24Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/comments",
              "pull_request": {
                "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5729",
                "diff_url": "https://github.com/elizaOS/eliza/pull/5729.diff",
                "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                "merged_at": null,
                "patch_url": "https://github.com/elizaOS/eliza/pull/5729.patch"
              },
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "FIRST_TIME_CONTRIBUTOR",
              "performed_via_github_app": null
            },
            {
              "id": 3299322983,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728",
              "body": "# Background\r\n\r\n## What does this PR do?\r\n\r\nIntroduce entity for cancelling runs `CancelRunSignal`\r\n\r\n## Why are we doing this? Any context or related work?\r\n\r\n- Calls to LLMs usually cost some credits\r\n- When we receive the `RUN_STARTED` event we can check current entity and end run to prevent credits spending\r\n\r\n# Documentation changes needed?\r\n\r\n## Methods\r\n\r\n- `static getSignal(runId: UUID)` - get signal by runId or create if null\r\n- `static clear(runId: UUID)` - clear signal from map\r\n- `cancel(content?: Content)` - cancel current run and and send `content` as a response to user\r\n\r\n## Example\r\n\r\n```typescript\r\nimport { Content, EventType, Plugin } from \"@elizaos/core\";\r\nimport { CancelRunSignal } from \"@elizaos/plugin-bootstrap\";\r\n\r\n// consider we have a service to determine eligibility for entity\r\ninterface EligibilityService {\r\n  check(entityId: UUID): Promise<{ result: boolean, reason?: Content }>\r\n}\r\n\r\nconst plugin: Plugin = {\r\n...\r\n  events: {\r\n    [EventType.RUN_STARTED]: ({ entityId, runId, runtime }) => {\r\n      const service = runtime.getService<EligibilityService>(\"USER_MANAGEMENT\");\r\n      const { result, reason } = await service.check(entityId);\r\n      \r\n      if (!result) {\r\n        const signal = CancelRunSignal.getSignal(runId);\r\n        signal.cancel(reason);\r\n      }\r\n    },\r\n    ...\r\n  },\r\n  ...\r\n}\r\n\r\nexport default Plugin;\r\n```\r\n\r\n## Discord username\r\n\r\nalexd000\r\n\r\n",
              "type": null,
              "user": {
                "id": 82507604,
                "url": "https://api.github.com/users/alex-nax",
                "type": "User",
                "login": "alex-nax",
                "node_id": "MDQ6VXNlcjgyNTA3NjA0",
                "html_url": "https://github.com/alex-nax",
                "gists_url": "https://api.github.com/users/alex-nax/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/alex-nax/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/82507604?v=4",
                "events_url": "https://api.github.com/users/alex-nax/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/alex-nax/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/alex-nax/followers",
                "following_url": "https://api.github.com/users/alex-nax/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/alex-nax/orgs",
                "subscriptions_url": "https://api.github.com/users/alex-nax/subscriptions",
                "received_events_url": "https://api.github.com/users/alex-nax/received_events"
              },
              "draft": false,
              "state": "open",
              "title": "feat: ability to cancel current run before any calls to LLM are made",
              "labels": [],
              "locked": false,
              "number": 5728,
              "node_id": "PR_kwDOMT5cIs6ihriD",
              "assignee": null,
              "comments": 3,
              "html_url": "https://github.com/elizaOS/eliza/pull/5728",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T07:19:35Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/labels{/name}",
              "updated_at": "2025-08-07T07:22:05Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/comments",
              "pull_request": {
                "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5728",
                "diff_url": "https://github.com/elizaOS/eliza/pull/5728.diff",
                "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                "merged_at": null,
                "patch_url": "https://github.com/elizaOS/eliza/pull/5728.patch"
              },
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "FIRST_TIME_CONTRIBUTOR",
              "performed_via_github_app": null
            },
            {
              "id": 3298692741,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727",
              "body": "# feat(scenarios): Implement natural language agent interaction and response validation\n\n## Description\n\nThis ticket enables scenarios to test agent behavior through natural language interactions rather than direct code execution. This allows testing of agent reasoning, decision-making, and response generation in realistic conversation contexts with proper evaluation of agent responses.\n\n## Acceptance Criteria\n\n1. Scenario `run` blocks support `input` field for natural language prompts to agents\n2. Agent responses are captured and available for evaluation (text, thoughts, actions)\n3. Evaluators can access both agent response text and execution context\n4. Support for multi-turn conversations in scenarios\n5. Agent responses include thought process and action decisions\n6. Integration with existing evaluation engine for response validation\n7. Support for conversation context across multiple steps\n8. Agent response timing and performance metrics\n\n## Technical Approach\n\n### 1. Enhanced Run Step Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst RunStepSchema = z.object({\n  name: z.string().optional(),\n  // Natural language input to agent\n  input: z.string().optional(),\n  // Direct code execution (existing)\n  lang: z.string().optional(),\n  code: z.string().optional(),\n  // Agent interaction specific\n  agent_context: z.object({\n    conversation_id: z.string().optional(),\n    user_id: z.string().optional(),\n    room_id: z.string().optional(),\n  }).optional(),\n  evaluations: z.array(EvaluationSchema),\n});\n```\n\n### 2. Agent Interaction Engine\n```typescript\n// packages/cli/src/scenarios/agent-interaction.ts\nexport class AgentInteractionEngine {\n  constructor(private runtime: IAgentRuntime) {}\n\n  async interactWithAgent(input: string, context?: AgentContext): Promise<AgentResponse> {\n    // Create message for agent\n    const message: Memory = {\n      entityId: context?.user_id || 'scenario-user',\n      roomId: context?.room_id || 'scenario-room',\n      content: {\n        type: 'text',\n        text: input,\n      },\n      metadata: {\n        type: 'message',\n        conversationId: context?.conversation_id,\n      },\n    };\n\n    // Send to agent and capture response\n    const startTime = Date.now();\n    const response = await this.runtime.processMessage(message);\n    const endTime = Date.now();\n\n    return {\n      text: response.text,\n      thoughts: response.thoughts,\n      actions: response.actions,\n      timing: {\n        startTime,\n        endTime,\n        duration: endTime - startTime,\n      },\n      context: {\n        conversationId: context?.conversation_id,\n        messageId: message.id,\n      },\n    };\n  }\n}\n```\n\n### 3. Enhanced Execution Result\n```typescript\n// packages/cli/src/scenarios/providers.ts\nexport interface ExecutionResult {\n  exitCode: number;\n  stdout: string;\n  stderr: string;\n  files: Record<string, string>;\n  // New: Agent interaction results\n  agentResponse?: AgentResponse;\n  conversationHistory?: AgentResponse[];\n}\n```\n\n## Test Scenario\n\nCreate `agent-interaction-test.scenario.yaml`:\n```yaml\nname: \"Agent Interaction Test\"\ndescription: \"Tests natural language interaction with agents\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Implement Dark Mode\"\n          number: 123\n          state: \"open\"\n          labels: [\"feature\", \"ui\"]\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"2.5\"\n\nrun:\n  - name: \"Ask agent about roadmap\"\n    input: \"What new features are you planning to add?\"\n    agent_context:\n      conversation_id: \"roadmap-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify agent searched for issues\"\n      \n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n        description: \"Verify agent mentioned the mocked issue\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent provide a helpful and coherent response about new features?\"\n        expected: \"yes\"\n        description: \"Verify agent response quality\"\n\n  - name: \"Ask agent about wallet\"\n    input: \"What's my current wallet balance?\"\n    agent_context:\n      conversation_id: \"wallet-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify agent checked wallet balance\"\n      \n      - type: \"string_contains\"\n        value: \"2.5 ETH\"\n        description: \"Verify agent reported the correct balance\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent clearly explain the wallet balance information?\"\n        expected: \"yes\"\n\n  - name: \"Multi-turn conversation\"\n    input: \"Can you help me with both my wallet and roadmap?\"\n    agent_context:\n      conversation_id: \"multi-turn-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"ETH\"\n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent address both wallet and roadmap questions comprehensively?\"\n        expected: \"yes\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Single Turn**: Test basic agent interaction and response\n2. **Multi-turn**: Test conversation context across steps\n3. **Action Tracking**: Verify agent uses appropriate actions\n4. **Response Quality**: Test LLM judge evaluation of responses\n5. **Performance**: Test response timing and metrics\n6. **Error Handling**: Test agent behavior with invalid inputs\n\n## Dependencies\n\n- Requires plugin system integration (Ticket 1)\n- Builds on advanced mocking system (Ticket 2)\n- Integrates with existing evaluation engine\n- Depends on agent runtime message processing",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement natural language agent interaction and response validation",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5727,
              "node_id": "I_kwDOMT5cIs7Eng6F",
              "assignee": null,
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5727",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:49:34Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/labels{/name}",
              "updated_at": "2025-08-07T05:35:40Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3298691383,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726",
              "body": "# feat(scenarios): Implement conditional mocking and complex response structures\n\n## Description\n\nThis ticket enhances the mocking system to support conditional responses based on input parameters and complex response structures with metadata. This enables realistic testing of service interactions like GitHub API calls or EVM transactions with proper request/response matching.\n\n## Acceptance Criteria\n\n1. Mock definitions support `when` clauses for conditional responses\n2. `when` clauses can match on method arguments, input parameters, or request context\n3. Mock responses support complex nested structures with metadata (timestamps, IDs, etc.)\n4. Multiple mock responses can be defined for the same service/method with different conditions\n5. Mock system provides clear logging of which mock was triggered and why\n6. Mock responses can include realistic error conditions and edge cases\n7. Support for dynamic response generation based on input parameters\n8. Mock validation ensures `when` clauses are syntactically correct\n\n## Technical Approach\n\n### 1. Enhanced Mock Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst MockSchema = z.object({\n  service: z.string(),\n  method: z.string(),\n  when: z.object({\n    // Match on method arguments\n    args: z.array(z.any()).optional(),\n    // Match on specific argument values\n    input: z.record(z.any()).optional(),\n    // Match on request context\n    context: z.record(z.any()).optional(),\n    // Custom matching function\n    matcher: z.string().optional(), // JavaScript expression\n  }).optional(),\n  response: z.any(), // Can be function or static value\n  // For dynamic responses\n  responseFn: z.string().optional(), // JavaScript function\n  // Error simulation\n  error: z.object({\n    code: z.string(),\n    message: z.string(),\n  }).optional(),\n});\n```\n\n### 2. Mock Engine Implementation\n```typescript\n// packages/cli/src/scenarios/mock-engine.ts\nexport class MockEngine {\n  private mocks: MockDefinition[] = [];\n\n  addMock(mock: MockDefinition) {\n    this.mocks.push(mock);\n  }\n\n  async findMock(service: string, method: string, args: any[]): Promise<any> {\n    const candidates = this.mocks.filter(m => \n      m.service === service && m.method === method\n    );\n\n    for (const mock of candidates) {\n      if (await this.matchesCondition(mock, args)) {\n        this.logger.info(`Mock triggered: ${service}.${method} with condition: ${JSON.stringify(mock.when)}`);\n        return this.generateResponse(mock, args);\n      }\n    }\n\n    return null; // No mock found\n  }\n\n  private async matchesCondition(mock: MockDefinition, args: any[]): Promise<boolean> {\n    if (!mock.when) return true; // Default mock\n\n    // Match on arguments\n    if (mock.when.args) {\n      if (!this.deepEqual(args, mock.when.args)) return false;\n    }\n\n    // Match on input parameters\n    if (mock.when.input) {\n      const input = this.extractInputFromArgs(args);\n      if (!this.deepEqual(input, mock.when.input)) return false;\n    }\n\n    // Custom matcher function\n    if (mock.when.matcher) {\n      const matcherFn = new Function('args', 'input', mock.when.matcher);\n      return matcherFn(args, this.extractInputFromArgs(args));\n    }\n\n    return true;\n  }\n\n  private generateResponse(mock: MockDefinition, args: any[]): any {\n    if (mock.error) {\n      throw new Error(`${mock.error.code}: ${mock.error.message}`);\n    }\n\n    if (mock.responseFn) {\n      const responseFn = new Function('args', 'input', mock.responseFn);\n      return responseFn(args, this.extractInputFromArgs(args));\n    }\n\n    return mock.response;\n  }\n}\n```\n\n## Test Scenario\n\nCreate `advanced-mocking-test.scenario.yaml`:\n```yaml\nname: \"Advanced Mocking Test\"\ndescription: \"Tests conditional mocking and complex response structures\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    # Conditional GitHub issue search\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"bug\"\n        matcher: \"input.labels.includes('bug')\"\n      response:\n        - title: \"Critical Bug Found\"\n          number: 456\n          state: \"open\"\n          labels: [\"bug\", \"critical\"]\n          created_at: \"2024-07-15T10:00:00Z\"\n\n    # Conditional GitHub issue search - different response\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"feature\"\n        matcher: \"input.labels.includes('feature')\"\n      response:\n        - title: \"New Feature Request\"\n          number: 789\n          state: \"open\"\n          labels: [\"feature\", \"enhancement\"]\n          created_at: \"2024-07-15T11:00:00Z\"\n\n    # Dynamic EVM balance response\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      when:\n        args: [\"0x1234567890abcdef\"]\n      responseFn: |\n        return {\n          chain: \"ethereum\",\n          address: args[0],\n          balances: [\n            { symbol: \"ETH\", amount: \"1.23\" },\n            { symbol: \"USDC\", amount: \"1000.00\" }\n          ],\n          last_updated: new Date().toISOString()\n        }\n\n    # Error simulation\n    - service: \"github-service\"\n      method: \"readFile\"\n      when:\n        input:\n          path: \"/docs/nonexistent.md\"\n      error:\n        code: \"FILE_NOT_FOUND\"\n        message: \"File does not exist\"\n\nrun:\n  - name: \"Test conditional GitHub search\"\n    input: \"Search for issues with bug label\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"Critical Bug Found\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent correctly search for bug issues?\"\n        expected: \"yes\"\n\n  - name: \"Test dynamic EVM response\"\n    input: \"What's the balance for address 0x1234567890abcdef?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n      - type: \"string_contains\"\n        value: \"1000.00 USDC\"\n\n  - name: \"Test error handling\"\n    input: \"Read the file /docs/nonexistent.md\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.readFile\"\n      - type: \"string_contains\"\n        value: \"File does not exist\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Conditional Matching**: Test different responses based on input parameters\n2. **Dynamic Responses**: Test response generation based on arguments\n3. **Error Simulation**: Test error handling and reporting\n4. **Complex Structures**: Test nested response objects with metadata\n5. **Multiple Mocks**: Test multiple mocks for same service/method\n6. **Logging**: Verify mock selection is logged clearly\n\n## Dependencies\n\n- Builds on existing mock system in scenarios\n- Requires plugin system integration (Ticket 1)\n- Integrates with agent interaction testing (Ticket 3) ",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement conditional mocking and complex response structures",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5726,
              "node_id": "I_kwDOMT5cIs7Engk3",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5726",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:49:00Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/labels{/name}",
              "updated_at": "2025-08-07T05:32:53Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3298689704,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725",
              "body": "# feat(scenarios): Implement plugin specification and dynamic loading\n\n## Description\n\nThis ticket implements plugin specification in scenario YAML files, allowing scenarios to declare which plugins are required for testing. This enables testing of agent behaviors that depend on specific plugins like `@elizaos/plugin-github` or `@elizaos/plugin-evm`. The system will dynamically load specified plugins during scenario execution and make their actions, providers, and services available to the agent.\n\n## Acceptance Criteria\n\n1. Scenario YAML supports a `plugins` array at the root level with string plugin names\n2. The `initializeAgent()` function respects scenario plugin specifications and loads them via `startAgent()`\n3. Plugin loading follows the same dependency resolution and error handling as the main CLI\n4. Scenarios can specify both string plugin names (`@elizaos/plugin-github`) and direct plugin objects\n5. Plugin loading errors are clearly reported with actionable guidance\n6. Default plugins (bootstrap, sql) are automatically included unless explicitly excluded via `exclude_defaults: true`\n7. Plugin conflicts are detected and reported during scenario validation\n8. Plugin initialization errors don't crash the scenario but are reported in results\n\n## Technical Approach\n\n### 1. Update Scenario Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst ScenarioSchema = z.object({\n  name: z.string(),\n  description: z.string(),\n  plugins: z.array(z.string()).optional(), // e.g., [\"@elizaos/plugin-github\"]\n  exclude_defaults: z.boolean().optional(), // exclude bootstrap/sql\n  environment: EnvironmentSchema,\n  setup: SetupSchema.optional(),\n  run: z.array(RunStepSchema),\n  judgment: JudgmentSchema,\n});\n```\n\n### 2. Enhance Runtime Factory\n```typescript\n// packages/cli/src/scenarios/runtime-factory.ts\nexport async function initializeAgent(scenario: Scenario): Promise<IAgentRuntime> {\n  const character: Character = {\n    name: 'scenario-runner',\n    id: stringToUuid('scenario-runner'),\n    bio: 'A minimal character for running scenarios',\n    plugins: scenario.plugins || []\n  };\n\n  // Load default plugins unless excluded\n  if (!scenario.exclude_defaults) {\n    character.plugins.push('@elizaos/plugin-bootstrap', '@elizaos/plugin-sql');\n  }\n\n  const runtime = await startAgent(\n    encryptedCharacter(character),\n    server,\n    undefined,\n    character.plugins,\n    { isTestMode: true }\n  );\n\n  return runtime;\n}\n```\n\n### 3. Plugin Validation\n```typescript\n// packages/cli/src/scenarios/plugin-validator.ts\nexport async function validateScenarioPlugins(scenario: Scenario): Promise<ValidationResult[]> {\n  const results: ValidationResult[] = [];\n  \n  for (const pluginName of scenario.plugins || []) {\n    try {\n      const plugin = await loadAndPreparePlugin(pluginName);\n      if (!plugin) {\n        results.push({\n          type: 'error',\n          message: `Plugin '${pluginName}' could not be loaded`,\n          suggestion: 'Check if plugin is installed or built correctly'\n        });\n      }\n    } catch (error) {\n      results.push({\n        type: 'error', \n        message: `Failed to validate plugin '${pluginName}': ${error.message}`,\n        suggestion: 'Verify plugin dependencies and configuration'\n      });\n    }\n  }\n  \n  return results;\n}\n```\n\n## Test Scenario\n\nCreate `plugin-integration-test.scenario.yaml`:\n```yaml\nname: \"Plugin Integration Test\"\ndescription: \"Tests loading and using plugins specified in scenario YAML\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Test Issue\"\n          number: 123\n          state: \"open\"\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"1.23\"\n\nrun:\n  - name: \"Test GitHub plugin actions\"\n    input: \"Search for issues with label 'bug'\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify GitHub plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"Test Issue\"\n        description: \"Verify agent found the mocked issue\"\n\n  - name: \"Test EVM plugin actions\"\n    input: \"What's my wallet balance?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify EVM plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n        description: \"Verify agent reported the mocked balance\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Plugin Loading Test**: Verify plugins load without errors\n2. **Action Availability Test**: Confirm agent can use plugin actions\n3. **Error Handling Test**: Test with non-existent plugin\n4. **Default Plugin Test**: Verify bootstrap/sql are included by default\n5. **Exclusion Test**: Test `exclude_defaults: true` behavior\n\n## Dependencies\n\n- Fixes the `startAgent` hanging issue (#5719) to enable plugin testing\n- Builds on existing `loadAndPreparePlugin` functionality\n- Integrates with current scenario execution flow ",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement plugin specification and dynamic loading",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5725,
              "node_id": "I_kwDOMT5cIs7EngKo",
              "assignee": null,
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5725",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:48:08Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/labels{/name}",
              "updated_at": "2025-08-07T05:37:32Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            }
          ],
          "issueCount": 10,
          "repository": "elizaOS/eliza"
        },
        "success": true
      },
      "actionStatus": "completed"
    },
    "entityId": "0137f0e4-d2e2-0ee6-82e5-af58b88ec91b",
    "agentId": "0137f0e4-d2e2-0ee6-82e5-af58b88ec91b",
    "roomId": "14212aff-c362-08d7-b931-2379c66e2cc5",
    "unique": true,
    "metadata": {
      "type": "action_result",
      "runId": "b1397f56-9e2e-48ec-9f8b-aebabd16fd68",
      "actionId": "017b8bca-d14a-44c8-a0b4-7a8d5777bc9c",
      "actionName": "LIST_GITHUB_ISSUES",
      "totalSteps": 2,
      "currentStep": 2
    }
  },
  {
    "id": "091c7ffc-213d-43df-a85a-81b9756b91e8",
    "type": "messages",
    "createdAt": 1754969179713,
    "content": {
      "text": "Generated reply: I'll fetch and display the open issues for the elizaOS/eliza repository now...",
      "type": "action_result",
      "runId": "b1397f56-9e2e-48ec-9f8b-aebabd16fd68",
      "source": "action",
      "planStep": "1/2",
      "actionName": "REPLY",
      "planThought": "I'm going to list the open issues for the elizaOS/eliza repository as requested.",
      "actionResult": {
        "data": {
          "thought": "I'm preparing to list the open issues for the elizaOS/eliza repository.",
          "response": {
            "text": "I'll fetch and display the open issues for the elizaOS/eliza repository now...",
            "actions": [
              "REPLY"
            ],
            "thought": "I'm preparing to list the open issues for the elizaOS/eliza repository."
          },
          "actionName": "REPLY",
          "messageGenerated": true
        },
        "text": "Generated reply: I'll fetch and display the open issues for the elizaOS/eliza repository now...",
        "values": {
          "success": true,
          "lastReply": "I'll fetch and display the open issues for the elizaOS/eliza repository now...",
          "responded": true,
          "lastReplyTime": 1754969179712,
          "thoughtProcess": "I'm preparing to list the open issues for the elizaOS/eliza repository."
        },
        "success": true
      },
      "actionStatus": "completed"
    },
    "entityId": "0137f0e4-d2e2-0ee6-82e5-af58b88ec91b",
    "agentId": "0137f0e4-d2e2-0ee6-82e5-af58b88ec91b",
    "roomId": "14212aff-c362-08d7-b931-2379c66e2cc5",
    "unique": true,
    "metadata": {
      "type": "action_result",
      "runId": "b1397f56-9e2e-48ec-9f8b-aebabd16fd68",
      "actionId": "091c7ffc-213d-43df-a85a-81b9756b91e8",
      "actionName": "REPLY",
      "totalSteps": 2,
      "currentStep": 1
    }
  },
  {
    "id": "7e58a66c-f4f4-43fa-98ef-a84362c6db69",
    "type": "messages",
    "createdAt": 1754969097631,
    "content": {
      "text": "Open issues for elizaOS/eliza (10 shown):\n‚Ä¢ #5754: Critical: Plugin Publishing Fails with False Success Reports (open) [bug]\n‚Ä¢ #5749: Implement Runtime Method Mocking for Deterministic Agent Testing (open) [enhancement, testing, Reality Spiral]\n‚Ä¢ #5747: Fixing bugs in eliza-cloud (open)\n‚Ä¢ #5738: üêõ Build failure in @elizaos/core causing bun run clean to fail (open) [bug]\n‚Ä¢ #5734: Eliza CLI failed to build project (open) [bug]\n‚Ä¢ #5729: Update README.md to fix error (open)\n‚Ä¢ #5728: feat: ability to cancel current run before any calls to LLM are made (open)\n‚Ä¢ #5727: feat(scenarios): Implement natural language agent interaction and response validation (open) [enhancement, Reality Spiral]\n‚Ä¢ #5726: feat(scenarios): Implement conditional mocking and complex response structures (open) [enhancement, Reality Spiral]\n‚Ä¢ #5725: feat(scenarios): Implement plugin specification and dynamic loading (open) [enhancement, Reality Spiral]",
      "type": "action_result",
      "runId": "52585cc8-c9ed-4831-90d2-f28da41e07b9",
      "source": "action",
      "planStep": "2/2",
      "actionName": "LIST_GITHUB_ISSUES",
      "planThought": "I will list the open issues for the elizaOS/eliza repository as requested by the user.",
      "actionResult": {
        "data": {
          "github": {
            "issues": {
              "elizaOS/eliza#5725": {
                "id": 3298689704,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725",
                "body": "# feat(scenarios): Implement plugin specification and dynamic loading\n\n## Description\n\nThis ticket implements plugin specification in scenario YAML files, allowing scenarios to declare which plugins are required for testing. This enables testing of agent behaviors that depend on specific plugins like `@elizaos/plugin-github` or `@elizaos/plugin-evm`. The system will dynamically load specified plugins during scenario execution and make their actions, providers, and services available to the agent.\n\n## Acceptance Criteria\n\n1. Scenario YAML supports a `plugins` array at the root level with string plugin names\n2. The `initializeAgent()` function respects scenario plugin specifications and loads them via `startAgent()`\n3. Plugin loading follows the same dependency resolution and error handling as the main CLI\n4. Scenarios can specify both string plugin names (`@elizaos/plugin-github`) and direct plugin objects\n5. Plugin loading errors are clearly reported with actionable guidance\n6. Default plugins (bootstrap, sql) are automatically included unless explicitly excluded via `exclude_defaults: true`\n7. Plugin conflicts are detected and reported during scenario validation\n8. Plugin initialization errors don't crash the scenario but are reported in results\n\n## Technical Approach\n\n### 1. Update Scenario Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst ScenarioSchema = z.object({\n  name: z.string(),\n  description: z.string(),\n  plugins: z.array(z.string()).optional(), // e.g., [\"@elizaos/plugin-github\"]\n  exclude_defaults: z.boolean().optional(), // exclude bootstrap/sql\n  environment: EnvironmentSchema,\n  setup: SetupSchema.optional(),\n  run: z.array(RunStepSchema),\n  judgment: JudgmentSchema,\n});\n```\n\n### 2. Enhance Runtime Factory\n```typescript\n// packages/cli/src/scenarios/runtime-factory.ts\nexport async function initializeAgent(scenario: Scenario): Promise<IAgentRuntime> {\n  const character: Character = {\n    name: 'scenario-runner',\n    id: stringToUuid('scenario-runner'),\n    bio: 'A minimal character for running scenarios',\n    plugins: scenario.plugins || []\n  };\n\n  // Load default plugins unless excluded\n  if (!scenario.exclude_defaults) {\n    character.plugins.push('@elizaos/plugin-bootstrap', '@elizaos/plugin-sql');\n  }\n\n  const runtime = await startAgent(\n    encryptedCharacter(character),\n    server,\n    undefined,\n    character.plugins,\n    { isTestMode: true }\n  );\n\n  return runtime;\n}\n```\n\n### 3. Plugin Validation\n```typescript\n// packages/cli/src/scenarios/plugin-validator.ts\nexport async function validateScenarioPlugins(scenario: Scenario): Promise<ValidationResult[]> {\n  const results: ValidationResult[] = [];\n  \n  for (const pluginName of scenario.plugins || []) {\n    try {\n      const plugin = await loadAndPreparePlugin(pluginName);\n      if (!plugin) {\n        results.push({\n          type: 'error',\n          message: `Plugin '${pluginName}' could not be loaded`,\n          suggestion: 'Check if plugin is installed or built correctly'\n        });\n      }\n    } catch (error) {\n      results.push({\n        type: 'error', \n        message: `Failed to validate plugin '${pluginName}': ${error.message}`,\n        suggestion: 'Verify plugin dependencies and configuration'\n      });\n    }\n  }\n  \n  return results;\n}\n```\n\n## Test Scenario\n\nCreate `plugin-integration-test.scenario.yaml`:\n```yaml\nname: \"Plugin Integration Test\"\ndescription: \"Tests loading and using plugins specified in scenario YAML\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Test Issue\"\n          number: 123\n          state: \"open\"\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"1.23\"\n\nrun:\n  - name: \"Test GitHub plugin actions\"\n    input: \"Search for issues with label 'bug'\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify GitHub plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"Test Issue\"\n        description: \"Verify agent found the mocked issue\"\n\n  - name: \"Test EVM plugin actions\"\n    input: \"What's my wallet balance?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify EVM plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n        description: \"Verify agent reported the mocked balance\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Plugin Loading Test**: Verify plugins load without errors\n2. **Action Availability Test**: Confirm agent can use plugin actions\n3. **Error Handling Test**: Test with non-existent plugin\n4. **Default Plugin Test**: Verify bootstrap/sql are included by default\n5. **Exclusion Test**: Test `exclude_defaults: true` behavior\n\n## Dependencies\n\n- Fixes the `startAgent` hanging issue (#5719) to enable plugin testing\n- Builds on existing `loadAndPreparePlugin` functionality\n- Integrates with current scenario execution flow ",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement plugin specification and dynamic loading",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5725,
                "node_id": "I_kwDOMT5cIs7EngKo",
                "assignee": null,
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5725",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:48:08Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/labels{/name}",
                "updated_at": "2025-08-07T05:37:32Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5726": {
                "id": 3298691383,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726",
                "body": "# feat(scenarios): Implement conditional mocking and complex response structures\n\n## Description\n\nThis ticket enhances the mocking system to support conditional responses based on input parameters and complex response structures with metadata. This enables realistic testing of service interactions like GitHub API calls or EVM transactions with proper request/response matching.\n\n## Acceptance Criteria\n\n1. Mock definitions support `when` clauses for conditional responses\n2. `when` clauses can match on method arguments, input parameters, or request context\n3. Mock responses support complex nested structures with metadata (timestamps, IDs, etc.)\n4. Multiple mock responses can be defined for the same service/method with different conditions\n5. Mock system provides clear logging of which mock was triggered and why\n6. Mock responses can include realistic error conditions and edge cases\n7. Support for dynamic response generation based on input parameters\n8. Mock validation ensures `when` clauses are syntactically correct\n\n## Technical Approach\n\n### 1. Enhanced Mock Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst MockSchema = z.object({\n  service: z.string(),\n  method: z.string(),\n  when: z.object({\n    // Match on method arguments\n    args: z.array(z.any()).optional(),\n    // Match on specific argument values\n    input: z.record(z.any()).optional(),\n    // Match on request context\n    context: z.record(z.any()).optional(),\n    // Custom matching function\n    matcher: z.string().optional(), // JavaScript expression\n  }).optional(),\n  response: z.any(), // Can be function or static value\n  // For dynamic responses\n  responseFn: z.string().optional(), // JavaScript function\n  // Error simulation\n  error: z.object({\n    code: z.string(),\n    message: z.string(),\n  }).optional(),\n});\n```\n\n### 2. Mock Engine Implementation\n```typescript\n// packages/cli/src/scenarios/mock-engine.ts\nexport class MockEngine {\n  private mocks: MockDefinition[] = [];\n\n  addMock(mock: MockDefinition) {\n    this.mocks.push(mock);\n  }\n\n  async findMock(service: string, method: string, args: any[]): Promise<any> {\n    const candidates = this.mocks.filter(m => \n      m.service === service && m.method === method\n    );\n\n    for (const mock of candidates) {\n      if (await this.matchesCondition(mock, args)) {\n        this.logger.info(`Mock triggered: ${service}.${method} with condition: ${JSON.stringify(mock.when)}`);\n        return this.generateResponse(mock, args);\n      }\n    }\n\n    return null; // No mock found\n  }\n\n  private async matchesCondition(mock: MockDefinition, args: any[]): Promise<boolean> {\n    if (!mock.when) return true; // Default mock\n\n    // Match on arguments\n    if (mock.when.args) {\n      if (!this.deepEqual(args, mock.when.args)) return false;\n    }\n\n    // Match on input parameters\n    if (mock.when.input) {\n      const input = this.extractInputFromArgs(args);\n      if (!this.deepEqual(input, mock.when.input)) return false;\n    }\n\n    // Custom matcher function\n    if (mock.when.matcher) {\n      const matcherFn = new Function('args', 'input', mock.when.matcher);\n      return matcherFn(args, this.extractInputFromArgs(args));\n    }\n\n    return true;\n  }\n\n  private generateResponse(mock: MockDefinition, args: any[]): any {\n    if (mock.error) {\n      throw new Error(`${mock.error.code}: ${mock.error.message}`);\n    }\n\n    if (mock.responseFn) {\n      const responseFn = new Function('args', 'input', mock.responseFn);\n      return responseFn(args, this.extractInputFromArgs(args));\n    }\n\n    return mock.response;\n  }\n}\n```\n\n## Test Scenario\n\nCreate `advanced-mocking-test.scenario.yaml`:\n```yaml\nname: \"Advanced Mocking Test\"\ndescription: \"Tests conditional mocking and complex response structures\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    # Conditional GitHub issue search\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"bug\"\n        matcher: \"input.labels.includes('bug')\"\n      response:\n        - title: \"Critical Bug Found\"\n          number: 456\n          state: \"open\"\n          labels: [\"bug\", \"critical\"]\n          created_at: \"2024-07-15T10:00:00Z\"\n\n    # Conditional GitHub issue search - different response\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"feature\"\n        matcher: \"input.labels.includes('feature')\"\n      response:\n        - title: \"New Feature Request\"\n          number: 789\n          state: \"open\"\n          labels: [\"feature\", \"enhancement\"]\n          created_at: \"2024-07-15T11:00:00Z\"\n\n    # Dynamic EVM balance response\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      when:\n        args: [\"0x1234567890abcdef\"]\n      responseFn: |\n        return {\n          chain: \"ethereum\",\n          address: args[0],\n          balances: [\n            { symbol: \"ETH\", amount: \"1.23\" },\n            { symbol: \"USDC\", amount: \"1000.00\" }\n          ],\n          last_updated: new Date().toISOString()\n        }\n\n    # Error simulation\n    - service: \"github-service\"\n      method: \"readFile\"\n      when:\n        input:\n          path: \"/docs/nonexistent.md\"\n      error:\n        code: \"FILE_NOT_FOUND\"\n        message: \"File does not exist\"\n\nrun:\n  - name: \"Test conditional GitHub search\"\n    input: \"Search for issues with bug label\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"Critical Bug Found\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent correctly search for bug issues?\"\n        expected: \"yes\"\n\n  - name: \"Test dynamic EVM response\"\n    input: \"What's the balance for address 0x1234567890abcdef?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n      - type: \"string_contains\"\n        value: \"1000.00 USDC\"\n\n  - name: \"Test error handling\"\n    input: \"Read the file /docs/nonexistent.md\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.readFile\"\n      - type: \"string_contains\"\n        value: \"File does not exist\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Conditional Matching**: Test different responses based on input parameters\n2. **Dynamic Responses**: Test response generation based on arguments\n3. **Error Simulation**: Test error handling and reporting\n4. **Complex Structures**: Test nested response objects with metadata\n5. **Multiple Mocks**: Test multiple mocks for same service/method\n6. **Logging**: Verify mock selection is logged clearly\n\n## Dependencies\n\n- Builds on existing mock system in scenarios\n- Requires plugin system integration (Ticket 1)\n- Integrates with agent interaction testing (Ticket 3) ",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement conditional mocking and complex response structures",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5726,
                "node_id": "I_kwDOMT5cIs7Engk3",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5726",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:49:00Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/labels{/name}",
                "updated_at": "2025-08-07T05:32:53Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5727": {
                "id": 3298692741,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727",
                "body": "# feat(scenarios): Implement natural language agent interaction and response validation\n\n## Description\n\nThis ticket enables scenarios to test agent behavior through natural language interactions rather than direct code execution. This allows testing of agent reasoning, decision-making, and response generation in realistic conversation contexts with proper evaluation of agent responses.\n\n## Acceptance Criteria\n\n1. Scenario `run` blocks support `input` field for natural language prompts to agents\n2. Agent responses are captured and available for evaluation (text, thoughts, actions)\n3. Evaluators can access both agent response text and execution context\n4. Support for multi-turn conversations in scenarios\n5. Agent responses include thought process and action decisions\n6. Integration with existing evaluation engine for response validation\n7. Support for conversation context across multiple steps\n8. Agent response timing and performance metrics\n\n## Technical Approach\n\n### 1. Enhanced Run Step Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst RunStepSchema = z.object({\n  name: z.string().optional(),\n  // Natural language input to agent\n  input: z.string().optional(),\n  // Direct code execution (existing)\n  lang: z.string().optional(),\n  code: z.string().optional(),\n  // Agent interaction specific\n  agent_context: z.object({\n    conversation_id: z.string().optional(),\n    user_id: z.string().optional(),\n    room_id: z.string().optional(),\n  }).optional(),\n  evaluations: z.array(EvaluationSchema),\n});\n```\n\n### 2. Agent Interaction Engine\n```typescript\n// packages/cli/src/scenarios/agent-interaction.ts\nexport class AgentInteractionEngine {\n  constructor(private runtime: IAgentRuntime) {}\n\n  async interactWithAgent(input: string, context?: AgentContext): Promise<AgentResponse> {\n    // Create message for agent\n    const message: Memory = {\n      entityId: context?.user_id || 'scenario-user',\n      roomId: context?.room_id || 'scenario-room',\n      content: {\n        type: 'text',\n        text: input,\n      },\n      metadata: {\n        type: 'message',\n        conversationId: context?.conversation_id,\n      },\n    };\n\n    // Send to agent and capture response\n    const startTime = Date.now();\n    const response = await this.runtime.processMessage(message);\n    const endTime = Date.now();\n\n    return {\n      text: response.text,\n      thoughts: response.thoughts,\n      actions: response.actions,\n      timing: {\n        startTime,\n        endTime,\n        duration: endTime - startTime,\n      },\n      context: {\n        conversationId: context?.conversation_id,\n        messageId: message.id,\n      },\n    };\n  }\n}\n```\n\n### 3. Enhanced Execution Result\n```typescript\n// packages/cli/src/scenarios/providers.ts\nexport interface ExecutionResult {\n  exitCode: number;\n  stdout: string;\n  stderr: string;\n  files: Record<string, string>;\n  // New: Agent interaction results\n  agentResponse?: AgentResponse;\n  conversationHistory?: AgentResponse[];\n}\n```\n\n## Test Scenario\n\nCreate `agent-interaction-test.scenario.yaml`:\n```yaml\nname: \"Agent Interaction Test\"\ndescription: \"Tests natural language interaction with agents\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Implement Dark Mode\"\n          number: 123\n          state: \"open\"\n          labels: [\"feature\", \"ui\"]\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"2.5\"\n\nrun:\n  - name: \"Ask agent about roadmap\"\n    input: \"What new features are you planning to add?\"\n    agent_context:\n      conversation_id: \"roadmap-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify agent searched for issues\"\n      \n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n        description: \"Verify agent mentioned the mocked issue\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent provide a helpful and coherent response about new features?\"\n        expected: \"yes\"\n        description: \"Verify agent response quality\"\n\n  - name: \"Ask agent about wallet\"\n    input: \"What's my current wallet balance?\"\n    agent_context:\n      conversation_id: \"wallet-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify agent checked wallet balance\"\n      \n      - type: \"string_contains\"\n        value: \"2.5 ETH\"\n        description: \"Verify agent reported the correct balance\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent clearly explain the wallet balance information?\"\n        expected: \"yes\"\n\n  - name: \"Multi-turn conversation\"\n    input: \"Can you help me with both my wallet and roadmap?\"\n    agent_context:\n      conversation_id: \"multi-turn-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"ETH\"\n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent address both wallet and roadmap questions comprehensively?\"\n        expected: \"yes\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Single Turn**: Test basic agent interaction and response\n2. **Multi-turn**: Test conversation context across steps\n3. **Action Tracking**: Verify agent uses appropriate actions\n4. **Response Quality**: Test LLM judge evaluation of responses\n5. **Performance**: Test response timing and metrics\n6. **Error Handling**: Test agent behavior with invalid inputs\n\n## Dependencies\n\n- Requires plugin system integration (Ticket 1)\n- Builds on advanced mocking system (Ticket 2)\n- Integrates with existing evaluation engine\n- Depends on agent runtime message processing",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement natural language agent interaction and response validation",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5727,
                "node_id": "I_kwDOMT5cIs7Eng6F",
                "assignee": null,
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5727",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:49:34Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/labels{/name}",
                "updated_at": "2025-08-07T05:35:40Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5728": {
                "id": 3299322983,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728",
                "body": "# Background\r\n\r\n## What does this PR do?\r\n\r\nIntroduce entity for cancelling runs `CancelRunSignal`\r\n\r\n## Why are we doing this? Any context or related work?\r\n\r\n- Calls to LLMs usually cost some credits\r\n- When we receive the `RUN_STARTED` event we can check current entity and end run to prevent credits spending\r\n\r\n# Documentation changes needed?\r\n\r\n## Methods\r\n\r\n- `static getSignal(runId: UUID)` - get signal by runId or create if null\r\n- `static clear(runId: UUID)` - clear signal from map\r\n- `cancel(content?: Content)` - cancel current run and and send `content` as a response to user\r\n\r\n## Example\r\n\r\n```typescript\r\nimport { Content, EventType, Plugin } from \"@elizaos/core\";\r\nimport { CancelRunSignal } from \"@elizaos/plugin-bootstrap\";\r\n\r\n// consider we have a service to determine eligibility for entity\r\ninterface EligibilityService {\r\n  check(entityId: UUID): Promise<{ result: boolean, reason?: Content }>\r\n}\r\n\r\nconst plugin: Plugin = {\r\n...\r\n  events: {\r\n    [EventType.RUN_STARTED]: ({ entityId, runId, runtime }) => {\r\n      const service = runtime.getService<EligibilityService>(\"USER_MANAGEMENT\");\r\n      const { result, reason } = await service.check(entityId);\r\n      \r\n      if (!result) {\r\n        const signal = CancelRunSignal.getSignal(runId);\r\n        signal.cancel(reason);\r\n      }\r\n    },\r\n    ...\r\n  },\r\n  ...\r\n}\r\n\r\nexport default Plugin;\r\n```\r\n\r\n## Discord username\r\n\r\nalexd000\r\n\r\n",
                "type": null,
                "user": {
                  "id": 82507604,
                  "url": "https://api.github.com/users/alex-nax",
                  "type": "User",
                  "login": "alex-nax",
                  "node_id": "MDQ6VXNlcjgyNTA3NjA0",
                  "html_url": "https://github.com/alex-nax",
                  "gists_url": "https://api.github.com/users/alex-nax/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/alex-nax/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/82507604?v=4",
                  "events_url": "https://api.github.com/users/alex-nax/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/alex-nax/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/alex-nax/followers",
                  "following_url": "https://api.github.com/users/alex-nax/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/alex-nax/orgs",
                  "subscriptions_url": "https://api.github.com/users/alex-nax/subscriptions",
                  "received_events_url": "https://api.github.com/users/alex-nax/received_events"
                },
                "draft": false,
                "state": "open",
                "title": "feat: ability to cancel current run before any calls to LLM are made",
                "labels": [],
                "locked": false,
                "number": 5728,
                "node_id": "PR_kwDOMT5cIs6ihriD",
                "assignee": null,
                "comments": 3,
                "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T07:19:35Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/labels{/name}",
                "updated_at": "2025-08-07T07:22:05Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/comments",
                "pull_request": {
                  "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5728",
                  "diff_url": "https://github.com/elizaOS/eliza/pull/5728.diff",
                  "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                  "merged_at": null,
                  "patch_url": "https://github.com/elizaOS/eliza/pull/5728.patch"
                },
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "FIRST_TIME_CONTRIBUTOR",
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5729": {
                "id": 3299481897,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729",
                "body": "# Relates to\r\n\r\nN/A (Documentation improvement, not tied to a specific issue or ticket)\r\n\r\n# Risks\r\n\r\nLow.  \r\nThis change only updates documentation and does not affect any code or functionality.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR updates the elizaos README to include a fix for installation errors that may occur due to permission issues. It adds a note suggesting the use of sudo if users encounter a \"Permission denied\" or \"InstallFailed\" error when running the `elizaos create my-agent` command.\r\n\r\n## What kind of change is this?\r\n\r\nImprovements (misc. changes to existing features)  \r\nDocumentation update\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes require a change to the project documentation.  \r\nI have updated the documentation accordingly.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\nStart by reviewing the changes in the README.md file, specifically the section on creating a new project.\r\n\r\n## Detailed testing steps\r\n\r\n- Open the updated README.md.\r\n- Review the new instructions under \"Create Your First Project.\"\r\n- Confirm that the added note about using `sudo` is clear and helpful for users who encounter permission errors.",
                "type": null,
                "user": {
                  "id": 32749185,
                  "url": "https://api.github.com/users/mandatedisrael",
                  "type": "User",
                  "login": "mandatedisrael",
                  "node_id": "MDQ6VXNlcjMyNzQ5MTg1",
                  "html_url": "https://github.com/mandatedisrael",
                  "gists_url": "https://api.github.com/users/mandatedisrael/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/mandatedisrael/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/32749185?v=4",
                  "events_url": "https://api.github.com/users/mandatedisrael/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/mandatedisrael/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/mandatedisrael/followers",
                  "following_url": "https://api.github.com/users/mandatedisrael/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/mandatedisrael/orgs",
                  "subscriptions_url": "https://api.github.com/users/mandatedisrael/subscriptions",
                  "received_events_url": "https://api.github.com/users/mandatedisrael/received_events"
                },
                "draft": false,
                "state": "open",
                "title": "Update README.md to fix error",
                "labels": [],
                "locked": false,
                "number": 5729,
                "node_id": "PR_kwDOMT5cIs6iiNWN",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T08:10:12Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/labels{/name}",
                "updated_at": "2025-08-07T08:10:24Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/comments",
                "pull_request": {
                  "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5729",
                  "diff_url": "https://github.com/elizaOS/eliza/pull/5729.diff",
                  "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                  "merged_at": null,
                  "patch_url": "https://github.com/elizaOS/eliza/pull/5729.patch"
                },
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "FIRST_TIME_CONTRIBUTOR",
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5734": {
                "id": 3301116813,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734",
                "body": "**Describe the bug**\n\nOn project creation, ElizaOS CLI fails with the following error:\n```\n‚óá  Failed to build project\nstdout: src/index.ts(7,25): error TS2345: Argument of type 'string' is not assignable to parameter of type 'undefined'.\nstderr: $ tsc --noEmit && vite build && tsup\n```\n\n**To Reproduce**\n\n- Install ElizaOS through `bun`\n```\nbun i -g @elizaos/cli\n```\n- Create new ElizaOS project\n```\nelizaos create abcde\n```\n\n**Expected behavior**\n\nProject built successfully\n\n**Screenshots**\n\n<img width=\"1095\" height=\"572\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/967dd6a2-0d70-4e2e-8019-85a2eab5f225\" />\n\n**Additional context**\n\nElizaOS CLI version: `1.3.2`\n",
                "type": null,
                "user": {
                  "id": 74447600,
                  "url": "https://api.github.com/users/Kemystra",
                  "type": "User",
                  "login": "Kemystra",
                  "node_id": "MDQ6VXNlcjc0NDQ3NjAw",
                  "html_url": "https://github.com/Kemystra",
                  "gists_url": "https://api.github.com/users/Kemystra/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/Kemystra/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/74447600?v=4",
                  "events_url": "https://api.github.com/users/Kemystra/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/Kemystra/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/Kemystra/followers",
                  "following_url": "https://api.github.com/users/Kemystra/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/Kemystra/orgs",
                  "subscriptions_url": "https://api.github.com/users/Kemystra/subscriptions",
                  "received_events_url": "https://api.github.com/users/Kemystra/received_events"
                },
                "state": "open",
                "title": "Eliza CLI failed to build project",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5734,
                "node_id": "I_kwDOMT5cIs7EwwuN",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5734",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T16:14:00Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/labels{/name}",
                "updated_at": "2025-08-08T19:43:52Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "NONE",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5738": {
                "id": 3302237103,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738",
                "body": "## Description\n\nThe `bun run clean` command is failing due to TypeScript errors in `@elizaos/core` package during the DTS (type definition) build phase.\n\n## Error Details\n\n### Build Process\n```\n‚Ä¢ Running build in 17 packages\n‚Ä¢ Remote caching disabled\n@elizaos/config:build: cache miss\n@elizaos/autodoc:build: cache miss\n@elizaos/core:build: cache miss\n```\n\n### TypeScript Errors in @elizaos/core/src/utils.ts\n1. Line 218: `error TS2345: Argument of type '`${string}-${string}-${string}-${string}-${string}`' is not assignable to parameter of type 'never'.`\n2. Line 366: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n3. Line 409: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n4. Line 536: `error TS2345: Argument of type '{ numberOfChunks: number; averageChunkSize: number; }' is not assignable to parameter of type 'never'.`\n\n### Impact\n- Blocks `bun run clean` command\n- Prevents successful build of `@elizaos/core`\n- Affects dependent packages in the monorepo\n\n## Steps to Reproduce\n1. Run `bun run clean`\n2. Observe build failure in `@elizaos/core`\n3. Build fails with TypeScript errors during DTS generation\n\n## Expected Behavior\n- `bun run clean` should complete successfully\n- `@elizaos/core` should build without TypeScript errors\n- Type definitions should be generated correctly\n\n## Suggested Fix\n\nThe errors suggest type mismatches in `utils.ts`. Need to:\n1. Review type definitions in affected lines\n2. Update type assertions or generic constraints\n3. Ensure string template literal types are properly handled\n4. Fix object type assignments\n\n### Files to Update\n- `packages/core/src/utils.ts`\n\n## Priority\n**HIGH** - This is blocking clean builds and potentially affecting development workflow.",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "üêõ Build failure in @elizaos/core causing bun run clean to fail",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5738,
                "node_id": "I_kwDOMT5cIs7E1COv",
                "assignee": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5738",
                "assignees": [
                  {
                    "id": 15067321,
                    "url": "https://api.github.com/users/monilpat",
                    "type": "User",
                    "login": "monilpat",
                    "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                    "html_url": "https://github.com/monilpat",
                    "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/monilpat/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                    "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/monilpat/followers",
                    "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/monilpat/orgs",
                    "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                    "received_events_url": "https://api.github.com/users/monilpat/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-08T00:26:11Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/labels{/name}",
                "updated_at": "2025-08-11T14:56:01Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5747": {
                "id": 3304516859,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747",
                "body": null,
                "type": null,
                "user": {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                },
                "state": "open",
                "title": "Fixing bugs in eliza-cloud",
                "labels": [],
                "locked": false,
                "number": 5747,
                "node_id": "I_kwDOMT5cIs7E9uz7",
                "assignee": {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                },
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5747",
                "assignees": [
                  {
                    "id": 48334430,
                    "url": "https://api.github.com/users/samarth30",
                    "type": "User",
                    "login": "samarth30",
                    "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                    "html_url": "https://github.com/samarth30",
                    "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/samarth30/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                    "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/samarth30/followers",
                    "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/samarth30/orgs",
                    "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                    "received_events_url": "https://api.github.com/users/samarth30/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-08T16:01:56Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/labels{/name}",
                "updated_at": "2025-08-08T19:02:49Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "MEMBER",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": {
                  "id": 20150,
                  "name": "Linear",
                  "slug": "linear",
                  "owner": {
                    "id": 46686594,
                    "url": "https://api.github.com/users/linear",
                    "type": "Organization",
                    "login": "linear",
                    "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ2Njg2NTk0",
                    "html_url": "https://github.com/linear",
                    "gists_url": "https://api.github.com/users/linear/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/linear/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/46686594?v=4",
                    "events_url": "https://api.github.com/users/linear/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/linear/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/linear/followers",
                    "following_url": "https://api.github.com/users/linear/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/linear/orgs",
                    "subscriptions_url": "https://api.github.com/users/linear/subscriptions",
                    "received_events_url": "https://api.github.com/users/linear/received_events"
                  },
                  "events": [
                    "check_suite",
                    "issues",
                    "issue_comment",
                    "pull_request",
                    "pull_request_review",
                    "repository",
                    "sub_issues"
                  ],
                  "node_id": "MDM6QXBwMjAxNTA=",
                  "html_url": "https://github.com/apps/linear",
                  "client_id": "Iv1.085d682ea245c945",
                  "created_at": "2018-11-02T18:07:23Z",
                  "updated_at": "2025-02-07T14:59:56Z",
                  "description": "",
                  "permissions": {
                    "checks": "read",
                    "issues": "write",
                    "metadata": "read",
                    "pull_requests": "write"
                  },
                  "external_url": "https://linear.app"
                }
              },
              "elizaOS/eliza#5749": {
                "id": 3308102900,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749",
                "body": "### Problem Statement\nCurrently, ElizaOS scenario testing lacks the ability to mock internal agent runtime calls (particularly LLM interactions) when testing via the API client. This makes it difficult to create deterministic tests for agent behavior and workflows.\n\n### Current Limitations\n- Global function mocks only work for code executed in the same process\n- No way to intercept `runtime.useModel` calls from the bootstrap plugin\n- Agent behavior is non-deterministic due to real LLM calls\n- Difficult to test specific agent decision paths and responses\n\n### Why Different Approach Was Needed\n\nThe existing mocking system was designed for **code execution environments** (E2B sandbox and local `node -e` processes), where mocks are applied to the execution context. However, **agent testing** works differently:\n\n- **E2B/Local Execution**: Code runs in isolated processes/sandboxes where global mocks can be applied\n- **Agent Testing**: Agent runs as a service with API client interaction, requiring direct runtime method interception\n- **Architecture Gap**: The bootstrap plugin calls `runtime.useModel` internally, which can't be mocked through the execution environment approach\n\nThis architectural difference necessitated a new approach that directly intercepts runtime methods rather than relying on execution context mocking.\n\n### Proposed Solution: Runtime Method Mocking\n\nWe've implemented a new mocking approach that directly intercepts `IAgentRuntime` method calls:\n\n#### Key Components\n\n1. **MockEngine Enhancement**\n   - Added `runtimeMethodMocks` to support mocking runtime methods\n   - Priority system: `runtimeMethod` > `service` > `globalFunction`\n   - Direct method replacement on the runtime instance\n\n2. **Schema Updates**\n   - Extended `MockSchema` to include `runtimeMethod: z.string().optional()`\n   - Supports mocking any `IAgentRuntime` method (e.g., `useModel`, `getService`)\n\n3. **Conditional Matching**\n   - Matcher functions can inspect method arguments\n   - Example: `\"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"`\n   - Supports complex conditional logic for when to apply mocks\n\n#### Usage Example\n\n```yaml\nsetup:\n  mocks:\n    - runtimeMethod: \"useModel\"\n      method: \"useModel\"\n      when:\n        matcher: \"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"\n      response: \"<response><name>agent</name><reasoning>Mocked response</reasoning><action>RESPOND</action></response>\"\n```\n\n#### Benefits\n\n1. **Deterministic Testing**: Replace LLM calls with static responses\n2. **Full Workflow Testing**: Test complete agent decision flows\n3. **Conditional Mocking**: Apply mocks based on specific conditions\n4. **Runtime Integration**: Works seamlessly with existing agent architecture\n5. **Backward Compatibility**: Existing mocks continue to work\n\n#### Implementation Steps\n\n- MockEngine runtime method support\n- Schema updates for runtimeMethod mocks\n- Conditional matching with matcher functions\n- Integration with scenario runner\n- Basic useModel mocking working\n- Add support for mocking other runtime methods (getService, etc.)\n- Create comprehensive test scenarios\n- Add documentation and examples\n- Consider adding mock recording/replay capabilities\n\n### Technical Details\n\nThe implementation works by:\n1. Creating the `IAgentRuntime` instance in the scenario runner\n2. Applying mocks directly to the runtime object before agent initialization\n3. The bootstrap plugin receives the mocked runtime and uses the mocked methods\n4. Mocks are reverted after scenario completion\n\nThis approach provides the foundation for robust, deterministic agent testing while maintaining the existing architecture.",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "Implement Runtime Method Mocking for Deterministic Agent Testing",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 7668252177,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/testing",
                    "name": "testing",
                    "color": "2D3957",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAAByRA-EQ",
                    "description": ""
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5749,
                "node_id": "I_kwDOMT5cIs7FLaT0",
                "assignee": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "comments": 0,
                "html_url": "https://github.com/elizaOS/eliza/issues/5749",
                "assignees": [
                  {
                    "id": 15067321,
                    "url": "https://api.github.com/users/monilpat",
                    "type": "User",
                    "login": "monilpat",
                    "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                    "html_url": "https://github.com/monilpat",
                    "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/monilpat/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                    "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/monilpat/followers",
                    "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/monilpat/orgs",
                    "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                    "received_events_url": "https://api.github.com/users/monilpat/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-11T00:08:49Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/labels{/name}",
                "updated_at": "2025-08-11T00:09:37Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5754": {
                "id": 3310285907,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754",
                "body": "## Issue Summary\nThe `elizaos publish --npm` command reports successful publishing but the plugin is not actually published to npm, despite showing success messages. The npm publish is failing with a 404 error, but the ElizaOS CLI incorrectly reports success.\n\n## Key Problems Identified\n\n### 1. Critical NPM Publishing Failure\n- **Error**: `npm error 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found`\n- **Issue**: The package scope `@elizaos` doesn't exist on npm, preventing publishing\n- **Impact**: Package cannot be published to npm, but CLI reports success\n\n### 2. False Success Reporting\n- **Issue**: CLI reports `[‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm`\n- **Reality**: npm publish failed with 404 error\n- **Impact**: Developers believe their plugin is published when it's not\n\n### 3. Registry Repository Mismatch\n- **Expected**: Should create PR against `https://github.com/elizaos-plugins/registry`\n- **Actual**: Still references old registry `https://github.com/elizaos/registry`\n- **Impact**: Plugin won't appear in the official ElizaOS registry\n\n## Steps to Reproduce\n\n```bash\n# Navigate to the plugin directory\ncd packages/plugin-polygon\n\n# Ensure you're on the correct branch with the changes\ngit checkout polygon\n\n# Run the publish command\nelizaos publish --npm\n\n# Verify the success message appears\n# [‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm\n\n# Check if package actually exists on npm\nnpm view @elizaos/plugin-polygon@1.0.0\n# Result: 404 Not Found - '@elizaos/plugin-polygon@1.0.0' is not in this registry\n```\n\n## Technical Details\n\n### NPM Error Analysis\nThe npm logs show the root cause:\n```\nhttp fetch PUT 404 https://registry.npmjs.org/@elizaos%2fplugin-polygon 507ms\nerror 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found\n```\n\nThis indicates that the `@elizaos` scope doesn't exist on npm, which is required for publishing scoped packages.\n\n### CLI Error Handling Failure\nThe ElizaOS CLI is not properly parsing npm error codes:\n- npm returns exit code 1 (failure)\n- CLI ignores the error and reports success\n- No validation that the package actually exists on npm\n\n## Expected Behavior\n1. CLI should detect npm publish failures (exit code 1)\n2. CLI should fail with clear error message when package scope doesn't exist\n3. CLI should validate that package actually exists on npm after publishing\n4. CLI should create PRs against the correct registry repository\n\n## Recommended Fixes\n\n### 1. Fix NPM Error Detection\n```typescript\n// In the publish command, check npm exit code\nconst npmResult = await exec('npm publish', { cwd: pluginDir });\nif (npmResult.exitCode !== 0) {\n  throw new Error(`NPM publish failed: ${npmResult.stderr}`);\n}\n```\n\n### 2. Add Package Scope Validation\n```typescript\n// Before publishing, check if scope exists\nconst scopeExists = await checkNpmScope('@elizaos');\nif (!scopeExists) {\n  throw new Error('Package scope @elizaos does not exist on npm. Contact npm support to create the scope.');\n}\n```\n\n### 3. Add Post-Publish Validation\n```typescript\n// After publishing, verify package exists\nconst packageExists = await checkPackageExists(packageName, version);\nif (!packageExists) {\n  throw new Error(`Package was not published successfully. Check npm logs for details.`);\n}\n```\n\n## Priority\n**Critical** - This completely blocks plugin publishing and creates false success reports.\n\n## Affected Components\n- `packages/cli/src/commands/publish.ts`\n- NPM publishing logic\n- Error handling and success reporting\n- Package scope validation\n- Registry repository configuration\n\n## Immediate Action Required\n1. **Create the `@elizaos` scope on npm** or use an existing scope\n2. Update CLI to properly detect and handle npm publish failures\n3. Add post-publish validation to ensure packages actually exist on npm\n4. Update registry repository configuration\n\n## Alternative Solutions\n1. **Use existing scope**: Change package name to `@monilpat/plugin-polygon`\n2. **Create organization scope**: Set up `@elizaos` organization on npm\n3. **Use unscoped package**: Publish as `elizaos-plugin-polygon`\n\nThis issue is critically blocking plugin developers from successfully publishing their work and needs immediate attention from the ElizaOS team.\n",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "Critical: Plugin Publishing Fails with False Success Reports",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5754,
                "node_id": "I_kwDOMT5cIs7FTvRT",
                "assignee": null,
                "comments": 0,
                "html_url": "https://github.com/elizaOS/eliza/issues/5754",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-11T14:20:08Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/labels{/name}",
                "updated_at": "2025-08-11T14:20:08Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              }
            },
            "lastIssues": [
              {
                "id": 3310285907,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754",
                "body": "## Issue Summary\nThe `elizaos publish --npm` command reports successful publishing but the plugin is not actually published to npm, despite showing success messages. The npm publish is failing with a 404 error, but the ElizaOS CLI incorrectly reports success.\n\n## Key Problems Identified\n\n### 1. Critical NPM Publishing Failure\n- **Error**: `npm error 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found`\n- **Issue**: The package scope `@elizaos` doesn't exist on npm, preventing publishing\n- **Impact**: Package cannot be published to npm, but CLI reports success\n\n### 2. False Success Reporting\n- **Issue**: CLI reports `[‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm`\n- **Reality**: npm publish failed with 404 error\n- **Impact**: Developers believe their plugin is published when it's not\n\n### 3. Registry Repository Mismatch\n- **Expected**: Should create PR against `https://github.com/elizaos-plugins/registry`\n- **Actual**: Still references old registry `https://github.com/elizaos/registry`\n- **Impact**: Plugin won't appear in the official ElizaOS registry\n\n## Steps to Reproduce\n\n```bash\n# Navigate to the plugin directory\ncd packages/plugin-polygon\n\n# Ensure you're on the correct branch with the changes\ngit checkout polygon\n\n# Run the publish command\nelizaos publish --npm\n\n# Verify the success message appears\n# [‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm\n\n# Check if package actually exists on npm\nnpm view @elizaos/plugin-polygon@1.0.0\n# Result: 404 Not Found - '@elizaos/plugin-polygon@1.0.0' is not in this registry\n```\n\n## Technical Details\n\n### NPM Error Analysis\nThe npm logs show the root cause:\n```\nhttp fetch PUT 404 https://registry.npmjs.org/@elizaos%2fplugin-polygon 507ms\nerror 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found\n```\n\nThis indicates that the `@elizaos` scope doesn't exist on npm, which is required for publishing scoped packages.\n\n### CLI Error Handling Failure\nThe ElizaOS CLI is not properly parsing npm error codes:\n- npm returns exit code 1 (failure)\n- CLI ignores the error and reports success\n- No validation that the package actually exists on npm\n\n## Expected Behavior\n1. CLI should detect npm publish failures (exit code 1)\n2. CLI should fail with clear error message when package scope doesn't exist\n3. CLI should validate that package actually exists on npm after publishing\n4. CLI should create PRs against the correct registry repository\n\n## Recommended Fixes\n\n### 1. Fix NPM Error Detection\n```typescript\n// In the publish command, check npm exit code\nconst npmResult = await exec('npm publish', { cwd: pluginDir });\nif (npmResult.exitCode !== 0) {\n  throw new Error(`NPM publish failed: ${npmResult.stderr}`);\n}\n```\n\n### 2. Add Package Scope Validation\n```typescript\n// Before publishing, check if scope exists\nconst scopeExists = await checkNpmScope('@elizaos');\nif (!scopeExists) {\n  throw new Error('Package scope @elizaos does not exist on npm. Contact npm support to create the scope.');\n}\n```\n\n### 3. Add Post-Publish Validation\n```typescript\n// After publishing, verify package exists\nconst packageExists = await checkPackageExists(packageName, version);\nif (!packageExists) {\n  throw new Error(`Package was not published successfully. Check npm logs for details.`);\n}\n```\n\n## Priority\n**Critical** - This completely blocks plugin publishing and creates false success reports.\n\n## Affected Components\n- `packages/cli/src/commands/publish.ts`\n- NPM publishing logic\n- Error handling and success reporting\n- Package scope validation\n- Registry repository configuration\n\n## Immediate Action Required\n1. **Create the `@elizaos` scope on npm** or use an existing scope\n2. Update CLI to properly detect and handle npm publish failures\n3. Add post-publish validation to ensure packages actually exist on npm\n4. Update registry repository configuration\n\n## Alternative Solutions\n1. **Use existing scope**: Change package name to `@monilpat/plugin-polygon`\n2. **Create organization scope**: Set up `@elizaos` organization on npm\n3. **Use unscoped package**: Publish as `elizaos-plugin-polygon`\n\nThis issue is critically blocking plugin developers from successfully publishing their work and needs immediate attention from the ElizaOS team.\n",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "Critical: Plugin Publishing Fails with False Success Reports",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5754,
                "node_id": "I_kwDOMT5cIs7FTvRT",
                "assignee": null,
                "comments": 0,
                "html_url": "https://github.com/elizaOS/eliza/issues/5754",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-11T14:20:08Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/labels{/name}",
                "updated_at": "2025-08-11T14:20:08Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3308102900,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749",
                "body": "### Problem Statement\nCurrently, ElizaOS scenario testing lacks the ability to mock internal agent runtime calls (particularly LLM interactions) when testing via the API client. This makes it difficult to create deterministic tests for agent behavior and workflows.\n\n### Current Limitations\n- Global function mocks only work for code executed in the same process\n- No way to intercept `runtime.useModel` calls from the bootstrap plugin\n- Agent behavior is non-deterministic due to real LLM calls\n- Difficult to test specific agent decision paths and responses\n\n### Why Different Approach Was Needed\n\nThe existing mocking system was designed for **code execution environments** (E2B sandbox and local `node -e` processes), where mocks are applied to the execution context. However, **agent testing** works differently:\n\n- **E2B/Local Execution**: Code runs in isolated processes/sandboxes where global mocks can be applied\n- **Agent Testing**: Agent runs as a service with API client interaction, requiring direct runtime method interception\n- **Architecture Gap**: The bootstrap plugin calls `runtime.useModel` internally, which can't be mocked through the execution environment approach\n\nThis architectural difference necessitated a new approach that directly intercepts runtime methods rather than relying on execution context mocking.\n\n### Proposed Solution: Runtime Method Mocking\n\nWe've implemented a new mocking approach that directly intercepts `IAgentRuntime` method calls:\n\n#### Key Components\n\n1. **MockEngine Enhancement**\n   - Added `runtimeMethodMocks` to support mocking runtime methods\n   - Priority system: `runtimeMethod` > `service` > `globalFunction`\n   - Direct method replacement on the runtime instance\n\n2. **Schema Updates**\n   - Extended `MockSchema` to include `runtimeMethod: z.string().optional()`\n   - Supports mocking any `IAgentRuntime` method (e.g., `useModel`, `getService`)\n\n3. **Conditional Matching**\n   - Matcher functions can inspect method arguments\n   - Example: `\"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"`\n   - Supports complex conditional logic for when to apply mocks\n\n#### Usage Example\n\n```yaml\nsetup:\n  mocks:\n    - runtimeMethod: \"useModel\"\n      method: \"useModel\"\n      when:\n        matcher: \"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"\n      response: \"<response><name>agent</name><reasoning>Mocked response</reasoning><action>RESPOND</action></response>\"\n```\n\n#### Benefits\n\n1. **Deterministic Testing**: Replace LLM calls with static responses\n2. **Full Workflow Testing**: Test complete agent decision flows\n3. **Conditional Mocking**: Apply mocks based on specific conditions\n4. **Runtime Integration**: Works seamlessly with existing agent architecture\n5. **Backward Compatibility**: Existing mocks continue to work\n\n#### Implementation Steps\n\n- MockEngine runtime method support\n- Schema updates for runtimeMethod mocks\n- Conditional matching with matcher functions\n- Integration with scenario runner\n- Basic useModel mocking working\n- Add support for mocking other runtime methods (getService, etc.)\n- Create comprehensive test scenarios\n- Add documentation and examples\n- Consider adding mock recording/replay capabilities\n\n### Technical Details\n\nThe implementation works by:\n1. Creating the `IAgentRuntime` instance in the scenario runner\n2. Applying mocks directly to the runtime object before agent initialization\n3. The bootstrap plugin receives the mocked runtime and uses the mocked methods\n4. Mocks are reverted after scenario completion\n\nThis approach provides the foundation for robust, deterministic agent testing while maintaining the existing architecture.",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "Implement Runtime Method Mocking for Deterministic Agent Testing",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 7668252177,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/testing",
                    "name": "testing",
                    "color": "2D3957",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAAByRA-EQ",
                    "description": ""
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5749,
                "node_id": "I_kwDOMT5cIs7FLaT0",
                "assignee": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "comments": 0,
                "html_url": "https://github.com/elizaOS/eliza/issues/5749",
                "assignees": [
                  {
                    "id": 15067321,
                    "url": "https://api.github.com/users/monilpat",
                    "type": "User",
                    "login": "monilpat",
                    "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                    "html_url": "https://github.com/monilpat",
                    "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/monilpat/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                    "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/monilpat/followers",
                    "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/monilpat/orgs",
                    "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                    "received_events_url": "https://api.github.com/users/monilpat/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-11T00:08:49Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/labels{/name}",
                "updated_at": "2025-08-11T00:09:37Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3304516859,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747",
                "body": null,
                "type": null,
                "user": {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                },
                "state": "open",
                "title": "Fixing bugs in eliza-cloud",
                "labels": [],
                "locked": false,
                "number": 5747,
                "node_id": "I_kwDOMT5cIs7E9uz7",
                "assignee": {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                },
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5747",
                "assignees": [
                  {
                    "id": 48334430,
                    "url": "https://api.github.com/users/samarth30",
                    "type": "User",
                    "login": "samarth30",
                    "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                    "html_url": "https://github.com/samarth30",
                    "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/samarth30/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                    "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/samarth30/followers",
                    "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/samarth30/orgs",
                    "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                    "received_events_url": "https://api.github.com/users/samarth30/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-08T16:01:56Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/labels{/name}",
                "updated_at": "2025-08-08T19:02:49Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "MEMBER",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": {
                  "id": 20150,
                  "name": "Linear",
                  "slug": "linear",
                  "owner": {
                    "id": 46686594,
                    "url": "https://api.github.com/users/linear",
                    "type": "Organization",
                    "login": "linear",
                    "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ2Njg2NTk0",
                    "html_url": "https://github.com/linear",
                    "gists_url": "https://api.github.com/users/linear/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/linear/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/46686594?v=4",
                    "events_url": "https://api.github.com/users/linear/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/linear/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/linear/followers",
                    "following_url": "https://api.github.com/users/linear/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/linear/orgs",
                    "subscriptions_url": "https://api.github.com/users/linear/subscriptions",
                    "received_events_url": "https://api.github.com/users/linear/received_events"
                  },
                  "events": [
                    "check_suite",
                    "issues",
                    "issue_comment",
                    "pull_request",
                    "pull_request_review",
                    "repository",
                    "sub_issues"
                  ],
                  "node_id": "MDM6QXBwMjAxNTA=",
                  "html_url": "https://github.com/apps/linear",
                  "client_id": "Iv1.085d682ea245c945",
                  "created_at": "2018-11-02T18:07:23Z",
                  "updated_at": "2025-02-07T14:59:56Z",
                  "description": "",
                  "permissions": {
                    "checks": "read",
                    "issues": "write",
                    "metadata": "read",
                    "pull_requests": "write"
                  },
                  "external_url": "https://linear.app"
                }
              },
              {
                "id": 3302237103,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738",
                "body": "## Description\n\nThe `bun run clean` command is failing due to TypeScript errors in `@elizaos/core` package during the DTS (type definition) build phase.\n\n## Error Details\n\n### Build Process\n```\n‚Ä¢ Running build in 17 packages\n‚Ä¢ Remote caching disabled\n@elizaos/config:build: cache miss\n@elizaos/autodoc:build: cache miss\n@elizaos/core:build: cache miss\n```\n\n### TypeScript Errors in @elizaos/core/src/utils.ts\n1. Line 218: `error TS2345: Argument of type '`${string}-${string}-${string}-${string}-${string}`' is not assignable to parameter of type 'never'.`\n2. Line 366: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n3. Line 409: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n4. Line 536: `error TS2345: Argument of type '{ numberOfChunks: number; averageChunkSize: number; }' is not assignable to parameter of type 'never'.`\n\n### Impact\n- Blocks `bun run clean` command\n- Prevents successful build of `@elizaos/core`\n- Affects dependent packages in the monorepo\n\n## Steps to Reproduce\n1. Run `bun run clean`\n2. Observe build failure in `@elizaos/core`\n3. Build fails with TypeScript errors during DTS generation\n\n## Expected Behavior\n- `bun run clean` should complete successfully\n- `@elizaos/core` should build without TypeScript errors\n- Type definitions should be generated correctly\n\n## Suggested Fix\n\nThe errors suggest type mismatches in `utils.ts`. Need to:\n1. Review type definitions in affected lines\n2. Update type assertions or generic constraints\n3. Ensure string template literal types are properly handled\n4. Fix object type assignments\n\n### Files to Update\n- `packages/core/src/utils.ts`\n\n## Priority\n**HIGH** - This is blocking clean builds and potentially affecting development workflow.",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "üêõ Build failure in @elizaos/core causing bun run clean to fail",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5738,
                "node_id": "I_kwDOMT5cIs7E1COv",
                "assignee": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5738",
                "assignees": [
                  {
                    "id": 15067321,
                    "url": "https://api.github.com/users/monilpat",
                    "type": "User",
                    "login": "monilpat",
                    "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                    "html_url": "https://github.com/monilpat",
                    "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/monilpat/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                    "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/monilpat/followers",
                    "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/monilpat/orgs",
                    "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                    "received_events_url": "https://api.github.com/users/monilpat/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-08T00:26:11Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/labels{/name}",
                "updated_at": "2025-08-11T14:56:01Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3301116813,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734",
                "body": "**Describe the bug**\n\nOn project creation, ElizaOS CLI fails with the following error:\n```\n‚óá  Failed to build project\nstdout: src/index.ts(7,25): error TS2345: Argument of type 'string' is not assignable to parameter of type 'undefined'.\nstderr: $ tsc --noEmit && vite build && tsup\n```\n\n**To Reproduce**\n\n- Install ElizaOS through `bun`\n```\nbun i -g @elizaos/cli\n```\n- Create new ElizaOS project\n```\nelizaos create abcde\n```\n\n**Expected behavior**\n\nProject built successfully\n\n**Screenshots**\n\n<img width=\"1095\" height=\"572\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/967dd6a2-0d70-4e2e-8019-85a2eab5f225\" />\n\n**Additional context**\n\nElizaOS CLI version: `1.3.2`\n",
                "type": null,
                "user": {
                  "id": 74447600,
                  "url": "https://api.github.com/users/Kemystra",
                  "type": "User",
                  "login": "Kemystra",
                  "node_id": "MDQ6VXNlcjc0NDQ3NjAw",
                  "html_url": "https://github.com/Kemystra",
                  "gists_url": "https://api.github.com/users/Kemystra/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/Kemystra/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/74447600?v=4",
                  "events_url": "https://api.github.com/users/Kemystra/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/Kemystra/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/Kemystra/followers",
                  "following_url": "https://api.github.com/users/Kemystra/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/Kemystra/orgs",
                  "subscriptions_url": "https://api.github.com/users/Kemystra/subscriptions",
                  "received_events_url": "https://api.github.com/users/Kemystra/received_events"
                },
                "state": "open",
                "title": "Eliza CLI failed to build project",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5734,
                "node_id": "I_kwDOMT5cIs7EwwuN",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5734",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T16:14:00Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/labels{/name}",
                "updated_at": "2025-08-08T19:43:52Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "NONE",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3299481897,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729",
                "body": "# Relates to\r\n\r\nN/A (Documentation improvement, not tied to a specific issue or ticket)\r\n\r\n# Risks\r\n\r\nLow.  \r\nThis change only updates documentation and does not affect any code or functionality.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR updates the elizaos README to include a fix for installation errors that may occur due to permission issues. It adds a note suggesting the use of sudo if users encounter a \"Permission denied\" or \"InstallFailed\" error when running the `elizaos create my-agent` command.\r\n\r\n## What kind of change is this?\r\n\r\nImprovements (misc. changes to existing features)  \r\nDocumentation update\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes require a change to the project documentation.  \r\nI have updated the documentation accordingly.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\nStart by reviewing the changes in the README.md file, specifically the section on creating a new project.\r\n\r\n## Detailed testing steps\r\n\r\n- Open the updated README.md.\r\n- Review the new instructions under \"Create Your First Project.\"\r\n- Confirm that the added note about using `sudo` is clear and helpful for users who encounter permission errors.",
                "type": null,
                "user": {
                  "id": 32749185,
                  "url": "https://api.github.com/users/mandatedisrael",
                  "type": "User",
                  "login": "mandatedisrael",
                  "node_id": "MDQ6VXNlcjMyNzQ5MTg1",
                  "html_url": "https://github.com/mandatedisrael",
                  "gists_url": "https://api.github.com/users/mandatedisrael/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/mandatedisrael/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/32749185?v=4",
                  "events_url": "https://api.github.com/users/mandatedisrael/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/mandatedisrael/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/mandatedisrael/followers",
                  "following_url": "https://api.github.com/users/mandatedisrael/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/mandatedisrael/orgs",
                  "subscriptions_url": "https://api.github.com/users/mandatedisrael/subscriptions",
                  "received_events_url": "https://api.github.com/users/mandatedisrael/received_events"
                },
                "draft": false,
                "state": "open",
                "title": "Update README.md to fix error",
                "labels": [],
                "locked": false,
                "number": 5729,
                "node_id": "PR_kwDOMT5cIs6iiNWN",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T08:10:12Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/labels{/name}",
                "updated_at": "2025-08-07T08:10:24Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/comments",
                "pull_request": {
                  "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5729",
                  "diff_url": "https://github.com/elizaOS/eliza/pull/5729.diff",
                  "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                  "merged_at": null,
                  "patch_url": "https://github.com/elizaOS/eliza/pull/5729.patch"
                },
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "FIRST_TIME_CONTRIBUTOR",
                "performed_via_github_app": null
              },
              {
                "id": 3299322983,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728",
                "body": "# Background\r\n\r\n## What does this PR do?\r\n\r\nIntroduce entity for cancelling runs `CancelRunSignal`\r\n\r\n## Why are we doing this? Any context or related work?\r\n\r\n- Calls to LLMs usually cost some credits\r\n- When we receive the `RUN_STARTED` event we can check current entity and end run to prevent credits spending\r\n\r\n# Documentation changes needed?\r\n\r\n## Methods\r\n\r\n- `static getSignal(runId: UUID)` - get signal by runId or create if null\r\n- `static clear(runId: UUID)` - clear signal from map\r\n- `cancel(content?: Content)` - cancel current run and and send `content` as a response to user\r\n\r\n## Example\r\n\r\n```typescript\r\nimport { Content, EventType, Plugin } from \"@elizaos/core\";\r\nimport { CancelRunSignal } from \"@elizaos/plugin-bootstrap\";\r\n\r\n// consider we have a service to determine eligibility for entity\r\ninterface EligibilityService {\r\n  check(entityId: UUID): Promise<{ result: boolean, reason?: Content }>\r\n}\r\n\r\nconst plugin: Plugin = {\r\n...\r\n  events: {\r\n    [EventType.RUN_STARTED]: ({ entityId, runId, runtime }) => {\r\n      const service = runtime.getService<EligibilityService>(\"USER_MANAGEMENT\");\r\n      const { result, reason } = await service.check(entityId);\r\n      \r\n      if (!result) {\r\n        const signal = CancelRunSignal.getSignal(runId);\r\n        signal.cancel(reason);\r\n      }\r\n    },\r\n    ...\r\n  },\r\n  ...\r\n}\r\n\r\nexport default Plugin;\r\n```\r\n\r\n## Discord username\r\n\r\nalexd000\r\n\r\n",
                "type": null,
                "user": {
                  "id": 82507604,
                  "url": "https://api.github.com/users/alex-nax",
                  "type": "User",
                  "login": "alex-nax",
                  "node_id": "MDQ6VXNlcjgyNTA3NjA0",
                  "html_url": "https://github.com/alex-nax",
                  "gists_url": "https://api.github.com/users/alex-nax/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/alex-nax/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/82507604?v=4",
                  "events_url": "https://api.github.com/users/alex-nax/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/alex-nax/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/alex-nax/followers",
                  "following_url": "https://api.github.com/users/alex-nax/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/alex-nax/orgs",
                  "subscriptions_url": "https://api.github.com/users/alex-nax/subscriptions",
                  "received_events_url": "https://api.github.com/users/alex-nax/received_events"
                },
                "draft": false,
                "state": "open",
                "title": "feat: ability to cancel current run before any calls to LLM are made",
                "labels": [],
                "locked": false,
                "number": 5728,
                "node_id": "PR_kwDOMT5cIs6ihriD",
                "assignee": null,
                "comments": 3,
                "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T07:19:35Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/labels{/name}",
                "updated_at": "2025-08-07T07:22:05Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/comments",
                "pull_request": {
                  "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5728",
                  "diff_url": "https://github.com/elizaOS/eliza/pull/5728.diff",
                  "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                  "merged_at": null,
                  "patch_url": "https://github.com/elizaOS/eliza/pull/5728.patch"
                },
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "FIRST_TIME_CONTRIBUTOR",
                "performed_via_github_app": null
              },
              {
                "id": 3298692741,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727",
                "body": "# feat(scenarios): Implement natural language agent interaction and response validation\n\n## Description\n\nThis ticket enables scenarios to test agent behavior through natural language interactions rather than direct code execution. This allows testing of agent reasoning, decision-making, and response generation in realistic conversation contexts with proper evaluation of agent responses.\n\n## Acceptance Criteria\n\n1. Scenario `run` blocks support `input` field for natural language prompts to agents\n2. Agent responses are captured and available for evaluation (text, thoughts, actions)\n3. Evaluators can access both agent response text and execution context\n4. Support for multi-turn conversations in scenarios\n5. Agent responses include thought process and action decisions\n6. Integration with existing evaluation engine for response validation\n7. Support for conversation context across multiple steps\n8. Agent response timing and performance metrics\n\n## Technical Approach\n\n### 1. Enhanced Run Step Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst RunStepSchema = z.object({\n  name: z.string().optional(),\n  // Natural language input to agent\n  input: z.string().optional(),\n  // Direct code execution (existing)\n  lang: z.string().optional(),\n  code: z.string().optional(),\n  // Agent interaction specific\n  agent_context: z.object({\n    conversation_id: z.string().optional(),\n    user_id: z.string().optional(),\n    room_id: z.string().optional(),\n  }).optional(),\n  evaluations: z.array(EvaluationSchema),\n});\n```\n\n### 2. Agent Interaction Engine\n```typescript\n// packages/cli/src/scenarios/agent-interaction.ts\nexport class AgentInteractionEngine {\n  constructor(private runtime: IAgentRuntime) {}\n\n  async interactWithAgent(input: string, context?: AgentContext): Promise<AgentResponse> {\n    // Create message for agent\n    const message: Memory = {\n      entityId: context?.user_id || 'scenario-user',\n      roomId: context?.room_id || 'scenario-room',\n      content: {\n        type: 'text',\n        text: input,\n      },\n      metadata: {\n        type: 'message',\n        conversationId: context?.conversation_id,\n      },\n    };\n\n    // Send to agent and capture response\n    const startTime = Date.now();\n    const response = await this.runtime.processMessage(message);\n    const endTime = Date.now();\n\n    return {\n      text: response.text,\n      thoughts: response.thoughts,\n      actions: response.actions,\n      timing: {\n        startTime,\n        endTime,\n        duration: endTime - startTime,\n      },\n      context: {\n        conversationId: context?.conversation_id,\n        messageId: message.id,\n      },\n    };\n  }\n}\n```\n\n### 3. Enhanced Execution Result\n```typescript\n// packages/cli/src/scenarios/providers.ts\nexport interface ExecutionResult {\n  exitCode: number;\n  stdout: string;\n  stderr: string;\n  files: Record<string, string>;\n  // New: Agent interaction results\n  agentResponse?: AgentResponse;\n  conversationHistory?: AgentResponse[];\n}\n```\n\n## Test Scenario\n\nCreate `agent-interaction-test.scenario.yaml`:\n```yaml\nname: \"Agent Interaction Test\"\ndescription: \"Tests natural language interaction with agents\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Implement Dark Mode\"\n          number: 123\n          state: \"open\"\n          labels: [\"feature\", \"ui\"]\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"2.5\"\n\nrun:\n  - name: \"Ask agent about roadmap\"\n    input: \"What new features are you planning to add?\"\n    agent_context:\n      conversation_id: \"roadmap-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify agent searched for issues\"\n      \n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n        description: \"Verify agent mentioned the mocked issue\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent provide a helpful and coherent response about new features?\"\n        expected: \"yes\"\n        description: \"Verify agent response quality\"\n\n  - name: \"Ask agent about wallet\"\n    input: \"What's my current wallet balance?\"\n    agent_context:\n      conversation_id: \"wallet-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify agent checked wallet balance\"\n      \n      - type: \"string_contains\"\n        value: \"2.5 ETH\"\n        description: \"Verify agent reported the correct balance\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent clearly explain the wallet balance information?\"\n        expected: \"yes\"\n\n  - name: \"Multi-turn conversation\"\n    input: \"Can you help me with both my wallet and roadmap?\"\n    agent_context:\n      conversation_id: \"multi-turn-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"ETH\"\n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent address both wallet and roadmap questions comprehensively?\"\n        expected: \"yes\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Single Turn**: Test basic agent interaction and response\n2. **Multi-turn**: Test conversation context across steps\n3. **Action Tracking**: Verify agent uses appropriate actions\n4. **Response Quality**: Test LLM judge evaluation of responses\n5. **Performance**: Test response timing and metrics\n6. **Error Handling**: Test agent behavior with invalid inputs\n\n## Dependencies\n\n- Requires plugin system integration (Ticket 1)\n- Builds on advanced mocking system (Ticket 2)\n- Integrates with existing evaluation engine\n- Depends on agent runtime message processing",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement natural language agent interaction and response validation",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5727,
                "node_id": "I_kwDOMT5cIs7Eng6F",
                "assignee": null,
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5727",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:49:34Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/labels{/name}",
                "updated_at": "2025-08-07T05:35:40Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3298691383,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726",
                "body": "# feat(scenarios): Implement conditional mocking and complex response structures\n\n## Description\n\nThis ticket enhances the mocking system to support conditional responses based on input parameters and complex response structures with metadata. This enables realistic testing of service interactions like GitHub API calls or EVM transactions with proper request/response matching.\n\n## Acceptance Criteria\n\n1. Mock definitions support `when` clauses for conditional responses\n2. `when` clauses can match on method arguments, input parameters, or request context\n3. Mock responses support complex nested structures with metadata (timestamps, IDs, etc.)\n4. Multiple mock responses can be defined for the same service/method with different conditions\n5. Mock system provides clear logging of which mock was triggered and why\n6. Mock responses can include realistic error conditions and edge cases\n7. Support for dynamic response generation based on input parameters\n8. Mock validation ensures `when` clauses are syntactically correct\n\n## Technical Approach\n\n### 1. Enhanced Mock Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst MockSchema = z.object({\n  service: z.string(),\n  method: z.string(),\n  when: z.object({\n    // Match on method arguments\n    args: z.array(z.any()).optional(),\n    // Match on specific argument values\n    input: z.record(z.any()).optional(),\n    // Match on request context\n    context: z.record(z.any()).optional(),\n    // Custom matching function\n    matcher: z.string().optional(), // JavaScript expression\n  }).optional(),\n  response: z.any(), // Can be function or static value\n  // For dynamic responses\n  responseFn: z.string().optional(), // JavaScript function\n  // Error simulation\n  error: z.object({\n    code: z.string(),\n    message: z.string(),\n  }).optional(),\n});\n```\n\n### 2. Mock Engine Implementation\n```typescript\n// packages/cli/src/scenarios/mock-engine.ts\nexport class MockEngine {\n  private mocks: MockDefinition[] = [];\n\n  addMock(mock: MockDefinition) {\n    this.mocks.push(mock);\n  }\n\n  async findMock(service: string, method: string, args: any[]): Promise<any> {\n    const candidates = this.mocks.filter(m => \n      m.service === service && m.method === method\n    );\n\n    for (const mock of candidates) {\n      if (await this.matchesCondition(mock, args)) {\n        this.logger.info(`Mock triggered: ${service}.${method} with condition: ${JSON.stringify(mock.when)}`);\n        return this.generateResponse(mock, args);\n      }\n    }\n\n    return null; // No mock found\n  }\n\n  private async matchesCondition(mock: MockDefinition, args: any[]): Promise<boolean> {\n    if (!mock.when) return true; // Default mock\n\n    // Match on arguments\n    if (mock.when.args) {\n      if (!this.deepEqual(args, mock.when.args)) return false;\n    }\n\n    // Match on input parameters\n    if (mock.when.input) {\n      const input = this.extractInputFromArgs(args);\n      if (!this.deepEqual(input, mock.when.input)) return false;\n    }\n\n    // Custom matcher function\n    if (mock.when.matcher) {\n      const matcherFn = new Function('args', 'input', mock.when.matcher);\n      return matcherFn(args, this.extractInputFromArgs(args));\n    }\n\n    return true;\n  }\n\n  private generateResponse(mock: MockDefinition, args: any[]): any {\n    if (mock.error) {\n      throw new Error(`${mock.error.code}: ${mock.error.message}`);\n    }\n\n    if (mock.responseFn) {\n      const responseFn = new Function('args', 'input', mock.responseFn);\n      return responseFn(args, this.extractInputFromArgs(args));\n    }\n\n    return mock.response;\n  }\n}\n```\n\n## Test Scenario\n\nCreate `advanced-mocking-test.scenario.yaml`:\n```yaml\nname: \"Advanced Mocking Test\"\ndescription: \"Tests conditional mocking and complex response structures\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    # Conditional GitHub issue search\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"bug\"\n        matcher: \"input.labels.includes('bug')\"\n      response:\n        - title: \"Critical Bug Found\"\n          number: 456\n          state: \"open\"\n          labels: [\"bug\", \"critical\"]\n          created_at: \"2024-07-15T10:00:00Z\"\n\n    # Conditional GitHub issue search - different response\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"feature\"\n        matcher: \"input.labels.includes('feature')\"\n      response:\n        - title: \"New Feature Request\"\n          number: 789\n          state: \"open\"\n          labels: [\"feature\", \"enhancement\"]\n          created_at: \"2024-07-15T11:00:00Z\"\n\n    # Dynamic EVM balance response\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      when:\n        args: [\"0x1234567890abcdef\"]\n      responseFn: |\n        return {\n          chain: \"ethereum\",\n          address: args[0],\n          balances: [\n            { symbol: \"ETH\", amount: \"1.23\" },\n            { symbol: \"USDC\", amount: \"1000.00\" }\n          ],\n          last_updated: new Date().toISOString()\n        }\n\n    # Error simulation\n    - service: \"github-service\"\n      method: \"readFile\"\n      when:\n        input:\n          path: \"/docs/nonexistent.md\"\n      error:\n        code: \"FILE_NOT_FOUND\"\n        message: \"File does not exist\"\n\nrun:\n  - name: \"Test conditional GitHub search\"\n    input: \"Search for issues with bug label\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"Critical Bug Found\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent correctly search for bug issues?\"\n        expected: \"yes\"\n\n  - name: \"Test dynamic EVM response\"\n    input: \"What's the balance for address 0x1234567890abcdef?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n      - type: \"string_contains\"\n        value: \"1000.00 USDC\"\n\n  - name: \"Test error handling\"\n    input: \"Read the file /docs/nonexistent.md\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.readFile\"\n      - type: \"string_contains\"\n        value: \"File does not exist\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Conditional Matching**: Test different responses based on input parameters\n2. **Dynamic Responses**: Test response generation based on arguments\n3. **Error Simulation**: Test error handling and reporting\n4. **Complex Structures**: Test nested response objects with metadata\n5. **Multiple Mocks**: Test multiple mocks for same service/method\n6. **Logging**: Verify mock selection is logged clearly\n\n## Dependencies\n\n- Builds on existing mock system in scenarios\n- Requires plugin system integration (Ticket 1)\n- Integrates with agent interaction testing (Ticket 3) ",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement conditional mocking and complex response structures",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5726,
                "node_id": "I_kwDOMT5cIs7Engk3",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5726",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:49:00Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/labels{/name}",
                "updated_at": "2025-08-07T05:32:53Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3298689704,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725",
                "body": "# feat(scenarios): Implement plugin specification and dynamic loading\n\n## Description\n\nThis ticket implements plugin specification in scenario YAML files, allowing scenarios to declare which plugins are required for testing. This enables testing of agent behaviors that depend on specific plugins like `@elizaos/plugin-github` or `@elizaos/plugin-evm`. The system will dynamically load specified plugins during scenario execution and make their actions, providers, and services available to the agent.\n\n## Acceptance Criteria\n\n1. Scenario YAML supports a `plugins` array at the root level with string plugin names\n2. The `initializeAgent()` function respects scenario plugin specifications and loads them via `startAgent()`\n3. Plugin loading follows the same dependency resolution and error handling as the main CLI\n4. Scenarios can specify both string plugin names (`@elizaos/plugin-github`) and direct plugin objects\n5. Plugin loading errors are clearly reported with actionable guidance\n6. Default plugins (bootstrap, sql) are automatically included unless explicitly excluded via `exclude_defaults: true`\n7. Plugin conflicts are detected and reported during scenario validation\n8. Plugin initialization errors don't crash the scenario but are reported in results\n\n## Technical Approach\n\n### 1. Update Scenario Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst ScenarioSchema = z.object({\n  name: z.string(),\n  description: z.string(),\n  plugins: z.array(z.string()).optional(), // e.g., [\"@elizaos/plugin-github\"]\n  exclude_defaults: z.boolean().optional(), // exclude bootstrap/sql\n  environment: EnvironmentSchema,\n  setup: SetupSchema.optional(),\n  run: z.array(RunStepSchema),\n  judgment: JudgmentSchema,\n});\n```\n\n### 2. Enhance Runtime Factory\n```typescript\n// packages/cli/src/scenarios/runtime-factory.ts\nexport async function initializeAgent(scenario: Scenario): Promise<IAgentRuntime> {\n  const character: Character = {\n    name: 'scenario-runner',\n    id: stringToUuid('scenario-runner'),\n    bio: 'A minimal character for running scenarios',\n    plugins: scenario.plugins || []\n  };\n\n  // Load default plugins unless excluded\n  if (!scenario.exclude_defaults) {\n    character.plugins.push('@elizaos/plugin-bootstrap', '@elizaos/plugin-sql');\n  }\n\n  const runtime = await startAgent(\n    encryptedCharacter(character),\n    server,\n    undefined,\n    character.plugins,\n    { isTestMode: true }\n  );\n\n  return runtime;\n}\n```\n\n### 3. Plugin Validation\n```typescript\n// packages/cli/src/scenarios/plugin-validator.ts\nexport async function validateScenarioPlugins(scenario: Scenario): Promise<ValidationResult[]> {\n  const results: ValidationResult[] = [];\n  \n  for (const pluginName of scenario.plugins || []) {\n    try {\n      const plugin = await loadAndPreparePlugin(pluginName);\n      if (!plugin) {\n        results.push({\n          type: 'error',\n          message: `Plugin '${pluginName}' could not be loaded`,\n          suggestion: 'Check if plugin is installed or built correctly'\n        });\n      }\n    } catch (error) {\n      results.push({\n        type: 'error', \n        message: `Failed to validate plugin '${pluginName}': ${error.message}`,\n        suggestion: 'Verify plugin dependencies and configuration'\n      });\n    }\n  }\n  \n  return results;\n}\n```\n\n## Test Scenario\n\nCreate `plugin-integration-test.scenario.yaml`:\n```yaml\nname: \"Plugin Integration Test\"\ndescription: \"Tests loading and using plugins specified in scenario YAML\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Test Issue\"\n          number: 123\n          state: \"open\"\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"1.23\"\n\nrun:\n  - name: \"Test GitHub plugin actions\"\n    input: \"Search for issues with label 'bug'\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify GitHub plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"Test Issue\"\n        description: \"Verify agent found the mocked issue\"\n\n  - name: \"Test EVM plugin actions\"\n    input: \"What's my wallet balance?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify EVM plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n        description: \"Verify agent reported the mocked balance\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Plugin Loading Test**: Verify plugins load without errors\n2. **Action Availability Test**: Confirm agent can use plugin actions\n3. **Error Handling Test**: Test with non-existent plugin\n4. **Default Plugin Test**: Verify bootstrap/sql are included by default\n5. **Exclusion Test**: Test `exclude_defaults: true` behavior\n\n## Dependencies\n\n- Fixes the `startAgent` hanging issue (#5719) to enable plugin testing\n- Builds on existing `loadAndPreparePlugin` functionality\n- Integrates with current scenario execution flow ",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement plugin specification and dynamic loading",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5725,
                "node_id": "I_kwDOMT5cIs7EngKo",
                "assignee": null,
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5725",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:48:08Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/labels{/name}",
                "updated_at": "2025-08-07T05:37:32Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              }
            ]
          },
          "issues": [
            {
              "id": 3310285907,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754",
              "body": "## Issue Summary\nThe `elizaos publish --npm` command reports successful publishing but the plugin is not actually published to npm, despite showing success messages. The npm publish is failing with a 404 error, but the ElizaOS CLI incorrectly reports success.\n\n## Key Problems Identified\n\n### 1. Critical NPM Publishing Failure\n- **Error**: `npm error 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found`\n- **Issue**: The package scope `@elizaos` doesn't exist on npm, preventing publishing\n- **Impact**: Package cannot be published to npm, but CLI reports success\n\n### 2. False Success Reporting\n- **Issue**: CLI reports `[‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm`\n- **Reality**: npm publish failed with 404 error\n- **Impact**: Developers believe their plugin is published when it's not\n\n### 3. Registry Repository Mismatch\n- **Expected**: Should create PR against `https://github.com/elizaos-plugins/registry`\n- **Actual**: Still references old registry `https://github.com/elizaos/registry`\n- **Impact**: Plugin won't appear in the official ElizaOS registry\n\n## Steps to Reproduce\n\n```bash\n# Navigate to the plugin directory\ncd packages/plugin-polygon\n\n# Ensure you're on the correct branch with the changes\ngit checkout polygon\n\n# Run the publish command\nelizaos publish --npm\n\n# Verify the success message appears\n# [‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm\n\n# Check if package actually exists on npm\nnpm view @elizaos/plugin-polygon@1.0.0\n# Result: 404 Not Found - '@elizaos/plugin-polygon@1.0.0' is not in this registry\n```\n\n## Technical Details\n\n### NPM Error Analysis\nThe npm logs show the root cause:\n```\nhttp fetch PUT 404 https://registry.npmjs.org/@elizaos%2fplugin-polygon 507ms\nerror 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found\n```\n\nThis indicates that the `@elizaos` scope doesn't exist on npm, which is required for publishing scoped packages.\n\n### CLI Error Handling Failure\nThe ElizaOS CLI is not properly parsing npm error codes:\n- npm returns exit code 1 (failure)\n- CLI ignores the error and reports success\n- No validation that the package actually exists on npm\n\n## Expected Behavior\n1. CLI should detect npm publish failures (exit code 1)\n2. CLI should fail with clear error message when package scope doesn't exist\n3. CLI should validate that package actually exists on npm after publishing\n4. CLI should create PRs against the correct registry repository\n\n## Recommended Fixes\n\n### 1. Fix NPM Error Detection\n```typescript\n// In the publish command, check npm exit code\nconst npmResult = await exec('npm publish', { cwd: pluginDir });\nif (npmResult.exitCode !== 0) {\n  throw new Error(`NPM publish failed: ${npmResult.stderr}`);\n}\n```\n\n### 2. Add Package Scope Validation\n```typescript\n// Before publishing, check if scope exists\nconst scopeExists = await checkNpmScope('@elizaos');\nif (!scopeExists) {\n  throw new Error('Package scope @elizaos does not exist on npm. Contact npm support to create the scope.');\n}\n```\n\n### 3. Add Post-Publish Validation\n```typescript\n// After publishing, verify package exists\nconst packageExists = await checkPackageExists(packageName, version);\nif (!packageExists) {\n  throw new Error(`Package was not published successfully. Check npm logs for details.`);\n}\n```\n\n## Priority\n**Critical** - This completely blocks plugin publishing and creates false success reports.\n\n## Affected Components\n- `packages/cli/src/commands/publish.ts`\n- NPM publishing logic\n- Error handling and success reporting\n- Package scope validation\n- Registry repository configuration\n\n## Immediate Action Required\n1. **Create the `@elizaos` scope on npm** or use an existing scope\n2. Update CLI to properly detect and handle npm publish failures\n3. Add post-publish validation to ensure packages actually exist on npm\n4. Update registry repository configuration\n\n## Alternative Solutions\n1. **Use existing scope**: Change package name to `@monilpat/plugin-polygon`\n2. **Create organization scope**: Set up `@elizaos` organization on npm\n3. **Use unscoped package**: Publish as `elizaos-plugin-polygon`\n\nThis issue is critically blocking plugin developers from successfully publishing their work and needs immediate attention from the ElizaOS team.\n",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "Critical: Plugin Publishing Fails with False Success Reports",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5754,
              "node_id": "I_kwDOMT5cIs7FTvRT",
              "assignee": null,
              "comments": 0,
              "html_url": "https://github.com/elizaOS/eliza/issues/5754",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-11T14:20:08Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/labels{/name}",
              "updated_at": "2025-08-11T14:20:08Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3308102900,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749",
              "body": "### Problem Statement\nCurrently, ElizaOS scenario testing lacks the ability to mock internal agent runtime calls (particularly LLM interactions) when testing via the API client. This makes it difficult to create deterministic tests for agent behavior and workflows.\n\n### Current Limitations\n- Global function mocks only work for code executed in the same process\n- No way to intercept `runtime.useModel` calls from the bootstrap plugin\n- Agent behavior is non-deterministic due to real LLM calls\n- Difficult to test specific agent decision paths and responses\n\n### Why Different Approach Was Needed\n\nThe existing mocking system was designed for **code execution environments** (E2B sandbox and local `node -e` processes), where mocks are applied to the execution context. However, **agent testing** works differently:\n\n- **E2B/Local Execution**: Code runs in isolated processes/sandboxes where global mocks can be applied\n- **Agent Testing**: Agent runs as a service with API client interaction, requiring direct runtime method interception\n- **Architecture Gap**: The bootstrap plugin calls `runtime.useModel` internally, which can't be mocked through the execution environment approach\n\nThis architectural difference necessitated a new approach that directly intercepts runtime methods rather than relying on execution context mocking.\n\n### Proposed Solution: Runtime Method Mocking\n\nWe've implemented a new mocking approach that directly intercepts `IAgentRuntime` method calls:\n\n#### Key Components\n\n1. **MockEngine Enhancement**\n   - Added `runtimeMethodMocks` to support mocking runtime methods\n   - Priority system: `runtimeMethod` > `service` > `globalFunction`\n   - Direct method replacement on the runtime instance\n\n2. **Schema Updates**\n   - Extended `MockSchema` to include `runtimeMethod: z.string().optional()`\n   - Supports mocking any `IAgentRuntime` method (e.g., `useModel`, `getService`)\n\n3. **Conditional Matching**\n   - Matcher functions can inspect method arguments\n   - Example: `\"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"`\n   - Supports complex conditional logic for when to apply mocks\n\n#### Usage Example\n\n```yaml\nsetup:\n  mocks:\n    - runtimeMethod: \"useModel\"\n      method: \"useModel\"\n      when:\n        matcher: \"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"\n      response: \"<response><name>agent</name><reasoning>Mocked response</reasoning><action>RESPOND</action></response>\"\n```\n\n#### Benefits\n\n1. **Deterministic Testing**: Replace LLM calls with static responses\n2. **Full Workflow Testing**: Test complete agent decision flows\n3. **Conditional Mocking**: Apply mocks based on specific conditions\n4. **Runtime Integration**: Works seamlessly with existing agent architecture\n5. **Backward Compatibility**: Existing mocks continue to work\n\n#### Implementation Steps\n\n- MockEngine runtime method support\n- Schema updates for runtimeMethod mocks\n- Conditional matching with matcher functions\n- Integration with scenario runner\n- Basic useModel mocking working\n- Add support for mocking other runtime methods (getService, etc.)\n- Create comprehensive test scenarios\n- Add documentation and examples\n- Consider adding mock recording/replay capabilities\n\n### Technical Details\n\nThe implementation works by:\n1. Creating the `IAgentRuntime` instance in the scenario runner\n2. Applying mocks directly to the runtime object before agent initialization\n3. The bootstrap plugin receives the mocked runtime and uses the mocked methods\n4. Mocks are reverted after scenario completion\n\nThis approach provides the foundation for robust, deterministic agent testing while maintaining the existing architecture.",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "Implement Runtime Method Mocking for Deterministic Agent Testing",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 7668252177,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/testing",
                  "name": "testing",
                  "color": "2D3957",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAAByRA-EQ",
                  "description": ""
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5749,
              "node_id": "I_kwDOMT5cIs7FLaT0",
              "assignee": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "comments": 0,
              "html_url": "https://github.com/elizaOS/eliza/issues/5749",
              "assignees": [
                {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-11T00:08:49Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/labels{/name}",
              "updated_at": "2025-08-11T00:09:37Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3304516859,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747",
              "body": null,
              "type": null,
              "user": {
                "id": 48334430,
                "url": "https://api.github.com/users/samarth30",
                "type": "User",
                "login": "samarth30",
                "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                "html_url": "https://github.com/samarth30",
                "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/samarth30/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/samarth30/followers",
                "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/samarth30/orgs",
                "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                "received_events_url": "https://api.github.com/users/samarth30/received_events"
              },
              "state": "open",
              "title": "Fixing bugs in eliza-cloud",
              "labels": [],
              "locked": false,
              "number": 5747,
              "node_id": "I_kwDOMT5cIs7E9uz7",
              "assignee": {
                "id": 48334430,
                "url": "https://api.github.com/users/samarth30",
                "type": "User",
                "login": "samarth30",
                "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                "html_url": "https://github.com/samarth30",
                "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/samarth30/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/samarth30/followers",
                "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/samarth30/orgs",
                "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                "received_events_url": "https://api.github.com/users/samarth30/received_events"
              },
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5747",
              "assignees": [
                {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-08T16:01:56Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/labels{/name}",
              "updated_at": "2025-08-08T19:02:49Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "MEMBER",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": {
                "id": 20150,
                "name": "Linear",
                "slug": "linear",
                "owner": {
                  "id": 46686594,
                  "url": "https://api.github.com/users/linear",
                  "type": "Organization",
                  "login": "linear",
                  "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ2Njg2NTk0",
                  "html_url": "https://github.com/linear",
                  "gists_url": "https://api.github.com/users/linear/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/linear/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/46686594?v=4",
                  "events_url": "https://api.github.com/users/linear/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/linear/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/linear/followers",
                  "following_url": "https://api.github.com/users/linear/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/linear/orgs",
                  "subscriptions_url": "https://api.github.com/users/linear/subscriptions",
                  "received_events_url": "https://api.github.com/users/linear/received_events"
                },
                "events": [
                  "check_suite",
                  "issues",
                  "issue_comment",
                  "pull_request",
                  "pull_request_review",
                  "repository",
                  "sub_issues"
                ],
                "node_id": "MDM6QXBwMjAxNTA=",
                "html_url": "https://github.com/apps/linear",
                "client_id": "Iv1.085d682ea245c945",
                "created_at": "2018-11-02T18:07:23Z",
                "updated_at": "2025-02-07T14:59:56Z",
                "description": "",
                "permissions": {
                  "checks": "read",
                  "issues": "write",
                  "metadata": "read",
                  "pull_requests": "write"
                },
                "external_url": "https://linear.app"
              }
            },
            {
              "id": 3302237103,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738",
              "body": "## Description\n\nThe `bun run clean` command is failing due to TypeScript errors in `@elizaos/core` package during the DTS (type definition) build phase.\n\n## Error Details\n\n### Build Process\n```\n‚Ä¢ Running build in 17 packages\n‚Ä¢ Remote caching disabled\n@elizaos/config:build: cache miss\n@elizaos/autodoc:build: cache miss\n@elizaos/core:build: cache miss\n```\n\n### TypeScript Errors in @elizaos/core/src/utils.ts\n1. Line 218: `error TS2345: Argument of type '`${string}-${string}-${string}-${string}-${string}`' is not assignable to parameter of type 'never'.`\n2. Line 366: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n3. Line 409: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n4. Line 536: `error TS2345: Argument of type '{ numberOfChunks: number; averageChunkSize: number; }' is not assignable to parameter of type 'never'.`\n\n### Impact\n- Blocks `bun run clean` command\n- Prevents successful build of `@elizaos/core`\n- Affects dependent packages in the monorepo\n\n## Steps to Reproduce\n1. Run `bun run clean`\n2. Observe build failure in `@elizaos/core`\n3. Build fails with TypeScript errors during DTS generation\n\n## Expected Behavior\n- `bun run clean` should complete successfully\n- `@elizaos/core` should build without TypeScript errors\n- Type definitions should be generated correctly\n\n## Suggested Fix\n\nThe errors suggest type mismatches in `utils.ts`. Need to:\n1. Review type definitions in affected lines\n2. Update type assertions or generic constraints\n3. Ensure string template literal types are properly handled\n4. Fix object type assignments\n\n### Files to Update\n- `packages/core/src/utils.ts`\n\n## Priority\n**HIGH** - This is blocking clean builds and potentially affecting development workflow.",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "üêõ Build failure in @elizaos/core causing bun run clean to fail",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5738,
              "node_id": "I_kwDOMT5cIs7E1COv",
              "assignee": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5738",
              "assignees": [
                {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-08T00:26:11Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/labels{/name}",
              "updated_at": "2025-08-11T14:56:01Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3301116813,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734",
              "body": "**Describe the bug**\n\nOn project creation, ElizaOS CLI fails with the following error:\n```\n‚óá  Failed to build project\nstdout: src/index.ts(7,25): error TS2345: Argument of type 'string' is not assignable to parameter of type 'undefined'.\nstderr: $ tsc --noEmit && vite build && tsup\n```\n\n**To Reproduce**\n\n- Install ElizaOS through `bun`\n```\nbun i -g @elizaos/cli\n```\n- Create new ElizaOS project\n```\nelizaos create abcde\n```\n\n**Expected behavior**\n\nProject built successfully\n\n**Screenshots**\n\n<img width=\"1095\" height=\"572\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/967dd6a2-0d70-4e2e-8019-85a2eab5f225\" />\n\n**Additional context**\n\nElizaOS CLI version: `1.3.2`\n",
              "type": null,
              "user": {
                "id": 74447600,
                "url": "https://api.github.com/users/Kemystra",
                "type": "User",
                "login": "Kemystra",
                "node_id": "MDQ6VXNlcjc0NDQ3NjAw",
                "html_url": "https://github.com/Kemystra",
                "gists_url": "https://api.github.com/users/Kemystra/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/Kemystra/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/74447600?v=4",
                "events_url": "https://api.github.com/users/Kemystra/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/Kemystra/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/Kemystra/followers",
                "following_url": "https://api.github.com/users/Kemystra/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/Kemystra/orgs",
                "subscriptions_url": "https://api.github.com/users/Kemystra/subscriptions",
                "received_events_url": "https://api.github.com/users/Kemystra/received_events"
              },
              "state": "open",
              "title": "Eliza CLI failed to build project",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5734,
              "node_id": "I_kwDOMT5cIs7EwwuN",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5734",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T16:14:00Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/labels{/name}",
              "updated_at": "2025-08-08T19:43:52Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "NONE",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3299481897,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729",
              "body": "# Relates to\r\n\r\nN/A (Documentation improvement, not tied to a specific issue or ticket)\r\n\r\n# Risks\r\n\r\nLow.  \r\nThis change only updates documentation and does not affect any code or functionality.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR updates the elizaos README to include a fix for installation errors that may occur due to permission issues. It adds a note suggesting the use of sudo if users encounter a \"Permission denied\" or \"InstallFailed\" error when running the `elizaos create my-agent` command.\r\n\r\n## What kind of change is this?\r\n\r\nImprovements (misc. changes to existing features)  \r\nDocumentation update\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes require a change to the project documentation.  \r\nI have updated the documentation accordingly.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\nStart by reviewing the changes in the README.md file, specifically the section on creating a new project.\r\n\r\n## Detailed testing steps\r\n\r\n- Open the updated README.md.\r\n- Review the new instructions under \"Create Your First Project.\"\r\n- Confirm that the added note about using `sudo` is clear and helpful for users who encounter permission errors.",
              "type": null,
              "user": {
                "id": 32749185,
                "url": "https://api.github.com/users/mandatedisrael",
                "type": "User",
                "login": "mandatedisrael",
                "node_id": "MDQ6VXNlcjMyNzQ5MTg1",
                "html_url": "https://github.com/mandatedisrael",
                "gists_url": "https://api.github.com/users/mandatedisrael/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/mandatedisrael/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/32749185?v=4",
                "events_url": "https://api.github.com/users/mandatedisrael/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/mandatedisrael/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/mandatedisrael/followers",
                "following_url": "https://api.github.com/users/mandatedisrael/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/mandatedisrael/orgs",
                "subscriptions_url": "https://api.github.com/users/mandatedisrael/subscriptions",
                "received_events_url": "https://api.github.com/users/mandatedisrael/received_events"
              },
              "draft": false,
              "state": "open",
              "title": "Update README.md to fix error",
              "labels": [],
              "locked": false,
              "number": 5729,
              "node_id": "PR_kwDOMT5cIs6iiNWN",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/pull/5729",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T08:10:12Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/labels{/name}",
              "updated_at": "2025-08-07T08:10:24Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/comments",
              "pull_request": {
                "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5729",
                "diff_url": "https://github.com/elizaOS/eliza/pull/5729.diff",
                "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                "merged_at": null,
                "patch_url": "https://github.com/elizaOS/eliza/pull/5729.patch"
              },
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "FIRST_TIME_CONTRIBUTOR",
              "performed_via_github_app": null
            },
            {
              "id": 3299322983,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728",
              "body": "# Background\r\n\r\n## What does this PR do?\r\n\r\nIntroduce entity for cancelling runs `CancelRunSignal`\r\n\r\n## Why are we doing this? Any context or related work?\r\n\r\n- Calls to LLMs usually cost some credits\r\n- When we receive the `RUN_STARTED` event we can check current entity and end run to prevent credits spending\r\n\r\n# Documentation changes needed?\r\n\r\n## Methods\r\n\r\n- `static getSignal(runId: UUID)` - get signal by runId or create if null\r\n- `static clear(runId: UUID)` - clear signal from map\r\n- `cancel(content?: Content)` - cancel current run and and send `content` as a response to user\r\n\r\n## Example\r\n\r\n```typescript\r\nimport { Content, EventType, Plugin } from \"@elizaos/core\";\r\nimport { CancelRunSignal } from \"@elizaos/plugin-bootstrap\";\r\n\r\n// consider we have a service to determine eligibility for entity\r\ninterface EligibilityService {\r\n  check(entityId: UUID): Promise<{ result: boolean, reason?: Content }>\r\n}\r\n\r\nconst plugin: Plugin = {\r\n...\r\n  events: {\r\n    [EventType.RUN_STARTED]: ({ entityId, runId, runtime }) => {\r\n      const service = runtime.getService<EligibilityService>(\"USER_MANAGEMENT\");\r\n      const { result, reason } = await service.check(entityId);\r\n      \r\n      if (!result) {\r\n        const signal = CancelRunSignal.getSignal(runId);\r\n        signal.cancel(reason);\r\n      }\r\n    },\r\n    ...\r\n  },\r\n  ...\r\n}\r\n\r\nexport default Plugin;\r\n```\r\n\r\n## Discord username\r\n\r\nalexd000\r\n\r\n",
              "type": null,
              "user": {
                "id": 82507604,
                "url": "https://api.github.com/users/alex-nax",
                "type": "User",
                "login": "alex-nax",
                "node_id": "MDQ6VXNlcjgyNTA3NjA0",
                "html_url": "https://github.com/alex-nax",
                "gists_url": "https://api.github.com/users/alex-nax/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/alex-nax/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/82507604?v=4",
                "events_url": "https://api.github.com/users/alex-nax/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/alex-nax/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/alex-nax/followers",
                "following_url": "https://api.github.com/users/alex-nax/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/alex-nax/orgs",
                "subscriptions_url": "https://api.github.com/users/alex-nax/subscriptions",
                "received_events_url": "https://api.github.com/users/alex-nax/received_events"
              },
              "draft": false,
              "state": "open",
              "title": "feat: ability to cancel current run before any calls to LLM are made",
              "labels": [],
              "locked": false,
              "number": 5728,
              "node_id": "PR_kwDOMT5cIs6ihriD",
              "assignee": null,
              "comments": 3,
              "html_url": "https://github.com/elizaOS/eliza/pull/5728",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T07:19:35Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/labels{/name}",
              "updated_at": "2025-08-07T07:22:05Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/comments",
              "pull_request": {
                "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5728",
                "diff_url": "https://github.com/elizaOS/eliza/pull/5728.diff",
                "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                "merged_at": null,
                "patch_url": "https://github.com/elizaOS/eliza/pull/5728.patch"
              },
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "FIRST_TIME_CONTRIBUTOR",
              "performed_via_github_app": null
            },
            {
              "id": 3298692741,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727",
              "body": "# feat(scenarios): Implement natural language agent interaction and response validation\n\n## Description\n\nThis ticket enables scenarios to test agent behavior through natural language interactions rather than direct code execution. This allows testing of agent reasoning, decision-making, and response generation in realistic conversation contexts with proper evaluation of agent responses.\n\n## Acceptance Criteria\n\n1. Scenario `run` blocks support `input` field for natural language prompts to agents\n2. Agent responses are captured and available for evaluation (text, thoughts, actions)\n3. Evaluators can access both agent response text and execution context\n4. Support for multi-turn conversations in scenarios\n5. Agent responses include thought process and action decisions\n6. Integration with existing evaluation engine for response validation\n7. Support for conversation context across multiple steps\n8. Agent response timing and performance metrics\n\n## Technical Approach\n\n### 1. Enhanced Run Step Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst RunStepSchema = z.object({\n  name: z.string().optional(),\n  // Natural language input to agent\n  input: z.string().optional(),\n  // Direct code execution (existing)\n  lang: z.string().optional(),\n  code: z.string().optional(),\n  // Agent interaction specific\n  agent_context: z.object({\n    conversation_id: z.string().optional(),\n    user_id: z.string().optional(),\n    room_id: z.string().optional(),\n  }).optional(),\n  evaluations: z.array(EvaluationSchema),\n});\n```\n\n### 2. Agent Interaction Engine\n```typescript\n// packages/cli/src/scenarios/agent-interaction.ts\nexport class AgentInteractionEngine {\n  constructor(private runtime: IAgentRuntime) {}\n\n  async interactWithAgent(input: string, context?: AgentContext): Promise<AgentResponse> {\n    // Create message for agent\n    const message: Memory = {\n      entityId: context?.user_id || 'scenario-user',\n      roomId: context?.room_id || 'scenario-room',\n      content: {\n        type: 'text',\n        text: input,\n      },\n      metadata: {\n        type: 'message',\n        conversationId: context?.conversation_id,\n      },\n    };\n\n    // Send to agent and capture response\n    const startTime = Date.now();\n    const response = await this.runtime.processMessage(message);\n    const endTime = Date.now();\n\n    return {\n      text: response.text,\n      thoughts: response.thoughts,\n      actions: response.actions,\n      timing: {\n        startTime,\n        endTime,\n        duration: endTime - startTime,\n      },\n      context: {\n        conversationId: context?.conversation_id,\n        messageId: message.id,\n      },\n    };\n  }\n}\n```\n\n### 3. Enhanced Execution Result\n```typescript\n// packages/cli/src/scenarios/providers.ts\nexport interface ExecutionResult {\n  exitCode: number;\n  stdout: string;\n  stderr: string;\n  files: Record<string, string>;\n  // New: Agent interaction results\n  agentResponse?: AgentResponse;\n  conversationHistory?: AgentResponse[];\n}\n```\n\n## Test Scenario\n\nCreate `agent-interaction-test.scenario.yaml`:\n```yaml\nname: \"Agent Interaction Test\"\ndescription: \"Tests natural language interaction with agents\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Implement Dark Mode\"\n          number: 123\n          state: \"open\"\n          labels: [\"feature\", \"ui\"]\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"2.5\"\n\nrun:\n  - name: \"Ask agent about roadmap\"\n    input: \"What new features are you planning to add?\"\n    agent_context:\n      conversation_id: \"roadmap-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify agent searched for issues\"\n      \n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n        description: \"Verify agent mentioned the mocked issue\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent provide a helpful and coherent response about new features?\"\n        expected: \"yes\"\n        description: \"Verify agent response quality\"\n\n  - name: \"Ask agent about wallet\"\n    input: \"What's my current wallet balance?\"\n    agent_context:\n      conversation_id: \"wallet-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify agent checked wallet balance\"\n      \n      - type: \"string_contains\"\n        value: \"2.5 ETH\"\n        description: \"Verify agent reported the correct balance\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent clearly explain the wallet balance information?\"\n        expected: \"yes\"\n\n  - name: \"Multi-turn conversation\"\n    input: \"Can you help me with both my wallet and roadmap?\"\n    agent_context:\n      conversation_id: \"multi-turn-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"ETH\"\n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent address both wallet and roadmap questions comprehensively?\"\n        expected: \"yes\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Single Turn**: Test basic agent interaction and response\n2. **Multi-turn**: Test conversation context across steps\n3. **Action Tracking**: Verify agent uses appropriate actions\n4. **Response Quality**: Test LLM judge evaluation of responses\n5. **Performance**: Test response timing and metrics\n6. **Error Handling**: Test agent behavior with invalid inputs\n\n## Dependencies\n\n- Requires plugin system integration (Ticket 1)\n- Builds on advanced mocking system (Ticket 2)\n- Integrates with existing evaluation engine\n- Depends on agent runtime message processing",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement natural language agent interaction and response validation",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5727,
              "node_id": "I_kwDOMT5cIs7Eng6F",
              "assignee": null,
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5727",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:49:34Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/labels{/name}",
              "updated_at": "2025-08-07T05:35:40Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3298691383,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726",
              "body": "# feat(scenarios): Implement conditional mocking and complex response structures\n\n## Description\n\nThis ticket enhances the mocking system to support conditional responses based on input parameters and complex response structures with metadata. This enables realistic testing of service interactions like GitHub API calls or EVM transactions with proper request/response matching.\n\n## Acceptance Criteria\n\n1. Mock definitions support `when` clauses for conditional responses\n2. `when` clauses can match on method arguments, input parameters, or request context\n3. Mock responses support complex nested structures with metadata (timestamps, IDs, etc.)\n4. Multiple mock responses can be defined for the same service/method with different conditions\n5. Mock system provides clear logging of which mock was triggered and why\n6. Mock responses can include realistic error conditions and edge cases\n7. Support for dynamic response generation based on input parameters\n8. Mock validation ensures `when` clauses are syntactically correct\n\n## Technical Approach\n\n### 1. Enhanced Mock Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst MockSchema = z.object({\n  service: z.string(),\n  method: z.string(),\n  when: z.object({\n    // Match on method arguments\n    args: z.array(z.any()).optional(),\n    // Match on specific argument values\n    input: z.record(z.any()).optional(),\n    // Match on request context\n    context: z.record(z.any()).optional(),\n    // Custom matching function\n    matcher: z.string().optional(), // JavaScript expression\n  }).optional(),\n  response: z.any(), // Can be function or static value\n  // For dynamic responses\n  responseFn: z.string().optional(), // JavaScript function\n  // Error simulation\n  error: z.object({\n    code: z.string(),\n    message: z.string(),\n  }).optional(),\n});\n```\n\n### 2. Mock Engine Implementation\n```typescript\n// packages/cli/src/scenarios/mock-engine.ts\nexport class MockEngine {\n  private mocks: MockDefinition[] = [];\n\n  addMock(mock: MockDefinition) {\n    this.mocks.push(mock);\n  }\n\n  async findMock(service: string, method: string, args: any[]): Promise<any> {\n    const candidates = this.mocks.filter(m => \n      m.service === service && m.method === method\n    );\n\n    for (const mock of candidates) {\n      if (await this.matchesCondition(mock, args)) {\n        this.logger.info(`Mock triggered: ${service}.${method} with condition: ${JSON.stringify(mock.when)}`);\n        return this.generateResponse(mock, args);\n      }\n    }\n\n    return null; // No mock found\n  }\n\n  private async matchesCondition(mock: MockDefinition, args: any[]): Promise<boolean> {\n    if (!mock.when) return true; // Default mock\n\n    // Match on arguments\n    if (mock.when.args) {\n      if (!this.deepEqual(args, mock.when.args)) return false;\n    }\n\n    // Match on input parameters\n    if (mock.when.input) {\n      const input = this.extractInputFromArgs(args);\n      if (!this.deepEqual(input, mock.when.input)) return false;\n    }\n\n    // Custom matcher function\n    if (mock.when.matcher) {\n      const matcherFn = new Function('args', 'input', mock.when.matcher);\n      return matcherFn(args, this.extractInputFromArgs(args));\n    }\n\n    return true;\n  }\n\n  private generateResponse(mock: MockDefinition, args: any[]): any {\n    if (mock.error) {\n      throw new Error(`${mock.error.code}: ${mock.error.message}`);\n    }\n\n    if (mock.responseFn) {\n      const responseFn = new Function('args', 'input', mock.responseFn);\n      return responseFn(args, this.extractInputFromArgs(args));\n    }\n\n    return mock.response;\n  }\n}\n```\n\n## Test Scenario\n\nCreate `advanced-mocking-test.scenario.yaml`:\n```yaml\nname: \"Advanced Mocking Test\"\ndescription: \"Tests conditional mocking and complex response structures\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    # Conditional GitHub issue search\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"bug\"\n        matcher: \"input.labels.includes('bug')\"\n      response:\n        - title: \"Critical Bug Found\"\n          number: 456\n          state: \"open\"\n          labels: [\"bug\", \"critical\"]\n          created_at: \"2024-07-15T10:00:00Z\"\n\n    # Conditional GitHub issue search - different response\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"feature\"\n        matcher: \"input.labels.includes('feature')\"\n      response:\n        - title: \"New Feature Request\"\n          number: 789\n          state: \"open\"\n          labels: [\"feature\", \"enhancement\"]\n          created_at: \"2024-07-15T11:00:00Z\"\n\n    # Dynamic EVM balance response\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      when:\n        args: [\"0x1234567890abcdef\"]\n      responseFn: |\n        return {\n          chain: \"ethereum\",\n          address: args[0],\n          balances: [\n            { symbol: \"ETH\", amount: \"1.23\" },\n            { symbol: \"USDC\", amount: \"1000.00\" }\n          ],\n          last_updated: new Date().toISOString()\n        }\n\n    # Error simulation\n    - service: \"github-service\"\n      method: \"readFile\"\n      when:\n        input:\n          path: \"/docs/nonexistent.md\"\n      error:\n        code: \"FILE_NOT_FOUND\"\n        message: \"File does not exist\"\n\nrun:\n  - name: \"Test conditional GitHub search\"\n    input: \"Search for issues with bug label\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"Critical Bug Found\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent correctly search for bug issues?\"\n        expected: \"yes\"\n\n  - name: \"Test dynamic EVM response\"\n    input: \"What's the balance for address 0x1234567890abcdef?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n      - type: \"string_contains\"\n        value: \"1000.00 USDC\"\n\n  - name: \"Test error handling\"\n    input: \"Read the file /docs/nonexistent.md\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.readFile\"\n      - type: \"string_contains\"\n        value: \"File does not exist\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Conditional Matching**: Test different responses based on input parameters\n2. **Dynamic Responses**: Test response generation based on arguments\n3. **Error Simulation**: Test error handling and reporting\n4. **Complex Structures**: Test nested response objects with metadata\n5. **Multiple Mocks**: Test multiple mocks for same service/method\n6. **Logging**: Verify mock selection is logged clearly\n\n## Dependencies\n\n- Builds on existing mock system in scenarios\n- Requires plugin system integration (Ticket 1)\n- Integrates with agent interaction testing (Ticket 3) ",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement conditional mocking and complex response structures",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5726,
              "node_id": "I_kwDOMT5cIs7Engk3",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5726",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:49:00Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/labels{/name}",
              "updated_at": "2025-08-07T05:32:53Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3298689704,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725",
              "body": "# feat(scenarios): Implement plugin specification and dynamic loading\n\n## Description\n\nThis ticket implements plugin specification in scenario YAML files, allowing scenarios to declare which plugins are required for testing. This enables testing of agent behaviors that depend on specific plugins like `@elizaos/plugin-github` or `@elizaos/plugin-evm`. The system will dynamically load specified plugins during scenario execution and make their actions, providers, and services available to the agent.\n\n## Acceptance Criteria\n\n1. Scenario YAML supports a `plugins` array at the root level with string plugin names\n2. The `initializeAgent()` function respects scenario plugin specifications and loads them via `startAgent()`\n3. Plugin loading follows the same dependency resolution and error handling as the main CLI\n4. Scenarios can specify both string plugin names (`@elizaos/plugin-github`) and direct plugin objects\n5. Plugin loading errors are clearly reported with actionable guidance\n6. Default plugins (bootstrap, sql) are automatically included unless explicitly excluded via `exclude_defaults: true`\n7. Plugin conflicts are detected and reported during scenario validation\n8. Plugin initialization errors don't crash the scenario but are reported in results\n\n## Technical Approach\n\n### 1. Update Scenario Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst ScenarioSchema = z.object({\n  name: z.string(),\n  description: z.string(),\n  plugins: z.array(z.string()).optional(), // e.g., [\"@elizaos/plugin-github\"]\n  exclude_defaults: z.boolean().optional(), // exclude bootstrap/sql\n  environment: EnvironmentSchema,\n  setup: SetupSchema.optional(),\n  run: z.array(RunStepSchema),\n  judgment: JudgmentSchema,\n});\n```\n\n### 2. Enhance Runtime Factory\n```typescript\n// packages/cli/src/scenarios/runtime-factory.ts\nexport async function initializeAgent(scenario: Scenario): Promise<IAgentRuntime> {\n  const character: Character = {\n    name: 'scenario-runner',\n    id: stringToUuid('scenario-runner'),\n    bio: 'A minimal character for running scenarios',\n    plugins: scenario.plugins || []\n  };\n\n  // Load default plugins unless excluded\n  if (!scenario.exclude_defaults) {\n    character.plugins.push('@elizaos/plugin-bootstrap', '@elizaos/plugin-sql');\n  }\n\n  const runtime = await startAgent(\n    encryptedCharacter(character),\n    server,\n    undefined,\n    character.plugins,\n    { isTestMode: true }\n  );\n\n  return runtime;\n}\n```\n\n### 3. Plugin Validation\n```typescript\n// packages/cli/src/scenarios/plugin-validator.ts\nexport async function validateScenarioPlugins(scenario: Scenario): Promise<ValidationResult[]> {\n  const results: ValidationResult[] = [];\n  \n  for (const pluginName of scenario.plugins || []) {\n    try {\n      const plugin = await loadAndPreparePlugin(pluginName);\n      if (!plugin) {\n        results.push({\n          type: 'error',\n          message: `Plugin '${pluginName}' could not be loaded`,\n          suggestion: 'Check if plugin is installed or built correctly'\n        });\n      }\n    } catch (error) {\n      results.push({\n        type: 'error', \n        message: `Failed to validate plugin '${pluginName}': ${error.message}`,\n        suggestion: 'Verify plugin dependencies and configuration'\n      });\n    }\n  }\n  \n  return results;\n}\n```\n\n## Test Scenario\n\nCreate `plugin-integration-test.scenario.yaml`:\n```yaml\nname: \"Plugin Integration Test\"\ndescription: \"Tests loading and using plugins specified in scenario YAML\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Test Issue\"\n          number: 123\n          state: \"open\"\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"1.23\"\n\nrun:\n  - name: \"Test GitHub plugin actions\"\n    input: \"Search for issues with label 'bug'\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify GitHub plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"Test Issue\"\n        description: \"Verify agent found the mocked issue\"\n\n  - name: \"Test EVM plugin actions\"\n    input: \"What's my wallet balance?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify EVM plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n        description: \"Verify agent reported the mocked balance\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Plugin Loading Test**: Verify plugins load without errors\n2. **Action Availability Test**: Confirm agent can use plugin actions\n3. **Error Handling Test**: Test with non-existent plugin\n4. **Default Plugin Test**: Verify bootstrap/sql are included by default\n5. **Exclusion Test**: Test `exclude_defaults: true` behavior\n\n## Dependencies\n\n- Fixes the `startAgent` hanging issue (#5719) to enable plugin testing\n- Builds on existing `loadAndPreparePlugin` functionality\n- Integrates with current scenario execution flow ",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement plugin specification and dynamic loading",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5725,
              "node_id": "I_kwDOMT5cIs7EngKo",
              "assignee": null,
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5725",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:48:08Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/labels{/name}",
              "updated_at": "2025-08-07T05:37:32Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            }
          ]
        },
        "text": "Open issues for elizaOS/eliza (10 shown):\n‚Ä¢ #5754: Critical: Plugin Publishing Fails with False Success Reports (open) [bug]\n‚Ä¢ #5749: Implement Runtime Method Mocking for Deterministic Agent Testing (open) [enhancement, testing, Reality Spiral]\n‚Ä¢ #5747: Fixing bugs in eliza-cloud (open)\n‚Ä¢ #5738: üêõ Build failure in @elizaos/core causing bun run clean to fail (open) [bug]\n‚Ä¢ #5734: Eliza CLI failed to build project (open) [bug]\n‚Ä¢ #5729: Update README.md to fix error (open)\n‚Ä¢ #5728: feat: ability to cancel current run before any calls to LLM are made (open)\n‚Ä¢ #5727: feat(scenarios): Implement natural language agent interaction and response validation (open) [enhancement, Reality Spiral]\n‚Ä¢ #5726: feat(scenarios): Implement conditional mocking and complex response structures (open) [enhancement, Reality Spiral]\n‚Ä¢ #5725: feat(scenarios): Implement plugin specification and dynamic loading (open) [enhancement, Reality Spiral]",
        "values": {
          "issues": [
            {
              "id": 3310285907,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754",
              "body": "## Issue Summary\nThe `elizaos publish --npm` command reports successful publishing but the plugin is not actually published to npm, despite showing success messages. The npm publish is failing with a 404 error, but the ElizaOS CLI incorrectly reports success.\n\n## Key Problems Identified\n\n### 1. Critical NPM Publishing Failure\n- **Error**: `npm error 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found`\n- **Issue**: The package scope `@elizaos` doesn't exist on npm, preventing publishing\n- **Impact**: Package cannot be published to npm, but CLI reports success\n\n### 2. False Success Reporting\n- **Issue**: CLI reports `[‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm`\n- **Reality**: npm publish failed with 404 error\n- **Impact**: Developers believe their plugin is published when it's not\n\n### 3. Registry Repository Mismatch\n- **Expected**: Should create PR against `https://github.com/elizaos-plugins/registry`\n- **Actual**: Still references old registry `https://github.com/elizaos/registry`\n- **Impact**: Plugin won't appear in the official ElizaOS registry\n\n## Steps to Reproduce\n\n```bash\n# Navigate to the plugin directory\ncd packages/plugin-polygon\n\n# Ensure you're on the correct branch with the changes\ngit checkout polygon\n\n# Run the publish command\nelizaos publish --npm\n\n# Verify the success message appears\n# [‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm\n\n# Check if package actually exists on npm\nnpm view @elizaos/plugin-polygon@1.0.0\n# Result: 404 Not Found - '@elizaos/plugin-polygon@1.0.0' is not in this registry\n```\n\n## Technical Details\n\n### NPM Error Analysis\nThe npm logs show the root cause:\n```\nhttp fetch PUT 404 https://registry.npmjs.org/@elizaos%2fplugin-polygon 507ms\nerror 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found\n```\n\nThis indicates that the `@elizaos` scope doesn't exist on npm, which is required for publishing scoped packages.\n\n### CLI Error Handling Failure\nThe ElizaOS CLI is not properly parsing npm error codes:\n- npm returns exit code 1 (failure)\n- CLI ignores the error and reports success\n- No validation that the package actually exists on npm\n\n## Expected Behavior\n1. CLI should detect npm publish failures (exit code 1)\n2. CLI should fail with clear error message when package scope doesn't exist\n3. CLI should validate that package actually exists on npm after publishing\n4. CLI should create PRs against the correct registry repository\n\n## Recommended Fixes\n\n### 1. Fix NPM Error Detection\n```typescript\n// In the publish command, check npm exit code\nconst npmResult = await exec('npm publish', { cwd: pluginDir });\nif (npmResult.exitCode !== 0) {\n  throw new Error(`NPM publish failed: ${npmResult.stderr}`);\n}\n```\n\n### 2. Add Package Scope Validation\n```typescript\n// Before publishing, check if scope exists\nconst scopeExists = await checkNpmScope('@elizaos');\nif (!scopeExists) {\n  throw new Error('Package scope @elizaos does not exist on npm. Contact npm support to create the scope.');\n}\n```\n\n### 3. Add Post-Publish Validation\n```typescript\n// After publishing, verify package exists\nconst packageExists = await checkPackageExists(packageName, version);\nif (!packageExists) {\n  throw new Error(`Package was not published successfully. Check npm logs for details.`);\n}\n```\n\n## Priority\n**Critical** - This completely blocks plugin publishing and creates false success reports.\n\n## Affected Components\n- `packages/cli/src/commands/publish.ts`\n- NPM publishing logic\n- Error handling and success reporting\n- Package scope validation\n- Registry repository configuration\n\n## Immediate Action Required\n1. **Create the `@elizaos` scope on npm** or use an existing scope\n2. Update CLI to properly detect and handle npm publish failures\n3. Add post-publish validation to ensure packages actually exist on npm\n4. Update registry repository configuration\n\n## Alternative Solutions\n1. **Use existing scope**: Change package name to `@monilpat/plugin-polygon`\n2. **Create organization scope**: Set up `@elizaos` organization on npm\n3. **Use unscoped package**: Publish as `elizaos-plugin-polygon`\n\nThis issue is critically blocking plugin developers from successfully publishing their work and needs immediate attention from the ElizaOS team.\n",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "Critical: Plugin Publishing Fails with False Success Reports",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5754,
              "node_id": "I_kwDOMT5cIs7FTvRT",
              "assignee": null,
              "comments": 0,
              "html_url": "https://github.com/elizaOS/eliza/issues/5754",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-11T14:20:08Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/labels{/name}",
              "updated_at": "2025-08-11T14:20:08Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3308102900,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749",
              "body": "### Problem Statement\nCurrently, ElizaOS scenario testing lacks the ability to mock internal agent runtime calls (particularly LLM interactions) when testing via the API client. This makes it difficult to create deterministic tests for agent behavior and workflows.\n\n### Current Limitations\n- Global function mocks only work for code executed in the same process\n- No way to intercept `runtime.useModel` calls from the bootstrap plugin\n- Agent behavior is non-deterministic due to real LLM calls\n- Difficult to test specific agent decision paths and responses\n\n### Why Different Approach Was Needed\n\nThe existing mocking system was designed for **code execution environments** (E2B sandbox and local `node -e` processes), where mocks are applied to the execution context. However, **agent testing** works differently:\n\n- **E2B/Local Execution**: Code runs in isolated processes/sandboxes where global mocks can be applied\n- **Agent Testing**: Agent runs as a service with API client interaction, requiring direct runtime method interception\n- **Architecture Gap**: The bootstrap plugin calls `runtime.useModel` internally, which can't be mocked through the execution environment approach\n\nThis architectural difference necessitated a new approach that directly intercepts runtime methods rather than relying on execution context mocking.\n\n### Proposed Solution: Runtime Method Mocking\n\nWe've implemented a new mocking approach that directly intercepts `IAgentRuntime` method calls:\n\n#### Key Components\n\n1. **MockEngine Enhancement**\n   - Added `runtimeMethodMocks` to support mocking runtime methods\n   - Priority system: `runtimeMethod` > `service` > `globalFunction`\n   - Direct method replacement on the runtime instance\n\n2. **Schema Updates**\n   - Extended `MockSchema` to include `runtimeMethod: z.string().optional()`\n   - Supports mocking any `IAgentRuntime` method (e.g., `useModel`, `getService`)\n\n3. **Conditional Matching**\n   - Matcher functions can inspect method arguments\n   - Example: `\"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"`\n   - Supports complex conditional logic for when to apply mocks\n\n#### Usage Example\n\n```yaml\nsetup:\n  mocks:\n    - runtimeMethod: \"useModel\"\n      method: \"useModel\"\n      when:\n        matcher: \"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"\n      response: \"<response><name>agent</name><reasoning>Mocked response</reasoning><action>RESPOND</action></response>\"\n```\n\n#### Benefits\n\n1. **Deterministic Testing**: Replace LLM calls with static responses\n2. **Full Workflow Testing**: Test complete agent decision flows\n3. **Conditional Mocking**: Apply mocks based on specific conditions\n4. **Runtime Integration**: Works seamlessly with existing agent architecture\n5. **Backward Compatibility**: Existing mocks continue to work\n\n#### Implementation Steps\n\n- MockEngine runtime method support\n- Schema updates for runtimeMethod mocks\n- Conditional matching with matcher functions\n- Integration with scenario runner\n- Basic useModel mocking working\n- Add support for mocking other runtime methods (getService, etc.)\n- Create comprehensive test scenarios\n- Add documentation and examples\n- Consider adding mock recording/replay capabilities\n\n### Technical Details\n\nThe implementation works by:\n1. Creating the `IAgentRuntime` instance in the scenario runner\n2. Applying mocks directly to the runtime object before agent initialization\n3. The bootstrap plugin receives the mocked runtime and uses the mocked methods\n4. Mocks are reverted after scenario completion\n\nThis approach provides the foundation for robust, deterministic agent testing while maintaining the existing architecture.",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "Implement Runtime Method Mocking for Deterministic Agent Testing",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 7668252177,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/testing",
                  "name": "testing",
                  "color": "2D3957",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAAByRA-EQ",
                  "description": ""
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5749,
              "node_id": "I_kwDOMT5cIs7FLaT0",
              "assignee": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "comments": 0,
              "html_url": "https://github.com/elizaOS/eliza/issues/5749",
              "assignees": [
                {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-11T00:08:49Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/labels{/name}",
              "updated_at": "2025-08-11T00:09:37Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3304516859,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747",
              "body": null,
              "type": null,
              "user": {
                "id": 48334430,
                "url": "https://api.github.com/users/samarth30",
                "type": "User",
                "login": "samarth30",
                "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                "html_url": "https://github.com/samarth30",
                "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/samarth30/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/samarth30/followers",
                "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/samarth30/orgs",
                "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                "received_events_url": "https://api.github.com/users/samarth30/received_events"
              },
              "state": "open",
              "title": "Fixing bugs in eliza-cloud",
              "labels": [],
              "locked": false,
              "number": 5747,
              "node_id": "I_kwDOMT5cIs7E9uz7",
              "assignee": {
                "id": 48334430,
                "url": "https://api.github.com/users/samarth30",
                "type": "User",
                "login": "samarth30",
                "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                "html_url": "https://github.com/samarth30",
                "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/samarth30/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/samarth30/followers",
                "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/samarth30/orgs",
                "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                "received_events_url": "https://api.github.com/users/samarth30/received_events"
              },
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5747",
              "assignees": [
                {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-08T16:01:56Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/labels{/name}",
              "updated_at": "2025-08-08T19:02:49Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "MEMBER",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": {
                "id": 20150,
                "name": "Linear",
                "slug": "linear",
                "owner": {
                  "id": 46686594,
                  "url": "https://api.github.com/users/linear",
                  "type": "Organization",
                  "login": "linear",
                  "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ2Njg2NTk0",
                  "html_url": "https://github.com/linear",
                  "gists_url": "https://api.github.com/users/linear/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/linear/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/46686594?v=4",
                  "events_url": "https://api.github.com/users/linear/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/linear/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/linear/followers",
                  "following_url": "https://api.github.com/users/linear/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/linear/orgs",
                  "subscriptions_url": "https://api.github.com/users/linear/subscriptions",
                  "received_events_url": "https://api.github.com/users/linear/received_events"
                },
                "events": [
                  "check_suite",
                  "issues",
                  "issue_comment",
                  "pull_request",
                  "pull_request_review",
                  "repository",
                  "sub_issues"
                ],
                "node_id": "MDM6QXBwMjAxNTA=",
                "html_url": "https://github.com/apps/linear",
                "client_id": "Iv1.085d682ea245c945",
                "created_at": "2018-11-02T18:07:23Z",
                "updated_at": "2025-02-07T14:59:56Z",
                "description": "",
                "permissions": {
                  "checks": "read",
                  "issues": "write",
                  "metadata": "read",
                  "pull_requests": "write"
                },
                "external_url": "https://linear.app"
              }
            },
            {
              "id": 3302237103,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738",
              "body": "## Description\n\nThe `bun run clean` command is failing due to TypeScript errors in `@elizaos/core` package during the DTS (type definition) build phase.\n\n## Error Details\n\n### Build Process\n```\n‚Ä¢ Running build in 17 packages\n‚Ä¢ Remote caching disabled\n@elizaos/config:build: cache miss\n@elizaos/autodoc:build: cache miss\n@elizaos/core:build: cache miss\n```\n\n### TypeScript Errors in @elizaos/core/src/utils.ts\n1. Line 218: `error TS2345: Argument of type '`${string}-${string}-${string}-${string}-${string}`' is not assignable to parameter of type 'never'.`\n2. Line 366: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n3. Line 409: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n4. Line 536: `error TS2345: Argument of type '{ numberOfChunks: number; averageChunkSize: number; }' is not assignable to parameter of type 'never'.`\n\n### Impact\n- Blocks `bun run clean` command\n- Prevents successful build of `@elizaos/core`\n- Affects dependent packages in the monorepo\n\n## Steps to Reproduce\n1. Run `bun run clean`\n2. Observe build failure in `@elizaos/core`\n3. Build fails with TypeScript errors during DTS generation\n\n## Expected Behavior\n- `bun run clean` should complete successfully\n- `@elizaos/core` should build without TypeScript errors\n- Type definitions should be generated correctly\n\n## Suggested Fix\n\nThe errors suggest type mismatches in `utils.ts`. Need to:\n1. Review type definitions in affected lines\n2. Update type assertions or generic constraints\n3. Ensure string template literal types are properly handled\n4. Fix object type assignments\n\n### Files to Update\n- `packages/core/src/utils.ts`\n\n## Priority\n**HIGH** - This is blocking clean builds and potentially affecting development workflow.",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "üêõ Build failure in @elizaos/core causing bun run clean to fail",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5738,
              "node_id": "I_kwDOMT5cIs7E1COv",
              "assignee": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5738",
              "assignees": [
                {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-08T00:26:11Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/labels{/name}",
              "updated_at": "2025-08-11T14:56:01Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3301116813,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734",
              "body": "**Describe the bug**\n\nOn project creation, ElizaOS CLI fails with the following error:\n```\n‚óá  Failed to build project\nstdout: src/index.ts(7,25): error TS2345: Argument of type 'string' is not assignable to parameter of type 'undefined'.\nstderr: $ tsc --noEmit && vite build && tsup\n```\n\n**To Reproduce**\n\n- Install ElizaOS through `bun`\n```\nbun i -g @elizaos/cli\n```\n- Create new ElizaOS project\n```\nelizaos create abcde\n```\n\n**Expected behavior**\n\nProject built successfully\n\n**Screenshots**\n\n<img width=\"1095\" height=\"572\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/967dd6a2-0d70-4e2e-8019-85a2eab5f225\" />\n\n**Additional context**\n\nElizaOS CLI version: `1.3.2`\n",
              "type": null,
              "user": {
                "id": 74447600,
                "url": "https://api.github.com/users/Kemystra",
                "type": "User",
                "login": "Kemystra",
                "node_id": "MDQ6VXNlcjc0NDQ3NjAw",
                "html_url": "https://github.com/Kemystra",
                "gists_url": "https://api.github.com/users/Kemystra/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/Kemystra/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/74447600?v=4",
                "events_url": "https://api.github.com/users/Kemystra/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/Kemystra/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/Kemystra/followers",
                "following_url": "https://api.github.com/users/Kemystra/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/Kemystra/orgs",
                "subscriptions_url": "https://api.github.com/users/Kemystra/subscriptions",
                "received_events_url": "https://api.github.com/users/Kemystra/received_events"
              },
              "state": "open",
              "title": "Eliza CLI failed to build project",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5734,
              "node_id": "I_kwDOMT5cIs7EwwuN",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5734",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T16:14:00Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/labels{/name}",
              "updated_at": "2025-08-08T19:43:52Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "NONE",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3299481897,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729",
              "body": "# Relates to\r\n\r\nN/A (Documentation improvement, not tied to a specific issue or ticket)\r\n\r\n# Risks\r\n\r\nLow.  \r\nThis change only updates documentation and does not affect any code or functionality.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR updates the elizaos README to include a fix for installation errors that may occur due to permission issues. It adds a note suggesting the use of sudo if users encounter a \"Permission denied\" or \"InstallFailed\" error when running the `elizaos create my-agent` command.\r\n\r\n## What kind of change is this?\r\n\r\nImprovements (misc. changes to existing features)  \r\nDocumentation update\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes require a change to the project documentation.  \r\nI have updated the documentation accordingly.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\nStart by reviewing the changes in the README.md file, specifically the section on creating a new project.\r\n\r\n## Detailed testing steps\r\n\r\n- Open the updated README.md.\r\n- Review the new instructions under \"Create Your First Project.\"\r\n- Confirm that the added note about using `sudo` is clear and helpful for users who encounter permission errors.",
              "type": null,
              "user": {
                "id": 32749185,
                "url": "https://api.github.com/users/mandatedisrael",
                "type": "User",
                "login": "mandatedisrael",
                "node_id": "MDQ6VXNlcjMyNzQ5MTg1",
                "html_url": "https://github.com/mandatedisrael",
                "gists_url": "https://api.github.com/users/mandatedisrael/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/mandatedisrael/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/32749185?v=4",
                "events_url": "https://api.github.com/users/mandatedisrael/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/mandatedisrael/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/mandatedisrael/followers",
                "following_url": "https://api.github.com/users/mandatedisrael/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/mandatedisrael/orgs",
                "subscriptions_url": "https://api.github.com/users/mandatedisrael/subscriptions",
                "received_events_url": "https://api.github.com/users/mandatedisrael/received_events"
              },
              "draft": false,
              "state": "open",
              "title": "Update README.md to fix error",
              "labels": [],
              "locked": false,
              "number": 5729,
              "node_id": "PR_kwDOMT5cIs6iiNWN",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/pull/5729",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T08:10:12Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/labels{/name}",
              "updated_at": "2025-08-07T08:10:24Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/comments",
              "pull_request": {
                "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5729",
                "diff_url": "https://github.com/elizaOS/eliza/pull/5729.diff",
                "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                "merged_at": null,
                "patch_url": "https://github.com/elizaOS/eliza/pull/5729.patch"
              },
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "FIRST_TIME_CONTRIBUTOR",
              "performed_via_github_app": null
            },
            {
              "id": 3299322983,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728",
              "body": "# Background\r\n\r\n## What does this PR do?\r\n\r\nIntroduce entity for cancelling runs `CancelRunSignal`\r\n\r\n## Why are we doing this? Any context or related work?\r\n\r\n- Calls to LLMs usually cost some credits\r\n- When we receive the `RUN_STARTED` event we can check current entity and end run to prevent credits spending\r\n\r\n# Documentation changes needed?\r\n\r\n## Methods\r\n\r\n- `static getSignal(runId: UUID)` - get signal by runId or create if null\r\n- `static clear(runId: UUID)` - clear signal from map\r\n- `cancel(content?: Content)` - cancel current run and and send `content` as a response to user\r\n\r\n## Example\r\n\r\n```typescript\r\nimport { Content, EventType, Plugin } from \"@elizaos/core\";\r\nimport { CancelRunSignal } from \"@elizaos/plugin-bootstrap\";\r\n\r\n// consider we have a service to determine eligibility for entity\r\ninterface EligibilityService {\r\n  check(entityId: UUID): Promise<{ result: boolean, reason?: Content }>\r\n}\r\n\r\nconst plugin: Plugin = {\r\n...\r\n  events: {\r\n    [EventType.RUN_STARTED]: ({ entityId, runId, runtime }) => {\r\n      const service = runtime.getService<EligibilityService>(\"USER_MANAGEMENT\");\r\n      const { result, reason } = await service.check(entityId);\r\n      \r\n      if (!result) {\r\n        const signal = CancelRunSignal.getSignal(runId);\r\n        signal.cancel(reason);\r\n      }\r\n    },\r\n    ...\r\n  },\r\n  ...\r\n}\r\n\r\nexport default Plugin;\r\n```\r\n\r\n## Discord username\r\n\r\nalexd000\r\n\r\n",
              "type": null,
              "user": {
                "id": 82507604,
                "url": "https://api.github.com/users/alex-nax",
                "type": "User",
                "login": "alex-nax",
                "node_id": "MDQ6VXNlcjgyNTA3NjA0",
                "html_url": "https://github.com/alex-nax",
                "gists_url": "https://api.github.com/users/alex-nax/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/alex-nax/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/82507604?v=4",
                "events_url": "https://api.github.com/users/alex-nax/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/alex-nax/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/alex-nax/followers",
                "following_url": "https://api.github.com/users/alex-nax/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/alex-nax/orgs",
                "subscriptions_url": "https://api.github.com/users/alex-nax/subscriptions",
                "received_events_url": "https://api.github.com/users/alex-nax/received_events"
              },
              "draft": false,
              "state": "open",
              "title": "feat: ability to cancel current run before any calls to LLM are made",
              "labels": [],
              "locked": false,
              "number": 5728,
              "node_id": "PR_kwDOMT5cIs6ihriD",
              "assignee": null,
              "comments": 3,
              "html_url": "https://github.com/elizaOS/eliza/pull/5728",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T07:19:35Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/labels{/name}",
              "updated_at": "2025-08-07T07:22:05Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/comments",
              "pull_request": {
                "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5728",
                "diff_url": "https://github.com/elizaOS/eliza/pull/5728.diff",
                "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                "merged_at": null,
                "patch_url": "https://github.com/elizaOS/eliza/pull/5728.patch"
              },
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "FIRST_TIME_CONTRIBUTOR",
              "performed_via_github_app": null
            },
            {
              "id": 3298692741,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727",
              "body": "# feat(scenarios): Implement natural language agent interaction and response validation\n\n## Description\n\nThis ticket enables scenarios to test agent behavior through natural language interactions rather than direct code execution. This allows testing of agent reasoning, decision-making, and response generation in realistic conversation contexts with proper evaluation of agent responses.\n\n## Acceptance Criteria\n\n1. Scenario `run` blocks support `input` field for natural language prompts to agents\n2. Agent responses are captured and available for evaluation (text, thoughts, actions)\n3. Evaluators can access both agent response text and execution context\n4. Support for multi-turn conversations in scenarios\n5. Agent responses include thought process and action decisions\n6. Integration with existing evaluation engine for response validation\n7. Support for conversation context across multiple steps\n8. Agent response timing and performance metrics\n\n## Technical Approach\n\n### 1. Enhanced Run Step Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst RunStepSchema = z.object({\n  name: z.string().optional(),\n  // Natural language input to agent\n  input: z.string().optional(),\n  // Direct code execution (existing)\n  lang: z.string().optional(),\n  code: z.string().optional(),\n  // Agent interaction specific\n  agent_context: z.object({\n    conversation_id: z.string().optional(),\n    user_id: z.string().optional(),\n    room_id: z.string().optional(),\n  }).optional(),\n  evaluations: z.array(EvaluationSchema),\n});\n```\n\n### 2. Agent Interaction Engine\n```typescript\n// packages/cli/src/scenarios/agent-interaction.ts\nexport class AgentInteractionEngine {\n  constructor(private runtime: IAgentRuntime) {}\n\n  async interactWithAgent(input: string, context?: AgentContext): Promise<AgentResponse> {\n    // Create message for agent\n    const message: Memory = {\n      entityId: context?.user_id || 'scenario-user',\n      roomId: context?.room_id || 'scenario-room',\n      content: {\n        type: 'text',\n        text: input,\n      },\n      metadata: {\n        type: 'message',\n        conversationId: context?.conversation_id,\n      },\n    };\n\n    // Send to agent and capture response\n    const startTime = Date.now();\n    const response = await this.runtime.processMessage(message);\n    const endTime = Date.now();\n\n    return {\n      text: response.text,\n      thoughts: response.thoughts,\n      actions: response.actions,\n      timing: {\n        startTime,\n        endTime,\n        duration: endTime - startTime,\n      },\n      context: {\n        conversationId: context?.conversation_id,\n        messageId: message.id,\n      },\n    };\n  }\n}\n```\n\n### 3. Enhanced Execution Result\n```typescript\n// packages/cli/src/scenarios/providers.ts\nexport interface ExecutionResult {\n  exitCode: number;\n  stdout: string;\n  stderr: string;\n  files: Record<string, string>;\n  // New: Agent interaction results\n  agentResponse?: AgentResponse;\n  conversationHistory?: AgentResponse[];\n}\n```\n\n## Test Scenario\n\nCreate `agent-interaction-test.scenario.yaml`:\n```yaml\nname: \"Agent Interaction Test\"\ndescription: \"Tests natural language interaction with agents\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Implement Dark Mode\"\n          number: 123\n          state: \"open\"\n          labels: [\"feature\", \"ui\"]\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"2.5\"\n\nrun:\n  - name: \"Ask agent about roadmap\"\n    input: \"What new features are you planning to add?\"\n    agent_context:\n      conversation_id: \"roadmap-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify agent searched for issues\"\n      \n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n        description: \"Verify agent mentioned the mocked issue\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent provide a helpful and coherent response about new features?\"\n        expected: \"yes\"\n        description: \"Verify agent response quality\"\n\n  - name: \"Ask agent about wallet\"\n    input: \"What's my current wallet balance?\"\n    agent_context:\n      conversation_id: \"wallet-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify agent checked wallet balance\"\n      \n      - type: \"string_contains\"\n        value: \"2.5 ETH\"\n        description: \"Verify agent reported the correct balance\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent clearly explain the wallet balance information?\"\n        expected: \"yes\"\n\n  - name: \"Multi-turn conversation\"\n    input: \"Can you help me with both my wallet and roadmap?\"\n    agent_context:\n      conversation_id: \"multi-turn-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"ETH\"\n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent address both wallet and roadmap questions comprehensively?\"\n        expected: \"yes\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Single Turn**: Test basic agent interaction and response\n2. **Multi-turn**: Test conversation context across steps\n3. **Action Tracking**: Verify agent uses appropriate actions\n4. **Response Quality**: Test LLM judge evaluation of responses\n5. **Performance**: Test response timing and metrics\n6. **Error Handling**: Test agent behavior with invalid inputs\n\n## Dependencies\n\n- Requires plugin system integration (Ticket 1)\n- Builds on advanced mocking system (Ticket 2)\n- Integrates with existing evaluation engine\n- Depends on agent runtime message processing",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement natural language agent interaction and response validation",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5727,
              "node_id": "I_kwDOMT5cIs7Eng6F",
              "assignee": null,
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5727",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:49:34Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/labels{/name}",
              "updated_at": "2025-08-07T05:35:40Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3298691383,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726",
              "body": "# feat(scenarios): Implement conditional mocking and complex response structures\n\n## Description\n\nThis ticket enhances the mocking system to support conditional responses based on input parameters and complex response structures with metadata. This enables realistic testing of service interactions like GitHub API calls or EVM transactions with proper request/response matching.\n\n## Acceptance Criteria\n\n1. Mock definitions support `when` clauses for conditional responses\n2. `when` clauses can match on method arguments, input parameters, or request context\n3. Mock responses support complex nested structures with metadata (timestamps, IDs, etc.)\n4. Multiple mock responses can be defined for the same service/method with different conditions\n5. Mock system provides clear logging of which mock was triggered and why\n6. Mock responses can include realistic error conditions and edge cases\n7. Support for dynamic response generation based on input parameters\n8. Mock validation ensures `when` clauses are syntactically correct\n\n## Technical Approach\n\n### 1. Enhanced Mock Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst MockSchema = z.object({\n  service: z.string(),\n  method: z.string(),\n  when: z.object({\n    // Match on method arguments\n    args: z.array(z.any()).optional(),\n    // Match on specific argument values\n    input: z.record(z.any()).optional(),\n    // Match on request context\n    context: z.record(z.any()).optional(),\n    // Custom matching function\n    matcher: z.string().optional(), // JavaScript expression\n  }).optional(),\n  response: z.any(), // Can be function or static value\n  // For dynamic responses\n  responseFn: z.string().optional(), // JavaScript function\n  // Error simulation\n  error: z.object({\n    code: z.string(),\n    message: z.string(),\n  }).optional(),\n});\n```\n\n### 2. Mock Engine Implementation\n```typescript\n// packages/cli/src/scenarios/mock-engine.ts\nexport class MockEngine {\n  private mocks: MockDefinition[] = [];\n\n  addMock(mock: MockDefinition) {\n    this.mocks.push(mock);\n  }\n\n  async findMock(service: string, method: string, args: any[]): Promise<any> {\n    const candidates = this.mocks.filter(m => \n      m.service === service && m.method === method\n    );\n\n    for (const mock of candidates) {\n      if (await this.matchesCondition(mock, args)) {\n        this.logger.info(`Mock triggered: ${service}.${method} with condition: ${JSON.stringify(mock.when)}`);\n        return this.generateResponse(mock, args);\n      }\n    }\n\n    return null; // No mock found\n  }\n\n  private async matchesCondition(mock: MockDefinition, args: any[]): Promise<boolean> {\n    if (!mock.when) return true; // Default mock\n\n    // Match on arguments\n    if (mock.when.args) {\n      if (!this.deepEqual(args, mock.when.args)) return false;\n    }\n\n    // Match on input parameters\n    if (mock.when.input) {\n      const input = this.extractInputFromArgs(args);\n      if (!this.deepEqual(input, mock.when.input)) return false;\n    }\n\n    // Custom matcher function\n    if (mock.when.matcher) {\n      const matcherFn = new Function('args', 'input', mock.when.matcher);\n      return matcherFn(args, this.extractInputFromArgs(args));\n    }\n\n    return true;\n  }\n\n  private generateResponse(mock: MockDefinition, args: any[]): any {\n    if (mock.error) {\n      throw new Error(`${mock.error.code}: ${mock.error.message}`);\n    }\n\n    if (mock.responseFn) {\n      const responseFn = new Function('args', 'input', mock.responseFn);\n      return responseFn(args, this.extractInputFromArgs(args));\n    }\n\n    return mock.response;\n  }\n}\n```\n\n## Test Scenario\n\nCreate `advanced-mocking-test.scenario.yaml`:\n```yaml\nname: \"Advanced Mocking Test\"\ndescription: \"Tests conditional mocking and complex response structures\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    # Conditional GitHub issue search\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"bug\"\n        matcher: \"input.labels.includes('bug')\"\n      response:\n        - title: \"Critical Bug Found\"\n          number: 456\n          state: \"open\"\n          labels: [\"bug\", \"critical\"]\n          created_at: \"2024-07-15T10:00:00Z\"\n\n    # Conditional GitHub issue search - different response\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"feature\"\n        matcher: \"input.labels.includes('feature')\"\n      response:\n        - title: \"New Feature Request\"\n          number: 789\n          state: \"open\"\n          labels: [\"feature\", \"enhancement\"]\n          created_at: \"2024-07-15T11:00:00Z\"\n\n    # Dynamic EVM balance response\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      when:\n        args: [\"0x1234567890abcdef\"]\n      responseFn: |\n        return {\n          chain: \"ethereum\",\n          address: args[0],\n          balances: [\n            { symbol: \"ETH\", amount: \"1.23\" },\n            { symbol: \"USDC\", amount: \"1000.00\" }\n          ],\n          last_updated: new Date().toISOString()\n        }\n\n    # Error simulation\n    - service: \"github-service\"\n      method: \"readFile\"\n      when:\n        input:\n          path: \"/docs/nonexistent.md\"\n      error:\n        code: \"FILE_NOT_FOUND\"\n        message: \"File does not exist\"\n\nrun:\n  - name: \"Test conditional GitHub search\"\n    input: \"Search for issues with bug label\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"Critical Bug Found\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent correctly search for bug issues?\"\n        expected: \"yes\"\n\n  - name: \"Test dynamic EVM response\"\n    input: \"What's the balance for address 0x1234567890abcdef?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n      - type: \"string_contains\"\n        value: \"1000.00 USDC\"\n\n  - name: \"Test error handling\"\n    input: \"Read the file /docs/nonexistent.md\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.readFile\"\n      - type: \"string_contains\"\n        value: \"File does not exist\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Conditional Matching**: Test different responses based on input parameters\n2. **Dynamic Responses**: Test response generation based on arguments\n3. **Error Simulation**: Test error handling and reporting\n4. **Complex Structures**: Test nested response objects with metadata\n5. **Multiple Mocks**: Test multiple mocks for same service/method\n6. **Logging**: Verify mock selection is logged clearly\n\n## Dependencies\n\n- Builds on existing mock system in scenarios\n- Requires plugin system integration (Ticket 1)\n- Integrates with agent interaction testing (Ticket 3) ",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement conditional mocking and complex response structures",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5726,
              "node_id": "I_kwDOMT5cIs7Engk3",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5726",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:49:00Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/labels{/name}",
              "updated_at": "2025-08-07T05:32:53Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3298689704,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725",
              "body": "# feat(scenarios): Implement plugin specification and dynamic loading\n\n## Description\n\nThis ticket implements plugin specification in scenario YAML files, allowing scenarios to declare which plugins are required for testing. This enables testing of agent behaviors that depend on specific plugins like `@elizaos/plugin-github` or `@elizaos/plugin-evm`. The system will dynamically load specified plugins during scenario execution and make their actions, providers, and services available to the agent.\n\n## Acceptance Criteria\n\n1. Scenario YAML supports a `plugins` array at the root level with string plugin names\n2. The `initializeAgent()` function respects scenario plugin specifications and loads them via `startAgent()`\n3. Plugin loading follows the same dependency resolution and error handling as the main CLI\n4. Scenarios can specify both string plugin names (`@elizaos/plugin-github`) and direct plugin objects\n5. Plugin loading errors are clearly reported with actionable guidance\n6. Default plugins (bootstrap, sql) are automatically included unless explicitly excluded via `exclude_defaults: true`\n7. Plugin conflicts are detected and reported during scenario validation\n8. Plugin initialization errors don't crash the scenario but are reported in results\n\n## Technical Approach\n\n### 1. Update Scenario Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst ScenarioSchema = z.object({\n  name: z.string(),\n  description: z.string(),\n  plugins: z.array(z.string()).optional(), // e.g., [\"@elizaos/plugin-github\"]\n  exclude_defaults: z.boolean().optional(), // exclude bootstrap/sql\n  environment: EnvironmentSchema,\n  setup: SetupSchema.optional(),\n  run: z.array(RunStepSchema),\n  judgment: JudgmentSchema,\n});\n```\n\n### 2. Enhance Runtime Factory\n```typescript\n// packages/cli/src/scenarios/runtime-factory.ts\nexport async function initializeAgent(scenario: Scenario): Promise<IAgentRuntime> {\n  const character: Character = {\n    name: 'scenario-runner',\n    id: stringToUuid('scenario-runner'),\n    bio: 'A minimal character for running scenarios',\n    plugins: scenario.plugins || []\n  };\n\n  // Load default plugins unless excluded\n  if (!scenario.exclude_defaults) {\n    character.plugins.push('@elizaos/plugin-bootstrap', '@elizaos/plugin-sql');\n  }\n\n  const runtime = await startAgent(\n    encryptedCharacter(character),\n    server,\n    undefined,\n    character.plugins,\n    { isTestMode: true }\n  );\n\n  return runtime;\n}\n```\n\n### 3. Plugin Validation\n```typescript\n// packages/cli/src/scenarios/plugin-validator.ts\nexport async function validateScenarioPlugins(scenario: Scenario): Promise<ValidationResult[]> {\n  const results: ValidationResult[] = [];\n  \n  for (const pluginName of scenario.plugins || []) {\n    try {\n      const plugin = await loadAndPreparePlugin(pluginName);\n      if (!plugin) {\n        results.push({\n          type: 'error',\n          message: `Plugin '${pluginName}' could not be loaded`,\n          suggestion: 'Check if plugin is installed or built correctly'\n        });\n      }\n    } catch (error) {\n      results.push({\n        type: 'error', \n        message: `Failed to validate plugin '${pluginName}': ${error.message}`,\n        suggestion: 'Verify plugin dependencies and configuration'\n      });\n    }\n  }\n  \n  return results;\n}\n```\n\n## Test Scenario\n\nCreate `plugin-integration-test.scenario.yaml`:\n```yaml\nname: \"Plugin Integration Test\"\ndescription: \"Tests loading and using plugins specified in scenario YAML\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Test Issue\"\n          number: 123\n          state: \"open\"\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"1.23\"\n\nrun:\n  - name: \"Test GitHub plugin actions\"\n    input: \"Search for issues with label 'bug'\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify GitHub plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"Test Issue\"\n        description: \"Verify agent found the mocked issue\"\n\n  - name: \"Test EVM plugin actions\"\n    input: \"What's my wallet balance?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify EVM plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n        description: \"Verify agent reported the mocked balance\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Plugin Loading Test**: Verify plugins load without errors\n2. **Action Availability Test**: Confirm agent can use plugin actions\n3. **Error Handling Test**: Test with non-existent plugin\n4. **Default Plugin Test**: Verify bootstrap/sql are included by default\n5. **Exclusion Test**: Test `exclude_defaults: true` behavior\n\n## Dependencies\n\n- Fixes the `startAgent` hanging issue (#5719) to enable plugin testing\n- Builds on existing `loadAndPreparePlugin` functionality\n- Integrates with current scenario execution flow ",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement plugin specification and dynamic loading",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5725,
              "node_id": "I_kwDOMT5cIs7EngKo",
              "assignee": null,
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5725",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:48:08Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/labels{/name}",
              "updated_at": "2025-08-07T05:37:32Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            }
          ],
          "issueCount": 10,
          "repository": "elizaOS/eliza"
        },
        "success": true
      },
      "actionStatus": "completed"
    },
    "entityId": "0137f0e4-d2e2-0ee6-82e5-af58b88ec91b",
    "agentId": "0137f0e4-d2e2-0ee6-82e5-af58b88ec91b",
    "roomId": "56fc2299-8e74-01df-a99d-278f7269c14a",
    "unique": true,
    "metadata": {
      "type": "action_result",
      "runId": "52585cc8-c9ed-4831-90d2-f28da41e07b9",
      "actionId": "7e58a66c-f4f4-43fa-98ef-a84362c6db69",
      "actionName": "LIST_GITHUB_ISSUES",
      "totalSteps": 2,
      "currentStep": 2
    }
  },
  {
    "id": "d45bf543-8940-445d-8574-c1121e2ea4f3",
    "type": "messages",
    "createdAt": 1754969094490,
    "content": {
      "text": "Generated reply: Let me check the open issues for the elizaOS/eliza repository. I'll have that information for you shortly.",
      "type": "action_result",
      "runId": "52585cc8-c9ed-4831-90d2-f28da41e07b9",
      "source": "action",
      "planStep": "1/2",
      "actionName": "REPLY",
      "planThought": "I will list the open issues for the elizaOS/eliza repository as requested by the user.",
      "actionResult": {
        "data": {
          "thought": "Preparing to list the open issues for the elizaOS/eliza repository.",
          "response": {
            "text": "Let me check the open issues for the elizaOS/eliza repository. I'll have that information for you shortly.",
            "actions": [
              "REPLY"
            ],
            "thought": "Preparing to list the open issues for the elizaOS/eliza repository."
          },
          "actionName": "REPLY",
          "messageGenerated": true
        },
        "text": "Generated reply: Let me check the open issues for the elizaOS/eliza repository. I'll have that information for you shortly.",
        "values": {
          "success": true,
          "lastReply": "Let me check the open issues for the elizaOS/eliza repository. I'll have that information for you shortly.",
          "responded": true,
          "lastReplyTime": 1754969094490,
          "thoughtProcess": "Preparing to list the open issues for the elizaOS/eliza repository."
        },
        "success": true
      },
      "actionStatus": "completed"
    },
    "entityId": "0137f0e4-d2e2-0ee6-82e5-af58b88ec91b",
    "agentId": "0137f0e4-d2e2-0ee6-82e5-af58b88ec91b",
    "roomId": "56fc2299-8e74-01df-a99d-278f7269c14a",
    "unique": true,
    "metadata": {
      "type": "action_result",
      "runId": "52585cc8-c9ed-4831-90d2-f28da41e07b9",
      "actionId": "d45bf543-8940-445d-8574-c1121e2ea4f3",
      "actionName": "REPLY",
      "totalSteps": 2,
      "currentStep": 1
    }
  },
  {
    "id": "c2e317c2-20b1-499c-b962-6c08a4124e08",
    "type": "messages",
    "createdAt": 1754968917518,
    "content": {
      "text": "Open issues for elizaOS/eliza (10 shown):\n‚Ä¢ #5754: Critical: Plugin Publishing Fails with False Success Reports (open) [bug]\n‚Ä¢ #5749: Implement Runtime Method Mocking for Deterministic Agent Testing (open) [enhancement, testing, Reality Spiral]\n‚Ä¢ #5747: Fixing bugs in eliza-cloud (open)\n‚Ä¢ #5738: üêõ Build failure in @elizaos/core causing bun run clean to fail (open) [bug]\n‚Ä¢ #5734: Eliza CLI failed to build project (open) [bug]\n‚Ä¢ #5729: Update README.md to fix error (open)\n‚Ä¢ #5728: feat: ability to cancel current run before any calls to LLM are made (open)\n‚Ä¢ #5727: feat(scenarios): Implement natural language agent interaction and response validation (open) [enhancement, Reality Spiral]\n‚Ä¢ #5726: feat(scenarios): Implement conditional mocking and complex response structures (open) [enhancement, Reality Spiral]\n‚Ä¢ #5725: feat(scenarios): Implement plugin specification and dynamic loading (open) [enhancement, Reality Spiral]",
      "type": "action_result",
      "runId": "e4407751-9fee-4551-adcd-dc61930116ba",
      "source": "action",
      "planStep": "2/2",
      "actionName": "LIST_GITHUB_ISSUES",
      "planThought": "I need to list the open issues for the elizaOS/eliza repository as requested by the user.",
      "actionResult": {
        "data": {
          "github": {
            "issues": {
              "elizaOS/eliza#5725": {
                "id": 3298689704,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725",
                "body": "# feat(scenarios): Implement plugin specification and dynamic loading\n\n## Description\n\nThis ticket implements plugin specification in scenario YAML files, allowing scenarios to declare which plugins are required for testing. This enables testing of agent behaviors that depend on specific plugins like `@elizaos/plugin-github` or `@elizaos/plugin-evm`. The system will dynamically load specified plugins during scenario execution and make their actions, providers, and services available to the agent.\n\n## Acceptance Criteria\n\n1. Scenario YAML supports a `plugins` array at the root level with string plugin names\n2. The `initializeAgent()` function respects scenario plugin specifications and loads them via `startAgent()`\n3. Plugin loading follows the same dependency resolution and error handling as the main CLI\n4. Scenarios can specify both string plugin names (`@elizaos/plugin-github`) and direct plugin objects\n5. Plugin loading errors are clearly reported with actionable guidance\n6. Default plugins (bootstrap, sql) are automatically included unless explicitly excluded via `exclude_defaults: true`\n7. Plugin conflicts are detected and reported during scenario validation\n8. Plugin initialization errors don't crash the scenario but are reported in results\n\n## Technical Approach\n\n### 1. Update Scenario Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst ScenarioSchema = z.object({\n  name: z.string(),\n  description: z.string(),\n  plugins: z.array(z.string()).optional(), // e.g., [\"@elizaos/plugin-github\"]\n  exclude_defaults: z.boolean().optional(), // exclude bootstrap/sql\n  environment: EnvironmentSchema,\n  setup: SetupSchema.optional(),\n  run: z.array(RunStepSchema),\n  judgment: JudgmentSchema,\n});\n```\n\n### 2. Enhance Runtime Factory\n```typescript\n// packages/cli/src/scenarios/runtime-factory.ts\nexport async function initializeAgent(scenario: Scenario): Promise<IAgentRuntime> {\n  const character: Character = {\n    name: 'scenario-runner',\n    id: stringToUuid('scenario-runner'),\n    bio: 'A minimal character for running scenarios',\n    plugins: scenario.plugins || []\n  };\n\n  // Load default plugins unless excluded\n  if (!scenario.exclude_defaults) {\n    character.plugins.push('@elizaos/plugin-bootstrap', '@elizaos/plugin-sql');\n  }\n\n  const runtime = await startAgent(\n    encryptedCharacter(character),\n    server,\n    undefined,\n    character.plugins,\n    { isTestMode: true }\n  );\n\n  return runtime;\n}\n```\n\n### 3. Plugin Validation\n```typescript\n// packages/cli/src/scenarios/plugin-validator.ts\nexport async function validateScenarioPlugins(scenario: Scenario): Promise<ValidationResult[]> {\n  const results: ValidationResult[] = [];\n  \n  for (const pluginName of scenario.plugins || []) {\n    try {\n      const plugin = await loadAndPreparePlugin(pluginName);\n      if (!plugin) {\n        results.push({\n          type: 'error',\n          message: `Plugin '${pluginName}' could not be loaded`,\n          suggestion: 'Check if plugin is installed or built correctly'\n        });\n      }\n    } catch (error) {\n      results.push({\n        type: 'error', \n        message: `Failed to validate plugin '${pluginName}': ${error.message}`,\n        suggestion: 'Verify plugin dependencies and configuration'\n      });\n    }\n  }\n  \n  return results;\n}\n```\n\n## Test Scenario\n\nCreate `plugin-integration-test.scenario.yaml`:\n```yaml\nname: \"Plugin Integration Test\"\ndescription: \"Tests loading and using plugins specified in scenario YAML\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Test Issue\"\n          number: 123\n          state: \"open\"\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"1.23\"\n\nrun:\n  - name: \"Test GitHub plugin actions\"\n    input: \"Search for issues with label 'bug'\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify GitHub plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"Test Issue\"\n        description: \"Verify agent found the mocked issue\"\n\n  - name: \"Test EVM plugin actions\"\n    input: \"What's my wallet balance?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify EVM plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n        description: \"Verify agent reported the mocked balance\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Plugin Loading Test**: Verify plugins load without errors\n2. **Action Availability Test**: Confirm agent can use plugin actions\n3. **Error Handling Test**: Test with non-existent plugin\n4. **Default Plugin Test**: Verify bootstrap/sql are included by default\n5. **Exclusion Test**: Test `exclude_defaults: true` behavior\n\n## Dependencies\n\n- Fixes the `startAgent` hanging issue (#5719) to enable plugin testing\n- Builds on existing `loadAndPreparePlugin` functionality\n- Integrates with current scenario execution flow ",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement plugin specification and dynamic loading",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5725,
                "node_id": "I_kwDOMT5cIs7EngKo",
                "assignee": null,
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5725",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:48:08Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/labels{/name}",
                "updated_at": "2025-08-07T05:37:32Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5726": {
                "id": 3298691383,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726",
                "body": "# feat(scenarios): Implement conditional mocking and complex response structures\n\n## Description\n\nThis ticket enhances the mocking system to support conditional responses based on input parameters and complex response structures with metadata. This enables realistic testing of service interactions like GitHub API calls or EVM transactions with proper request/response matching.\n\n## Acceptance Criteria\n\n1. Mock definitions support `when` clauses for conditional responses\n2. `when` clauses can match on method arguments, input parameters, or request context\n3. Mock responses support complex nested structures with metadata (timestamps, IDs, etc.)\n4. Multiple mock responses can be defined for the same service/method with different conditions\n5. Mock system provides clear logging of which mock was triggered and why\n6. Mock responses can include realistic error conditions and edge cases\n7. Support for dynamic response generation based on input parameters\n8. Mock validation ensures `when` clauses are syntactically correct\n\n## Technical Approach\n\n### 1. Enhanced Mock Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst MockSchema = z.object({\n  service: z.string(),\n  method: z.string(),\n  when: z.object({\n    // Match on method arguments\n    args: z.array(z.any()).optional(),\n    // Match on specific argument values\n    input: z.record(z.any()).optional(),\n    // Match on request context\n    context: z.record(z.any()).optional(),\n    // Custom matching function\n    matcher: z.string().optional(), // JavaScript expression\n  }).optional(),\n  response: z.any(), // Can be function or static value\n  // For dynamic responses\n  responseFn: z.string().optional(), // JavaScript function\n  // Error simulation\n  error: z.object({\n    code: z.string(),\n    message: z.string(),\n  }).optional(),\n});\n```\n\n### 2. Mock Engine Implementation\n```typescript\n// packages/cli/src/scenarios/mock-engine.ts\nexport class MockEngine {\n  private mocks: MockDefinition[] = [];\n\n  addMock(mock: MockDefinition) {\n    this.mocks.push(mock);\n  }\n\n  async findMock(service: string, method: string, args: any[]): Promise<any> {\n    const candidates = this.mocks.filter(m => \n      m.service === service && m.method === method\n    );\n\n    for (const mock of candidates) {\n      if (await this.matchesCondition(mock, args)) {\n        this.logger.info(`Mock triggered: ${service}.${method} with condition: ${JSON.stringify(mock.when)}`);\n        return this.generateResponse(mock, args);\n      }\n    }\n\n    return null; // No mock found\n  }\n\n  private async matchesCondition(mock: MockDefinition, args: any[]): Promise<boolean> {\n    if (!mock.when) return true; // Default mock\n\n    // Match on arguments\n    if (mock.when.args) {\n      if (!this.deepEqual(args, mock.when.args)) return false;\n    }\n\n    // Match on input parameters\n    if (mock.when.input) {\n      const input = this.extractInputFromArgs(args);\n      if (!this.deepEqual(input, mock.when.input)) return false;\n    }\n\n    // Custom matcher function\n    if (mock.when.matcher) {\n      const matcherFn = new Function('args', 'input', mock.when.matcher);\n      return matcherFn(args, this.extractInputFromArgs(args));\n    }\n\n    return true;\n  }\n\n  private generateResponse(mock: MockDefinition, args: any[]): any {\n    if (mock.error) {\n      throw new Error(`${mock.error.code}: ${mock.error.message}`);\n    }\n\n    if (mock.responseFn) {\n      const responseFn = new Function('args', 'input', mock.responseFn);\n      return responseFn(args, this.extractInputFromArgs(args));\n    }\n\n    return mock.response;\n  }\n}\n```\n\n## Test Scenario\n\nCreate `advanced-mocking-test.scenario.yaml`:\n```yaml\nname: \"Advanced Mocking Test\"\ndescription: \"Tests conditional mocking and complex response structures\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    # Conditional GitHub issue search\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"bug\"\n        matcher: \"input.labels.includes('bug')\"\n      response:\n        - title: \"Critical Bug Found\"\n          number: 456\n          state: \"open\"\n          labels: [\"bug\", \"critical\"]\n          created_at: \"2024-07-15T10:00:00Z\"\n\n    # Conditional GitHub issue search - different response\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"feature\"\n        matcher: \"input.labels.includes('feature')\"\n      response:\n        - title: \"New Feature Request\"\n          number: 789\n          state: \"open\"\n          labels: [\"feature\", \"enhancement\"]\n          created_at: \"2024-07-15T11:00:00Z\"\n\n    # Dynamic EVM balance response\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      when:\n        args: [\"0x1234567890abcdef\"]\n      responseFn: |\n        return {\n          chain: \"ethereum\",\n          address: args[0],\n          balances: [\n            { symbol: \"ETH\", amount: \"1.23\" },\n            { symbol: \"USDC\", amount: \"1000.00\" }\n          ],\n          last_updated: new Date().toISOString()\n        }\n\n    # Error simulation\n    - service: \"github-service\"\n      method: \"readFile\"\n      when:\n        input:\n          path: \"/docs/nonexistent.md\"\n      error:\n        code: \"FILE_NOT_FOUND\"\n        message: \"File does not exist\"\n\nrun:\n  - name: \"Test conditional GitHub search\"\n    input: \"Search for issues with bug label\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"Critical Bug Found\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent correctly search for bug issues?\"\n        expected: \"yes\"\n\n  - name: \"Test dynamic EVM response\"\n    input: \"What's the balance for address 0x1234567890abcdef?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n      - type: \"string_contains\"\n        value: \"1000.00 USDC\"\n\n  - name: \"Test error handling\"\n    input: \"Read the file /docs/nonexistent.md\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.readFile\"\n      - type: \"string_contains\"\n        value: \"File does not exist\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Conditional Matching**: Test different responses based on input parameters\n2. **Dynamic Responses**: Test response generation based on arguments\n3. **Error Simulation**: Test error handling and reporting\n4. **Complex Structures**: Test nested response objects with metadata\n5. **Multiple Mocks**: Test multiple mocks for same service/method\n6. **Logging**: Verify mock selection is logged clearly\n\n## Dependencies\n\n- Builds on existing mock system in scenarios\n- Requires plugin system integration (Ticket 1)\n- Integrates with agent interaction testing (Ticket 3) ",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement conditional mocking and complex response structures",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5726,
                "node_id": "I_kwDOMT5cIs7Engk3",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5726",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:49:00Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/labels{/name}",
                "updated_at": "2025-08-07T05:32:53Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5727": {
                "id": 3298692741,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727",
                "body": "# feat(scenarios): Implement natural language agent interaction and response validation\n\n## Description\n\nThis ticket enables scenarios to test agent behavior through natural language interactions rather than direct code execution. This allows testing of agent reasoning, decision-making, and response generation in realistic conversation contexts with proper evaluation of agent responses.\n\n## Acceptance Criteria\n\n1. Scenario `run` blocks support `input` field for natural language prompts to agents\n2. Agent responses are captured and available for evaluation (text, thoughts, actions)\n3. Evaluators can access both agent response text and execution context\n4. Support for multi-turn conversations in scenarios\n5. Agent responses include thought process and action decisions\n6. Integration with existing evaluation engine for response validation\n7. Support for conversation context across multiple steps\n8. Agent response timing and performance metrics\n\n## Technical Approach\n\n### 1. Enhanced Run Step Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst RunStepSchema = z.object({\n  name: z.string().optional(),\n  // Natural language input to agent\n  input: z.string().optional(),\n  // Direct code execution (existing)\n  lang: z.string().optional(),\n  code: z.string().optional(),\n  // Agent interaction specific\n  agent_context: z.object({\n    conversation_id: z.string().optional(),\n    user_id: z.string().optional(),\n    room_id: z.string().optional(),\n  }).optional(),\n  evaluations: z.array(EvaluationSchema),\n});\n```\n\n### 2. Agent Interaction Engine\n```typescript\n// packages/cli/src/scenarios/agent-interaction.ts\nexport class AgentInteractionEngine {\n  constructor(private runtime: IAgentRuntime) {}\n\n  async interactWithAgent(input: string, context?: AgentContext): Promise<AgentResponse> {\n    // Create message for agent\n    const message: Memory = {\n      entityId: context?.user_id || 'scenario-user',\n      roomId: context?.room_id || 'scenario-room',\n      content: {\n        type: 'text',\n        text: input,\n      },\n      metadata: {\n        type: 'message',\n        conversationId: context?.conversation_id,\n      },\n    };\n\n    // Send to agent and capture response\n    const startTime = Date.now();\n    const response = await this.runtime.processMessage(message);\n    const endTime = Date.now();\n\n    return {\n      text: response.text,\n      thoughts: response.thoughts,\n      actions: response.actions,\n      timing: {\n        startTime,\n        endTime,\n        duration: endTime - startTime,\n      },\n      context: {\n        conversationId: context?.conversation_id,\n        messageId: message.id,\n      },\n    };\n  }\n}\n```\n\n### 3. Enhanced Execution Result\n```typescript\n// packages/cli/src/scenarios/providers.ts\nexport interface ExecutionResult {\n  exitCode: number;\n  stdout: string;\n  stderr: string;\n  files: Record<string, string>;\n  // New: Agent interaction results\n  agentResponse?: AgentResponse;\n  conversationHistory?: AgentResponse[];\n}\n```\n\n## Test Scenario\n\nCreate `agent-interaction-test.scenario.yaml`:\n```yaml\nname: \"Agent Interaction Test\"\ndescription: \"Tests natural language interaction with agents\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Implement Dark Mode\"\n          number: 123\n          state: \"open\"\n          labels: [\"feature\", \"ui\"]\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"2.5\"\n\nrun:\n  - name: \"Ask agent about roadmap\"\n    input: \"What new features are you planning to add?\"\n    agent_context:\n      conversation_id: \"roadmap-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify agent searched for issues\"\n      \n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n        description: \"Verify agent mentioned the mocked issue\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent provide a helpful and coherent response about new features?\"\n        expected: \"yes\"\n        description: \"Verify agent response quality\"\n\n  - name: \"Ask agent about wallet\"\n    input: \"What's my current wallet balance?\"\n    agent_context:\n      conversation_id: \"wallet-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify agent checked wallet balance\"\n      \n      - type: \"string_contains\"\n        value: \"2.5 ETH\"\n        description: \"Verify agent reported the correct balance\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent clearly explain the wallet balance information?\"\n        expected: \"yes\"\n\n  - name: \"Multi-turn conversation\"\n    input: \"Can you help me with both my wallet and roadmap?\"\n    agent_context:\n      conversation_id: \"multi-turn-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"ETH\"\n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent address both wallet and roadmap questions comprehensively?\"\n        expected: \"yes\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Single Turn**: Test basic agent interaction and response\n2. **Multi-turn**: Test conversation context across steps\n3. **Action Tracking**: Verify agent uses appropriate actions\n4. **Response Quality**: Test LLM judge evaluation of responses\n5. **Performance**: Test response timing and metrics\n6. **Error Handling**: Test agent behavior with invalid inputs\n\n## Dependencies\n\n- Requires plugin system integration (Ticket 1)\n- Builds on advanced mocking system (Ticket 2)\n- Integrates with existing evaluation engine\n- Depends on agent runtime message processing",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement natural language agent interaction and response validation",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5727,
                "node_id": "I_kwDOMT5cIs7Eng6F",
                "assignee": null,
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5727",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:49:34Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/labels{/name}",
                "updated_at": "2025-08-07T05:35:40Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5728": {
                "id": 3299322983,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728",
                "body": "# Background\r\n\r\n## What does this PR do?\r\n\r\nIntroduce entity for cancelling runs `CancelRunSignal`\r\n\r\n## Why are we doing this? Any context or related work?\r\n\r\n- Calls to LLMs usually cost some credits\r\n- When we receive the `RUN_STARTED` event we can check current entity and end run to prevent credits spending\r\n\r\n# Documentation changes needed?\r\n\r\n## Methods\r\n\r\n- `static getSignal(runId: UUID)` - get signal by runId or create if null\r\n- `static clear(runId: UUID)` - clear signal from map\r\n- `cancel(content?: Content)` - cancel current run and and send `content` as a response to user\r\n\r\n## Example\r\n\r\n```typescript\r\nimport { Content, EventType, Plugin } from \"@elizaos/core\";\r\nimport { CancelRunSignal } from \"@elizaos/plugin-bootstrap\";\r\n\r\n// consider we have a service to determine eligibility for entity\r\ninterface EligibilityService {\r\n  check(entityId: UUID): Promise<{ result: boolean, reason?: Content }>\r\n}\r\n\r\nconst plugin: Plugin = {\r\n...\r\n  events: {\r\n    [EventType.RUN_STARTED]: ({ entityId, runId, runtime }) => {\r\n      const service = runtime.getService<EligibilityService>(\"USER_MANAGEMENT\");\r\n      const { result, reason } = await service.check(entityId);\r\n      \r\n      if (!result) {\r\n        const signal = CancelRunSignal.getSignal(runId);\r\n        signal.cancel(reason);\r\n      }\r\n    },\r\n    ...\r\n  },\r\n  ...\r\n}\r\n\r\nexport default Plugin;\r\n```\r\n\r\n## Discord username\r\n\r\nalexd000\r\n\r\n",
                "type": null,
                "user": {
                  "id": 82507604,
                  "url": "https://api.github.com/users/alex-nax",
                  "type": "User",
                  "login": "alex-nax",
                  "node_id": "MDQ6VXNlcjgyNTA3NjA0",
                  "html_url": "https://github.com/alex-nax",
                  "gists_url": "https://api.github.com/users/alex-nax/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/alex-nax/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/82507604?v=4",
                  "events_url": "https://api.github.com/users/alex-nax/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/alex-nax/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/alex-nax/followers",
                  "following_url": "https://api.github.com/users/alex-nax/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/alex-nax/orgs",
                  "subscriptions_url": "https://api.github.com/users/alex-nax/subscriptions",
                  "received_events_url": "https://api.github.com/users/alex-nax/received_events"
                },
                "draft": false,
                "state": "open",
                "title": "feat: ability to cancel current run before any calls to LLM are made",
                "labels": [],
                "locked": false,
                "number": 5728,
                "node_id": "PR_kwDOMT5cIs6ihriD",
                "assignee": null,
                "comments": 3,
                "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T07:19:35Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/labels{/name}",
                "updated_at": "2025-08-07T07:22:05Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/comments",
                "pull_request": {
                  "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5728",
                  "diff_url": "https://github.com/elizaOS/eliza/pull/5728.diff",
                  "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                  "merged_at": null,
                  "patch_url": "https://github.com/elizaOS/eliza/pull/5728.patch"
                },
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "FIRST_TIME_CONTRIBUTOR",
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5729": {
                "id": 3299481897,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729",
                "body": "# Relates to\r\n\r\nN/A (Documentation improvement, not tied to a specific issue or ticket)\r\n\r\n# Risks\r\n\r\nLow.  \r\nThis change only updates documentation and does not affect any code or functionality.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR updates the elizaos README to include a fix for installation errors that may occur due to permission issues. It adds a note suggesting the use of sudo if users encounter a \"Permission denied\" or \"InstallFailed\" error when running the `elizaos create my-agent` command.\r\n\r\n## What kind of change is this?\r\n\r\nImprovements (misc. changes to existing features)  \r\nDocumentation update\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes require a change to the project documentation.  \r\nI have updated the documentation accordingly.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\nStart by reviewing the changes in the README.md file, specifically the section on creating a new project.\r\n\r\n## Detailed testing steps\r\n\r\n- Open the updated README.md.\r\n- Review the new instructions under \"Create Your First Project.\"\r\n- Confirm that the added note about using `sudo` is clear and helpful for users who encounter permission errors.",
                "type": null,
                "user": {
                  "id": 32749185,
                  "url": "https://api.github.com/users/mandatedisrael",
                  "type": "User",
                  "login": "mandatedisrael",
                  "node_id": "MDQ6VXNlcjMyNzQ5MTg1",
                  "html_url": "https://github.com/mandatedisrael",
                  "gists_url": "https://api.github.com/users/mandatedisrael/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/mandatedisrael/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/32749185?v=4",
                  "events_url": "https://api.github.com/users/mandatedisrael/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/mandatedisrael/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/mandatedisrael/followers",
                  "following_url": "https://api.github.com/users/mandatedisrael/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/mandatedisrael/orgs",
                  "subscriptions_url": "https://api.github.com/users/mandatedisrael/subscriptions",
                  "received_events_url": "https://api.github.com/users/mandatedisrael/received_events"
                },
                "draft": false,
                "state": "open",
                "title": "Update README.md to fix error",
                "labels": [],
                "locked": false,
                "number": 5729,
                "node_id": "PR_kwDOMT5cIs6iiNWN",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T08:10:12Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/labels{/name}",
                "updated_at": "2025-08-07T08:10:24Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/comments",
                "pull_request": {
                  "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5729",
                  "diff_url": "https://github.com/elizaOS/eliza/pull/5729.diff",
                  "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                  "merged_at": null,
                  "patch_url": "https://github.com/elizaOS/eliza/pull/5729.patch"
                },
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "FIRST_TIME_CONTRIBUTOR",
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5734": {
                "id": 3301116813,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734",
                "body": "**Describe the bug**\n\nOn project creation, ElizaOS CLI fails with the following error:\n```\n‚óá  Failed to build project\nstdout: src/index.ts(7,25): error TS2345: Argument of type 'string' is not assignable to parameter of type 'undefined'.\nstderr: $ tsc --noEmit && vite build && tsup\n```\n\n**To Reproduce**\n\n- Install ElizaOS through `bun`\n```\nbun i -g @elizaos/cli\n```\n- Create new ElizaOS project\n```\nelizaos create abcde\n```\n\n**Expected behavior**\n\nProject built successfully\n\n**Screenshots**\n\n<img width=\"1095\" height=\"572\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/967dd6a2-0d70-4e2e-8019-85a2eab5f225\" />\n\n**Additional context**\n\nElizaOS CLI version: `1.3.2`\n",
                "type": null,
                "user": {
                  "id": 74447600,
                  "url": "https://api.github.com/users/Kemystra",
                  "type": "User",
                  "login": "Kemystra",
                  "node_id": "MDQ6VXNlcjc0NDQ3NjAw",
                  "html_url": "https://github.com/Kemystra",
                  "gists_url": "https://api.github.com/users/Kemystra/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/Kemystra/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/74447600?v=4",
                  "events_url": "https://api.github.com/users/Kemystra/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/Kemystra/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/Kemystra/followers",
                  "following_url": "https://api.github.com/users/Kemystra/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/Kemystra/orgs",
                  "subscriptions_url": "https://api.github.com/users/Kemystra/subscriptions",
                  "received_events_url": "https://api.github.com/users/Kemystra/received_events"
                },
                "state": "open",
                "title": "Eliza CLI failed to build project",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5734,
                "node_id": "I_kwDOMT5cIs7EwwuN",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5734",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T16:14:00Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/labels{/name}",
                "updated_at": "2025-08-08T19:43:52Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "NONE",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5738": {
                "id": 3302237103,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738",
                "body": "## Description\n\nThe `bun run clean` command is failing due to TypeScript errors in `@elizaos/core` package during the DTS (type definition) build phase.\n\n## Error Details\n\n### Build Process\n```\n‚Ä¢ Running build in 17 packages\n‚Ä¢ Remote caching disabled\n@elizaos/config:build: cache miss\n@elizaos/autodoc:build: cache miss\n@elizaos/core:build: cache miss\n```\n\n### TypeScript Errors in @elizaos/core/src/utils.ts\n1. Line 218: `error TS2345: Argument of type '`${string}-${string}-${string}-${string}-${string}`' is not assignable to parameter of type 'never'.`\n2. Line 366: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n3. Line 409: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n4. Line 536: `error TS2345: Argument of type '{ numberOfChunks: number; averageChunkSize: number; }' is not assignable to parameter of type 'never'.`\n\n### Impact\n- Blocks `bun run clean` command\n- Prevents successful build of `@elizaos/core`\n- Affects dependent packages in the monorepo\n\n## Steps to Reproduce\n1. Run `bun run clean`\n2. Observe build failure in `@elizaos/core`\n3. Build fails with TypeScript errors during DTS generation\n\n## Expected Behavior\n- `bun run clean` should complete successfully\n- `@elizaos/core` should build without TypeScript errors\n- Type definitions should be generated correctly\n\n## Suggested Fix\n\nThe errors suggest type mismatches in `utils.ts`. Need to:\n1. Review type definitions in affected lines\n2. Update type assertions or generic constraints\n3. Ensure string template literal types are properly handled\n4. Fix object type assignments\n\n### Files to Update\n- `packages/core/src/utils.ts`\n\n## Priority\n**HIGH** - This is blocking clean builds and potentially affecting development workflow.",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "üêõ Build failure in @elizaos/core causing bun run clean to fail",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5738,
                "node_id": "I_kwDOMT5cIs7E1COv",
                "assignee": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5738",
                "assignees": [
                  {
                    "id": 15067321,
                    "url": "https://api.github.com/users/monilpat",
                    "type": "User",
                    "login": "monilpat",
                    "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                    "html_url": "https://github.com/monilpat",
                    "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/monilpat/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                    "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/monilpat/followers",
                    "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/monilpat/orgs",
                    "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                    "received_events_url": "https://api.github.com/users/monilpat/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-08T00:26:11Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/labels{/name}",
                "updated_at": "2025-08-11T14:56:01Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5747": {
                "id": 3304516859,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747",
                "body": null,
                "type": null,
                "user": {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                },
                "state": "open",
                "title": "Fixing bugs in eliza-cloud",
                "labels": [],
                "locked": false,
                "number": 5747,
                "node_id": "I_kwDOMT5cIs7E9uz7",
                "assignee": {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                },
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5747",
                "assignees": [
                  {
                    "id": 48334430,
                    "url": "https://api.github.com/users/samarth30",
                    "type": "User",
                    "login": "samarth30",
                    "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                    "html_url": "https://github.com/samarth30",
                    "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/samarth30/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                    "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/samarth30/followers",
                    "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/samarth30/orgs",
                    "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                    "received_events_url": "https://api.github.com/users/samarth30/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-08T16:01:56Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/labels{/name}",
                "updated_at": "2025-08-08T19:02:49Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "MEMBER",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": {
                  "id": 20150,
                  "name": "Linear",
                  "slug": "linear",
                  "owner": {
                    "id": 46686594,
                    "url": "https://api.github.com/users/linear",
                    "type": "Organization",
                    "login": "linear",
                    "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ2Njg2NTk0",
                    "html_url": "https://github.com/linear",
                    "gists_url": "https://api.github.com/users/linear/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/linear/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/46686594?v=4",
                    "events_url": "https://api.github.com/users/linear/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/linear/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/linear/followers",
                    "following_url": "https://api.github.com/users/linear/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/linear/orgs",
                    "subscriptions_url": "https://api.github.com/users/linear/subscriptions",
                    "received_events_url": "https://api.github.com/users/linear/received_events"
                  },
                  "events": [
                    "check_suite",
                    "issues",
                    "issue_comment",
                    "pull_request",
                    "pull_request_review",
                    "repository",
                    "sub_issues"
                  ],
                  "node_id": "MDM6QXBwMjAxNTA=",
                  "html_url": "https://github.com/apps/linear",
                  "client_id": "Iv1.085d682ea245c945",
                  "created_at": "2018-11-02T18:07:23Z",
                  "updated_at": "2025-02-07T14:59:56Z",
                  "description": "",
                  "permissions": {
                    "checks": "read",
                    "issues": "write",
                    "metadata": "read",
                    "pull_requests": "write"
                  },
                  "external_url": "https://linear.app"
                }
              },
              "elizaOS/eliza#5749": {
                "id": 3308102900,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749",
                "body": "### Problem Statement\nCurrently, ElizaOS scenario testing lacks the ability to mock internal agent runtime calls (particularly LLM interactions) when testing via the API client. This makes it difficult to create deterministic tests for agent behavior and workflows.\n\n### Current Limitations\n- Global function mocks only work for code executed in the same process\n- No way to intercept `runtime.useModel` calls from the bootstrap plugin\n- Agent behavior is non-deterministic due to real LLM calls\n- Difficult to test specific agent decision paths and responses\n\n### Why Different Approach Was Needed\n\nThe existing mocking system was designed for **code execution environments** (E2B sandbox and local `node -e` processes), where mocks are applied to the execution context. However, **agent testing** works differently:\n\n- **E2B/Local Execution**: Code runs in isolated processes/sandboxes where global mocks can be applied\n- **Agent Testing**: Agent runs as a service with API client interaction, requiring direct runtime method interception\n- **Architecture Gap**: The bootstrap plugin calls `runtime.useModel` internally, which can't be mocked through the execution environment approach\n\nThis architectural difference necessitated a new approach that directly intercepts runtime methods rather than relying on execution context mocking.\n\n### Proposed Solution: Runtime Method Mocking\n\nWe've implemented a new mocking approach that directly intercepts `IAgentRuntime` method calls:\n\n#### Key Components\n\n1. **MockEngine Enhancement**\n   - Added `runtimeMethodMocks` to support mocking runtime methods\n   - Priority system: `runtimeMethod` > `service` > `globalFunction`\n   - Direct method replacement on the runtime instance\n\n2. **Schema Updates**\n   - Extended `MockSchema` to include `runtimeMethod: z.string().optional()`\n   - Supports mocking any `IAgentRuntime` method (e.g., `useModel`, `getService`)\n\n3. **Conditional Matching**\n   - Matcher functions can inspect method arguments\n   - Example: `\"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"`\n   - Supports complex conditional logic for when to apply mocks\n\n#### Usage Example\n\n```yaml\nsetup:\n  mocks:\n    - runtimeMethod: \"useModel\"\n      method: \"useModel\"\n      when:\n        matcher: \"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"\n      response: \"<response><name>agent</name><reasoning>Mocked response</reasoning><action>RESPOND</action></response>\"\n```\n\n#### Benefits\n\n1. **Deterministic Testing**: Replace LLM calls with static responses\n2. **Full Workflow Testing**: Test complete agent decision flows\n3. **Conditional Mocking**: Apply mocks based on specific conditions\n4. **Runtime Integration**: Works seamlessly with existing agent architecture\n5. **Backward Compatibility**: Existing mocks continue to work\n\n#### Implementation Steps\n\n- MockEngine runtime method support\n- Schema updates for runtimeMethod mocks\n- Conditional matching with matcher functions\n- Integration with scenario runner\n- Basic useModel mocking working\n- Add support for mocking other runtime methods (getService, etc.)\n- Create comprehensive test scenarios\n- Add documentation and examples\n- Consider adding mock recording/replay capabilities\n\n### Technical Details\n\nThe implementation works by:\n1. Creating the `IAgentRuntime` instance in the scenario runner\n2. Applying mocks directly to the runtime object before agent initialization\n3. The bootstrap plugin receives the mocked runtime and uses the mocked methods\n4. Mocks are reverted after scenario completion\n\nThis approach provides the foundation for robust, deterministic agent testing while maintaining the existing architecture.",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "Implement Runtime Method Mocking for Deterministic Agent Testing",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 7668252177,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/testing",
                    "name": "testing",
                    "color": "2D3957",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAAByRA-EQ",
                    "description": ""
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5749,
                "node_id": "I_kwDOMT5cIs7FLaT0",
                "assignee": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "comments": 0,
                "html_url": "https://github.com/elizaOS/eliza/issues/5749",
                "assignees": [
                  {
                    "id": 15067321,
                    "url": "https://api.github.com/users/monilpat",
                    "type": "User",
                    "login": "monilpat",
                    "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                    "html_url": "https://github.com/monilpat",
                    "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/monilpat/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                    "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/monilpat/followers",
                    "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/monilpat/orgs",
                    "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                    "received_events_url": "https://api.github.com/users/monilpat/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-11T00:08:49Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/labels{/name}",
                "updated_at": "2025-08-11T00:09:37Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5754": {
                "id": 3310285907,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754",
                "body": "## Issue Summary\nThe `elizaos publish --npm` command reports successful publishing but the plugin is not actually published to npm, despite showing success messages. The npm publish is failing with a 404 error, but the ElizaOS CLI incorrectly reports success.\n\n## Key Problems Identified\n\n### 1. Critical NPM Publishing Failure\n- **Error**: `npm error 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found`\n- **Issue**: The package scope `@elizaos` doesn't exist on npm, preventing publishing\n- **Impact**: Package cannot be published to npm, but CLI reports success\n\n### 2. False Success Reporting\n- **Issue**: CLI reports `[‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm`\n- **Reality**: npm publish failed with 404 error\n- **Impact**: Developers believe their plugin is published when it's not\n\n### 3. Registry Repository Mismatch\n- **Expected**: Should create PR against `https://github.com/elizaos-plugins/registry`\n- **Actual**: Still references old registry `https://github.com/elizaos/registry`\n- **Impact**: Plugin won't appear in the official ElizaOS registry\n\n## Steps to Reproduce\n\n```bash\n# Navigate to the plugin directory\ncd packages/plugin-polygon\n\n# Ensure you're on the correct branch with the changes\ngit checkout polygon\n\n# Run the publish command\nelizaos publish --npm\n\n# Verify the success message appears\n# [‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm\n\n# Check if package actually exists on npm\nnpm view @elizaos/plugin-polygon@1.0.0\n# Result: 404 Not Found - '@elizaos/plugin-polygon@1.0.0' is not in this registry\n```\n\n## Technical Details\n\n### NPM Error Analysis\nThe npm logs show the root cause:\n```\nhttp fetch PUT 404 https://registry.npmjs.org/@elizaos%2fplugin-polygon 507ms\nerror 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found\n```\n\nThis indicates that the `@elizaos` scope doesn't exist on npm, which is required for publishing scoped packages.\n\n### CLI Error Handling Failure\nThe ElizaOS CLI is not properly parsing npm error codes:\n- npm returns exit code 1 (failure)\n- CLI ignores the error and reports success\n- No validation that the package actually exists on npm\n\n## Expected Behavior\n1. CLI should detect npm publish failures (exit code 1)\n2. CLI should fail with clear error message when package scope doesn't exist\n3. CLI should validate that package actually exists on npm after publishing\n4. CLI should create PRs against the correct registry repository\n\n## Recommended Fixes\n\n### 1. Fix NPM Error Detection\n```typescript\n// In the publish command, check npm exit code\nconst npmResult = await exec('npm publish', { cwd: pluginDir });\nif (npmResult.exitCode !== 0) {\n  throw new Error(`NPM publish failed: ${npmResult.stderr}`);\n}\n```\n\n### 2. Add Package Scope Validation\n```typescript\n// Before publishing, check if scope exists\nconst scopeExists = await checkNpmScope('@elizaos');\nif (!scopeExists) {\n  throw new Error('Package scope @elizaos does not exist on npm. Contact npm support to create the scope.');\n}\n```\n\n### 3. Add Post-Publish Validation\n```typescript\n// After publishing, verify package exists\nconst packageExists = await checkPackageExists(packageName, version);\nif (!packageExists) {\n  throw new Error(`Package was not published successfully. Check npm logs for details.`);\n}\n```\n\n## Priority\n**Critical** - This completely blocks plugin publishing and creates false success reports.\n\n## Affected Components\n- `packages/cli/src/commands/publish.ts`\n- NPM publishing logic\n- Error handling and success reporting\n- Package scope validation\n- Registry repository configuration\n\n## Immediate Action Required\n1. **Create the `@elizaos` scope on npm** or use an existing scope\n2. Update CLI to properly detect and handle npm publish failures\n3. Add post-publish validation to ensure packages actually exist on npm\n4. Update registry repository configuration\n\n## Alternative Solutions\n1. **Use existing scope**: Change package name to `@monilpat/plugin-polygon`\n2. **Create organization scope**: Set up `@elizaos` organization on npm\n3. **Use unscoped package**: Publish as `elizaos-plugin-polygon`\n\nThis issue is critically blocking plugin developers from successfully publishing their work and needs immediate attention from the ElizaOS team.\n",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "Critical: Plugin Publishing Fails with False Success Reports",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5754,
                "node_id": "I_kwDOMT5cIs7FTvRT",
                "assignee": null,
                "comments": 0,
                "html_url": "https://github.com/elizaOS/eliza/issues/5754",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-11T14:20:08Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/labels{/name}",
                "updated_at": "2025-08-11T14:20:08Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              }
            },
            "lastIssues": [
              {
                "id": 3310285907,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754",
                "body": "## Issue Summary\nThe `elizaos publish --npm` command reports successful publishing but the plugin is not actually published to npm, despite showing success messages. The npm publish is failing with a 404 error, but the ElizaOS CLI incorrectly reports success.\n\n## Key Problems Identified\n\n### 1. Critical NPM Publishing Failure\n- **Error**: `npm error 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found`\n- **Issue**: The package scope `@elizaos` doesn't exist on npm, preventing publishing\n- **Impact**: Package cannot be published to npm, but CLI reports success\n\n### 2. False Success Reporting\n- **Issue**: CLI reports `[‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm`\n- **Reality**: npm publish failed with 404 error\n- **Impact**: Developers believe their plugin is published when it's not\n\n### 3. Registry Repository Mismatch\n- **Expected**: Should create PR against `https://github.com/elizaos-plugins/registry`\n- **Actual**: Still references old registry `https://github.com/elizaos/registry`\n- **Impact**: Plugin won't appear in the official ElizaOS registry\n\n## Steps to Reproduce\n\n```bash\n# Navigate to the plugin directory\ncd packages/plugin-polygon\n\n# Ensure you're on the correct branch with the changes\ngit checkout polygon\n\n# Run the publish command\nelizaos publish --npm\n\n# Verify the success message appears\n# [‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm\n\n# Check if package actually exists on npm\nnpm view @elizaos/plugin-polygon@1.0.0\n# Result: 404 Not Found - '@elizaos/plugin-polygon@1.0.0' is not in this registry\n```\n\n## Technical Details\n\n### NPM Error Analysis\nThe npm logs show the root cause:\n```\nhttp fetch PUT 404 https://registry.npmjs.org/@elizaos%2fplugin-polygon 507ms\nerror 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found\n```\n\nThis indicates that the `@elizaos` scope doesn't exist on npm, which is required for publishing scoped packages.\n\n### CLI Error Handling Failure\nThe ElizaOS CLI is not properly parsing npm error codes:\n- npm returns exit code 1 (failure)\n- CLI ignores the error and reports success\n- No validation that the package actually exists on npm\n\n## Expected Behavior\n1. CLI should detect npm publish failures (exit code 1)\n2. CLI should fail with clear error message when package scope doesn't exist\n3. CLI should validate that package actually exists on npm after publishing\n4. CLI should create PRs against the correct registry repository\n\n## Recommended Fixes\n\n### 1. Fix NPM Error Detection\n```typescript\n// In the publish command, check npm exit code\nconst npmResult = await exec('npm publish', { cwd: pluginDir });\nif (npmResult.exitCode !== 0) {\n  throw new Error(`NPM publish failed: ${npmResult.stderr}`);\n}\n```\n\n### 2. Add Package Scope Validation\n```typescript\n// Before publishing, check if scope exists\nconst scopeExists = await checkNpmScope('@elizaos');\nif (!scopeExists) {\n  throw new Error('Package scope @elizaos does not exist on npm. Contact npm support to create the scope.');\n}\n```\n\n### 3. Add Post-Publish Validation\n```typescript\n// After publishing, verify package exists\nconst packageExists = await checkPackageExists(packageName, version);\nif (!packageExists) {\n  throw new Error(`Package was not published successfully. Check npm logs for details.`);\n}\n```\n\n## Priority\n**Critical** - This completely blocks plugin publishing and creates false success reports.\n\n## Affected Components\n- `packages/cli/src/commands/publish.ts`\n- NPM publishing logic\n- Error handling and success reporting\n- Package scope validation\n- Registry repository configuration\n\n## Immediate Action Required\n1. **Create the `@elizaos` scope on npm** or use an existing scope\n2. Update CLI to properly detect and handle npm publish failures\n3. Add post-publish validation to ensure packages actually exist on npm\n4. Update registry repository configuration\n\n## Alternative Solutions\n1. **Use existing scope**: Change package name to `@monilpat/plugin-polygon`\n2. **Create organization scope**: Set up `@elizaos` organization on npm\n3. **Use unscoped package**: Publish as `elizaos-plugin-polygon`\n\nThis issue is critically blocking plugin developers from successfully publishing their work and needs immediate attention from the ElizaOS team.\n",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "Critical: Plugin Publishing Fails with False Success Reports",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5754,
                "node_id": "I_kwDOMT5cIs7FTvRT",
                "assignee": null,
                "comments": 0,
                "html_url": "https://github.com/elizaOS/eliza/issues/5754",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-11T14:20:08Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/labels{/name}",
                "updated_at": "2025-08-11T14:20:08Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3308102900,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749",
                "body": "### Problem Statement\nCurrently, ElizaOS scenario testing lacks the ability to mock internal agent runtime calls (particularly LLM interactions) when testing via the API client. This makes it difficult to create deterministic tests for agent behavior and workflows.\n\n### Current Limitations\n- Global function mocks only work for code executed in the same process\n- No way to intercept `runtime.useModel` calls from the bootstrap plugin\n- Agent behavior is non-deterministic due to real LLM calls\n- Difficult to test specific agent decision paths and responses\n\n### Why Different Approach Was Needed\n\nThe existing mocking system was designed for **code execution environments** (E2B sandbox and local `node -e` processes), where mocks are applied to the execution context. However, **agent testing** works differently:\n\n- **E2B/Local Execution**: Code runs in isolated processes/sandboxes where global mocks can be applied\n- **Agent Testing**: Agent runs as a service with API client interaction, requiring direct runtime method interception\n- **Architecture Gap**: The bootstrap plugin calls `runtime.useModel` internally, which can't be mocked through the execution environment approach\n\nThis architectural difference necessitated a new approach that directly intercepts runtime methods rather than relying on execution context mocking.\n\n### Proposed Solution: Runtime Method Mocking\n\nWe've implemented a new mocking approach that directly intercepts `IAgentRuntime` method calls:\n\n#### Key Components\n\n1. **MockEngine Enhancement**\n   - Added `runtimeMethodMocks` to support mocking runtime methods\n   - Priority system: `runtimeMethod` > `service` > `globalFunction`\n   - Direct method replacement on the runtime instance\n\n2. **Schema Updates**\n   - Extended `MockSchema` to include `runtimeMethod: z.string().optional()`\n   - Supports mocking any `IAgentRuntime` method (e.g., `useModel`, `getService`)\n\n3. **Conditional Matching**\n   - Matcher functions can inspect method arguments\n   - Example: `\"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"`\n   - Supports complex conditional logic for when to apply mocks\n\n#### Usage Example\n\n```yaml\nsetup:\n  mocks:\n    - runtimeMethod: \"useModel\"\n      method: \"useModel\"\n      when:\n        matcher: \"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"\n      response: \"<response><name>agent</name><reasoning>Mocked response</reasoning><action>RESPOND</action></response>\"\n```\n\n#### Benefits\n\n1. **Deterministic Testing**: Replace LLM calls with static responses\n2. **Full Workflow Testing**: Test complete agent decision flows\n3. **Conditional Mocking**: Apply mocks based on specific conditions\n4. **Runtime Integration**: Works seamlessly with existing agent architecture\n5. **Backward Compatibility**: Existing mocks continue to work\n\n#### Implementation Steps\n\n- MockEngine runtime method support\n- Schema updates for runtimeMethod mocks\n- Conditional matching with matcher functions\n- Integration with scenario runner\n- Basic useModel mocking working\n- Add support for mocking other runtime methods (getService, etc.)\n- Create comprehensive test scenarios\n- Add documentation and examples\n- Consider adding mock recording/replay capabilities\n\n### Technical Details\n\nThe implementation works by:\n1. Creating the `IAgentRuntime` instance in the scenario runner\n2. Applying mocks directly to the runtime object before agent initialization\n3. The bootstrap plugin receives the mocked runtime and uses the mocked methods\n4. Mocks are reverted after scenario completion\n\nThis approach provides the foundation for robust, deterministic agent testing while maintaining the existing architecture.",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "Implement Runtime Method Mocking for Deterministic Agent Testing",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 7668252177,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/testing",
                    "name": "testing",
                    "color": "2D3957",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAAByRA-EQ",
                    "description": ""
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5749,
                "node_id": "I_kwDOMT5cIs7FLaT0",
                "assignee": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "comments": 0,
                "html_url": "https://github.com/elizaOS/eliza/issues/5749",
                "assignees": [
                  {
                    "id": 15067321,
                    "url": "https://api.github.com/users/monilpat",
                    "type": "User",
                    "login": "monilpat",
                    "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                    "html_url": "https://github.com/monilpat",
                    "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/monilpat/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                    "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/monilpat/followers",
                    "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/monilpat/orgs",
                    "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                    "received_events_url": "https://api.github.com/users/monilpat/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-11T00:08:49Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/labels{/name}",
                "updated_at": "2025-08-11T00:09:37Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3304516859,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747",
                "body": null,
                "type": null,
                "user": {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                },
                "state": "open",
                "title": "Fixing bugs in eliza-cloud",
                "labels": [],
                "locked": false,
                "number": 5747,
                "node_id": "I_kwDOMT5cIs7E9uz7",
                "assignee": {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                },
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5747",
                "assignees": [
                  {
                    "id": 48334430,
                    "url": "https://api.github.com/users/samarth30",
                    "type": "User",
                    "login": "samarth30",
                    "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                    "html_url": "https://github.com/samarth30",
                    "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/samarth30/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                    "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/samarth30/followers",
                    "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/samarth30/orgs",
                    "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                    "received_events_url": "https://api.github.com/users/samarth30/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-08T16:01:56Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/labels{/name}",
                "updated_at": "2025-08-08T19:02:49Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "MEMBER",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": {
                  "id": 20150,
                  "name": "Linear",
                  "slug": "linear",
                  "owner": {
                    "id": 46686594,
                    "url": "https://api.github.com/users/linear",
                    "type": "Organization",
                    "login": "linear",
                    "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ2Njg2NTk0",
                    "html_url": "https://github.com/linear",
                    "gists_url": "https://api.github.com/users/linear/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/linear/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/46686594?v=4",
                    "events_url": "https://api.github.com/users/linear/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/linear/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/linear/followers",
                    "following_url": "https://api.github.com/users/linear/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/linear/orgs",
                    "subscriptions_url": "https://api.github.com/users/linear/subscriptions",
                    "received_events_url": "https://api.github.com/users/linear/received_events"
                  },
                  "events": [
                    "check_suite",
                    "issues",
                    "issue_comment",
                    "pull_request",
                    "pull_request_review",
                    "repository",
                    "sub_issues"
                  ],
                  "node_id": "MDM6QXBwMjAxNTA=",
                  "html_url": "https://github.com/apps/linear",
                  "client_id": "Iv1.085d682ea245c945",
                  "created_at": "2018-11-02T18:07:23Z",
                  "updated_at": "2025-02-07T14:59:56Z",
                  "description": "",
                  "permissions": {
                    "checks": "read",
                    "issues": "write",
                    "metadata": "read",
                    "pull_requests": "write"
                  },
                  "external_url": "https://linear.app"
                }
              },
              {
                "id": 3302237103,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738",
                "body": "## Description\n\nThe `bun run clean` command is failing due to TypeScript errors in `@elizaos/core` package during the DTS (type definition) build phase.\n\n## Error Details\n\n### Build Process\n```\n‚Ä¢ Running build in 17 packages\n‚Ä¢ Remote caching disabled\n@elizaos/config:build: cache miss\n@elizaos/autodoc:build: cache miss\n@elizaos/core:build: cache miss\n```\n\n### TypeScript Errors in @elizaos/core/src/utils.ts\n1. Line 218: `error TS2345: Argument of type '`${string}-${string}-${string}-${string}-${string}`' is not assignable to parameter of type 'never'.`\n2. Line 366: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n3. Line 409: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n4. Line 536: `error TS2345: Argument of type '{ numberOfChunks: number; averageChunkSize: number; }' is not assignable to parameter of type 'never'.`\n\n### Impact\n- Blocks `bun run clean` command\n- Prevents successful build of `@elizaos/core`\n- Affects dependent packages in the monorepo\n\n## Steps to Reproduce\n1. Run `bun run clean`\n2. Observe build failure in `@elizaos/core`\n3. Build fails with TypeScript errors during DTS generation\n\n## Expected Behavior\n- `bun run clean` should complete successfully\n- `@elizaos/core` should build without TypeScript errors\n- Type definitions should be generated correctly\n\n## Suggested Fix\n\nThe errors suggest type mismatches in `utils.ts`. Need to:\n1. Review type definitions in affected lines\n2. Update type assertions or generic constraints\n3. Ensure string template literal types are properly handled\n4. Fix object type assignments\n\n### Files to Update\n- `packages/core/src/utils.ts`\n\n## Priority\n**HIGH** - This is blocking clean builds and potentially affecting development workflow.",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "üêõ Build failure in @elizaos/core causing bun run clean to fail",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5738,
                "node_id": "I_kwDOMT5cIs7E1COv",
                "assignee": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5738",
                "assignees": [
                  {
                    "id": 15067321,
                    "url": "https://api.github.com/users/monilpat",
                    "type": "User",
                    "login": "monilpat",
                    "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                    "html_url": "https://github.com/monilpat",
                    "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/monilpat/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                    "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/monilpat/followers",
                    "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/monilpat/orgs",
                    "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                    "received_events_url": "https://api.github.com/users/monilpat/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-08T00:26:11Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/labels{/name}",
                "updated_at": "2025-08-11T14:56:01Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3301116813,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734",
                "body": "**Describe the bug**\n\nOn project creation, ElizaOS CLI fails with the following error:\n```\n‚óá  Failed to build project\nstdout: src/index.ts(7,25): error TS2345: Argument of type 'string' is not assignable to parameter of type 'undefined'.\nstderr: $ tsc --noEmit && vite build && tsup\n```\n\n**To Reproduce**\n\n- Install ElizaOS through `bun`\n```\nbun i -g @elizaos/cli\n```\n- Create new ElizaOS project\n```\nelizaos create abcde\n```\n\n**Expected behavior**\n\nProject built successfully\n\n**Screenshots**\n\n<img width=\"1095\" height=\"572\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/967dd6a2-0d70-4e2e-8019-85a2eab5f225\" />\n\n**Additional context**\n\nElizaOS CLI version: `1.3.2`\n",
                "type": null,
                "user": {
                  "id": 74447600,
                  "url": "https://api.github.com/users/Kemystra",
                  "type": "User",
                  "login": "Kemystra",
                  "node_id": "MDQ6VXNlcjc0NDQ3NjAw",
                  "html_url": "https://github.com/Kemystra",
                  "gists_url": "https://api.github.com/users/Kemystra/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/Kemystra/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/74447600?v=4",
                  "events_url": "https://api.github.com/users/Kemystra/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/Kemystra/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/Kemystra/followers",
                  "following_url": "https://api.github.com/users/Kemystra/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/Kemystra/orgs",
                  "subscriptions_url": "https://api.github.com/users/Kemystra/subscriptions",
                  "received_events_url": "https://api.github.com/users/Kemystra/received_events"
                },
                "state": "open",
                "title": "Eliza CLI failed to build project",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5734,
                "node_id": "I_kwDOMT5cIs7EwwuN",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5734",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T16:14:00Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/labels{/name}",
                "updated_at": "2025-08-08T19:43:52Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "NONE",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3299481897,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729",
                "body": "# Relates to\r\n\r\nN/A (Documentation improvement, not tied to a specific issue or ticket)\r\n\r\n# Risks\r\n\r\nLow.  \r\nThis change only updates documentation and does not affect any code or functionality.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR updates the elizaos README to include a fix for installation errors that may occur due to permission issues. It adds a note suggesting the use of sudo if users encounter a \"Permission denied\" or \"InstallFailed\" error when running the `elizaos create my-agent` command.\r\n\r\n## What kind of change is this?\r\n\r\nImprovements (misc. changes to existing features)  \r\nDocumentation update\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes require a change to the project documentation.  \r\nI have updated the documentation accordingly.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\nStart by reviewing the changes in the README.md file, specifically the section on creating a new project.\r\n\r\n## Detailed testing steps\r\n\r\n- Open the updated README.md.\r\n- Review the new instructions under \"Create Your First Project.\"\r\n- Confirm that the added note about using `sudo` is clear and helpful for users who encounter permission errors.",
                "type": null,
                "user": {
                  "id": 32749185,
                  "url": "https://api.github.com/users/mandatedisrael",
                  "type": "User",
                  "login": "mandatedisrael",
                  "node_id": "MDQ6VXNlcjMyNzQ5MTg1",
                  "html_url": "https://github.com/mandatedisrael",
                  "gists_url": "https://api.github.com/users/mandatedisrael/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/mandatedisrael/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/32749185?v=4",
                  "events_url": "https://api.github.com/users/mandatedisrael/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/mandatedisrael/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/mandatedisrael/followers",
                  "following_url": "https://api.github.com/users/mandatedisrael/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/mandatedisrael/orgs",
                  "subscriptions_url": "https://api.github.com/users/mandatedisrael/subscriptions",
                  "received_events_url": "https://api.github.com/users/mandatedisrael/received_events"
                },
                "draft": false,
                "state": "open",
                "title": "Update README.md to fix error",
                "labels": [],
                "locked": false,
                "number": 5729,
                "node_id": "PR_kwDOMT5cIs6iiNWN",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T08:10:12Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/labels{/name}",
                "updated_at": "2025-08-07T08:10:24Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/comments",
                "pull_request": {
                  "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5729",
                  "diff_url": "https://github.com/elizaOS/eliza/pull/5729.diff",
                  "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                  "merged_at": null,
                  "patch_url": "https://github.com/elizaOS/eliza/pull/5729.patch"
                },
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "FIRST_TIME_CONTRIBUTOR",
                "performed_via_github_app": null
              },
              {
                "id": 3299322983,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728",
                "body": "# Background\r\n\r\n## What does this PR do?\r\n\r\nIntroduce entity for cancelling runs `CancelRunSignal`\r\n\r\n## Why are we doing this? Any context or related work?\r\n\r\n- Calls to LLMs usually cost some credits\r\n- When we receive the `RUN_STARTED` event we can check current entity and end run to prevent credits spending\r\n\r\n# Documentation changes needed?\r\n\r\n## Methods\r\n\r\n- `static getSignal(runId: UUID)` - get signal by runId or create if null\r\n- `static clear(runId: UUID)` - clear signal from map\r\n- `cancel(content?: Content)` - cancel current run and and send `content` as a response to user\r\n\r\n## Example\r\n\r\n```typescript\r\nimport { Content, EventType, Plugin } from \"@elizaos/core\";\r\nimport { CancelRunSignal } from \"@elizaos/plugin-bootstrap\";\r\n\r\n// consider we have a service to determine eligibility for entity\r\ninterface EligibilityService {\r\n  check(entityId: UUID): Promise<{ result: boolean, reason?: Content }>\r\n}\r\n\r\nconst plugin: Plugin = {\r\n...\r\n  events: {\r\n    [EventType.RUN_STARTED]: ({ entityId, runId, runtime }) => {\r\n      const service = runtime.getService<EligibilityService>(\"USER_MANAGEMENT\");\r\n      const { result, reason } = await service.check(entityId);\r\n      \r\n      if (!result) {\r\n        const signal = CancelRunSignal.getSignal(runId);\r\n        signal.cancel(reason);\r\n      }\r\n    },\r\n    ...\r\n  },\r\n  ...\r\n}\r\n\r\nexport default Plugin;\r\n```\r\n\r\n## Discord username\r\n\r\nalexd000\r\n\r\n",
                "type": null,
                "user": {
                  "id": 82507604,
                  "url": "https://api.github.com/users/alex-nax",
                  "type": "User",
                  "login": "alex-nax",
                  "node_id": "MDQ6VXNlcjgyNTA3NjA0",
                  "html_url": "https://github.com/alex-nax",
                  "gists_url": "https://api.github.com/users/alex-nax/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/alex-nax/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/82507604?v=4",
                  "events_url": "https://api.github.com/users/alex-nax/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/alex-nax/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/alex-nax/followers",
                  "following_url": "https://api.github.com/users/alex-nax/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/alex-nax/orgs",
                  "subscriptions_url": "https://api.github.com/users/alex-nax/subscriptions",
                  "received_events_url": "https://api.github.com/users/alex-nax/received_events"
                },
                "draft": false,
                "state": "open",
                "title": "feat: ability to cancel current run before any calls to LLM are made",
                "labels": [],
                "locked": false,
                "number": 5728,
                "node_id": "PR_kwDOMT5cIs6ihriD",
                "assignee": null,
                "comments": 3,
                "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T07:19:35Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/labels{/name}",
                "updated_at": "2025-08-07T07:22:05Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/comments",
                "pull_request": {
                  "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5728",
                  "diff_url": "https://github.com/elizaOS/eliza/pull/5728.diff",
                  "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                  "merged_at": null,
                  "patch_url": "https://github.com/elizaOS/eliza/pull/5728.patch"
                },
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "FIRST_TIME_CONTRIBUTOR",
                "performed_via_github_app": null
              },
              {
                "id": 3298692741,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727",
                "body": "# feat(scenarios): Implement natural language agent interaction and response validation\n\n## Description\n\nThis ticket enables scenarios to test agent behavior through natural language interactions rather than direct code execution. This allows testing of agent reasoning, decision-making, and response generation in realistic conversation contexts with proper evaluation of agent responses.\n\n## Acceptance Criteria\n\n1. Scenario `run` blocks support `input` field for natural language prompts to agents\n2. Agent responses are captured and available for evaluation (text, thoughts, actions)\n3. Evaluators can access both agent response text and execution context\n4. Support for multi-turn conversations in scenarios\n5. Agent responses include thought process and action decisions\n6. Integration with existing evaluation engine for response validation\n7. Support for conversation context across multiple steps\n8. Agent response timing and performance metrics\n\n## Technical Approach\n\n### 1. Enhanced Run Step Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst RunStepSchema = z.object({\n  name: z.string().optional(),\n  // Natural language input to agent\n  input: z.string().optional(),\n  // Direct code execution (existing)\n  lang: z.string().optional(),\n  code: z.string().optional(),\n  // Agent interaction specific\n  agent_context: z.object({\n    conversation_id: z.string().optional(),\n    user_id: z.string().optional(),\n    room_id: z.string().optional(),\n  }).optional(),\n  evaluations: z.array(EvaluationSchema),\n});\n```\n\n### 2. Agent Interaction Engine\n```typescript\n// packages/cli/src/scenarios/agent-interaction.ts\nexport class AgentInteractionEngine {\n  constructor(private runtime: IAgentRuntime) {}\n\n  async interactWithAgent(input: string, context?: AgentContext): Promise<AgentResponse> {\n    // Create message for agent\n    const message: Memory = {\n      entityId: context?.user_id || 'scenario-user',\n      roomId: context?.room_id || 'scenario-room',\n      content: {\n        type: 'text',\n        text: input,\n      },\n      metadata: {\n        type: 'message',\n        conversationId: context?.conversation_id,\n      },\n    };\n\n    // Send to agent and capture response\n    const startTime = Date.now();\n    const response = await this.runtime.processMessage(message);\n    const endTime = Date.now();\n\n    return {\n      text: response.text,\n      thoughts: response.thoughts,\n      actions: response.actions,\n      timing: {\n        startTime,\n        endTime,\n        duration: endTime - startTime,\n      },\n      context: {\n        conversationId: context?.conversation_id,\n        messageId: message.id,\n      },\n    };\n  }\n}\n```\n\n### 3. Enhanced Execution Result\n```typescript\n// packages/cli/src/scenarios/providers.ts\nexport interface ExecutionResult {\n  exitCode: number;\n  stdout: string;\n  stderr: string;\n  files: Record<string, string>;\n  // New: Agent interaction results\n  agentResponse?: AgentResponse;\n  conversationHistory?: AgentResponse[];\n}\n```\n\n## Test Scenario\n\nCreate `agent-interaction-test.scenario.yaml`:\n```yaml\nname: \"Agent Interaction Test\"\ndescription: \"Tests natural language interaction with agents\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Implement Dark Mode\"\n          number: 123\n          state: \"open\"\n          labels: [\"feature\", \"ui\"]\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"2.5\"\n\nrun:\n  - name: \"Ask agent about roadmap\"\n    input: \"What new features are you planning to add?\"\n    agent_context:\n      conversation_id: \"roadmap-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify agent searched for issues\"\n      \n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n        description: \"Verify agent mentioned the mocked issue\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent provide a helpful and coherent response about new features?\"\n        expected: \"yes\"\n        description: \"Verify agent response quality\"\n\n  - name: \"Ask agent about wallet\"\n    input: \"What's my current wallet balance?\"\n    agent_context:\n      conversation_id: \"wallet-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify agent checked wallet balance\"\n      \n      - type: \"string_contains\"\n        value: \"2.5 ETH\"\n        description: \"Verify agent reported the correct balance\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent clearly explain the wallet balance information?\"\n        expected: \"yes\"\n\n  - name: \"Multi-turn conversation\"\n    input: \"Can you help me with both my wallet and roadmap?\"\n    agent_context:\n      conversation_id: \"multi-turn-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"ETH\"\n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent address both wallet and roadmap questions comprehensively?\"\n        expected: \"yes\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Single Turn**: Test basic agent interaction and response\n2. **Multi-turn**: Test conversation context across steps\n3. **Action Tracking**: Verify agent uses appropriate actions\n4. **Response Quality**: Test LLM judge evaluation of responses\n5. **Performance**: Test response timing and metrics\n6. **Error Handling**: Test agent behavior with invalid inputs\n\n## Dependencies\n\n- Requires plugin system integration (Ticket 1)\n- Builds on advanced mocking system (Ticket 2)\n- Integrates with existing evaluation engine\n- Depends on agent runtime message processing",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement natural language agent interaction and response validation",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5727,
                "node_id": "I_kwDOMT5cIs7Eng6F",
                "assignee": null,
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5727",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:49:34Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/labels{/name}",
                "updated_at": "2025-08-07T05:35:40Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3298691383,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726",
                "body": "# feat(scenarios): Implement conditional mocking and complex response structures\n\n## Description\n\nThis ticket enhances the mocking system to support conditional responses based on input parameters and complex response structures with metadata. This enables realistic testing of service interactions like GitHub API calls or EVM transactions with proper request/response matching.\n\n## Acceptance Criteria\n\n1. Mock definitions support `when` clauses for conditional responses\n2. `when` clauses can match on method arguments, input parameters, or request context\n3. Mock responses support complex nested structures with metadata (timestamps, IDs, etc.)\n4. Multiple mock responses can be defined for the same service/method with different conditions\n5. Mock system provides clear logging of which mock was triggered and why\n6. Mock responses can include realistic error conditions and edge cases\n7. Support for dynamic response generation based on input parameters\n8. Mock validation ensures `when` clauses are syntactically correct\n\n## Technical Approach\n\n### 1. Enhanced Mock Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst MockSchema = z.object({\n  service: z.string(),\n  method: z.string(),\n  when: z.object({\n    // Match on method arguments\n    args: z.array(z.any()).optional(),\n    // Match on specific argument values\n    input: z.record(z.any()).optional(),\n    // Match on request context\n    context: z.record(z.any()).optional(),\n    // Custom matching function\n    matcher: z.string().optional(), // JavaScript expression\n  }).optional(),\n  response: z.any(), // Can be function or static value\n  // For dynamic responses\n  responseFn: z.string().optional(), // JavaScript function\n  // Error simulation\n  error: z.object({\n    code: z.string(),\n    message: z.string(),\n  }).optional(),\n});\n```\n\n### 2. Mock Engine Implementation\n```typescript\n// packages/cli/src/scenarios/mock-engine.ts\nexport class MockEngine {\n  private mocks: MockDefinition[] = [];\n\n  addMock(mock: MockDefinition) {\n    this.mocks.push(mock);\n  }\n\n  async findMock(service: string, method: string, args: any[]): Promise<any> {\n    const candidates = this.mocks.filter(m => \n      m.service === service && m.method === method\n    );\n\n    for (const mock of candidates) {\n      if (await this.matchesCondition(mock, args)) {\n        this.logger.info(`Mock triggered: ${service}.${method} with condition: ${JSON.stringify(mock.when)}`);\n        return this.generateResponse(mock, args);\n      }\n    }\n\n    return null; // No mock found\n  }\n\n  private async matchesCondition(mock: MockDefinition, args: any[]): Promise<boolean> {\n    if (!mock.when) return true; // Default mock\n\n    // Match on arguments\n    if (mock.when.args) {\n      if (!this.deepEqual(args, mock.when.args)) return false;\n    }\n\n    // Match on input parameters\n    if (mock.when.input) {\n      const input = this.extractInputFromArgs(args);\n      if (!this.deepEqual(input, mock.when.input)) return false;\n    }\n\n    // Custom matcher function\n    if (mock.when.matcher) {\n      const matcherFn = new Function('args', 'input', mock.when.matcher);\n      return matcherFn(args, this.extractInputFromArgs(args));\n    }\n\n    return true;\n  }\n\n  private generateResponse(mock: MockDefinition, args: any[]): any {\n    if (mock.error) {\n      throw new Error(`${mock.error.code}: ${mock.error.message}`);\n    }\n\n    if (mock.responseFn) {\n      const responseFn = new Function('args', 'input', mock.responseFn);\n      return responseFn(args, this.extractInputFromArgs(args));\n    }\n\n    return mock.response;\n  }\n}\n```\n\n## Test Scenario\n\nCreate `advanced-mocking-test.scenario.yaml`:\n```yaml\nname: \"Advanced Mocking Test\"\ndescription: \"Tests conditional mocking and complex response structures\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    # Conditional GitHub issue search\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"bug\"\n        matcher: \"input.labels.includes('bug')\"\n      response:\n        - title: \"Critical Bug Found\"\n          number: 456\n          state: \"open\"\n          labels: [\"bug\", \"critical\"]\n          created_at: \"2024-07-15T10:00:00Z\"\n\n    # Conditional GitHub issue search - different response\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"feature\"\n        matcher: \"input.labels.includes('feature')\"\n      response:\n        - title: \"New Feature Request\"\n          number: 789\n          state: \"open\"\n          labels: [\"feature\", \"enhancement\"]\n          created_at: \"2024-07-15T11:00:00Z\"\n\n    # Dynamic EVM balance response\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      when:\n        args: [\"0x1234567890abcdef\"]\n      responseFn: |\n        return {\n          chain: \"ethereum\",\n          address: args[0],\n          balances: [\n            { symbol: \"ETH\", amount: \"1.23\" },\n            { symbol: \"USDC\", amount: \"1000.00\" }\n          ],\n          last_updated: new Date().toISOString()\n        }\n\n    # Error simulation\n    - service: \"github-service\"\n      method: \"readFile\"\n      when:\n        input:\n          path: \"/docs/nonexistent.md\"\n      error:\n        code: \"FILE_NOT_FOUND\"\n        message: \"File does not exist\"\n\nrun:\n  - name: \"Test conditional GitHub search\"\n    input: \"Search for issues with bug label\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"Critical Bug Found\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent correctly search for bug issues?\"\n        expected: \"yes\"\n\n  - name: \"Test dynamic EVM response\"\n    input: \"What's the balance for address 0x1234567890abcdef?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n      - type: \"string_contains\"\n        value: \"1000.00 USDC\"\n\n  - name: \"Test error handling\"\n    input: \"Read the file /docs/nonexistent.md\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.readFile\"\n      - type: \"string_contains\"\n        value: \"File does not exist\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Conditional Matching**: Test different responses based on input parameters\n2. **Dynamic Responses**: Test response generation based on arguments\n3. **Error Simulation**: Test error handling and reporting\n4. **Complex Structures**: Test nested response objects with metadata\n5. **Multiple Mocks**: Test multiple mocks for same service/method\n6. **Logging**: Verify mock selection is logged clearly\n\n## Dependencies\n\n- Builds on existing mock system in scenarios\n- Requires plugin system integration (Ticket 1)\n- Integrates with agent interaction testing (Ticket 3) ",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement conditional mocking and complex response structures",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5726,
                "node_id": "I_kwDOMT5cIs7Engk3",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5726",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:49:00Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/labels{/name}",
                "updated_at": "2025-08-07T05:32:53Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3298689704,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725",
                "body": "# feat(scenarios): Implement plugin specification and dynamic loading\n\n## Description\n\nThis ticket implements plugin specification in scenario YAML files, allowing scenarios to declare which plugins are required for testing. This enables testing of agent behaviors that depend on specific plugins like `@elizaos/plugin-github` or `@elizaos/plugin-evm`. The system will dynamically load specified plugins during scenario execution and make their actions, providers, and services available to the agent.\n\n## Acceptance Criteria\n\n1. Scenario YAML supports a `plugins` array at the root level with string plugin names\n2. The `initializeAgent()` function respects scenario plugin specifications and loads them via `startAgent()`\n3. Plugin loading follows the same dependency resolution and error handling as the main CLI\n4. Scenarios can specify both string plugin names (`@elizaos/plugin-github`) and direct plugin objects\n5. Plugin loading errors are clearly reported with actionable guidance\n6. Default plugins (bootstrap, sql) are automatically included unless explicitly excluded via `exclude_defaults: true`\n7. Plugin conflicts are detected and reported during scenario validation\n8. Plugin initialization errors don't crash the scenario but are reported in results\n\n## Technical Approach\n\n### 1. Update Scenario Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst ScenarioSchema = z.object({\n  name: z.string(),\n  description: z.string(),\n  plugins: z.array(z.string()).optional(), // e.g., [\"@elizaos/plugin-github\"]\n  exclude_defaults: z.boolean().optional(), // exclude bootstrap/sql\n  environment: EnvironmentSchema,\n  setup: SetupSchema.optional(),\n  run: z.array(RunStepSchema),\n  judgment: JudgmentSchema,\n});\n```\n\n### 2. Enhance Runtime Factory\n```typescript\n// packages/cli/src/scenarios/runtime-factory.ts\nexport async function initializeAgent(scenario: Scenario): Promise<IAgentRuntime> {\n  const character: Character = {\n    name: 'scenario-runner',\n    id: stringToUuid('scenario-runner'),\n    bio: 'A minimal character for running scenarios',\n    plugins: scenario.plugins || []\n  };\n\n  // Load default plugins unless excluded\n  if (!scenario.exclude_defaults) {\n    character.plugins.push('@elizaos/plugin-bootstrap', '@elizaos/plugin-sql');\n  }\n\n  const runtime = await startAgent(\n    encryptedCharacter(character),\n    server,\n    undefined,\n    character.plugins,\n    { isTestMode: true }\n  );\n\n  return runtime;\n}\n```\n\n### 3. Plugin Validation\n```typescript\n// packages/cli/src/scenarios/plugin-validator.ts\nexport async function validateScenarioPlugins(scenario: Scenario): Promise<ValidationResult[]> {\n  const results: ValidationResult[] = [];\n  \n  for (const pluginName of scenario.plugins || []) {\n    try {\n      const plugin = await loadAndPreparePlugin(pluginName);\n      if (!plugin) {\n        results.push({\n          type: 'error',\n          message: `Plugin '${pluginName}' could not be loaded`,\n          suggestion: 'Check if plugin is installed or built correctly'\n        });\n      }\n    } catch (error) {\n      results.push({\n        type: 'error', \n        message: `Failed to validate plugin '${pluginName}': ${error.message}`,\n        suggestion: 'Verify plugin dependencies and configuration'\n      });\n    }\n  }\n  \n  return results;\n}\n```\n\n## Test Scenario\n\nCreate `plugin-integration-test.scenario.yaml`:\n```yaml\nname: \"Plugin Integration Test\"\ndescription: \"Tests loading and using plugins specified in scenario YAML\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Test Issue\"\n          number: 123\n          state: \"open\"\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"1.23\"\n\nrun:\n  - name: \"Test GitHub plugin actions\"\n    input: \"Search for issues with label 'bug'\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify GitHub plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"Test Issue\"\n        description: \"Verify agent found the mocked issue\"\n\n  - name: \"Test EVM plugin actions\"\n    input: \"What's my wallet balance?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify EVM plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n        description: \"Verify agent reported the mocked balance\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Plugin Loading Test**: Verify plugins load without errors\n2. **Action Availability Test**: Confirm agent can use plugin actions\n3. **Error Handling Test**: Test with non-existent plugin\n4. **Default Plugin Test**: Verify bootstrap/sql are included by default\n5. **Exclusion Test**: Test `exclude_defaults: true` behavior\n\n## Dependencies\n\n- Fixes the `startAgent` hanging issue (#5719) to enable plugin testing\n- Builds on existing `loadAndPreparePlugin` functionality\n- Integrates with current scenario execution flow ",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement plugin specification and dynamic loading",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5725,
                "node_id": "I_kwDOMT5cIs7EngKo",
                "assignee": null,
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5725",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:48:08Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/labels{/name}",
                "updated_at": "2025-08-07T05:37:32Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              }
            ]
          },
          "issues": [
            {
              "id": 3310285907,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754",
              "body": "## Issue Summary\nThe `elizaos publish --npm` command reports successful publishing but the plugin is not actually published to npm, despite showing success messages. The npm publish is failing with a 404 error, but the ElizaOS CLI incorrectly reports success.\n\n## Key Problems Identified\n\n### 1. Critical NPM Publishing Failure\n- **Error**: `npm error 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found`\n- **Issue**: The package scope `@elizaos` doesn't exist on npm, preventing publishing\n- **Impact**: Package cannot be published to npm, but CLI reports success\n\n### 2. False Success Reporting\n- **Issue**: CLI reports `[‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm`\n- **Reality**: npm publish failed with 404 error\n- **Impact**: Developers believe their plugin is published when it's not\n\n### 3. Registry Repository Mismatch\n- **Expected**: Should create PR against `https://github.com/elizaos-plugins/registry`\n- **Actual**: Still references old registry `https://github.com/elizaos/registry`\n- **Impact**: Plugin won't appear in the official ElizaOS registry\n\n## Steps to Reproduce\n\n```bash\n# Navigate to the plugin directory\ncd packages/plugin-polygon\n\n# Ensure you're on the correct branch with the changes\ngit checkout polygon\n\n# Run the publish command\nelizaos publish --npm\n\n# Verify the success message appears\n# [‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm\n\n# Check if package actually exists on npm\nnpm view @elizaos/plugin-polygon@1.0.0\n# Result: 404 Not Found - '@elizaos/plugin-polygon@1.0.0' is not in this registry\n```\n\n## Technical Details\n\n### NPM Error Analysis\nThe npm logs show the root cause:\n```\nhttp fetch PUT 404 https://registry.npmjs.org/@elizaos%2fplugin-polygon 507ms\nerror 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found\n```\n\nThis indicates that the `@elizaos` scope doesn't exist on npm, which is required for publishing scoped packages.\n\n### CLI Error Handling Failure\nThe ElizaOS CLI is not properly parsing npm error codes:\n- npm returns exit code 1 (failure)\n- CLI ignores the error and reports success\n- No validation that the package actually exists on npm\n\n## Expected Behavior\n1. CLI should detect npm publish failures (exit code 1)\n2. CLI should fail with clear error message when package scope doesn't exist\n3. CLI should validate that package actually exists on npm after publishing\n4. CLI should create PRs against the correct registry repository\n\n## Recommended Fixes\n\n### 1. Fix NPM Error Detection\n```typescript\n// In the publish command, check npm exit code\nconst npmResult = await exec('npm publish', { cwd: pluginDir });\nif (npmResult.exitCode !== 0) {\n  throw new Error(`NPM publish failed: ${npmResult.stderr}`);\n}\n```\n\n### 2. Add Package Scope Validation\n```typescript\n// Before publishing, check if scope exists\nconst scopeExists = await checkNpmScope('@elizaos');\nif (!scopeExists) {\n  throw new Error('Package scope @elizaos does not exist on npm. Contact npm support to create the scope.');\n}\n```\n\n### 3. Add Post-Publish Validation\n```typescript\n// After publishing, verify package exists\nconst packageExists = await checkPackageExists(packageName, version);\nif (!packageExists) {\n  throw new Error(`Package was not published successfully. Check npm logs for details.`);\n}\n```\n\n## Priority\n**Critical** - This completely blocks plugin publishing and creates false success reports.\n\n## Affected Components\n- `packages/cli/src/commands/publish.ts`\n- NPM publishing logic\n- Error handling and success reporting\n- Package scope validation\n- Registry repository configuration\n\n## Immediate Action Required\n1. **Create the `@elizaos` scope on npm** or use an existing scope\n2. Update CLI to properly detect and handle npm publish failures\n3. Add post-publish validation to ensure packages actually exist on npm\n4. Update registry repository configuration\n\n## Alternative Solutions\n1. **Use existing scope**: Change package name to `@monilpat/plugin-polygon`\n2. **Create organization scope**: Set up `@elizaos` organization on npm\n3. **Use unscoped package**: Publish as `elizaos-plugin-polygon`\n\nThis issue is critically blocking plugin developers from successfully publishing their work and needs immediate attention from the ElizaOS team.\n",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "Critical: Plugin Publishing Fails with False Success Reports",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5754,
              "node_id": "I_kwDOMT5cIs7FTvRT",
              "assignee": null,
              "comments": 0,
              "html_url": "https://github.com/elizaOS/eliza/issues/5754",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-11T14:20:08Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/labels{/name}",
              "updated_at": "2025-08-11T14:20:08Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3308102900,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749",
              "body": "### Problem Statement\nCurrently, ElizaOS scenario testing lacks the ability to mock internal agent runtime calls (particularly LLM interactions) when testing via the API client. This makes it difficult to create deterministic tests for agent behavior and workflows.\n\n### Current Limitations\n- Global function mocks only work for code executed in the same process\n- No way to intercept `runtime.useModel` calls from the bootstrap plugin\n- Agent behavior is non-deterministic due to real LLM calls\n- Difficult to test specific agent decision paths and responses\n\n### Why Different Approach Was Needed\n\nThe existing mocking system was designed for **code execution environments** (E2B sandbox and local `node -e` processes), where mocks are applied to the execution context. However, **agent testing** works differently:\n\n- **E2B/Local Execution**: Code runs in isolated processes/sandboxes where global mocks can be applied\n- **Agent Testing**: Agent runs as a service with API client interaction, requiring direct runtime method interception\n- **Architecture Gap**: The bootstrap plugin calls `runtime.useModel` internally, which can't be mocked through the execution environment approach\n\nThis architectural difference necessitated a new approach that directly intercepts runtime methods rather than relying on execution context mocking.\n\n### Proposed Solution: Runtime Method Mocking\n\nWe've implemented a new mocking approach that directly intercepts `IAgentRuntime` method calls:\n\n#### Key Components\n\n1. **MockEngine Enhancement**\n   - Added `runtimeMethodMocks` to support mocking runtime methods\n   - Priority system: `runtimeMethod` > `service` > `globalFunction`\n   - Direct method replacement on the runtime instance\n\n2. **Schema Updates**\n   - Extended `MockSchema` to include `runtimeMethod: z.string().optional()`\n   - Supports mocking any `IAgentRuntime` method (e.g., `useModel`, `getService`)\n\n3. **Conditional Matching**\n   - Matcher functions can inspect method arguments\n   - Example: `\"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"`\n   - Supports complex conditional logic for when to apply mocks\n\n#### Usage Example\n\n```yaml\nsetup:\n  mocks:\n    - runtimeMethod: \"useModel\"\n      method: \"useModel\"\n      when:\n        matcher: \"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"\n      response: \"<response><name>agent</name><reasoning>Mocked response</reasoning><action>RESPOND</action></response>\"\n```\n\n#### Benefits\n\n1. **Deterministic Testing**: Replace LLM calls with static responses\n2. **Full Workflow Testing**: Test complete agent decision flows\n3. **Conditional Mocking**: Apply mocks based on specific conditions\n4. **Runtime Integration**: Works seamlessly with existing agent architecture\n5. **Backward Compatibility**: Existing mocks continue to work\n\n#### Implementation Steps\n\n- MockEngine runtime method support\n- Schema updates for runtimeMethod mocks\n- Conditional matching with matcher functions\n- Integration with scenario runner\n- Basic useModel mocking working\n- Add support for mocking other runtime methods (getService, etc.)\n- Create comprehensive test scenarios\n- Add documentation and examples\n- Consider adding mock recording/replay capabilities\n\n### Technical Details\n\nThe implementation works by:\n1. Creating the `IAgentRuntime` instance in the scenario runner\n2. Applying mocks directly to the runtime object before agent initialization\n3. The bootstrap plugin receives the mocked runtime and uses the mocked methods\n4. Mocks are reverted after scenario completion\n\nThis approach provides the foundation for robust, deterministic agent testing while maintaining the existing architecture.",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "Implement Runtime Method Mocking for Deterministic Agent Testing",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 7668252177,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/testing",
                  "name": "testing",
                  "color": "2D3957",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAAByRA-EQ",
                  "description": ""
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5749,
              "node_id": "I_kwDOMT5cIs7FLaT0",
              "assignee": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "comments": 0,
              "html_url": "https://github.com/elizaOS/eliza/issues/5749",
              "assignees": [
                {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-11T00:08:49Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/labels{/name}",
              "updated_at": "2025-08-11T00:09:37Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3304516859,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747",
              "body": null,
              "type": null,
              "user": {
                "id": 48334430,
                "url": "https://api.github.com/users/samarth30",
                "type": "User",
                "login": "samarth30",
                "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                "html_url": "https://github.com/samarth30",
                "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/samarth30/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/samarth30/followers",
                "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/samarth30/orgs",
                "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                "received_events_url": "https://api.github.com/users/samarth30/received_events"
              },
              "state": "open",
              "title": "Fixing bugs in eliza-cloud",
              "labels": [],
              "locked": false,
              "number": 5747,
              "node_id": "I_kwDOMT5cIs7E9uz7",
              "assignee": {
                "id": 48334430,
                "url": "https://api.github.com/users/samarth30",
                "type": "User",
                "login": "samarth30",
                "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                "html_url": "https://github.com/samarth30",
                "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/samarth30/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/samarth30/followers",
                "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/samarth30/orgs",
                "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                "received_events_url": "https://api.github.com/users/samarth30/received_events"
              },
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5747",
              "assignees": [
                {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-08T16:01:56Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/labels{/name}",
              "updated_at": "2025-08-08T19:02:49Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "MEMBER",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": {
                "id": 20150,
                "name": "Linear",
                "slug": "linear",
                "owner": {
                  "id": 46686594,
                  "url": "https://api.github.com/users/linear",
                  "type": "Organization",
                  "login": "linear",
                  "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ2Njg2NTk0",
                  "html_url": "https://github.com/linear",
                  "gists_url": "https://api.github.com/users/linear/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/linear/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/46686594?v=4",
                  "events_url": "https://api.github.com/users/linear/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/linear/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/linear/followers",
                  "following_url": "https://api.github.com/users/linear/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/linear/orgs",
                  "subscriptions_url": "https://api.github.com/users/linear/subscriptions",
                  "received_events_url": "https://api.github.com/users/linear/received_events"
                },
                "events": [
                  "check_suite",
                  "issues",
                  "issue_comment",
                  "pull_request",
                  "pull_request_review",
                  "repository",
                  "sub_issues"
                ],
                "node_id": "MDM6QXBwMjAxNTA=",
                "html_url": "https://github.com/apps/linear",
                "client_id": "Iv1.085d682ea245c945",
                "created_at": "2018-11-02T18:07:23Z",
                "updated_at": "2025-02-07T14:59:56Z",
                "description": "",
                "permissions": {
                  "checks": "read",
                  "issues": "write",
                  "metadata": "read",
                  "pull_requests": "write"
                },
                "external_url": "https://linear.app"
              }
            },
            {
              "id": 3302237103,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738",
              "body": "## Description\n\nThe `bun run clean` command is failing due to TypeScript errors in `@elizaos/core` package during the DTS (type definition) build phase.\n\n## Error Details\n\n### Build Process\n```\n‚Ä¢ Running build in 17 packages\n‚Ä¢ Remote caching disabled\n@elizaos/config:build: cache miss\n@elizaos/autodoc:build: cache miss\n@elizaos/core:build: cache miss\n```\n\n### TypeScript Errors in @elizaos/core/src/utils.ts\n1. Line 218: `error TS2345: Argument of type '`${string}-${string}-${string}-${string}-${string}`' is not assignable to parameter of type 'never'.`\n2. Line 366: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n3. Line 409: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n4. Line 536: `error TS2345: Argument of type '{ numberOfChunks: number; averageChunkSize: number; }' is not assignable to parameter of type 'never'.`\n\n### Impact\n- Blocks `bun run clean` command\n- Prevents successful build of `@elizaos/core`\n- Affects dependent packages in the monorepo\n\n## Steps to Reproduce\n1. Run `bun run clean`\n2. Observe build failure in `@elizaos/core`\n3. Build fails with TypeScript errors during DTS generation\n\n## Expected Behavior\n- `bun run clean` should complete successfully\n- `@elizaos/core` should build without TypeScript errors\n- Type definitions should be generated correctly\n\n## Suggested Fix\n\nThe errors suggest type mismatches in `utils.ts`. Need to:\n1. Review type definitions in affected lines\n2. Update type assertions or generic constraints\n3. Ensure string template literal types are properly handled\n4. Fix object type assignments\n\n### Files to Update\n- `packages/core/src/utils.ts`\n\n## Priority\n**HIGH** - This is blocking clean builds and potentially affecting development workflow.",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "üêõ Build failure in @elizaos/core causing bun run clean to fail",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5738,
              "node_id": "I_kwDOMT5cIs7E1COv",
              "assignee": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5738",
              "assignees": [
                {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-08T00:26:11Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/labels{/name}",
              "updated_at": "2025-08-11T14:56:01Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3301116813,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734",
              "body": "**Describe the bug**\n\nOn project creation, ElizaOS CLI fails with the following error:\n```\n‚óá  Failed to build project\nstdout: src/index.ts(7,25): error TS2345: Argument of type 'string' is not assignable to parameter of type 'undefined'.\nstderr: $ tsc --noEmit && vite build && tsup\n```\n\n**To Reproduce**\n\n- Install ElizaOS through `bun`\n```\nbun i -g @elizaos/cli\n```\n- Create new ElizaOS project\n```\nelizaos create abcde\n```\n\n**Expected behavior**\n\nProject built successfully\n\n**Screenshots**\n\n<img width=\"1095\" height=\"572\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/967dd6a2-0d70-4e2e-8019-85a2eab5f225\" />\n\n**Additional context**\n\nElizaOS CLI version: `1.3.2`\n",
              "type": null,
              "user": {
                "id": 74447600,
                "url": "https://api.github.com/users/Kemystra",
                "type": "User",
                "login": "Kemystra",
                "node_id": "MDQ6VXNlcjc0NDQ3NjAw",
                "html_url": "https://github.com/Kemystra",
                "gists_url": "https://api.github.com/users/Kemystra/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/Kemystra/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/74447600?v=4",
                "events_url": "https://api.github.com/users/Kemystra/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/Kemystra/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/Kemystra/followers",
                "following_url": "https://api.github.com/users/Kemystra/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/Kemystra/orgs",
                "subscriptions_url": "https://api.github.com/users/Kemystra/subscriptions",
                "received_events_url": "https://api.github.com/users/Kemystra/received_events"
              },
              "state": "open",
              "title": "Eliza CLI failed to build project",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5734,
              "node_id": "I_kwDOMT5cIs7EwwuN",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5734",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T16:14:00Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/labels{/name}",
              "updated_at": "2025-08-08T19:43:52Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "NONE",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3299481897,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729",
              "body": "# Relates to\r\n\r\nN/A (Documentation improvement, not tied to a specific issue or ticket)\r\n\r\n# Risks\r\n\r\nLow.  \r\nThis change only updates documentation and does not affect any code or functionality.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR updates the elizaos README to include a fix for installation errors that may occur due to permission issues. It adds a note suggesting the use of sudo if users encounter a \"Permission denied\" or \"InstallFailed\" error when running the `elizaos create my-agent` command.\r\n\r\n## What kind of change is this?\r\n\r\nImprovements (misc. changes to existing features)  \r\nDocumentation update\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes require a change to the project documentation.  \r\nI have updated the documentation accordingly.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\nStart by reviewing the changes in the README.md file, specifically the section on creating a new project.\r\n\r\n## Detailed testing steps\r\n\r\n- Open the updated README.md.\r\n- Review the new instructions under \"Create Your First Project.\"\r\n- Confirm that the added note about using `sudo` is clear and helpful for users who encounter permission errors.",
              "type": null,
              "user": {
                "id": 32749185,
                "url": "https://api.github.com/users/mandatedisrael",
                "type": "User",
                "login": "mandatedisrael",
                "node_id": "MDQ6VXNlcjMyNzQ5MTg1",
                "html_url": "https://github.com/mandatedisrael",
                "gists_url": "https://api.github.com/users/mandatedisrael/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/mandatedisrael/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/32749185?v=4",
                "events_url": "https://api.github.com/users/mandatedisrael/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/mandatedisrael/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/mandatedisrael/followers",
                "following_url": "https://api.github.com/users/mandatedisrael/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/mandatedisrael/orgs",
                "subscriptions_url": "https://api.github.com/users/mandatedisrael/subscriptions",
                "received_events_url": "https://api.github.com/users/mandatedisrael/received_events"
              },
              "draft": false,
              "state": "open",
              "title": "Update README.md to fix error",
              "labels": [],
              "locked": false,
              "number": 5729,
              "node_id": "PR_kwDOMT5cIs6iiNWN",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/pull/5729",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T08:10:12Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/labels{/name}",
              "updated_at": "2025-08-07T08:10:24Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/comments",
              "pull_request": {
                "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5729",
                "diff_url": "https://github.com/elizaOS/eliza/pull/5729.diff",
                "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                "merged_at": null,
                "patch_url": "https://github.com/elizaOS/eliza/pull/5729.patch"
              },
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "FIRST_TIME_CONTRIBUTOR",
              "performed_via_github_app": null
            },
            {
              "id": 3299322983,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728",
              "body": "# Background\r\n\r\n## What does this PR do?\r\n\r\nIntroduce entity for cancelling runs `CancelRunSignal`\r\n\r\n## Why are we doing this? Any context or related work?\r\n\r\n- Calls to LLMs usually cost some credits\r\n- When we receive the `RUN_STARTED` event we can check current entity and end run to prevent credits spending\r\n\r\n# Documentation changes needed?\r\n\r\n## Methods\r\n\r\n- `static getSignal(runId: UUID)` - get signal by runId or create if null\r\n- `static clear(runId: UUID)` - clear signal from map\r\n- `cancel(content?: Content)` - cancel current run and and send `content` as a response to user\r\n\r\n## Example\r\n\r\n```typescript\r\nimport { Content, EventType, Plugin } from \"@elizaos/core\";\r\nimport { CancelRunSignal } from \"@elizaos/plugin-bootstrap\";\r\n\r\n// consider we have a service to determine eligibility for entity\r\ninterface EligibilityService {\r\n  check(entityId: UUID): Promise<{ result: boolean, reason?: Content }>\r\n}\r\n\r\nconst plugin: Plugin = {\r\n...\r\n  events: {\r\n    [EventType.RUN_STARTED]: ({ entityId, runId, runtime }) => {\r\n      const service = runtime.getService<EligibilityService>(\"USER_MANAGEMENT\");\r\n      const { result, reason } = await service.check(entityId);\r\n      \r\n      if (!result) {\r\n        const signal = CancelRunSignal.getSignal(runId);\r\n        signal.cancel(reason);\r\n      }\r\n    },\r\n    ...\r\n  },\r\n  ...\r\n}\r\n\r\nexport default Plugin;\r\n```\r\n\r\n## Discord username\r\n\r\nalexd000\r\n\r\n",
              "type": null,
              "user": {
                "id": 82507604,
                "url": "https://api.github.com/users/alex-nax",
                "type": "User",
                "login": "alex-nax",
                "node_id": "MDQ6VXNlcjgyNTA3NjA0",
                "html_url": "https://github.com/alex-nax",
                "gists_url": "https://api.github.com/users/alex-nax/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/alex-nax/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/82507604?v=4",
                "events_url": "https://api.github.com/users/alex-nax/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/alex-nax/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/alex-nax/followers",
                "following_url": "https://api.github.com/users/alex-nax/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/alex-nax/orgs",
                "subscriptions_url": "https://api.github.com/users/alex-nax/subscriptions",
                "received_events_url": "https://api.github.com/users/alex-nax/received_events"
              },
              "draft": false,
              "state": "open",
              "title": "feat: ability to cancel current run before any calls to LLM are made",
              "labels": [],
              "locked": false,
              "number": 5728,
              "node_id": "PR_kwDOMT5cIs6ihriD",
              "assignee": null,
              "comments": 3,
              "html_url": "https://github.com/elizaOS/eliza/pull/5728",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T07:19:35Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/labels{/name}",
              "updated_at": "2025-08-07T07:22:05Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/comments",
              "pull_request": {
                "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5728",
                "diff_url": "https://github.com/elizaOS/eliza/pull/5728.diff",
                "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                "merged_at": null,
                "patch_url": "https://github.com/elizaOS/eliza/pull/5728.patch"
              },
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "FIRST_TIME_CONTRIBUTOR",
              "performed_via_github_app": null
            },
            {
              "id": 3298692741,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727",
              "body": "# feat(scenarios): Implement natural language agent interaction and response validation\n\n## Description\n\nThis ticket enables scenarios to test agent behavior through natural language interactions rather than direct code execution. This allows testing of agent reasoning, decision-making, and response generation in realistic conversation contexts with proper evaluation of agent responses.\n\n## Acceptance Criteria\n\n1. Scenario `run` blocks support `input` field for natural language prompts to agents\n2. Agent responses are captured and available for evaluation (text, thoughts, actions)\n3. Evaluators can access both agent response text and execution context\n4. Support for multi-turn conversations in scenarios\n5. Agent responses include thought process and action decisions\n6. Integration with existing evaluation engine for response validation\n7. Support for conversation context across multiple steps\n8. Agent response timing and performance metrics\n\n## Technical Approach\n\n### 1. Enhanced Run Step Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst RunStepSchema = z.object({\n  name: z.string().optional(),\n  // Natural language input to agent\n  input: z.string().optional(),\n  // Direct code execution (existing)\n  lang: z.string().optional(),\n  code: z.string().optional(),\n  // Agent interaction specific\n  agent_context: z.object({\n    conversation_id: z.string().optional(),\n    user_id: z.string().optional(),\n    room_id: z.string().optional(),\n  }).optional(),\n  evaluations: z.array(EvaluationSchema),\n});\n```\n\n### 2. Agent Interaction Engine\n```typescript\n// packages/cli/src/scenarios/agent-interaction.ts\nexport class AgentInteractionEngine {\n  constructor(private runtime: IAgentRuntime) {}\n\n  async interactWithAgent(input: string, context?: AgentContext): Promise<AgentResponse> {\n    // Create message for agent\n    const message: Memory = {\n      entityId: context?.user_id || 'scenario-user',\n      roomId: context?.room_id || 'scenario-room',\n      content: {\n        type: 'text',\n        text: input,\n      },\n      metadata: {\n        type: 'message',\n        conversationId: context?.conversation_id,\n      },\n    };\n\n    // Send to agent and capture response\n    const startTime = Date.now();\n    const response = await this.runtime.processMessage(message);\n    const endTime = Date.now();\n\n    return {\n      text: response.text,\n      thoughts: response.thoughts,\n      actions: response.actions,\n      timing: {\n        startTime,\n        endTime,\n        duration: endTime - startTime,\n      },\n      context: {\n        conversationId: context?.conversation_id,\n        messageId: message.id,\n      },\n    };\n  }\n}\n```\n\n### 3. Enhanced Execution Result\n```typescript\n// packages/cli/src/scenarios/providers.ts\nexport interface ExecutionResult {\n  exitCode: number;\n  stdout: string;\n  stderr: string;\n  files: Record<string, string>;\n  // New: Agent interaction results\n  agentResponse?: AgentResponse;\n  conversationHistory?: AgentResponse[];\n}\n```\n\n## Test Scenario\n\nCreate `agent-interaction-test.scenario.yaml`:\n```yaml\nname: \"Agent Interaction Test\"\ndescription: \"Tests natural language interaction with agents\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Implement Dark Mode\"\n          number: 123\n          state: \"open\"\n          labels: [\"feature\", \"ui\"]\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"2.5\"\n\nrun:\n  - name: \"Ask agent about roadmap\"\n    input: \"What new features are you planning to add?\"\n    agent_context:\n      conversation_id: \"roadmap-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify agent searched for issues\"\n      \n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n        description: \"Verify agent mentioned the mocked issue\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent provide a helpful and coherent response about new features?\"\n        expected: \"yes\"\n        description: \"Verify agent response quality\"\n\n  - name: \"Ask agent about wallet\"\n    input: \"What's my current wallet balance?\"\n    agent_context:\n      conversation_id: \"wallet-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify agent checked wallet balance\"\n      \n      - type: \"string_contains\"\n        value: \"2.5 ETH\"\n        description: \"Verify agent reported the correct balance\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent clearly explain the wallet balance information?\"\n        expected: \"yes\"\n\n  - name: \"Multi-turn conversation\"\n    input: \"Can you help me with both my wallet and roadmap?\"\n    agent_context:\n      conversation_id: \"multi-turn-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"ETH\"\n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent address both wallet and roadmap questions comprehensively?\"\n        expected: \"yes\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Single Turn**: Test basic agent interaction and response\n2. **Multi-turn**: Test conversation context across steps\n3. **Action Tracking**: Verify agent uses appropriate actions\n4. **Response Quality**: Test LLM judge evaluation of responses\n5. **Performance**: Test response timing and metrics\n6. **Error Handling**: Test agent behavior with invalid inputs\n\n## Dependencies\n\n- Requires plugin system integration (Ticket 1)\n- Builds on advanced mocking system (Ticket 2)\n- Integrates with existing evaluation engine\n- Depends on agent runtime message processing",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement natural language agent interaction and response validation",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5727,
              "node_id": "I_kwDOMT5cIs7Eng6F",
              "assignee": null,
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5727",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:49:34Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/labels{/name}",
              "updated_at": "2025-08-07T05:35:40Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3298691383,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726",
              "body": "# feat(scenarios): Implement conditional mocking and complex response structures\n\n## Description\n\nThis ticket enhances the mocking system to support conditional responses based on input parameters and complex response structures with metadata. This enables realistic testing of service interactions like GitHub API calls or EVM transactions with proper request/response matching.\n\n## Acceptance Criteria\n\n1. Mock definitions support `when` clauses for conditional responses\n2. `when` clauses can match on method arguments, input parameters, or request context\n3. Mock responses support complex nested structures with metadata (timestamps, IDs, etc.)\n4. Multiple mock responses can be defined for the same service/method with different conditions\n5. Mock system provides clear logging of which mock was triggered and why\n6. Mock responses can include realistic error conditions and edge cases\n7. Support for dynamic response generation based on input parameters\n8. Mock validation ensures `when` clauses are syntactically correct\n\n## Technical Approach\n\n### 1. Enhanced Mock Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst MockSchema = z.object({\n  service: z.string(),\n  method: z.string(),\n  when: z.object({\n    // Match on method arguments\n    args: z.array(z.any()).optional(),\n    // Match on specific argument values\n    input: z.record(z.any()).optional(),\n    // Match on request context\n    context: z.record(z.any()).optional(),\n    // Custom matching function\n    matcher: z.string().optional(), // JavaScript expression\n  }).optional(),\n  response: z.any(), // Can be function or static value\n  // For dynamic responses\n  responseFn: z.string().optional(), // JavaScript function\n  // Error simulation\n  error: z.object({\n    code: z.string(),\n    message: z.string(),\n  }).optional(),\n});\n```\n\n### 2. Mock Engine Implementation\n```typescript\n// packages/cli/src/scenarios/mock-engine.ts\nexport class MockEngine {\n  private mocks: MockDefinition[] = [];\n\n  addMock(mock: MockDefinition) {\n    this.mocks.push(mock);\n  }\n\n  async findMock(service: string, method: string, args: any[]): Promise<any> {\n    const candidates = this.mocks.filter(m => \n      m.service === service && m.method === method\n    );\n\n    for (const mock of candidates) {\n      if (await this.matchesCondition(mock, args)) {\n        this.logger.info(`Mock triggered: ${service}.${method} with condition: ${JSON.stringify(mock.when)}`);\n        return this.generateResponse(mock, args);\n      }\n    }\n\n    return null; // No mock found\n  }\n\n  private async matchesCondition(mock: MockDefinition, args: any[]): Promise<boolean> {\n    if (!mock.when) return true; // Default mock\n\n    // Match on arguments\n    if (mock.when.args) {\n      if (!this.deepEqual(args, mock.when.args)) return false;\n    }\n\n    // Match on input parameters\n    if (mock.when.input) {\n      const input = this.extractInputFromArgs(args);\n      if (!this.deepEqual(input, mock.when.input)) return false;\n    }\n\n    // Custom matcher function\n    if (mock.when.matcher) {\n      const matcherFn = new Function('args', 'input', mock.when.matcher);\n      return matcherFn(args, this.extractInputFromArgs(args));\n    }\n\n    return true;\n  }\n\n  private generateResponse(mock: MockDefinition, args: any[]): any {\n    if (mock.error) {\n      throw new Error(`${mock.error.code}: ${mock.error.message}`);\n    }\n\n    if (mock.responseFn) {\n      const responseFn = new Function('args', 'input', mock.responseFn);\n      return responseFn(args, this.extractInputFromArgs(args));\n    }\n\n    return mock.response;\n  }\n}\n```\n\n## Test Scenario\n\nCreate `advanced-mocking-test.scenario.yaml`:\n```yaml\nname: \"Advanced Mocking Test\"\ndescription: \"Tests conditional mocking and complex response structures\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    # Conditional GitHub issue search\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"bug\"\n        matcher: \"input.labels.includes('bug')\"\n      response:\n        - title: \"Critical Bug Found\"\n          number: 456\n          state: \"open\"\n          labels: [\"bug\", \"critical\"]\n          created_at: \"2024-07-15T10:00:00Z\"\n\n    # Conditional GitHub issue search - different response\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"feature\"\n        matcher: \"input.labels.includes('feature')\"\n      response:\n        - title: \"New Feature Request\"\n          number: 789\n          state: \"open\"\n          labels: [\"feature\", \"enhancement\"]\n          created_at: \"2024-07-15T11:00:00Z\"\n\n    # Dynamic EVM balance response\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      when:\n        args: [\"0x1234567890abcdef\"]\n      responseFn: |\n        return {\n          chain: \"ethereum\",\n          address: args[0],\n          balances: [\n            { symbol: \"ETH\", amount: \"1.23\" },\n            { symbol: \"USDC\", amount: \"1000.00\" }\n          ],\n          last_updated: new Date().toISOString()\n        }\n\n    # Error simulation\n    - service: \"github-service\"\n      method: \"readFile\"\n      when:\n        input:\n          path: \"/docs/nonexistent.md\"\n      error:\n        code: \"FILE_NOT_FOUND\"\n        message: \"File does not exist\"\n\nrun:\n  - name: \"Test conditional GitHub search\"\n    input: \"Search for issues with bug label\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"Critical Bug Found\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent correctly search for bug issues?\"\n        expected: \"yes\"\n\n  - name: \"Test dynamic EVM response\"\n    input: \"What's the balance for address 0x1234567890abcdef?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n      - type: \"string_contains\"\n        value: \"1000.00 USDC\"\n\n  - name: \"Test error handling\"\n    input: \"Read the file /docs/nonexistent.md\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.readFile\"\n      - type: \"string_contains\"\n        value: \"File does not exist\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Conditional Matching**: Test different responses based on input parameters\n2. **Dynamic Responses**: Test response generation based on arguments\n3. **Error Simulation**: Test error handling and reporting\n4. **Complex Structures**: Test nested response objects with metadata\n5. **Multiple Mocks**: Test multiple mocks for same service/method\n6. **Logging**: Verify mock selection is logged clearly\n\n## Dependencies\n\n- Builds on existing mock system in scenarios\n- Requires plugin system integration (Ticket 1)\n- Integrates with agent interaction testing (Ticket 3) ",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement conditional mocking and complex response structures",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5726,
              "node_id": "I_kwDOMT5cIs7Engk3",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5726",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:49:00Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/labels{/name}",
              "updated_at": "2025-08-07T05:32:53Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3298689704,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725",
              "body": "# feat(scenarios): Implement plugin specification and dynamic loading\n\n## Description\n\nThis ticket implements plugin specification in scenario YAML files, allowing scenarios to declare which plugins are required for testing. This enables testing of agent behaviors that depend on specific plugins like `@elizaos/plugin-github` or `@elizaos/plugin-evm`. The system will dynamically load specified plugins during scenario execution and make their actions, providers, and services available to the agent.\n\n## Acceptance Criteria\n\n1. Scenario YAML supports a `plugins` array at the root level with string plugin names\n2. The `initializeAgent()` function respects scenario plugin specifications and loads them via `startAgent()`\n3. Plugin loading follows the same dependency resolution and error handling as the main CLI\n4. Scenarios can specify both string plugin names (`@elizaos/plugin-github`) and direct plugin objects\n5. Plugin loading errors are clearly reported with actionable guidance\n6. Default plugins (bootstrap, sql) are automatically included unless explicitly excluded via `exclude_defaults: true`\n7. Plugin conflicts are detected and reported during scenario validation\n8. Plugin initialization errors don't crash the scenario but are reported in results\n\n## Technical Approach\n\n### 1. Update Scenario Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst ScenarioSchema = z.object({\n  name: z.string(),\n  description: z.string(),\n  plugins: z.array(z.string()).optional(), // e.g., [\"@elizaos/plugin-github\"]\n  exclude_defaults: z.boolean().optional(), // exclude bootstrap/sql\n  environment: EnvironmentSchema,\n  setup: SetupSchema.optional(),\n  run: z.array(RunStepSchema),\n  judgment: JudgmentSchema,\n});\n```\n\n### 2. Enhance Runtime Factory\n```typescript\n// packages/cli/src/scenarios/runtime-factory.ts\nexport async function initializeAgent(scenario: Scenario): Promise<IAgentRuntime> {\n  const character: Character = {\n    name: 'scenario-runner',\n    id: stringToUuid('scenario-runner'),\n    bio: 'A minimal character for running scenarios',\n    plugins: scenario.plugins || []\n  };\n\n  // Load default plugins unless excluded\n  if (!scenario.exclude_defaults) {\n    character.plugins.push('@elizaos/plugin-bootstrap', '@elizaos/plugin-sql');\n  }\n\n  const runtime = await startAgent(\n    encryptedCharacter(character),\n    server,\n    undefined,\n    character.plugins,\n    { isTestMode: true }\n  );\n\n  return runtime;\n}\n```\n\n### 3. Plugin Validation\n```typescript\n// packages/cli/src/scenarios/plugin-validator.ts\nexport async function validateScenarioPlugins(scenario: Scenario): Promise<ValidationResult[]> {\n  const results: ValidationResult[] = [];\n  \n  for (const pluginName of scenario.plugins || []) {\n    try {\n      const plugin = await loadAndPreparePlugin(pluginName);\n      if (!plugin) {\n        results.push({\n          type: 'error',\n          message: `Plugin '${pluginName}' could not be loaded`,\n          suggestion: 'Check if plugin is installed or built correctly'\n        });\n      }\n    } catch (error) {\n      results.push({\n        type: 'error', \n        message: `Failed to validate plugin '${pluginName}': ${error.message}`,\n        suggestion: 'Verify plugin dependencies and configuration'\n      });\n    }\n  }\n  \n  return results;\n}\n```\n\n## Test Scenario\n\nCreate `plugin-integration-test.scenario.yaml`:\n```yaml\nname: \"Plugin Integration Test\"\ndescription: \"Tests loading and using plugins specified in scenario YAML\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Test Issue\"\n          number: 123\n          state: \"open\"\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"1.23\"\n\nrun:\n  - name: \"Test GitHub plugin actions\"\n    input: \"Search for issues with label 'bug'\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify GitHub plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"Test Issue\"\n        description: \"Verify agent found the mocked issue\"\n\n  - name: \"Test EVM plugin actions\"\n    input: \"What's my wallet balance?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify EVM plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n        description: \"Verify agent reported the mocked balance\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Plugin Loading Test**: Verify plugins load without errors\n2. **Action Availability Test**: Confirm agent can use plugin actions\n3. **Error Handling Test**: Test with non-existent plugin\n4. **Default Plugin Test**: Verify bootstrap/sql are included by default\n5. **Exclusion Test**: Test `exclude_defaults: true` behavior\n\n## Dependencies\n\n- Fixes the `startAgent` hanging issue (#5719) to enable plugin testing\n- Builds on existing `loadAndPreparePlugin` functionality\n- Integrates with current scenario execution flow ",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement plugin specification and dynamic loading",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5725,
              "node_id": "I_kwDOMT5cIs7EngKo",
              "assignee": null,
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5725",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:48:08Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/labels{/name}",
              "updated_at": "2025-08-07T05:37:32Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            }
          ]
        },
        "text": "Open issues for elizaOS/eliza (10 shown):\n‚Ä¢ #5754: Critical: Plugin Publishing Fails with False Success Reports (open) [bug]\n‚Ä¢ #5749: Implement Runtime Method Mocking for Deterministic Agent Testing (open) [enhancement, testing, Reality Spiral]\n‚Ä¢ #5747: Fixing bugs in eliza-cloud (open)\n‚Ä¢ #5738: üêõ Build failure in @elizaos/core causing bun run clean to fail (open) [bug]\n‚Ä¢ #5734: Eliza CLI failed to build project (open) [bug]\n‚Ä¢ #5729: Update README.md to fix error (open)\n‚Ä¢ #5728: feat: ability to cancel current run before any calls to LLM are made (open)\n‚Ä¢ #5727: feat(scenarios): Implement natural language agent interaction and response validation (open) [enhancement, Reality Spiral]\n‚Ä¢ #5726: feat(scenarios): Implement conditional mocking and complex response structures (open) [enhancement, Reality Spiral]\n‚Ä¢ #5725: feat(scenarios): Implement plugin specification and dynamic loading (open) [enhancement, Reality Spiral]",
        "values": {
          "issues": [
            {
              "id": 3310285907,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754",
              "body": "## Issue Summary\nThe `elizaos publish --npm` command reports successful publishing but the plugin is not actually published to npm, despite showing success messages. The npm publish is failing with a 404 error, but the ElizaOS CLI incorrectly reports success.\n\n## Key Problems Identified\n\n### 1. Critical NPM Publishing Failure\n- **Error**: `npm error 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found`\n- **Issue**: The package scope `@elizaos` doesn't exist on npm, preventing publishing\n- **Impact**: Package cannot be published to npm, but CLI reports success\n\n### 2. False Success Reporting\n- **Issue**: CLI reports `[‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm`\n- **Reality**: npm publish failed with 404 error\n- **Impact**: Developers believe their plugin is published when it's not\n\n### 3. Registry Repository Mismatch\n- **Expected**: Should create PR against `https://github.com/elizaos-plugins/registry`\n- **Actual**: Still references old registry `https://github.com/elizaos/registry`\n- **Impact**: Plugin won't appear in the official ElizaOS registry\n\n## Steps to Reproduce\n\n```bash\n# Navigate to the plugin directory\ncd packages/plugin-polygon\n\n# Ensure you're on the correct branch with the changes\ngit checkout polygon\n\n# Run the publish command\nelizaos publish --npm\n\n# Verify the success message appears\n# [‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm\n\n# Check if package actually exists on npm\nnpm view @elizaos/plugin-polygon@1.0.0\n# Result: 404 Not Found - '@elizaos/plugin-polygon@1.0.0' is not in this registry\n```\n\n## Technical Details\n\n### NPM Error Analysis\nThe npm logs show the root cause:\n```\nhttp fetch PUT 404 https://registry.npmjs.org/@elizaos%2fplugin-polygon 507ms\nerror 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found\n```\n\nThis indicates that the `@elizaos` scope doesn't exist on npm, which is required for publishing scoped packages.\n\n### CLI Error Handling Failure\nThe ElizaOS CLI is not properly parsing npm error codes:\n- npm returns exit code 1 (failure)\n- CLI ignores the error and reports success\n- No validation that the package actually exists on npm\n\n## Expected Behavior\n1. CLI should detect npm publish failures (exit code 1)\n2. CLI should fail with clear error message when package scope doesn't exist\n3. CLI should validate that package actually exists on npm after publishing\n4. CLI should create PRs against the correct registry repository\n\n## Recommended Fixes\n\n### 1. Fix NPM Error Detection\n```typescript\n// In the publish command, check npm exit code\nconst npmResult = await exec('npm publish', { cwd: pluginDir });\nif (npmResult.exitCode !== 0) {\n  throw new Error(`NPM publish failed: ${npmResult.stderr}`);\n}\n```\n\n### 2. Add Package Scope Validation\n```typescript\n// Before publishing, check if scope exists\nconst scopeExists = await checkNpmScope('@elizaos');\nif (!scopeExists) {\n  throw new Error('Package scope @elizaos does not exist on npm. Contact npm support to create the scope.');\n}\n```\n\n### 3. Add Post-Publish Validation\n```typescript\n// After publishing, verify package exists\nconst packageExists = await checkPackageExists(packageName, version);\nif (!packageExists) {\n  throw new Error(`Package was not published successfully. Check npm logs for details.`);\n}\n```\n\n## Priority\n**Critical** - This completely blocks plugin publishing and creates false success reports.\n\n## Affected Components\n- `packages/cli/src/commands/publish.ts`\n- NPM publishing logic\n- Error handling and success reporting\n- Package scope validation\n- Registry repository configuration\n\n## Immediate Action Required\n1. **Create the `@elizaos` scope on npm** or use an existing scope\n2. Update CLI to properly detect and handle npm publish failures\n3. Add post-publish validation to ensure packages actually exist on npm\n4. Update registry repository configuration\n\n## Alternative Solutions\n1. **Use existing scope**: Change package name to `@monilpat/plugin-polygon`\n2. **Create organization scope**: Set up `@elizaos` organization on npm\n3. **Use unscoped package**: Publish as `elizaos-plugin-polygon`\n\nThis issue is critically blocking plugin developers from successfully publishing their work and needs immediate attention from the ElizaOS team.\n",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "Critical: Plugin Publishing Fails with False Success Reports",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5754,
              "node_id": "I_kwDOMT5cIs7FTvRT",
              "assignee": null,
              "comments": 0,
              "html_url": "https://github.com/elizaOS/eliza/issues/5754",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-11T14:20:08Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/labels{/name}",
              "updated_at": "2025-08-11T14:20:08Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3308102900,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749",
              "body": "### Problem Statement\nCurrently, ElizaOS scenario testing lacks the ability to mock internal agent runtime calls (particularly LLM interactions) when testing via the API client. This makes it difficult to create deterministic tests for agent behavior and workflows.\n\n### Current Limitations\n- Global function mocks only work for code executed in the same process\n- No way to intercept `runtime.useModel` calls from the bootstrap plugin\n- Agent behavior is non-deterministic due to real LLM calls\n- Difficult to test specific agent decision paths and responses\n\n### Why Different Approach Was Needed\n\nThe existing mocking system was designed for **code execution environments** (E2B sandbox and local `node -e` processes), where mocks are applied to the execution context. However, **agent testing** works differently:\n\n- **E2B/Local Execution**: Code runs in isolated processes/sandboxes where global mocks can be applied\n- **Agent Testing**: Agent runs as a service with API client interaction, requiring direct runtime method interception\n- **Architecture Gap**: The bootstrap plugin calls `runtime.useModel` internally, which can't be mocked through the execution environment approach\n\nThis architectural difference necessitated a new approach that directly intercepts runtime methods rather than relying on execution context mocking.\n\n### Proposed Solution: Runtime Method Mocking\n\nWe've implemented a new mocking approach that directly intercepts `IAgentRuntime` method calls:\n\n#### Key Components\n\n1. **MockEngine Enhancement**\n   - Added `runtimeMethodMocks` to support mocking runtime methods\n   - Priority system: `runtimeMethod` > `service` > `globalFunction`\n   - Direct method replacement on the runtime instance\n\n2. **Schema Updates**\n   - Extended `MockSchema` to include `runtimeMethod: z.string().optional()`\n   - Supports mocking any `IAgentRuntime` method (e.g., `useModel`, `getService`)\n\n3. **Conditional Matching**\n   - Matcher functions can inspect method arguments\n   - Example: `\"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"`\n   - Supports complex conditional logic for when to apply mocks\n\n#### Usage Example\n\n```yaml\nsetup:\n  mocks:\n    - runtimeMethod: \"useModel\"\n      method: \"useModel\"\n      when:\n        matcher: \"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"\n      response: \"<response><name>agent</name><reasoning>Mocked response</reasoning><action>RESPOND</action></response>\"\n```\n\n#### Benefits\n\n1. **Deterministic Testing**: Replace LLM calls with static responses\n2. **Full Workflow Testing**: Test complete agent decision flows\n3. **Conditional Mocking**: Apply mocks based on specific conditions\n4. **Runtime Integration**: Works seamlessly with existing agent architecture\n5. **Backward Compatibility**: Existing mocks continue to work\n\n#### Implementation Steps\n\n- MockEngine runtime method support\n- Schema updates for runtimeMethod mocks\n- Conditional matching with matcher functions\n- Integration with scenario runner\n- Basic useModel mocking working\n- Add support for mocking other runtime methods (getService, etc.)\n- Create comprehensive test scenarios\n- Add documentation and examples\n- Consider adding mock recording/replay capabilities\n\n### Technical Details\n\nThe implementation works by:\n1. Creating the `IAgentRuntime` instance in the scenario runner\n2. Applying mocks directly to the runtime object before agent initialization\n3. The bootstrap plugin receives the mocked runtime and uses the mocked methods\n4. Mocks are reverted after scenario completion\n\nThis approach provides the foundation for robust, deterministic agent testing while maintaining the existing architecture.",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "Implement Runtime Method Mocking for Deterministic Agent Testing",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 7668252177,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/testing",
                  "name": "testing",
                  "color": "2D3957",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAAByRA-EQ",
                  "description": ""
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5749,
              "node_id": "I_kwDOMT5cIs7FLaT0",
              "assignee": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "comments": 0,
              "html_url": "https://github.com/elizaOS/eliza/issues/5749",
              "assignees": [
                {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-11T00:08:49Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/labels{/name}",
              "updated_at": "2025-08-11T00:09:37Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3304516859,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747",
              "body": null,
              "type": null,
              "user": {
                "id": 48334430,
                "url": "https://api.github.com/users/samarth30",
                "type": "User",
                "login": "samarth30",
                "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                "html_url": "https://github.com/samarth30",
                "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/samarth30/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/samarth30/followers",
                "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/samarth30/orgs",
                "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                "received_events_url": "https://api.github.com/users/samarth30/received_events"
              },
              "state": "open",
              "title": "Fixing bugs in eliza-cloud",
              "labels": [],
              "locked": false,
              "number": 5747,
              "node_id": "I_kwDOMT5cIs7E9uz7",
              "assignee": {
                "id": 48334430,
                "url": "https://api.github.com/users/samarth30",
                "type": "User",
                "login": "samarth30",
                "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                "html_url": "https://github.com/samarth30",
                "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/samarth30/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/samarth30/followers",
                "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/samarth30/orgs",
                "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                "received_events_url": "https://api.github.com/users/samarth30/received_events"
              },
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5747",
              "assignees": [
                {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-08T16:01:56Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/labels{/name}",
              "updated_at": "2025-08-08T19:02:49Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "MEMBER",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": {
                "id": 20150,
                "name": "Linear",
                "slug": "linear",
                "owner": {
                  "id": 46686594,
                  "url": "https://api.github.com/users/linear",
                  "type": "Organization",
                  "login": "linear",
                  "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ2Njg2NTk0",
                  "html_url": "https://github.com/linear",
                  "gists_url": "https://api.github.com/users/linear/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/linear/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/46686594?v=4",
                  "events_url": "https://api.github.com/users/linear/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/linear/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/linear/followers",
                  "following_url": "https://api.github.com/users/linear/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/linear/orgs",
                  "subscriptions_url": "https://api.github.com/users/linear/subscriptions",
                  "received_events_url": "https://api.github.com/users/linear/received_events"
                },
                "events": [
                  "check_suite",
                  "issues",
                  "issue_comment",
                  "pull_request",
                  "pull_request_review",
                  "repository",
                  "sub_issues"
                ],
                "node_id": "MDM6QXBwMjAxNTA=",
                "html_url": "https://github.com/apps/linear",
                "client_id": "Iv1.085d682ea245c945",
                "created_at": "2018-11-02T18:07:23Z",
                "updated_at": "2025-02-07T14:59:56Z",
                "description": "",
                "permissions": {
                  "checks": "read",
                  "issues": "write",
                  "metadata": "read",
                  "pull_requests": "write"
                },
                "external_url": "https://linear.app"
              }
            },
            {
              "id": 3302237103,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738",
              "body": "## Description\n\nThe `bun run clean` command is failing due to TypeScript errors in `@elizaos/core` package during the DTS (type definition) build phase.\n\n## Error Details\n\n### Build Process\n```\n‚Ä¢ Running build in 17 packages\n‚Ä¢ Remote caching disabled\n@elizaos/config:build: cache miss\n@elizaos/autodoc:build: cache miss\n@elizaos/core:build: cache miss\n```\n\n### TypeScript Errors in @elizaos/core/src/utils.ts\n1. Line 218: `error TS2345: Argument of type '`${string}-${string}-${string}-${string}-${string}`' is not assignable to parameter of type 'never'.`\n2. Line 366: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n3. Line 409: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n4. Line 536: `error TS2345: Argument of type '{ numberOfChunks: number; averageChunkSize: number; }' is not assignable to parameter of type 'never'.`\n\n### Impact\n- Blocks `bun run clean` command\n- Prevents successful build of `@elizaos/core`\n- Affects dependent packages in the monorepo\n\n## Steps to Reproduce\n1. Run `bun run clean`\n2. Observe build failure in `@elizaos/core`\n3. Build fails with TypeScript errors during DTS generation\n\n## Expected Behavior\n- `bun run clean` should complete successfully\n- `@elizaos/core` should build without TypeScript errors\n- Type definitions should be generated correctly\n\n## Suggested Fix\n\nThe errors suggest type mismatches in `utils.ts`. Need to:\n1. Review type definitions in affected lines\n2. Update type assertions or generic constraints\n3. Ensure string template literal types are properly handled\n4. Fix object type assignments\n\n### Files to Update\n- `packages/core/src/utils.ts`\n\n## Priority\n**HIGH** - This is blocking clean builds and potentially affecting development workflow.",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "üêõ Build failure in @elizaos/core causing bun run clean to fail",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5738,
              "node_id": "I_kwDOMT5cIs7E1COv",
              "assignee": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5738",
              "assignees": [
                {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-08T00:26:11Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/labels{/name}",
              "updated_at": "2025-08-11T14:56:01Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3301116813,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734",
              "body": "**Describe the bug**\n\nOn project creation, ElizaOS CLI fails with the following error:\n```\n‚óá  Failed to build project\nstdout: src/index.ts(7,25): error TS2345: Argument of type 'string' is not assignable to parameter of type 'undefined'.\nstderr: $ tsc --noEmit && vite build && tsup\n```\n\n**To Reproduce**\n\n- Install ElizaOS through `bun`\n```\nbun i -g @elizaos/cli\n```\n- Create new ElizaOS project\n```\nelizaos create abcde\n```\n\n**Expected behavior**\n\nProject built successfully\n\n**Screenshots**\n\n<img width=\"1095\" height=\"572\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/967dd6a2-0d70-4e2e-8019-85a2eab5f225\" />\n\n**Additional context**\n\nElizaOS CLI version: `1.3.2`\n",
              "type": null,
              "user": {
                "id": 74447600,
                "url": "https://api.github.com/users/Kemystra",
                "type": "User",
                "login": "Kemystra",
                "node_id": "MDQ6VXNlcjc0NDQ3NjAw",
                "html_url": "https://github.com/Kemystra",
                "gists_url": "https://api.github.com/users/Kemystra/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/Kemystra/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/74447600?v=4",
                "events_url": "https://api.github.com/users/Kemystra/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/Kemystra/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/Kemystra/followers",
                "following_url": "https://api.github.com/users/Kemystra/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/Kemystra/orgs",
                "subscriptions_url": "https://api.github.com/users/Kemystra/subscriptions",
                "received_events_url": "https://api.github.com/users/Kemystra/received_events"
              },
              "state": "open",
              "title": "Eliza CLI failed to build project",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5734,
              "node_id": "I_kwDOMT5cIs7EwwuN",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5734",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T16:14:00Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/labels{/name}",
              "updated_at": "2025-08-08T19:43:52Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "NONE",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3299481897,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729",
              "body": "# Relates to\r\n\r\nN/A (Documentation improvement, not tied to a specific issue or ticket)\r\n\r\n# Risks\r\n\r\nLow.  \r\nThis change only updates documentation and does not affect any code or functionality.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR updates the elizaos README to include a fix for installation errors that may occur due to permission issues. It adds a note suggesting the use of sudo if users encounter a \"Permission denied\" or \"InstallFailed\" error when running the `elizaos create my-agent` command.\r\n\r\n## What kind of change is this?\r\n\r\nImprovements (misc. changes to existing features)  \r\nDocumentation update\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes require a change to the project documentation.  \r\nI have updated the documentation accordingly.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\nStart by reviewing the changes in the README.md file, specifically the section on creating a new project.\r\n\r\n## Detailed testing steps\r\n\r\n- Open the updated README.md.\r\n- Review the new instructions under \"Create Your First Project.\"\r\n- Confirm that the added note about using `sudo` is clear and helpful for users who encounter permission errors.",
              "type": null,
              "user": {
                "id": 32749185,
                "url": "https://api.github.com/users/mandatedisrael",
                "type": "User",
                "login": "mandatedisrael",
                "node_id": "MDQ6VXNlcjMyNzQ5MTg1",
                "html_url": "https://github.com/mandatedisrael",
                "gists_url": "https://api.github.com/users/mandatedisrael/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/mandatedisrael/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/32749185?v=4",
                "events_url": "https://api.github.com/users/mandatedisrael/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/mandatedisrael/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/mandatedisrael/followers",
                "following_url": "https://api.github.com/users/mandatedisrael/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/mandatedisrael/orgs",
                "subscriptions_url": "https://api.github.com/users/mandatedisrael/subscriptions",
                "received_events_url": "https://api.github.com/users/mandatedisrael/received_events"
              },
              "draft": false,
              "state": "open",
              "title": "Update README.md to fix error",
              "labels": [],
              "locked": false,
              "number": 5729,
              "node_id": "PR_kwDOMT5cIs6iiNWN",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/pull/5729",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T08:10:12Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/labels{/name}",
              "updated_at": "2025-08-07T08:10:24Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/comments",
              "pull_request": {
                "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5729",
                "diff_url": "https://github.com/elizaOS/eliza/pull/5729.diff",
                "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                "merged_at": null,
                "patch_url": "https://github.com/elizaOS/eliza/pull/5729.patch"
              },
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "FIRST_TIME_CONTRIBUTOR",
              "performed_via_github_app": null
            },
            {
              "id": 3299322983,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728",
              "body": "# Background\r\n\r\n## What does this PR do?\r\n\r\nIntroduce entity for cancelling runs `CancelRunSignal`\r\n\r\n## Why are we doing this? Any context or related work?\r\n\r\n- Calls to LLMs usually cost some credits\r\n- When we receive the `RUN_STARTED` event we can check current entity and end run to prevent credits spending\r\n\r\n# Documentation changes needed?\r\n\r\n## Methods\r\n\r\n- `static getSignal(runId: UUID)` - get signal by runId or create if null\r\n- `static clear(runId: UUID)` - clear signal from map\r\n- `cancel(content?: Content)` - cancel current run and and send `content` as a response to user\r\n\r\n## Example\r\n\r\n```typescript\r\nimport { Content, EventType, Plugin } from \"@elizaos/core\";\r\nimport { CancelRunSignal } from \"@elizaos/plugin-bootstrap\";\r\n\r\n// consider we have a service to determine eligibility for entity\r\ninterface EligibilityService {\r\n  check(entityId: UUID): Promise<{ result: boolean, reason?: Content }>\r\n}\r\n\r\nconst plugin: Plugin = {\r\n...\r\n  events: {\r\n    [EventType.RUN_STARTED]: ({ entityId, runId, runtime }) => {\r\n      const service = runtime.getService<EligibilityService>(\"USER_MANAGEMENT\");\r\n      const { result, reason } = await service.check(entityId);\r\n      \r\n      if (!result) {\r\n        const signal = CancelRunSignal.getSignal(runId);\r\n        signal.cancel(reason);\r\n      }\r\n    },\r\n    ...\r\n  },\r\n  ...\r\n}\r\n\r\nexport default Plugin;\r\n```\r\n\r\n## Discord username\r\n\r\nalexd000\r\n\r\n",
              "type": null,
              "user": {
                "id": 82507604,
                "url": "https://api.github.com/users/alex-nax",
                "type": "User",
                "login": "alex-nax",
                "node_id": "MDQ6VXNlcjgyNTA3NjA0",
                "html_url": "https://github.com/alex-nax",
                "gists_url": "https://api.github.com/users/alex-nax/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/alex-nax/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/82507604?v=4",
                "events_url": "https://api.github.com/users/alex-nax/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/alex-nax/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/alex-nax/followers",
                "following_url": "https://api.github.com/users/alex-nax/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/alex-nax/orgs",
                "subscriptions_url": "https://api.github.com/users/alex-nax/subscriptions",
                "received_events_url": "https://api.github.com/users/alex-nax/received_events"
              },
              "draft": false,
              "state": "open",
              "title": "feat: ability to cancel current run before any calls to LLM are made",
              "labels": [],
              "locked": false,
              "number": 5728,
              "node_id": "PR_kwDOMT5cIs6ihriD",
              "assignee": null,
              "comments": 3,
              "html_url": "https://github.com/elizaOS/eliza/pull/5728",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T07:19:35Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/labels{/name}",
              "updated_at": "2025-08-07T07:22:05Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/comments",
              "pull_request": {
                "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5728",
                "diff_url": "https://github.com/elizaOS/eliza/pull/5728.diff",
                "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                "merged_at": null,
                "patch_url": "https://github.com/elizaOS/eliza/pull/5728.patch"
              },
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "FIRST_TIME_CONTRIBUTOR",
              "performed_via_github_app": null
            },
            {
              "id": 3298692741,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727",
              "body": "# feat(scenarios): Implement natural language agent interaction and response validation\n\n## Description\n\nThis ticket enables scenarios to test agent behavior through natural language interactions rather than direct code execution. This allows testing of agent reasoning, decision-making, and response generation in realistic conversation contexts with proper evaluation of agent responses.\n\n## Acceptance Criteria\n\n1. Scenario `run` blocks support `input` field for natural language prompts to agents\n2. Agent responses are captured and available for evaluation (text, thoughts, actions)\n3. Evaluators can access both agent response text and execution context\n4. Support for multi-turn conversations in scenarios\n5. Agent responses include thought process and action decisions\n6. Integration with existing evaluation engine for response validation\n7. Support for conversation context across multiple steps\n8. Agent response timing and performance metrics\n\n## Technical Approach\n\n### 1. Enhanced Run Step Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst RunStepSchema = z.object({\n  name: z.string().optional(),\n  // Natural language input to agent\n  input: z.string().optional(),\n  // Direct code execution (existing)\n  lang: z.string().optional(),\n  code: z.string().optional(),\n  // Agent interaction specific\n  agent_context: z.object({\n    conversation_id: z.string().optional(),\n    user_id: z.string().optional(),\n    room_id: z.string().optional(),\n  }).optional(),\n  evaluations: z.array(EvaluationSchema),\n});\n```\n\n### 2. Agent Interaction Engine\n```typescript\n// packages/cli/src/scenarios/agent-interaction.ts\nexport class AgentInteractionEngine {\n  constructor(private runtime: IAgentRuntime) {}\n\n  async interactWithAgent(input: string, context?: AgentContext): Promise<AgentResponse> {\n    // Create message for agent\n    const message: Memory = {\n      entityId: context?.user_id || 'scenario-user',\n      roomId: context?.room_id || 'scenario-room',\n      content: {\n        type: 'text',\n        text: input,\n      },\n      metadata: {\n        type: 'message',\n        conversationId: context?.conversation_id,\n      },\n    };\n\n    // Send to agent and capture response\n    const startTime = Date.now();\n    const response = await this.runtime.processMessage(message);\n    const endTime = Date.now();\n\n    return {\n      text: response.text,\n      thoughts: response.thoughts,\n      actions: response.actions,\n      timing: {\n        startTime,\n        endTime,\n        duration: endTime - startTime,\n      },\n      context: {\n        conversationId: context?.conversation_id,\n        messageId: message.id,\n      },\n    };\n  }\n}\n```\n\n### 3. Enhanced Execution Result\n```typescript\n// packages/cli/src/scenarios/providers.ts\nexport interface ExecutionResult {\n  exitCode: number;\n  stdout: string;\n  stderr: string;\n  files: Record<string, string>;\n  // New: Agent interaction results\n  agentResponse?: AgentResponse;\n  conversationHistory?: AgentResponse[];\n}\n```\n\n## Test Scenario\n\nCreate `agent-interaction-test.scenario.yaml`:\n```yaml\nname: \"Agent Interaction Test\"\ndescription: \"Tests natural language interaction with agents\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Implement Dark Mode\"\n          number: 123\n          state: \"open\"\n          labels: [\"feature\", \"ui\"]\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"2.5\"\n\nrun:\n  - name: \"Ask agent about roadmap\"\n    input: \"What new features are you planning to add?\"\n    agent_context:\n      conversation_id: \"roadmap-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify agent searched for issues\"\n      \n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n        description: \"Verify agent mentioned the mocked issue\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent provide a helpful and coherent response about new features?\"\n        expected: \"yes\"\n        description: \"Verify agent response quality\"\n\n  - name: \"Ask agent about wallet\"\n    input: \"What's my current wallet balance?\"\n    agent_context:\n      conversation_id: \"wallet-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify agent checked wallet balance\"\n      \n      - type: \"string_contains\"\n        value: \"2.5 ETH\"\n        description: \"Verify agent reported the correct balance\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent clearly explain the wallet balance information?\"\n        expected: \"yes\"\n\n  - name: \"Multi-turn conversation\"\n    input: \"Can you help me with both my wallet and roadmap?\"\n    agent_context:\n      conversation_id: \"multi-turn-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"ETH\"\n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent address both wallet and roadmap questions comprehensively?\"\n        expected: \"yes\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Single Turn**: Test basic agent interaction and response\n2. **Multi-turn**: Test conversation context across steps\n3. **Action Tracking**: Verify agent uses appropriate actions\n4. **Response Quality**: Test LLM judge evaluation of responses\n5. **Performance**: Test response timing and metrics\n6. **Error Handling**: Test agent behavior with invalid inputs\n\n## Dependencies\n\n- Requires plugin system integration (Ticket 1)\n- Builds on advanced mocking system (Ticket 2)\n- Integrates with existing evaluation engine\n- Depends on agent runtime message processing",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement natural language agent interaction and response validation",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5727,
              "node_id": "I_kwDOMT5cIs7Eng6F",
              "assignee": null,
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5727",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:49:34Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/labels{/name}",
              "updated_at": "2025-08-07T05:35:40Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3298691383,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726",
              "body": "# feat(scenarios): Implement conditional mocking and complex response structures\n\n## Description\n\nThis ticket enhances the mocking system to support conditional responses based on input parameters and complex response structures with metadata. This enables realistic testing of service interactions like GitHub API calls or EVM transactions with proper request/response matching.\n\n## Acceptance Criteria\n\n1. Mock definitions support `when` clauses for conditional responses\n2. `when` clauses can match on method arguments, input parameters, or request context\n3. Mock responses support complex nested structures with metadata (timestamps, IDs, etc.)\n4. Multiple mock responses can be defined for the same service/method with different conditions\n5. Mock system provides clear logging of which mock was triggered and why\n6. Mock responses can include realistic error conditions and edge cases\n7. Support for dynamic response generation based on input parameters\n8. Mock validation ensures `when` clauses are syntactically correct\n\n## Technical Approach\n\n### 1. Enhanced Mock Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst MockSchema = z.object({\n  service: z.string(),\n  method: z.string(),\n  when: z.object({\n    // Match on method arguments\n    args: z.array(z.any()).optional(),\n    // Match on specific argument values\n    input: z.record(z.any()).optional(),\n    // Match on request context\n    context: z.record(z.any()).optional(),\n    // Custom matching function\n    matcher: z.string().optional(), // JavaScript expression\n  }).optional(),\n  response: z.any(), // Can be function or static value\n  // For dynamic responses\n  responseFn: z.string().optional(), // JavaScript function\n  // Error simulation\n  error: z.object({\n    code: z.string(),\n    message: z.string(),\n  }).optional(),\n});\n```\n\n### 2. Mock Engine Implementation\n```typescript\n// packages/cli/src/scenarios/mock-engine.ts\nexport class MockEngine {\n  private mocks: MockDefinition[] = [];\n\n  addMock(mock: MockDefinition) {\n    this.mocks.push(mock);\n  }\n\n  async findMock(service: string, method: string, args: any[]): Promise<any> {\n    const candidates = this.mocks.filter(m => \n      m.service === service && m.method === method\n    );\n\n    for (const mock of candidates) {\n      if (await this.matchesCondition(mock, args)) {\n        this.logger.info(`Mock triggered: ${service}.${method} with condition: ${JSON.stringify(mock.when)}`);\n        return this.generateResponse(mock, args);\n      }\n    }\n\n    return null; // No mock found\n  }\n\n  private async matchesCondition(mock: MockDefinition, args: any[]): Promise<boolean> {\n    if (!mock.when) return true; // Default mock\n\n    // Match on arguments\n    if (mock.when.args) {\n      if (!this.deepEqual(args, mock.when.args)) return false;\n    }\n\n    // Match on input parameters\n    if (mock.when.input) {\n      const input = this.extractInputFromArgs(args);\n      if (!this.deepEqual(input, mock.when.input)) return false;\n    }\n\n    // Custom matcher function\n    if (mock.when.matcher) {\n      const matcherFn = new Function('args', 'input', mock.when.matcher);\n      return matcherFn(args, this.extractInputFromArgs(args));\n    }\n\n    return true;\n  }\n\n  private generateResponse(mock: MockDefinition, args: any[]): any {\n    if (mock.error) {\n      throw new Error(`${mock.error.code}: ${mock.error.message}`);\n    }\n\n    if (mock.responseFn) {\n      const responseFn = new Function('args', 'input', mock.responseFn);\n      return responseFn(args, this.extractInputFromArgs(args));\n    }\n\n    return mock.response;\n  }\n}\n```\n\n## Test Scenario\n\nCreate `advanced-mocking-test.scenario.yaml`:\n```yaml\nname: \"Advanced Mocking Test\"\ndescription: \"Tests conditional mocking and complex response structures\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    # Conditional GitHub issue search\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"bug\"\n        matcher: \"input.labels.includes('bug')\"\n      response:\n        - title: \"Critical Bug Found\"\n          number: 456\n          state: \"open\"\n          labels: [\"bug\", \"critical\"]\n          created_at: \"2024-07-15T10:00:00Z\"\n\n    # Conditional GitHub issue search - different response\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"feature\"\n        matcher: \"input.labels.includes('feature')\"\n      response:\n        - title: \"New Feature Request\"\n          number: 789\n          state: \"open\"\n          labels: [\"feature\", \"enhancement\"]\n          created_at: \"2024-07-15T11:00:00Z\"\n\n    # Dynamic EVM balance response\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      when:\n        args: [\"0x1234567890abcdef\"]\n      responseFn: |\n        return {\n          chain: \"ethereum\",\n          address: args[0],\n          balances: [\n            { symbol: \"ETH\", amount: \"1.23\" },\n            { symbol: \"USDC\", amount: \"1000.00\" }\n          ],\n          last_updated: new Date().toISOString()\n        }\n\n    # Error simulation\n    - service: \"github-service\"\n      method: \"readFile\"\n      when:\n        input:\n          path: \"/docs/nonexistent.md\"\n      error:\n        code: \"FILE_NOT_FOUND\"\n        message: \"File does not exist\"\n\nrun:\n  - name: \"Test conditional GitHub search\"\n    input: \"Search for issues with bug label\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"Critical Bug Found\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent correctly search for bug issues?\"\n        expected: \"yes\"\n\n  - name: \"Test dynamic EVM response\"\n    input: \"What's the balance for address 0x1234567890abcdef?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n      - type: \"string_contains\"\n        value: \"1000.00 USDC\"\n\n  - name: \"Test error handling\"\n    input: \"Read the file /docs/nonexistent.md\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.readFile\"\n      - type: \"string_contains\"\n        value: \"File does not exist\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Conditional Matching**: Test different responses based on input parameters\n2. **Dynamic Responses**: Test response generation based on arguments\n3. **Error Simulation**: Test error handling and reporting\n4. **Complex Structures**: Test nested response objects with metadata\n5. **Multiple Mocks**: Test multiple mocks for same service/method\n6. **Logging**: Verify mock selection is logged clearly\n\n## Dependencies\n\n- Builds on existing mock system in scenarios\n- Requires plugin system integration (Ticket 1)\n- Integrates with agent interaction testing (Ticket 3) ",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement conditional mocking and complex response structures",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5726,
              "node_id": "I_kwDOMT5cIs7Engk3",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5726",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:49:00Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/labels{/name}",
              "updated_at": "2025-08-07T05:32:53Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3298689704,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725",
              "body": "# feat(scenarios): Implement plugin specification and dynamic loading\n\n## Description\n\nThis ticket implements plugin specification in scenario YAML files, allowing scenarios to declare which plugins are required for testing. This enables testing of agent behaviors that depend on specific plugins like `@elizaos/plugin-github` or `@elizaos/plugin-evm`. The system will dynamically load specified plugins during scenario execution and make their actions, providers, and services available to the agent.\n\n## Acceptance Criteria\n\n1. Scenario YAML supports a `plugins` array at the root level with string plugin names\n2. The `initializeAgent()` function respects scenario plugin specifications and loads them via `startAgent()`\n3. Plugin loading follows the same dependency resolution and error handling as the main CLI\n4. Scenarios can specify both string plugin names (`@elizaos/plugin-github`) and direct plugin objects\n5. Plugin loading errors are clearly reported with actionable guidance\n6. Default plugins (bootstrap, sql) are automatically included unless explicitly excluded via `exclude_defaults: true`\n7. Plugin conflicts are detected and reported during scenario validation\n8. Plugin initialization errors don't crash the scenario but are reported in results\n\n## Technical Approach\n\n### 1. Update Scenario Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst ScenarioSchema = z.object({\n  name: z.string(),\n  description: z.string(),\n  plugins: z.array(z.string()).optional(), // e.g., [\"@elizaos/plugin-github\"]\n  exclude_defaults: z.boolean().optional(), // exclude bootstrap/sql\n  environment: EnvironmentSchema,\n  setup: SetupSchema.optional(),\n  run: z.array(RunStepSchema),\n  judgment: JudgmentSchema,\n});\n```\n\n### 2. Enhance Runtime Factory\n```typescript\n// packages/cli/src/scenarios/runtime-factory.ts\nexport async function initializeAgent(scenario: Scenario): Promise<IAgentRuntime> {\n  const character: Character = {\n    name: 'scenario-runner',\n    id: stringToUuid('scenario-runner'),\n    bio: 'A minimal character for running scenarios',\n    plugins: scenario.plugins || []\n  };\n\n  // Load default plugins unless excluded\n  if (!scenario.exclude_defaults) {\n    character.plugins.push('@elizaos/plugin-bootstrap', '@elizaos/plugin-sql');\n  }\n\n  const runtime = await startAgent(\n    encryptedCharacter(character),\n    server,\n    undefined,\n    character.plugins,\n    { isTestMode: true }\n  );\n\n  return runtime;\n}\n```\n\n### 3. Plugin Validation\n```typescript\n// packages/cli/src/scenarios/plugin-validator.ts\nexport async function validateScenarioPlugins(scenario: Scenario): Promise<ValidationResult[]> {\n  const results: ValidationResult[] = [];\n  \n  for (const pluginName of scenario.plugins || []) {\n    try {\n      const plugin = await loadAndPreparePlugin(pluginName);\n      if (!plugin) {\n        results.push({\n          type: 'error',\n          message: `Plugin '${pluginName}' could not be loaded`,\n          suggestion: 'Check if plugin is installed or built correctly'\n        });\n      }\n    } catch (error) {\n      results.push({\n        type: 'error', \n        message: `Failed to validate plugin '${pluginName}': ${error.message}`,\n        suggestion: 'Verify plugin dependencies and configuration'\n      });\n    }\n  }\n  \n  return results;\n}\n```\n\n## Test Scenario\n\nCreate `plugin-integration-test.scenario.yaml`:\n```yaml\nname: \"Plugin Integration Test\"\ndescription: \"Tests loading and using plugins specified in scenario YAML\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Test Issue\"\n          number: 123\n          state: \"open\"\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"1.23\"\n\nrun:\n  - name: \"Test GitHub plugin actions\"\n    input: \"Search for issues with label 'bug'\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify GitHub plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"Test Issue\"\n        description: \"Verify agent found the mocked issue\"\n\n  - name: \"Test EVM plugin actions\"\n    input: \"What's my wallet balance?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify EVM plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n        description: \"Verify agent reported the mocked balance\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Plugin Loading Test**: Verify plugins load without errors\n2. **Action Availability Test**: Confirm agent can use plugin actions\n3. **Error Handling Test**: Test with non-existent plugin\n4. **Default Plugin Test**: Verify bootstrap/sql are included by default\n5. **Exclusion Test**: Test `exclude_defaults: true` behavior\n\n## Dependencies\n\n- Fixes the `startAgent` hanging issue (#5719) to enable plugin testing\n- Builds on existing `loadAndPreparePlugin` functionality\n- Integrates with current scenario execution flow ",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement plugin specification and dynamic loading",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5725,
              "node_id": "I_kwDOMT5cIs7EngKo",
              "assignee": null,
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5725",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:48:08Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/labels{/name}",
              "updated_at": "2025-08-07T05:37:32Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            }
          ],
          "issueCount": 10,
          "repository": "elizaOS/eliza"
        },
        "success": true
      },
      "actionStatus": "completed"
    },
    "entityId": "0137f0e4-d2e2-0ee6-82e5-af58b88ec91b",
    "agentId": "0137f0e4-d2e2-0ee6-82e5-af58b88ec91b",
    "roomId": "c5f5255b-5c96-0b94-aed8-dbed5897f95d",
    "unique": true,
    "metadata": {
      "type": "action_result",
      "runId": "e4407751-9fee-4551-adcd-dc61930116ba",
      "actionId": "c2e317c2-20b1-499c-b962-6c08a4124e08",
      "actionName": "LIST_GITHUB_ISSUES",
      "totalSteps": 2,
      "currentStep": 2
    }
  },
  {
    "id": "8803dfb4-fc4a-43d4-8597-35dc139bb193",
    "type": "messages",
    "createdAt": 1754968912886,
    "content": {
      "text": "Generated reply: Let me check the open issues for the `elizaOS/eliza` repository. I'll have that information for you shortly.",
      "type": "action_result",
      "runId": "e4407751-9fee-4551-adcd-dc61930116ba",
      "source": "action",
      "planStep": "1/2",
      "actionName": "REPLY",
      "planThought": "I need to list the open issues for the elizaOS/eliza repository as requested by the user.",
      "actionResult": {
        "data": {
          "thought": "I am preparing to list the open issues for the elizaOS/eliza repository as requested.",
          "response": {
            "text": "Let me check the open issues for the `elizaOS/eliza` repository. I'll have that information for you shortly.",
            "actions": [
              "REPLY"
            ],
            "thought": "I am preparing to list the open issues for the elizaOS/eliza repository as requested."
          },
          "actionName": "REPLY",
          "messageGenerated": true
        },
        "text": "Generated reply: Let me check the open issues for the `elizaOS/eliza` repository. I'll have that information for you shortly.",
        "values": {
          "success": true,
          "lastReply": "Let me check the open issues for the `elizaOS/eliza` repository. I'll have that information for you shortly.",
          "responded": true,
          "lastReplyTime": 1754968912884,
          "thoughtProcess": "I am preparing to list the open issues for the elizaOS/eliza repository as requested."
        },
        "success": true
      },
      "actionStatus": "completed"
    },
    "entityId": "0137f0e4-d2e2-0ee6-82e5-af58b88ec91b",
    "agentId": "0137f0e4-d2e2-0ee6-82e5-af58b88ec91b",
    "roomId": "c5f5255b-5c96-0b94-aed8-dbed5897f95d",
    "unique": true,
    "metadata": {
      "type": "action_result",
      "runId": "e4407751-9fee-4551-adcd-dc61930116ba",
      "actionId": "8803dfb4-fc4a-43d4-8597-35dc139bb193",
      "actionName": "REPLY",
      "totalSteps": 2,
      "currentStep": 1
    }
  },
  {
    "id": "fa7a2ed2-467e-4b54-84f0-60b4836e08ee",
    "type": "messages",
    "createdAt": 1754968223106,
    "content": {
      "text": "Open issues for elizaOS/eliza (10 shown):\n‚Ä¢ #5754: Critical: Plugin Publishing Fails with False Success Reports (open) [bug]\n‚Ä¢ #5749: Implement Runtime Method Mocking for Deterministic Agent Testing (open) [enhancement, testing, Reality Spiral]\n‚Ä¢ #5747: Fixing bugs in eliza-cloud (open)\n‚Ä¢ #5738: üêõ Build failure in @elizaos/core causing bun run clean to fail (open) [bug]\n‚Ä¢ #5734: Eliza CLI failed to build project (open) [bug]\n‚Ä¢ #5729: Update README.md to fix error (open)\n‚Ä¢ #5728: feat: ability to cancel current run before any calls to LLM are made (open)\n‚Ä¢ #5727: feat(scenarios): Implement natural language agent interaction and response validation (open) [enhancement, Reality Spiral]\n‚Ä¢ #5726: feat(scenarios): Implement conditional mocking and complex response structures (open) [enhancement, Reality Spiral]\n‚Ä¢ #5725: feat(scenarios): Implement plugin specification and dynamic loading (open) [enhancement, Reality Spiral]",
      "type": "action_result",
      "runId": "3b9be52e-7131-4ff1-8446-4d53c6af1982",
      "source": "action",
      "planStep": "2/2",
      "actionName": "LIST_GITHUB_ISSUES",
      "planThought": "I need to list the open issues for the elizaOS/eliza repository as requested by the user.",
      "actionResult": {
        "data": {
          "github": {
            "issues": {
              "elizaOS/eliza#5725": {
                "id": 3298689704,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725",
                "body": "# feat(scenarios): Implement plugin specification and dynamic loading\n\n## Description\n\nThis ticket implements plugin specification in scenario YAML files, allowing scenarios to declare which plugins are required for testing. This enables testing of agent behaviors that depend on specific plugins like `@elizaos/plugin-github` or `@elizaos/plugin-evm`. The system will dynamically load specified plugins during scenario execution and make their actions, providers, and services available to the agent.\n\n## Acceptance Criteria\n\n1. Scenario YAML supports a `plugins` array at the root level with string plugin names\n2. The `initializeAgent()` function respects scenario plugin specifications and loads them via `startAgent()`\n3. Plugin loading follows the same dependency resolution and error handling as the main CLI\n4. Scenarios can specify both string plugin names (`@elizaos/plugin-github`) and direct plugin objects\n5. Plugin loading errors are clearly reported with actionable guidance\n6. Default plugins (bootstrap, sql) are automatically included unless explicitly excluded via `exclude_defaults: true`\n7. Plugin conflicts are detected and reported during scenario validation\n8. Plugin initialization errors don't crash the scenario but are reported in results\n\n## Technical Approach\n\n### 1. Update Scenario Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst ScenarioSchema = z.object({\n  name: z.string(),\n  description: z.string(),\n  plugins: z.array(z.string()).optional(), // e.g., [\"@elizaos/plugin-github\"]\n  exclude_defaults: z.boolean().optional(), // exclude bootstrap/sql\n  environment: EnvironmentSchema,\n  setup: SetupSchema.optional(),\n  run: z.array(RunStepSchema),\n  judgment: JudgmentSchema,\n});\n```\n\n### 2. Enhance Runtime Factory\n```typescript\n// packages/cli/src/scenarios/runtime-factory.ts\nexport async function initializeAgent(scenario: Scenario): Promise<IAgentRuntime> {\n  const character: Character = {\n    name: 'scenario-runner',\n    id: stringToUuid('scenario-runner'),\n    bio: 'A minimal character for running scenarios',\n    plugins: scenario.plugins || []\n  };\n\n  // Load default plugins unless excluded\n  if (!scenario.exclude_defaults) {\n    character.plugins.push('@elizaos/plugin-bootstrap', '@elizaos/plugin-sql');\n  }\n\n  const runtime = await startAgent(\n    encryptedCharacter(character),\n    server,\n    undefined,\n    character.plugins,\n    { isTestMode: true }\n  );\n\n  return runtime;\n}\n```\n\n### 3. Plugin Validation\n```typescript\n// packages/cli/src/scenarios/plugin-validator.ts\nexport async function validateScenarioPlugins(scenario: Scenario): Promise<ValidationResult[]> {\n  const results: ValidationResult[] = [];\n  \n  for (const pluginName of scenario.plugins || []) {\n    try {\n      const plugin = await loadAndPreparePlugin(pluginName);\n      if (!plugin) {\n        results.push({\n          type: 'error',\n          message: `Plugin '${pluginName}' could not be loaded`,\n          suggestion: 'Check if plugin is installed or built correctly'\n        });\n      }\n    } catch (error) {\n      results.push({\n        type: 'error', \n        message: `Failed to validate plugin '${pluginName}': ${error.message}`,\n        suggestion: 'Verify plugin dependencies and configuration'\n      });\n    }\n  }\n  \n  return results;\n}\n```\n\n## Test Scenario\n\nCreate `plugin-integration-test.scenario.yaml`:\n```yaml\nname: \"Plugin Integration Test\"\ndescription: \"Tests loading and using plugins specified in scenario YAML\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Test Issue\"\n          number: 123\n          state: \"open\"\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"1.23\"\n\nrun:\n  - name: \"Test GitHub plugin actions\"\n    input: \"Search for issues with label 'bug'\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify GitHub plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"Test Issue\"\n        description: \"Verify agent found the mocked issue\"\n\n  - name: \"Test EVM plugin actions\"\n    input: \"What's my wallet balance?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify EVM plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n        description: \"Verify agent reported the mocked balance\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Plugin Loading Test**: Verify plugins load without errors\n2. **Action Availability Test**: Confirm agent can use plugin actions\n3. **Error Handling Test**: Test with non-existent plugin\n4. **Default Plugin Test**: Verify bootstrap/sql are included by default\n5. **Exclusion Test**: Test `exclude_defaults: true` behavior\n\n## Dependencies\n\n- Fixes the `startAgent` hanging issue (#5719) to enable plugin testing\n- Builds on existing `loadAndPreparePlugin` functionality\n- Integrates with current scenario execution flow ",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement plugin specification and dynamic loading",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5725,
                "node_id": "I_kwDOMT5cIs7EngKo",
                "assignee": null,
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5725",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:48:08Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/labels{/name}",
                "updated_at": "2025-08-07T05:37:32Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5726": {
                "id": 3298691383,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726",
                "body": "# feat(scenarios): Implement conditional mocking and complex response structures\n\n## Description\n\nThis ticket enhances the mocking system to support conditional responses based on input parameters and complex response structures with metadata. This enables realistic testing of service interactions like GitHub API calls or EVM transactions with proper request/response matching.\n\n## Acceptance Criteria\n\n1. Mock definitions support `when` clauses for conditional responses\n2. `when` clauses can match on method arguments, input parameters, or request context\n3. Mock responses support complex nested structures with metadata (timestamps, IDs, etc.)\n4. Multiple mock responses can be defined for the same service/method with different conditions\n5. Mock system provides clear logging of which mock was triggered and why\n6. Mock responses can include realistic error conditions and edge cases\n7. Support for dynamic response generation based on input parameters\n8. Mock validation ensures `when` clauses are syntactically correct\n\n## Technical Approach\n\n### 1. Enhanced Mock Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst MockSchema = z.object({\n  service: z.string(),\n  method: z.string(),\n  when: z.object({\n    // Match on method arguments\n    args: z.array(z.any()).optional(),\n    // Match on specific argument values\n    input: z.record(z.any()).optional(),\n    // Match on request context\n    context: z.record(z.any()).optional(),\n    // Custom matching function\n    matcher: z.string().optional(), // JavaScript expression\n  }).optional(),\n  response: z.any(), // Can be function or static value\n  // For dynamic responses\n  responseFn: z.string().optional(), // JavaScript function\n  // Error simulation\n  error: z.object({\n    code: z.string(),\n    message: z.string(),\n  }).optional(),\n});\n```\n\n### 2. Mock Engine Implementation\n```typescript\n// packages/cli/src/scenarios/mock-engine.ts\nexport class MockEngine {\n  private mocks: MockDefinition[] = [];\n\n  addMock(mock: MockDefinition) {\n    this.mocks.push(mock);\n  }\n\n  async findMock(service: string, method: string, args: any[]): Promise<any> {\n    const candidates = this.mocks.filter(m => \n      m.service === service && m.method === method\n    );\n\n    for (const mock of candidates) {\n      if (await this.matchesCondition(mock, args)) {\n        this.logger.info(`Mock triggered: ${service}.${method} with condition: ${JSON.stringify(mock.when)}`);\n        return this.generateResponse(mock, args);\n      }\n    }\n\n    return null; // No mock found\n  }\n\n  private async matchesCondition(mock: MockDefinition, args: any[]): Promise<boolean> {\n    if (!mock.when) return true; // Default mock\n\n    // Match on arguments\n    if (mock.when.args) {\n      if (!this.deepEqual(args, mock.when.args)) return false;\n    }\n\n    // Match on input parameters\n    if (mock.when.input) {\n      const input = this.extractInputFromArgs(args);\n      if (!this.deepEqual(input, mock.when.input)) return false;\n    }\n\n    // Custom matcher function\n    if (mock.when.matcher) {\n      const matcherFn = new Function('args', 'input', mock.when.matcher);\n      return matcherFn(args, this.extractInputFromArgs(args));\n    }\n\n    return true;\n  }\n\n  private generateResponse(mock: MockDefinition, args: any[]): any {\n    if (mock.error) {\n      throw new Error(`${mock.error.code}: ${mock.error.message}`);\n    }\n\n    if (mock.responseFn) {\n      const responseFn = new Function('args', 'input', mock.responseFn);\n      return responseFn(args, this.extractInputFromArgs(args));\n    }\n\n    return mock.response;\n  }\n}\n```\n\n## Test Scenario\n\nCreate `advanced-mocking-test.scenario.yaml`:\n```yaml\nname: \"Advanced Mocking Test\"\ndescription: \"Tests conditional mocking and complex response structures\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    # Conditional GitHub issue search\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"bug\"\n        matcher: \"input.labels.includes('bug')\"\n      response:\n        - title: \"Critical Bug Found\"\n          number: 456\n          state: \"open\"\n          labels: [\"bug\", \"critical\"]\n          created_at: \"2024-07-15T10:00:00Z\"\n\n    # Conditional GitHub issue search - different response\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"feature\"\n        matcher: \"input.labels.includes('feature')\"\n      response:\n        - title: \"New Feature Request\"\n          number: 789\n          state: \"open\"\n          labels: [\"feature\", \"enhancement\"]\n          created_at: \"2024-07-15T11:00:00Z\"\n\n    # Dynamic EVM balance response\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      when:\n        args: [\"0x1234567890abcdef\"]\n      responseFn: |\n        return {\n          chain: \"ethereum\",\n          address: args[0],\n          balances: [\n            { symbol: \"ETH\", amount: \"1.23\" },\n            { symbol: \"USDC\", amount: \"1000.00\" }\n          ],\n          last_updated: new Date().toISOString()\n        }\n\n    # Error simulation\n    - service: \"github-service\"\n      method: \"readFile\"\n      when:\n        input:\n          path: \"/docs/nonexistent.md\"\n      error:\n        code: \"FILE_NOT_FOUND\"\n        message: \"File does not exist\"\n\nrun:\n  - name: \"Test conditional GitHub search\"\n    input: \"Search for issues with bug label\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"Critical Bug Found\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent correctly search for bug issues?\"\n        expected: \"yes\"\n\n  - name: \"Test dynamic EVM response\"\n    input: \"What's the balance for address 0x1234567890abcdef?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n      - type: \"string_contains\"\n        value: \"1000.00 USDC\"\n\n  - name: \"Test error handling\"\n    input: \"Read the file /docs/nonexistent.md\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.readFile\"\n      - type: \"string_contains\"\n        value: \"File does not exist\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Conditional Matching**: Test different responses based on input parameters\n2. **Dynamic Responses**: Test response generation based on arguments\n3. **Error Simulation**: Test error handling and reporting\n4. **Complex Structures**: Test nested response objects with metadata\n5. **Multiple Mocks**: Test multiple mocks for same service/method\n6. **Logging**: Verify mock selection is logged clearly\n\n## Dependencies\n\n- Builds on existing mock system in scenarios\n- Requires plugin system integration (Ticket 1)\n- Integrates with agent interaction testing (Ticket 3) ",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement conditional mocking and complex response structures",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5726,
                "node_id": "I_kwDOMT5cIs7Engk3",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5726",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:49:00Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/labels{/name}",
                "updated_at": "2025-08-07T05:32:53Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5727": {
                "id": 3298692741,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727",
                "body": "# feat(scenarios): Implement natural language agent interaction and response validation\n\n## Description\n\nThis ticket enables scenarios to test agent behavior through natural language interactions rather than direct code execution. This allows testing of agent reasoning, decision-making, and response generation in realistic conversation contexts with proper evaluation of agent responses.\n\n## Acceptance Criteria\n\n1. Scenario `run` blocks support `input` field for natural language prompts to agents\n2. Agent responses are captured and available for evaluation (text, thoughts, actions)\n3. Evaluators can access both agent response text and execution context\n4. Support for multi-turn conversations in scenarios\n5. Agent responses include thought process and action decisions\n6. Integration with existing evaluation engine for response validation\n7. Support for conversation context across multiple steps\n8. Agent response timing and performance metrics\n\n## Technical Approach\n\n### 1. Enhanced Run Step Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst RunStepSchema = z.object({\n  name: z.string().optional(),\n  // Natural language input to agent\n  input: z.string().optional(),\n  // Direct code execution (existing)\n  lang: z.string().optional(),\n  code: z.string().optional(),\n  // Agent interaction specific\n  agent_context: z.object({\n    conversation_id: z.string().optional(),\n    user_id: z.string().optional(),\n    room_id: z.string().optional(),\n  }).optional(),\n  evaluations: z.array(EvaluationSchema),\n});\n```\n\n### 2. Agent Interaction Engine\n```typescript\n// packages/cli/src/scenarios/agent-interaction.ts\nexport class AgentInteractionEngine {\n  constructor(private runtime: IAgentRuntime) {}\n\n  async interactWithAgent(input: string, context?: AgentContext): Promise<AgentResponse> {\n    // Create message for agent\n    const message: Memory = {\n      entityId: context?.user_id || 'scenario-user',\n      roomId: context?.room_id || 'scenario-room',\n      content: {\n        type: 'text',\n        text: input,\n      },\n      metadata: {\n        type: 'message',\n        conversationId: context?.conversation_id,\n      },\n    };\n\n    // Send to agent and capture response\n    const startTime = Date.now();\n    const response = await this.runtime.processMessage(message);\n    const endTime = Date.now();\n\n    return {\n      text: response.text,\n      thoughts: response.thoughts,\n      actions: response.actions,\n      timing: {\n        startTime,\n        endTime,\n        duration: endTime - startTime,\n      },\n      context: {\n        conversationId: context?.conversation_id,\n        messageId: message.id,\n      },\n    };\n  }\n}\n```\n\n### 3. Enhanced Execution Result\n```typescript\n// packages/cli/src/scenarios/providers.ts\nexport interface ExecutionResult {\n  exitCode: number;\n  stdout: string;\n  stderr: string;\n  files: Record<string, string>;\n  // New: Agent interaction results\n  agentResponse?: AgentResponse;\n  conversationHistory?: AgentResponse[];\n}\n```\n\n## Test Scenario\n\nCreate `agent-interaction-test.scenario.yaml`:\n```yaml\nname: \"Agent Interaction Test\"\ndescription: \"Tests natural language interaction with agents\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Implement Dark Mode\"\n          number: 123\n          state: \"open\"\n          labels: [\"feature\", \"ui\"]\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"2.5\"\n\nrun:\n  - name: \"Ask agent about roadmap\"\n    input: \"What new features are you planning to add?\"\n    agent_context:\n      conversation_id: \"roadmap-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify agent searched for issues\"\n      \n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n        description: \"Verify agent mentioned the mocked issue\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent provide a helpful and coherent response about new features?\"\n        expected: \"yes\"\n        description: \"Verify agent response quality\"\n\n  - name: \"Ask agent about wallet\"\n    input: \"What's my current wallet balance?\"\n    agent_context:\n      conversation_id: \"wallet-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify agent checked wallet balance\"\n      \n      - type: \"string_contains\"\n        value: \"2.5 ETH\"\n        description: \"Verify agent reported the correct balance\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent clearly explain the wallet balance information?\"\n        expected: \"yes\"\n\n  - name: \"Multi-turn conversation\"\n    input: \"Can you help me with both my wallet and roadmap?\"\n    agent_context:\n      conversation_id: \"multi-turn-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"ETH\"\n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent address both wallet and roadmap questions comprehensively?\"\n        expected: \"yes\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Single Turn**: Test basic agent interaction and response\n2. **Multi-turn**: Test conversation context across steps\n3. **Action Tracking**: Verify agent uses appropriate actions\n4. **Response Quality**: Test LLM judge evaluation of responses\n5. **Performance**: Test response timing and metrics\n6. **Error Handling**: Test agent behavior with invalid inputs\n\n## Dependencies\n\n- Requires plugin system integration (Ticket 1)\n- Builds on advanced mocking system (Ticket 2)\n- Integrates with existing evaluation engine\n- Depends on agent runtime message processing",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement natural language agent interaction and response validation",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5727,
                "node_id": "I_kwDOMT5cIs7Eng6F",
                "assignee": null,
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5727",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:49:34Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/labels{/name}",
                "updated_at": "2025-08-07T05:35:40Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5728": {
                "id": 3299322983,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728",
                "body": "# Background\r\n\r\n## What does this PR do?\r\n\r\nIntroduce entity for cancelling runs `CancelRunSignal`\r\n\r\n## Why are we doing this? Any context or related work?\r\n\r\n- Calls to LLMs usually cost some credits\r\n- When we receive the `RUN_STARTED` event we can check current entity and end run to prevent credits spending\r\n\r\n# Documentation changes needed?\r\n\r\n## Methods\r\n\r\n- `static getSignal(runId: UUID)` - get signal by runId or create if null\r\n- `static clear(runId: UUID)` - clear signal from map\r\n- `cancel(content?: Content)` - cancel current run and and send `content` as a response to user\r\n\r\n## Example\r\n\r\n```typescript\r\nimport { Content, EventType, Plugin } from \"@elizaos/core\";\r\nimport { CancelRunSignal } from \"@elizaos/plugin-bootstrap\";\r\n\r\n// consider we have a service to determine eligibility for entity\r\ninterface EligibilityService {\r\n  check(entityId: UUID): Promise<{ result: boolean, reason?: Content }>\r\n}\r\n\r\nconst plugin: Plugin = {\r\n...\r\n  events: {\r\n    [EventType.RUN_STARTED]: ({ entityId, runId, runtime }) => {\r\n      const service = runtime.getService<EligibilityService>(\"USER_MANAGEMENT\");\r\n      const { result, reason } = await service.check(entityId);\r\n      \r\n      if (!result) {\r\n        const signal = CancelRunSignal.getSignal(runId);\r\n        signal.cancel(reason);\r\n      }\r\n    },\r\n    ...\r\n  },\r\n  ...\r\n}\r\n\r\nexport default Plugin;\r\n```\r\n\r\n## Discord username\r\n\r\nalexd000\r\n\r\n",
                "type": null,
                "user": {
                  "id": 82507604,
                  "url": "https://api.github.com/users/alex-nax",
                  "type": "User",
                  "login": "alex-nax",
                  "node_id": "MDQ6VXNlcjgyNTA3NjA0",
                  "html_url": "https://github.com/alex-nax",
                  "gists_url": "https://api.github.com/users/alex-nax/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/alex-nax/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/82507604?v=4",
                  "events_url": "https://api.github.com/users/alex-nax/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/alex-nax/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/alex-nax/followers",
                  "following_url": "https://api.github.com/users/alex-nax/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/alex-nax/orgs",
                  "subscriptions_url": "https://api.github.com/users/alex-nax/subscriptions",
                  "received_events_url": "https://api.github.com/users/alex-nax/received_events"
                },
                "draft": false,
                "state": "open",
                "title": "feat: ability to cancel current run before any calls to LLM are made",
                "labels": [],
                "locked": false,
                "number": 5728,
                "node_id": "PR_kwDOMT5cIs6ihriD",
                "assignee": null,
                "comments": 3,
                "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T07:19:35Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/labels{/name}",
                "updated_at": "2025-08-07T07:22:05Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/comments",
                "pull_request": {
                  "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5728",
                  "diff_url": "https://github.com/elizaOS/eliza/pull/5728.diff",
                  "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                  "merged_at": null,
                  "patch_url": "https://github.com/elizaOS/eliza/pull/5728.patch"
                },
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "FIRST_TIME_CONTRIBUTOR",
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5729": {
                "id": 3299481897,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729",
                "body": "# Relates to\r\n\r\nN/A (Documentation improvement, not tied to a specific issue or ticket)\r\n\r\n# Risks\r\n\r\nLow.  \r\nThis change only updates documentation and does not affect any code or functionality.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR updates the elizaos README to include a fix for installation errors that may occur due to permission issues. It adds a note suggesting the use of sudo if users encounter a \"Permission denied\" or \"InstallFailed\" error when running the `elizaos create my-agent` command.\r\n\r\n## What kind of change is this?\r\n\r\nImprovements (misc. changes to existing features)  \r\nDocumentation update\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes require a change to the project documentation.  \r\nI have updated the documentation accordingly.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\nStart by reviewing the changes in the README.md file, specifically the section on creating a new project.\r\n\r\n## Detailed testing steps\r\n\r\n- Open the updated README.md.\r\n- Review the new instructions under \"Create Your First Project.\"\r\n- Confirm that the added note about using `sudo` is clear and helpful for users who encounter permission errors.",
                "type": null,
                "user": {
                  "id": 32749185,
                  "url": "https://api.github.com/users/mandatedisrael",
                  "type": "User",
                  "login": "mandatedisrael",
                  "node_id": "MDQ6VXNlcjMyNzQ5MTg1",
                  "html_url": "https://github.com/mandatedisrael",
                  "gists_url": "https://api.github.com/users/mandatedisrael/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/mandatedisrael/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/32749185?v=4",
                  "events_url": "https://api.github.com/users/mandatedisrael/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/mandatedisrael/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/mandatedisrael/followers",
                  "following_url": "https://api.github.com/users/mandatedisrael/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/mandatedisrael/orgs",
                  "subscriptions_url": "https://api.github.com/users/mandatedisrael/subscriptions",
                  "received_events_url": "https://api.github.com/users/mandatedisrael/received_events"
                },
                "draft": false,
                "state": "open",
                "title": "Update README.md to fix error",
                "labels": [],
                "locked": false,
                "number": 5729,
                "node_id": "PR_kwDOMT5cIs6iiNWN",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T08:10:12Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/labels{/name}",
                "updated_at": "2025-08-07T08:10:24Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/comments",
                "pull_request": {
                  "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5729",
                  "diff_url": "https://github.com/elizaOS/eliza/pull/5729.diff",
                  "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                  "merged_at": null,
                  "patch_url": "https://github.com/elizaOS/eliza/pull/5729.patch"
                },
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "FIRST_TIME_CONTRIBUTOR",
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5734": {
                "id": 3301116813,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734",
                "body": "**Describe the bug**\n\nOn project creation, ElizaOS CLI fails with the following error:\n```\n‚óá  Failed to build project\nstdout: src/index.ts(7,25): error TS2345: Argument of type 'string' is not assignable to parameter of type 'undefined'.\nstderr: $ tsc --noEmit && vite build && tsup\n```\n\n**To Reproduce**\n\n- Install ElizaOS through `bun`\n```\nbun i -g @elizaos/cli\n```\n- Create new ElizaOS project\n```\nelizaos create abcde\n```\n\n**Expected behavior**\n\nProject built successfully\n\n**Screenshots**\n\n<img width=\"1095\" height=\"572\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/967dd6a2-0d70-4e2e-8019-85a2eab5f225\" />\n\n**Additional context**\n\nElizaOS CLI version: `1.3.2`\n",
                "type": null,
                "user": {
                  "id": 74447600,
                  "url": "https://api.github.com/users/Kemystra",
                  "type": "User",
                  "login": "Kemystra",
                  "node_id": "MDQ6VXNlcjc0NDQ3NjAw",
                  "html_url": "https://github.com/Kemystra",
                  "gists_url": "https://api.github.com/users/Kemystra/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/Kemystra/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/74447600?v=4",
                  "events_url": "https://api.github.com/users/Kemystra/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/Kemystra/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/Kemystra/followers",
                  "following_url": "https://api.github.com/users/Kemystra/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/Kemystra/orgs",
                  "subscriptions_url": "https://api.github.com/users/Kemystra/subscriptions",
                  "received_events_url": "https://api.github.com/users/Kemystra/received_events"
                },
                "state": "open",
                "title": "Eliza CLI failed to build project",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5734,
                "node_id": "I_kwDOMT5cIs7EwwuN",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5734",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T16:14:00Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/labels{/name}",
                "updated_at": "2025-08-08T19:43:52Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "NONE",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5738": {
                "id": 3302237103,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738",
                "body": "## Description\n\nThe `bun run clean` command is failing due to TypeScript errors in `@elizaos/core` package during the DTS (type definition) build phase.\n\n## Error Details\n\n### Build Process\n```\n‚Ä¢ Running build in 17 packages\n‚Ä¢ Remote caching disabled\n@elizaos/config:build: cache miss\n@elizaos/autodoc:build: cache miss\n@elizaos/core:build: cache miss\n```\n\n### TypeScript Errors in @elizaos/core/src/utils.ts\n1. Line 218: `error TS2345: Argument of type '`${string}-${string}-${string}-${string}-${string}`' is not assignable to parameter of type 'never'.`\n2. Line 366: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n3. Line 409: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n4. Line 536: `error TS2345: Argument of type '{ numberOfChunks: number; averageChunkSize: number; }' is not assignable to parameter of type 'never'.`\n\n### Impact\n- Blocks `bun run clean` command\n- Prevents successful build of `@elizaos/core`\n- Affects dependent packages in the monorepo\n\n## Steps to Reproduce\n1. Run `bun run clean`\n2. Observe build failure in `@elizaos/core`\n3. Build fails with TypeScript errors during DTS generation\n\n## Expected Behavior\n- `bun run clean` should complete successfully\n- `@elizaos/core` should build without TypeScript errors\n- Type definitions should be generated correctly\n\n## Suggested Fix\n\nThe errors suggest type mismatches in `utils.ts`. Need to:\n1. Review type definitions in affected lines\n2. Update type assertions or generic constraints\n3. Ensure string template literal types are properly handled\n4. Fix object type assignments\n\n### Files to Update\n- `packages/core/src/utils.ts`\n\n## Priority\n**HIGH** - This is blocking clean builds and potentially affecting development workflow.",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "üêõ Build failure in @elizaos/core causing bun run clean to fail",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5738,
                "node_id": "I_kwDOMT5cIs7E1COv",
                "assignee": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5738",
                "assignees": [
                  {
                    "id": 15067321,
                    "url": "https://api.github.com/users/monilpat",
                    "type": "User",
                    "login": "monilpat",
                    "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                    "html_url": "https://github.com/monilpat",
                    "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/monilpat/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                    "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/monilpat/followers",
                    "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/monilpat/orgs",
                    "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                    "received_events_url": "https://api.github.com/users/monilpat/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-08T00:26:11Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/labels{/name}",
                "updated_at": "2025-08-11T14:56:01Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5747": {
                "id": 3304516859,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747",
                "body": null,
                "type": null,
                "user": {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                },
                "state": "open",
                "title": "Fixing bugs in eliza-cloud",
                "labels": [],
                "locked": false,
                "number": 5747,
                "node_id": "I_kwDOMT5cIs7E9uz7",
                "assignee": {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                },
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5747",
                "assignees": [
                  {
                    "id": 48334430,
                    "url": "https://api.github.com/users/samarth30",
                    "type": "User",
                    "login": "samarth30",
                    "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                    "html_url": "https://github.com/samarth30",
                    "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/samarth30/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                    "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/samarth30/followers",
                    "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/samarth30/orgs",
                    "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                    "received_events_url": "https://api.github.com/users/samarth30/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-08T16:01:56Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/labels{/name}",
                "updated_at": "2025-08-08T19:02:49Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "MEMBER",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": {
                  "id": 20150,
                  "name": "Linear",
                  "slug": "linear",
                  "owner": {
                    "id": 46686594,
                    "url": "https://api.github.com/users/linear",
                    "type": "Organization",
                    "login": "linear",
                    "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ2Njg2NTk0",
                    "html_url": "https://github.com/linear",
                    "gists_url": "https://api.github.com/users/linear/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/linear/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/46686594?v=4",
                    "events_url": "https://api.github.com/users/linear/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/linear/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/linear/followers",
                    "following_url": "https://api.github.com/users/linear/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/linear/orgs",
                    "subscriptions_url": "https://api.github.com/users/linear/subscriptions",
                    "received_events_url": "https://api.github.com/users/linear/received_events"
                  },
                  "events": [
                    "check_suite",
                    "issues",
                    "issue_comment",
                    "pull_request",
                    "pull_request_review",
                    "repository",
                    "sub_issues"
                  ],
                  "node_id": "MDM6QXBwMjAxNTA=",
                  "html_url": "https://github.com/apps/linear",
                  "client_id": "Iv1.085d682ea245c945",
                  "created_at": "2018-11-02T18:07:23Z",
                  "updated_at": "2025-02-07T14:59:56Z",
                  "description": "",
                  "permissions": {
                    "checks": "read",
                    "issues": "write",
                    "metadata": "read",
                    "pull_requests": "write"
                  },
                  "external_url": "https://linear.app"
                }
              },
              "elizaOS/eliza#5749": {
                "id": 3308102900,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749",
                "body": "### Problem Statement\nCurrently, ElizaOS scenario testing lacks the ability to mock internal agent runtime calls (particularly LLM interactions) when testing via the API client. This makes it difficult to create deterministic tests for agent behavior and workflows.\n\n### Current Limitations\n- Global function mocks only work for code executed in the same process\n- No way to intercept `runtime.useModel` calls from the bootstrap plugin\n- Agent behavior is non-deterministic due to real LLM calls\n- Difficult to test specific agent decision paths and responses\n\n### Why Different Approach Was Needed\n\nThe existing mocking system was designed for **code execution environments** (E2B sandbox and local `node -e` processes), where mocks are applied to the execution context. However, **agent testing** works differently:\n\n- **E2B/Local Execution**: Code runs in isolated processes/sandboxes where global mocks can be applied\n- **Agent Testing**: Agent runs as a service with API client interaction, requiring direct runtime method interception\n- **Architecture Gap**: The bootstrap plugin calls `runtime.useModel` internally, which can't be mocked through the execution environment approach\n\nThis architectural difference necessitated a new approach that directly intercepts runtime methods rather than relying on execution context mocking.\n\n### Proposed Solution: Runtime Method Mocking\n\nWe've implemented a new mocking approach that directly intercepts `IAgentRuntime` method calls:\n\n#### Key Components\n\n1. **MockEngine Enhancement**\n   - Added `runtimeMethodMocks` to support mocking runtime methods\n   - Priority system: `runtimeMethod` > `service` > `globalFunction`\n   - Direct method replacement on the runtime instance\n\n2. **Schema Updates**\n   - Extended `MockSchema` to include `runtimeMethod: z.string().optional()`\n   - Supports mocking any `IAgentRuntime` method (e.g., `useModel`, `getService`)\n\n3. **Conditional Matching**\n   - Matcher functions can inspect method arguments\n   - Example: `\"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"`\n   - Supports complex conditional logic for when to apply mocks\n\n#### Usage Example\n\n```yaml\nsetup:\n  mocks:\n    - runtimeMethod: \"useModel\"\n      method: \"useModel\"\n      when:\n        matcher: \"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"\n      response: \"<response><name>agent</name><reasoning>Mocked response</reasoning><action>RESPOND</action></response>\"\n```\n\n#### Benefits\n\n1. **Deterministic Testing**: Replace LLM calls with static responses\n2. **Full Workflow Testing**: Test complete agent decision flows\n3. **Conditional Mocking**: Apply mocks based on specific conditions\n4. **Runtime Integration**: Works seamlessly with existing agent architecture\n5. **Backward Compatibility**: Existing mocks continue to work\n\n#### Implementation Steps\n\n- MockEngine runtime method support\n- Schema updates for runtimeMethod mocks\n- Conditional matching with matcher functions\n- Integration with scenario runner\n- Basic useModel mocking working\n- Add support for mocking other runtime methods (getService, etc.)\n- Create comprehensive test scenarios\n- Add documentation and examples\n- Consider adding mock recording/replay capabilities\n\n### Technical Details\n\nThe implementation works by:\n1. Creating the `IAgentRuntime` instance in the scenario runner\n2. Applying mocks directly to the runtime object before agent initialization\n3. The bootstrap plugin receives the mocked runtime and uses the mocked methods\n4. Mocks are reverted after scenario completion\n\nThis approach provides the foundation for robust, deterministic agent testing while maintaining the existing architecture.",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "Implement Runtime Method Mocking for Deterministic Agent Testing",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 7668252177,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/testing",
                    "name": "testing",
                    "color": "2D3957",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAAByRA-EQ",
                    "description": ""
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5749,
                "node_id": "I_kwDOMT5cIs7FLaT0",
                "assignee": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "comments": 0,
                "html_url": "https://github.com/elizaOS/eliza/issues/5749",
                "assignees": [
                  {
                    "id": 15067321,
                    "url": "https://api.github.com/users/monilpat",
                    "type": "User",
                    "login": "monilpat",
                    "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                    "html_url": "https://github.com/monilpat",
                    "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/monilpat/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                    "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/monilpat/followers",
                    "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/monilpat/orgs",
                    "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                    "received_events_url": "https://api.github.com/users/monilpat/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-11T00:08:49Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/labels{/name}",
                "updated_at": "2025-08-11T00:09:37Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5754": {
                "id": 3310285907,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754",
                "body": "## Issue Summary\nThe `elizaos publish --npm` command reports successful publishing but the plugin is not actually published to npm, despite showing success messages. The npm publish is failing with a 404 error, but the ElizaOS CLI incorrectly reports success.\n\n## Key Problems Identified\n\n### 1. Critical NPM Publishing Failure\n- **Error**: `npm error 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found`\n- **Issue**: The package scope `@elizaos` doesn't exist on npm, preventing publishing\n- **Impact**: Package cannot be published to npm, but CLI reports success\n\n### 2. False Success Reporting\n- **Issue**: CLI reports `[‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm`\n- **Reality**: npm publish failed with 404 error\n- **Impact**: Developers believe their plugin is published when it's not\n\n### 3. Registry Repository Mismatch\n- **Expected**: Should create PR against `https://github.com/elizaos-plugins/registry`\n- **Actual**: Still references old registry `https://github.com/elizaos/registry`\n- **Impact**: Plugin won't appear in the official ElizaOS registry\n\n## Steps to Reproduce\n\n```bash\n# Navigate to the plugin directory\ncd packages/plugin-polygon\n\n# Ensure you're on the correct branch with the changes\ngit checkout polygon\n\n# Run the publish command\nelizaos publish --npm\n\n# Verify the success message appears\n# [‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm\n\n# Check if package actually exists on npm\nnpm view @elizaos/plugin-polygon@1.0.0\n# Result: 404 Not Found - '@elizaos/plugin-polygon@1.0.0' is not in this registry\n```\n\n## Technical Details\n\n### NPM Error Analysis\nThe npm logs show the root cause:\n```\nhttp fetch PUT 404 https://registry.npmjs.org/@elizaos%2fplugin-polygon 507ms\nerror 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found\n```\n\nThis indicates that the `@elizaos` scope doesn't exist on npm, which is required for publishing scoped packages.\n\n### CLI Error Handling Failure\nThe ElizaOS CLI is not properly parsing npm error codes:\n- npm returns exit code 1 (failure)\n- CLI ignores the error and reports success\n- No validation that the package actually exists on npm\n\n## Expected Behavior\n1. CLI should detect npm publish failures (exit code 1)\n2. CLI should fail with clear error message when package scope doesn't exist\n3. CLI should validate that package actually exists on npm after publishing\n4. CLI should create PRs against the correct registry repository\n\n## Recommended Fixes\n\n### 1. Fix NPM Error Detection\n```typescript\n// In the publish command, check npm exit code\nconst npmResult = await exec('npm publish', { cwd: pluginDir });\nif (npmResult.exitCode !== 0) {\n  throw new Error(`NPM publish failed: ${npmResult.stderr}`);\n}\n```\n\n### 2. Add Package Scope Validation\n```typescript\n// Before publishing, check if scope exists\nconst scopeExists = await checkNpmScope('@elizaos');\nif (!scopeExists) {\n  throw new Error('Package scope @elizaos does not exist on npm. Contact npm support to create the scope.');\n}\n```\n\n### 3. Add Post-Publish Validation\n```typescript\n// After publishing, verify package exists\nconst packageExists = await checkPackageExists(packageName, version);\nif (!packageExists) {\n  throw new Error(`Package was not published successfully. Check npm logs for details.`);\n}\n```\n\n## Priority\n**Critical** - This completely blocks plugin publishing and creates false success reports.\n\n## Affected Components\n- `packages/cli/src/commands/publish.ts`\n- NPM publishing logic\n- Error handling and success reporting\n- Package scope validation\n- Registry repository configuration\n\n## Immediate Action Required\n1. **Create the `@elizaos` scope on npm** or use an existing scope\n2. Update CLI to properly detect and handle npm publish failures\n3. Add post-publish validation to ensure packages actually exist on npm\n4. Update registry repository configuration\n\n## Alternative Solutions\n1. **Use existing scope**: Change package name to `@monilpat/plugin-polygon`\n2. **Create organization scope**: Set up `@elizaos` organization on npm\n3. **Use unscoped package**: Publish as `elizaos-plugin-polygon`\n\nThis issue is critically blocking plugin developers from successfully publishing their work and needs immediate attention from the ElizaOS team.\n",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "Critical: Plugin Publishing Fails with False Success Reports",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5754,
                "node_id": "I_kwDOMT5cIs7FTvRT",
                "assignee": null,
                "comments": 0,
                "html_url": "https://github.com/elizaOS/eliza/issues/5754",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-11T14:20:08Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/labels{/name}",
                "updated_at": "2025-08-11T14:20:08Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              }
            },
            "lastIssues": [
              {
                "id": 3310285907,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754",
                "body": "## Issue Summary\nThe `elizaos publish --npm` command reports successful publishing but the plugin is not actually published to npm, despite showing success messages. The npm publish is failing with a 404 error, but the ElizaOS CLI incorrectly reports success.\n\n## Key Problems Identified\n\n### 1. Critical NPM Publishing Failure\n- **Error**: `npm error 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found`\n- **Issue**: The package scope `@elizaos` doesn't exist on npm, preventing publishing\n- **Impact**: Package cannot be published to npm, but CLI reports success\n\n### 2. False Success Reporting\n- **Issue**: CLI reports `[‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm`\n- **Reality**: npm publish failed with 404 error\n- **Impact**: Developers believe their plugin is published when it's not\n\n### 3. Registry Repository Mismatch\n- **Expected**: Should create PR against `https://github.com/elizaos-plugins/registry`\n- **Actual**: Still references old registry `https://github.com/elizaos/registry`\n- **Impact**: Plugin won't appear in the official ElizaOS registry\n\n## Steps to Reproduce\n\n```bash\n# Navigate to the plugin directory\ncd packages/plugin-polygon\n\n# Ensure you're on the correct branch with the changes\ngit checkout polygon\n\n# Run the publish command\nelizaos publish --npm\n\n# Verify the success message appears\n# [‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm\n\n# Check if package actually exists on npm\nnpm view @elizaos/plugin-polygon@1.0.0\n# Result: 404 Not Found - '@elizaos/plugin-polygon@1.0.0' is not in this registry\n```\n\n## Technical Details\n\n### NPM Error Analysis\nThe npm logs show the root cause:\n```\nhttp fetch PUT 404 https://registry.npmjs.org/@elizaos%2fplugin-polygon 507ms\nerror 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found\n```\n\nThis indicates that the `@elizaos` scope doesn't exist on npm, which is required for publishing scoped packages.\n\n### CLI Error Handling Failure\nThe ElizaOS CLI is not properly parsing npm error codes:\n- npm returns exit code 1 (failure)\n- CLI ignores the error and reports success\n- No validation that the package actually exists on npm\n\n## Expected Behavior\n1. CLI should detect npm publish failures (exit code 1)\n2. CLI should fail with clear error message when package scope doesn't exist\n3. CLI should validate that package actually exists on npm after publishing\n4. CLI should create PRs against the correct registry repository\n\n## Recommended Fixes\n\n### 1. Fix NPM Error Detection\n```typescript\n// In the publish command, check npm exit code\nconst npmResult = await exec('npm publish', { cwd: pluginDir });\nif (npmResult.exitCode !== 0) {\n  throw new Error(`NPM publish failed: ${npmResult.stderr}`);\n}\n```\n\n### 2. Add Package Scope Validation\n```typescript\n// Before publishing, check if scope exists\nconst scopeExists = await checkNpmScope('@elizaos');\nif (!scopeExists) {\n  throw new Error('Package scope @elizaos does not exist on npm. Contact npm support to create the scope.');\n}\n```\n\n### 3. Add Post-Publish Validation\n```typescript\n// After publishing, verify package exists\nconst packageExists = await checkPackageExists(packageName, version);\nif (!packageExists) {\n  throw new Error(`Package was not published successfully. Check npm logs for details.`);\n}\n```\n\n## Priority\n**Critical** - This completely blocks plugin publishing and creates false success reports.\n\n## Affected Components\n- `packages/cli/src/commands/publish.ts`\n- NPM publishing logic\n- Error handling and success reporting\n- Package scope validation\n- Registry repository configuration\n\n## Immediate Action Required\n1. **Create the `@elizaos` scope on npm** or use an existing scope\n2. Update CLI to properly detect and handle npm publish failures\n3. Add post-publish validation to ensure packages actually exist on npm\n4. Update registry repository configuration\n\n## Alternative Solutions\n1. **Use existing scope**: Change package name to `@monilpat/plugin-polygon`\n2. **Create organization scope**: Set up `@elizaos` organization on npm\n3. **Use unscoped package**: Publish as `elizaos-plugin-polygon`\n\nThis issue is critically blocking plugin developers from successfully publishing their work and needs immediate attention from the ElizaOS team.\n",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "Critical: Plugin Publishing Fails with False Success Reports",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5754,
                "node_id": "I_kwDOMT5cIs7FTvRT",
                "assignee": null,
                "comments": 0,
                "html_url": "https://github.com/elizaOS/eliza/issues/5754",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-11T14:20:08Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/labels{/name}",
                "updated_at": "2025-08-11T14:20:08Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3308102900,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749",
                "body": "### Problem Statement\nCurrently, ElizaOS scenario testing lacks the ability to mock internal agent runtime calls (particularly LLM interactions) when testing via the API client. This makes it difficult to create deterministic tests for agent behavior and workflows.\n\n### Current Limitations\n- Global function mocks only work for code executed in the same process\n- No way to intercept `runtime.useModel` calls from the bootstrap plugin\n- Agent behavior is non-deterministic due to real LLM calls\n- Difficult to test specific agent decision paths and responses\n\n### Why Different Approach Was Needed\n\nThe existing mocking system was designed for **code execution environments** (E2B sandbox and local `node -e` processes), where mocks are applied to the execution context. However, **agent testing** works differently:\n\n- **E2B/Local Execution**: Code runs in isolated processes/sandboxes where global mocks can be applied\n- **Agent Testing**: Agent runs as a service with API client interaction, requiring direct runtime method interception\n- **Architecture Gap**: The bootstrap plugin calls `runtime.useModel` internally, which can't be mocked through the execution environment approach\n\nThis architectural difference necessitated a new approach that directly intercepts runtime methods rather than relying on execution context mocking.\n\n### Proposed Solution: Runtime Method Mocking\n\nWe've implemented a new mocking approach that directly intercepts `IAgentRuntime` method calls:\n\n#### Key Components\n\n1. **MockEngine Enhancement**\n   - Added `runtimeMethodMocks` to support mocking runtime methods\n   - Priority system: `runtimeMethod` > `service` > `globalFunction`\n   - Direct method replacement on the runtime instance\n\n2. **Schema Updates**\n   - Extended `MockSchema` to include `runtimeMethod: z.string().optional()`\n   - Supports mocking any `IAgentRuntime` method (e.g., `useModel`, `getService`)\n\n3. **Conditional Matching**\n   - Matcher functions can inspect method arguments\n   - Example: `\"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"`\n   - Supports complex conditional logic for when to apply mocks\n\n#### Usage Example\n\n```yaml\nsetup:\n  mocks:\n    - runtimeMethod: \"useModel\"\n      method: \"useModel\"\n      when:\n        matcher: \"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"\n      response: \"<response><name>agent</name><reasoning>Mocked response</reasoning><action>RESPOND</action></response>\"\n```\n\n#### Benefits\n\n1. **Deterministic Testing**: Replace LLM calls with static responses\n2. **Full Workflow Testing**: Test complete agent decision flows\n3. **Conditional Mocking**: Apply mocks based on specific conditions\n4. **Runtime Integration**: Works seamlessly with existing agent architecture\n5. **Backward Compatibility**: Existing mocks continue to work\n\n#### Implementation Steps\n\n- MockEngine runtime method support\n- Schema updates for runtimeMethod mocks\n- Conditional matching with matcher functions\n- Integration with scenario runner\n- Basic useModel mocking working\n- Add support for mocking other runtime methods (getService, etc.)\n- Create comprehensive test scenarios\n- Add documentation and examples\n- Consider adding mock recording/replay capabilities\n\n### Technical Details\n\nThe implementation works by:\n1. Creating the `IAgentRuntime` instance in the scenario runner\n2. Applying mocks directly to the runtime object before agent initialization\n3. The bootstrap plugin receives the mocked runtime and uses the mocked methods\n4. Mocks are reverted after scenario completion\n\nThis approach provides the foundation for robust, deterministic agent testing while maintaining the existing architecture.",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "Implement Runtime Method Mocking for Deterministic Agent Testing",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 7668252177,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/testing",
                    "name": "testing",
                    "color": "2D3957",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAAByRA-EQ",
                    "description": ""
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5749,
                "node_id": "I_kwDOMT5cIs7FLaT0",
                "assignee": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "comments": 0,
                "html_url": "https://github.com/elizaOS/eliza/issues/5749",
                "assignees": [
                  {
                    "id": 15067321,
                    "url": "https://api.github.com/users/monilpat",
                    "type": "User",
                    "login": "monilpat",
                    "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                    "html_url": "https://github.com/monilpat",
                    "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/monilpat/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                    "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/monilpat/followers",
                    "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/monilpat/orgs",
                    "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                    "received_events_url": "https://api.github.com/users/monilpat/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-11T00:08:49Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/labels{/name}",
                "updated_at": "2025-08-11T00:09:37Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3304516859,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747",
                "body": null,
                "type": null,
                "user": {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                },
                "state": "open",
                "title": "Fixing bugs in eliza-cloud",
                "labels": [],
                "locked": false,
                "number": 5747,
                "node_id": "I_kwDOMT5cIs7E9uz7",
                "assignee": {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                },
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5747",
                "assignees": [
                  {
                    "id": 48334430,
                    "url": "https://api.github.com/users/samarth30",
                    "type": "User",
                    "login": "samarth30",
                    "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                    "html_url": "https://github.com/samarth30",
                    "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/samarth30/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                    "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/samarth30/followers",
                    "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/samarth30/orgs",
                    "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                    "received_events_url": "https://api.github.com/users/samarth30/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-08T16:01:56Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/labels{/name}",
                "updated_at": "2025-08-08T19:02:49Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "MEMBER",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": {
                  "id": 20150,
                  "name": "Linear",
                  "slug": "linear",
                  "owner": {
                    "id": 46686594,
                    "url": "https://api.github.com/users/linear",
                    "type": "Organization",
                    "login": "linear",
                    "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ2Njg2NTk0",
                    "html_url": "https://github.com/linear",
                    "gists_url": "https://api.github.com/users/linear/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/linear/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/46686594?v=4",
                    "events_url": "https://api.github.com/users/linear/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/linear/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/linear/followers",
                    "following_url": "https://api.github.com/users/linear/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/linear/orgs",
                    "subscriptions_url": "https://api.github.com/users/linear/subscriptions",
                    "received_events_url": "https://api.github.com/users/linear/received_events"
                  },
                  "events": [
                    "check_suite",
                    "issues",
                    "issue_comment",
                    "pull_request",
                    "pull_request_review",
                    "repository",
                    "sub_issues"
                  ],
                  "node_id": "MDM6QXBwMjAxNTA=",
                  "html_url": "https://github.com/apps/linear",
                  "client_id": "Iv1.085d682ea245c945",
                  "created_at": "2018-11-02T18:07:23Z",
                  "updated_at": "2025-02-07T14:59:56Z",
                  "description": "",
                  "permissions": {
                    "checks": "read",
                    "issues": "write",
                    "metadata": "read",
                    "pull_requests": "write"
                  },
                  "external_url": "https://linear.app"
                }
              },
              {
                "id": 3302237103,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738",
                "body": "## Description\n\nThe `bun run clean` command is failing due to TypeScript errors in `@elizaos/core` package during the DTS (type definition) build phase.\n\n## Error Details\n\n### Build Process\n```\n‚Ä¢ Running build in 17 packages\n‚Ä¢ Remote caching disabled\n@elizaos/config:build: cache miss\n@elizaos/autodoc:build: cache miss\n@elizaos/core:build: cache miss\n```\n\n### TypeScript Errors in @elizaos/core/src/utils.ts\n1. Line 218: `error TS2345: Argument of type '`${string}-${string}-${string}-${string}-${string}`' is not assignable to parameter of type 'never'.`\n2. Line 366: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n3. Line 409: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n4. Line 536: `error TS2345: Argument of type '{ numberOfChunks: number; averageChunkSize: number; }' is not assignable to parameter of type 'never'.`\n\n### Impact\n- Blocks `bun run clean` command\n- Prevents successful build of `@elizaos/core`\n- Affects dependent packages in the monorepo\n\n## Steps to Reproduce\n1. Run `bun run clean`\n2. Observe build failure in `@elizaos/core`\n3. Build fails with TypeScript errors during DTS generation\n\n## Expected Behavior\n- `bun run clean` should complete successfully\n- `@elizaos/core` should build without TypeScript errors\n- Type definitions should be generated correctly\n\n## Suggested Fix\n\nThe errors suggest type mismatches in `utils.ts`. Need to:\n1. Review type definitions in affected lines\n2. Update type assertions or generic constraints\n3. Ensure string template literal types are properly handled\n4. Fix object type assignments\n\n### Files to Update\n- `packages/core/src/utils.ts`\n\n## Priority\n**HIGH** - This is blocking clean builds and potentially affecting development workflow.",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "üêõ Build failure in @elizaos/core causing bun run clean to fail",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5738,
                "node_id": "I_kwDOMT5cIs7E1COv",
                "assignee": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5738",
                "assignees": [
                  {
                    "id": 15067321,
                    "url": "https://api.github.com/users/monilpat",
                    "type": "User",
                    "login": "monilpat",
                    "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                    "html_url": "https://github.com/monilpat",
                    "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/monilpat/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                    "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/monilpat/followers",
                    "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/monilpat/orgs",
                    "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                    "received_events_url": "https://api.github.com/users/monilpat/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-08T00:26:11Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/labels{/name}",
                "updated_at": "2025-08-11T14:56:01Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3301116813,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734",
                "body": "**Describe the bug**\n\nOn project creation, ElizaOS CLI fails with the following error:\n```\n‚óá  Failed to build project\nstdout: src/index.ts(7,25): error TS2345: Argument of type 'string' is not assignable to parameter of type 'undefined'.\nstderr: $ tsc --noEmit && vite build && tsup\n```\n\n**To Reproduce**\n\n- Install ElizaOS through `bun`\n```\nbun i -g @elizaos/cli\n```\n- Create new ElizaOS project\n```\nelizaos create abcde\n```\n\n**Expected behavior**\n\nProject built successfully\n\n**Screenshots**\n\n<img width=\"1095\" height=\"572\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/967dd6a2-0d70-4e2e-8019-85a2eab5f225\" />\n\n**Additional context**\n\nElizaOS CLI version: `1.3.2`\n",
                "type": null,
                "user": {
                  "id": 74447600,
                  "url": "https://api.github.com/users/Kemystra",
                  "type": "User",
                  "login": "Kemystra",
                  "node_id": "MDQ6VXNlcjc0NDQ3NjAw",
                  "html_url": "https://github.com/Kemystra",
                  "gists_url": "https://api.github.com/users/Kemystra/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/Kemystra/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/74447600?v=4",
                  "events_url": "https://api.github.com/users/Kemystra/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/Kemystra/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/Kemystra/followers",
                  "following_url": "https://api.github.com/users/Kemystra/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/Kemystra/orgs",
                  "subscriptions_url": "https://api.github.com/users/Kemystra/subscriptions",
                  "received_events_url": "https://api.github.com/users/Kemystra/received_events"
                },
                "state": "open",
                "title": "Eliza CLI failed to build project",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5734,
                "node_id": "I_kwDOMT5cIs7EwwuN",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5734",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T16:14:00Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/labels{/name}",
                "updated_at": "2025-08-08T19:43:52Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "NONE",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3299481897,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729",
                "body": "# Relates to\r\n\r\nN/A (Documentation improvement, not tied to a specific issue or ticket)\r\n\r\n# Risks\r\n\r\nLow.  \r\nThis change only updates documentation and does not affect any code or functionality.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR updates the elizaos README to include a fix for installation errors that may occur due to permission issues. It adds a note suggesting the use of sudo if users encounter a \"Permission denied\" or \"InstallFailed\" error when running the `elizaos create my-agent` command.\r\n\r\n## What kind of change is this?\r\n\r\nImprovements (misc. changes to existing features)  \r\nDocumentation update\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes require a change to the project documentation.  \r\nI have updated the documentation accordingly.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\nStart by reviewing the changes in the README.md file, specifically the section on creating a new project.\r\n\r\n## Detailed testing steps\r\n\r\n- Open the updated README.md.\r\n- Review the new instructions under \"Create Your First Project.\"\r\n- Confirm that the added note about using `sudo` is clear and helpful for users who encounter permission errors.",
                "type": null,
                "user": {
                  "id": 32749185,
                  "url": "https://api.github.com/users/mandatedisrael",
                  "type": "User",
                  "login": "mandatedisrael",
                  "node_id": "MDQ6VXNlcjMyNzQ5MTg1",
                  "html_url": "https://github.com/mandatedisrael",
                  "gists_url": "https://api.github.com/users/mandatedisrael/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/mandatedisrael/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/32749185?v=4",
                  "events_url": "https://api.github.com/users/mandatedisrael/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/mandatedisrael/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/mandatedisrael/followers",
                  "following_url": "https://api.github.com/users/mandatedisrael/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/mandatedisrael/orgs",
                  "subscriptions_url": "https://api.github.com/users/mandatedisrael/subscriptions",
                  "received_events_url": "https://api.github.com/users/mandatedisrael/received_events"
                },
                "draft": false,
                "state": "open",
                "title": "Update README.md to fix error",
                "labels": [],
                "locked": false,
                "number": 5729,
                "node_id": "PR_kwDOMT5cIs6iiNWN",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T08:10:12Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/labels{/name}",
                "updated_at": "2025-08-07T08:10:24Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/comments",
                "pull_request": {
                  "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5729",
                  "diff_url": "https://github.com/elizaOS/eliza/pull/5729.diff",
                  "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                  "merged_at": null,
                  "patch_url": "https://github.com/elizaOS/eliza/pull/5729.patch"
                },
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "FIRST_TIME_CONTRIBUTOR",
                "performed_via_github_app": null
              },
              {
                "id": 3299322983,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728",
                "body": "# Background\r\n\r\n## What does this PR do?\r\n\r\nIntroduce entity for cancelling runs `CancelRunSignal`\r\n\r\n## Why are we doing this? Any context or related work?\r\n\r\n- Calls to LLMs usually cost some credits\r\n- When we receive the `RUN_STARTED` event we can check current entity and end run to prevent credits spending\r\n\r\n# Documentation changes needed?\r\n\r\n## Methods\r\n\r\n- `static getSignal(runId: UUID)` - get signal by runId or create if null\r\n- `static clear(runId: UUID)` - clear signal from map\r\n- `cancel(content?: Content)` - cancel current run and and send `content` as a response to user\r\n\r\n## Example\r\n\r\n```typescript\r\nimport { Content, EventType, Plugin } from \"@elizaos/core\";\r\nimport { CancelRunSignal } from \"@elizaos/plugin-bootstrap\";\r\n\r\n// consider we have a service to determine eligibility for entity\r\ninterface EligibilityService {\r\n  check(entityId: UUID): Promise<{ result: boolean, reason?: Content }>\r\n}\r\n\r\nconst plugin: Plugin = {\r\n...\r\n  events: {\r\n    [EventType.RUN_STARTED]: ({ entityId, runId, runtime }) => {\r\n      const service = runtime.getService<EligibilityService>(\"USER_MANAGEMENT\");\r\n      const { result, reason } = await service.check(entityId);\r\n      \r\n      if (!result) {\r\n        const signal = CancelRunSignal.getSignal(runId);\r\n        signal.cancel(reason);\r\n      }\r\n    },\r\n    ...\r\n  },\r\n  ...\r\n}\r\n\r\nexport default Plugin;\r\n```\r\n\r\n## Discord username\r\n\r\nalexd000\r\n\r\n",
                "type": null,
                "user": {
                  "id": 82507604,
                  "url": "https://api.github.com/users/alex-nax",
                  "type": "User",
                  "login": "alex-nax",
                  "node_id": "MDQ6VXNlcjgyNTA3NjA0",
                  "html_url": "https://github.com/alex-nax",
                  "gists_url": "https://api.github.com/users/alex-nax/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/alex-nax/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/82507604?v=4",
                  "events_url": "https://api.github.com/users/alex-nax/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/alex-nax/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/alex-nax/followers",
                  "following_url": "https://api.github.com/users/alex-nax/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/alex-nax/orgs",
                  "subscriptions_url": "https://api.github.com/users/alex-nax/subscriptions",
                  "received_events_url": "https://api.github.com/users/alex-nax/received_events"
                },
                "draft": false,
                "state": "open",
                "title": "feat: ability to cancel current run before any calls to LLM are made",
                "labels": [],
                "locked": false,
                "number": 5728,
                "node_id": "PR_kwDOMT5cIs6ihriD",
                "assignee": null,
                "comments": 3,
                "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T07:19:35Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/labels{/name}",
                "updated_at": "2025-08-07T07:22:05Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/comments",
                "pull_request": {
                  "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5728",
                  "diff_url": "https://github.com/elizaOS/eliza/pull/5728.diff",
                  "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                  "merged_at": null,
                  "patch_url": "https://github.com/elizaOS/eliza/pull/5728.patch"
                },
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "FIRST_TIME_CONTRIBUTOR",
                "performed_via_github_app": null
              },
              {
                "id": 3298692741,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727",
                "body": "# feat(scenarios): Implement natural language agent interaction and response validation\n\n## Description\n\nThis ticket enables scenarios to test agent behavior through natural language interactions rather than direct code execution. This allows testing of agent reasoning, decision-making, and response generation in realistic conversation contexts with proper evaluation of agent responses.\n\n## Acceptance Criteria\n\n1. Scenario `run` blocks support `input` field for natural language prompts to agents\n2. Agent responses are captured and available for evaluation (text, thoughts, actions)\n3. Evaluators can access both agent response text and execution context\n4. Support for multi-turn conversations in scenarios\n5. Agent responses include thought process and action decisions\n6. Integration with existing evaluation engine for response validation\n7. Support for conversation context across multiple steps\n8. Agent response timing and performance metrics\n\n## Technical Approach\n\n### 1. Enhanced Run Step Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst RunStepSchema = z.object({\n  name: z.string().optional(),\n  // Natural language input to agent\n  input: z.string().optional(),\n  // Direct code execution (existing)\n  lang: z.string().optional(),\n  code: z.string().optional(),\n  // Agent interaction specific\n  agent_context: z.object({\n    conversation_id: z.string().optional(),\n    user_id: z.string().optional(),\n    room_id: z.string().optional(),\n  }).optional(),\n  evaluations: z.array(EvaluationSchema),\n});\n```\n\n### 2. Agent Interaction Engine\n```typescript\n// packages/cli/src/scenarios/agent-interaction.ts\nexport class AgentInteractionEngine {\n  constructor(private runtime: IAgentRuntime) {}\n\n  async interactWithAgent(input: string, context?: AgentContext): Promise<AgentResponse> {\n    // Create message for agent\n    const message: Memory = {\n      entityId: context?.user_id || 'scenario-user',\n      roomId: context?.room_id || 'scenario-room',\n      content: {\n        type: 'text',\n        text: input,\n      },\n      metadata: {\n        type: 'message',\n        conversationId: context?.conversation_id,\n      },\n    };\n\n    // Send to agent and capture response\n    const startTime = Date.now();\n    const response = await this.runtime.processMessage(message);\n    const endTime = Date.now();\n\n    return {\n      text: response.text,\n      thoughts: response.thoughts,\n      actions: response.actions,\n      timing: {\n        startTime,\n        endTime,\n        duration: endTime - startTime,\n      },\n      context: {\n        conversationId: context?.conversation_id,\n        messageId: message.id,\n      },\n    };\n  }\n}\n```\n\n### 3. Enhanced Execution Result\n```typescript\n// packages/cli/src/scenarios/providers.ts\nexport interface ExecutionResult {\n  exitCode: number;\n  stdout: string;\n  stderr: string;\n  files: Record<string, string>;\n  // New: Agent interaction results\n  agentResponse?: AgentResponse;\n  conversationHistory?: AgentResponse[];\n}\n```\n\n## Test Scenario\n\nCreate `agent-interaction-test.scenario.yaml`:\n```yaml\nname: \"Agent Interaction Test\"\ndescription: \"Tests natural language interaction with agents\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Implement Dark Mode\"\n          number: 123\n          state: \"open\"\n          labels: [\"feature\", \"ui\"]\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"2.5\"\n\nrun:\n  - name: \"Ask agent about roadmap\"\n    input: \"What new features are you planning to add?\"\n    agent_context:\n      conversation_id: \"roadmap-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify agent searched for issues\"\n      \n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n        description: \"Verify agent mentioned the mocked issue\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent provide a helpful and coherent response about new features?\"\n        expected: \"yes\"\n        description: \"Verify agent response quality\"\n\n  - name: \"Ask agent about wallet\"\n    input: \"What's my current wallet balance?\"\n    agent_context:\n      conversation_id: \"wallet-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify agent checked wallet balance\"\n      \n      - type: \"string_contains\"\n        value: \"2.5 ETH\"\n        description: \"Verify agent reported the correct balance\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent clearly explain the wallet balance information?\"\n        expected: \"yes\"\n\n  - name: \"Multi-turn conversation\"\n    input: \"Can you help me with both my wallet and roadmap?\"\n    agent_context:\n      conversation_id: \"multi-turn-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"ETH\"\n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent address both wallet and roadmap questions comprehensively?\"\n        expected: \"yes\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Single Turn**: Test basic agent interaction and response\n2. **Multi-turn**: Test conversation context across steps\n3. **Action Tracking**: Verify agent uses appropriate actions\n4. **Response Quality**: Test LLM judge evaluation of responses\n5. **Performance**: Test response timing and metrics\n6. **Error Handling**: Test agent behavior with invalid inputs\n\n## Dependencies\n\n- Requires plugin system integration (Ticket 1)\n- Builds on advanced mocking system (Ticket 2)\n- Integrates with existing evaluation engine\n- Depends on agent runtime message processing",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement natural language agent interaction and response validation",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5727,
                "node_id": "I_kwDOMT5cIs7Eng6F",
                "assignee": null,
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5727",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:49:34Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/labels{/name}",
                "updated_at": "2025-08-07T05:35:40Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3298691383,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726",
                "body": "# feat(scenarios): Implement conditional mocking and complex response structures\n\n## Description\n\nThis ticket enhances the mocking system to support conditional responses based on input parameters and complex response structures with metadata. This enables realistic testing of service interactions like GitHub API calls or EVM transactions with proper request/response matching.\n\n## Acceptance Criteria\n\n1. Mock definitions support `when` clauses for conditional responses\n2. `when` clauses can match on method arguments, input parameters, or request context\n3. Mock responses support complex nested structures with metadata (timestamps, IDs, etc.)\n4. Multiple mock responses can be defined for the same service/method with different conditions\n5. Mock system provides clear logging of which mock was triggered and why\n6. Mock responses can include realistic error conditions and edge cases\n7. Support for dynamic response generation based on input parameters\n8. Mock validation ensures `when` clauses are syntactically correct\n\n## Technical Approach\n\n### 1. Enhanced Mock Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst MockSchema = z.object({\n  service: z.string(),\n  method: z.string(),\n  when: z.object({\n    // Match on method arguments\n    args: z.array(z.any()).optional(),\n    // Match on specific argument values\n    input: z.record(z.any()).optional(),\n    // Match on request context\n    context: z.record(z.any()).optional(),\n    // Custom matching function\n    matcher: z.string().optional(), // JavaScript expression\n  }).optional(),\n  response: z.any(), // Can be function or static value\n  // For dynamic responses\n  responseFn: z.string().optional(), // JavaScript function\n  // Error simulation\n  error: z.object({\n    code: z.string(),\n    message: z.string(),\n  }).optional(),\n});\n```\n\n### 2. Mock Engine Implementation\n```typescript\n// packages/cli/src/scenarios/mock-engine.ts\nexport class MockEngine {\n  private mocks: MockDefinition[] = [];\n\n  addMock(mock: MockDefinition) {\n    this.mocks.push(mock);\n  }\n\n  async findMock(service: string, method: string, args: any[]): Promise<any> {\n    const candidates = this.mocks.filter(m => \n      m.service === service && m.method === method\n    );\n\n    for (const mock of candidates) {\n      if (await this.matchesCondition(mock, args)) {\n        this.logger.info(`Mock triggered: ${service}.${method} with condition: ${JSON.stringify(mock.when)}`);\n        return this.generateResponse(mock, args);\n      }\n    }\n\n    return null; // No mock found\n  }\n\n  private async matchesCondition(mock: MockDefinition, args: any[]): Promise<boolean> {\n    if (!mock.when) return true; // Default mock\n\n    // Match on arguments\n    if (mock.when.args) {\n      if (!this.deepEqual(args, mock.when.args)) return false;\n    }\n\n    // Match on input parameters\n    if (mock.when.input) {\n      const input = this.extractInputFromArgs(args);\n      if (!this.deepEqual(input, mock.when.input)) return false;\n    }\n\n    // Custom matcher function\n    if (mock.when.matcher) {\n      const matcherFn = new Function('args', 'input', mock.when.matcher);\n      return matcherFn(args, this.extractInputFromArgs(args));\n    }\n\n    return true;\n  }\n\n  private generateResponse(mock: MockDefinition, args: any[]): any {\n    if (mock.error) {\n      throw new Error(`${mock.error.code}: ${mock.error.message}`);\n    }\n\n    if (mock.responseFn) {\n      const responseFn = new Function('args', 'input', mock.responseFn);\n      return responseFn(args, this.extractInputFromArgs(args));\n    }\n\n    return mock.response;\n  }\n}\n```\n\n## Test Scenario\n\nCreate `advanced-mocking-test.scenario.yaml`:\n```yaml\nname: \"Advanced Mocking Test\"\ndescription: \"Tests conditional mocking and complex response structures\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    # Conditional GitHub issue search\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"bug\"\n        matcher: \"input.labels.includes('bug')\"\n      response:\n        - title: \"Critical Bug Found\"\n          number: 456\n          state: \"open\"\n          labels: [\"bug\", \"critical\"]\n          created_at: \"2024-07-15T10:00:00Z\"\n\n    # Conditional GitHub issue search - different response\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"feature\"\n        matcher: \"input.labels.includes('feature')\"\n      response:\n        - title: \"New Feature Request\"\n          number: 789\n          state: \"open\"\n          labels: [\"feature\", \"enhancement\"]\n          created_at: \"2024-07-15T11:00:00Z\"\n\n    # Dynamic EVM balance response\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      when:\n        args: [\"0x1234567890abcdef\"]\n      responseFn: |\n        return {\n          chain: \"ethereum\",\n          address: args[0],\n          balances: [\n            { symbol: \"ETH\", amount: \"1.23\" },\n            { symbol: \"USDC\", amount: \"1000.00\" }\n          ],\n          last_updated: new Date().toISOString()\n        }\n\n    # Error simulation\n    - service: \"github-service\"\n      method: \"readFile\"\n      when:\n        input:\n          path: \"/docs/nonexistent.md\"\n      error:\n        code: \"FILE_NOT_FOUND\"\n        message: \"File does not exist\"\n\nrun:\n  - name: \"Test conditional GitHub search\"\n    input: \"Search for issues with bug label\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"Critical Bug Found\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent correctly search for bug issues?\"\n        expected: \"yes\"\n\n  - name: \"Test dynamic EVM response\"\n    input: \"What's the balance for address 0x1234567890abcdef?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n      - type: \"string_contains\"\n        value: \"1000.00 USDC\"\n\n  - name: \"Test error handling\"\n    input: \"Read the file /docs/nonexistent.md\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.readFile\"\n      - type: \"string_contains\"\n        value: \"File does not exist\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Conditional Matching**: Test different responses based on input parameters\n2. **Dynamic Responses**: Test response generation based on arguments\n3. **Error Simulation**: Test error handling and reporting\n4. **Complex Structures**: Test nested response objects with metadata\n5. **Multiple Mocks**: Test multiple mocks for same service/method\n6. **Logging**: Verify mock selection is logged clearly\n\n## Dependencies\n\n- Builds on existing mock system in scenarios\n- Requires plugin system integration (Ticket 1)\n- Integrates with agent interaction testing (Ticket 3) ",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement conditional mocking and complex response structures",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5726,
                "node_id": "I_kwDOMT5cIs7Engk3",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5726",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:49:00Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/labels{/name}",
                "updated_at": "2025-08-07T05:32:53Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3298689704,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725",
                "body": "# feat(scenarios): Implement plugin specification and dynamic loading\n\n## Description\n\nThis ticket implements plugin specification in scenario YAML files, allowing scenarios to declare which plugins are required for testing. This enables testing of agent behaviors that depend on specific plugins like `@elizaos/plugin-github` or `@elizaos/plugin-evm`. The system will dynamically load specified plugins during scenario execution and make their actions, providers, and services available to the agent.\n\n## Acceptance Criteria\n\n1. Scenario YAML supports a `plugins` array at the root level with string plugin names\n2. The `initializeAgent()` function respects scenario plugin specifications and loads them via `startAgent()`\n3. Plugin loading follows the same dependency resolution and error handling as the main CLI\n4. Scenarios can specify both string plugin names (`@elizaos/plugin-github`) and direct plugin objects\n5. Plugin loading errors are clearly reported with actionable guidance\n6. Default plugins (bootstrap, sql) are automatically included unless explicitly excluded via `exclude_defaults: true`\n7. Plugin conflicts are detected and reported during scenario validation\n8. Plugin initialization errors don't crash the scenario but are reported in results\n\n## Technical Approach\n\n### 1. Update Scenario Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst ScenarioSchema = z.object({\n  name: z.string(),\n  description: z.string(),\n  plugins: z.array(z.string()).optional(), // e.g., [\"@elizaos/plugin-github\"]\n  exclude_defaults: z.boolean().optional(), // exclude bootstrap/sql\n  environment: EnvironmentSchema,\n  setup: SetupSchema.optional(),\n  run: z.array(RunStepSchema),\n  judgment: JudgmentSchema,\n});\n```\n\n### 2. Enhance Runtime Factory\n```typescript\n// packages/cli/src/scenarios/runtime-factory.ts\nexport async function initializeAgent(scenario: Scenario): Promise<IAgentRuntime> {\n  const character: Character = {\n    name: 'scenario-runner',\n    id: stringToUuid('scenario-runner'),\n    bio: 'A minimal character for running scenarios',\n    plugins: scenario.plugins || []\n  };\n\n  // Load default plugins unless excluded\n  if (!scenario.exclude_defaults) {\n    character.plugins.push('@elizaos/plugin-bootstrap', '@elizaos/plugin-sql');\n  }\n\n  const runtime = await startAgent(\n    encryptedCharacter(character),\n    server,\n    undefined,\n    character.plugins,\n    { isTestMode: true }\n  );\n\n  return runtime;\n}\n```\n\n### 3. Plugin Validation\n```typescript\n// packages/cli/src/scenarios/plugin-validator.ts\nexport async function validateScenarioPlugins(scenario: Scenario): Promise<ValidationResult[]> {\n  const results: ValidationResult[] = [];\n  \n  for (const pluginName of scenario.plugins || []) {\n    try {\n      const plugin = await loadAndPreparePlugin(pluginName);\n      if (!plugin) {\n        results.push({\n          type: 'error',\n          message: `Plugin '${pluginName}' could not be loaded`,\n          suggestion: 'Check if plugin is installed or built correctly'\n        });\n      }\n    } catch (error) {\n      results.push({\n        type: 'error', \n        message: `Failed to validate plugin '${pluginName}': ${error.message}`,\n        suggestion: 'Verify plugin dependencies and configuration'\n      });\n    }\n  }\n  \n  return results;\n}\n```\n\n## Test Scenario\n\nCreate `plugin-integration-test.scenario.yaml`:\n```yaml\nname: \"Plugin Integration Test\"\ndescription: \"Tests loading and using plugins specified in scenario YAML\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Test Issue\"\n          number: 123\n          state: \"open\"\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"1.23\"\n\nrun:\n  - name: \"Test GitHub plugin actions\"\n    input: \"Search for issues with label 'bug'\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify GitHub plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"Test Issue\"\n        description: \"Verify agent found the mocked issue\"\n\n  - name: \"Test EVM plugin actions\"\n    input: \"What's my wallet balance?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify EVM plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n        description: \"Verify agent reported the mocked balance\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Plugin Loading Test**: Verify plugins load without errors\n2. **Action Availability Test**: Confirm agent can use plugin actions\n3. **Error Handling Test**: Test with non-existent plugin\n4. **Default Plugin Test**: Verify bootstrap/sql are included by default\n5. **Exclusion Test**: Test `exclude_defaults: true` behavior\n\n## Dependencies\n\n- Fixes the `startAgent` hanging issue (#5719) to enable plugin testing\n- Builds on existing `loadAndPreparePlugin` functionality\n- Integrates with current scenario execution flow ",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement plugin specification and dynamic loading",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5725,
                "node_id": "I_kwDOMT5cIs7EngKo",
                "assignee": null,
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5725",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:48:08Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/labels{/name}",
                "updated_at": "2025-08-07T05:37:32Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              }
            ]
          },
          "issues": [
            {
              "id": 3310285907,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754",
              "body": "## Issue Summary\nThe `elizaos publish --npm` command reports successful publishing but the plugin is not actually published to npm, despite showing success messages. The npm publish is failing with a 404 error, but the ElizaOS CLI incorrectly reports success.\n\n## Key Problems Identified\n\n### 1. Critical NPM Publishing Failure\n- **Error**: `npm error 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found`\n- **Issue**: The package scope `@elizaos` doesn't exist on npm, preventing publishing\n- **Impact**: Package cannot be published to npm, but CLI reports success\n\n### 2. False Success Reporting\n- **Issue**: CLI reports `[‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm`\n- **Reality**: npm publish failed with 404 error\n- **Impact**: Developers believe their plugin is published when it's not\n\n### 3. Registry Repository Mismatch\n- **Expected**: Should create PR against `https://github.com/elizaos-plugins/registry`\n- **Actual**: Still references old registry `https://github.com/elizaos/registry`\n- **Impact**: Plugin won't appear in the official ElizaOS registry\n\n## Steps to Reproduce\n\n```bash\n# Navigate to the plugin directory\ncd packages/plugin-polygon\n\n# Ensure you're on the correct branch with the changes\ngit checkout polygon\n\n# Run the publish command\nelizaos publish --npm\n\n# Verify the success message appears\n# [‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm\n\n# Check if package actually exists on npm\nnpm view @elizaos/plugin-polygon@1.0.0\n# Result: 404 Not Found - '@elizaos/plugin-polygon@1.0.0' is not in this registry\n```\n\n## Technical Details\n\n### NPM Error Analysis\nThe npm logs show the root cause:\n```\nhttp fetch PUT 404 https://registry.npmjs.org/@elizaos%2fplugin-polygon 507ms\nerror 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found\n```\n\nThis indicates that the `@elizaos` scope doesn't exist on npm, which is required for publishing scoped packages.\n\n### CLI Error Handling Failure\nThe ElizaOS CLI is not properly parsing npm error codes:\n- npm returns exit code 1 (failure)\n- CLI ignores the error and reports success\n- No validation that the package actually exists on npm\n\n## Expected Behavior\n1. CLI should detect npm publish failures (exit code 1)\n2. CLI should fail with clear error message when package scope doesn't exist\n3. CLI should validate that package actually exists on npm after publishing\n4. CLI should create PRs against the correct registry repository\n\n## Recommended Fixes\n\n### 1. Fix NPM Error Detection\n```typescript\n// In the publish command, check npm exit code\nconst npmResult = await exec('npm publish', { cwd: pluginDir });\nif (npmResult.exitCode !== 0) {\n  throw new Error(`NPM publish failed: ${npmResult.stderr}`);\n}\n```\n\n### 2. Add Package Scope Validation\n```typescript\n// Before publishing, check if scope exists\nconst scopeExists = await checkNpmScope('@elizaos');\nif (!scopeExists) {\n  throw new Error('Package scope @elizaos does not exist on npm. Contact npm support to create the scope.');\n}\n```\n\n### 3. Add Post-Publish Validation\n```typescript\n// After publishing, verify package exists\nconst packageExists = await checkPackageExists(packageName, version);\nif (!packageExists) {\n  throw new Error(`Package was not published successfully. Check npm logs for details.`);\n}\n```\n\n## Priority\n**Critical** - This completely blocks plugin publishing and creates false success reports.\n\n## Affected Components\n- `packages/cli/src/commands/publish.ts`\n- NPM publishing logic\n- Error handling and success reporting\n- Package scope validation\n- Registry repository configuration\n\n## Immediate Action Required\n1. **Create the `@elizaos` scope on npm** or use an existing scope\n2. Update CLI to properly detect and handle npm publish failures\n3. Add post-publish validation to ensure packages actually exist on npm\n4. Update registry repository configuration\n\n## Alternative Solutions\n1. **Use existing scope**: Change package name to `@monilpat/plugin-polygon`\n2. **Create organization scope**: Set up `@elizaos` organization on npm\n3. **Use unscoped package**: Publish as `elizaos-plugin-polygon`\n\nThis issue is critically blocking plugin developers from successfully publishing their work and needs immediate attention from the ElizaOS team.\n",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "Critical: Plugin Publishing Fails with False Success Reports",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5754,
              "node_id": "I_kwDOMT5cIs7FTvRT",
              "assignee": null,
              "comments": 0,
              "html_url": "https://github.com/elizaOS/eliza/issues/5754",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-11T14:20:08Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/labels{/name}",
              "updated_at": "2025-08-11T14:20:08Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3308102900,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749",
              "body": "### Problem Statement\nCurrently, ElizaOS scenario testing lacks the ability to mock internal agent runtime calls (particularly LLM interactions) when testing via the API client. This makes it difficult to create deterministic tests for agent behavior and workflows.\n\n### Current Limitations\n- Global function mocks only work for code executed in the same process\n- No way to intercept `runtime.useModel` calls from the bootstrap plugin\n- Agent behavior is non-deterministic due to real LLM calls\n- Difficult to test specific agent decision paths and responses\n\n### Why Different Approach Was Needed\n\nThe existing mocking system was designed for **code execution environments** (E2B sandbox and local `node -e` processes), where mocks are applied to the execution context. However, **agent testing** works differently:\n\n- **E2B/Local Execution**: Code runs in isolated processes/sandboxes where global mocks can be applied\n- **Agent Testing**: Agent runs as a service with API client interaction, requiring direct runtime method interception\n- **Architecture Gap**: The bootstrap plugin calls `runtime.useModel` internally, which can't be mocked through the execution environment approach\n\nThis architectural difference necessitated a new approach that directly intercepts runtime methods rather than relying on execution context mocking.\n\n### Proposed Solution: Runtime Method Mocking\n\nWe've implemented a new mocking approach that directly intercepts `IAgentRuntime` method calls:\n\n#### Key Components\n\n1. **MockEngine Enhancement**\n   - Added `runtimeMethodMocks` to support mocking runtime methods\n   - Priority system: `runtimeMethod` > `service` > `globalFunction`\n   - Direct method replacement on the runtime instance\n\n2. **Schema Updates**\n   - Extended `MockSchema` to include `runtimeMethod: z.string().optional()`\n   - Supports mocking any `IAgentRuntime` method (e.g., `useModel`, `getService`)\n\n3. **Conditional Matching**\n   - Matcher functions can inspect method arguments\n   - Example: `\"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"`\n   - Supports complex conditional logic for when to apply mocks\n\n#### Usage Example\n\n```yaml\nsetup:\n  mocks:\n    - runtimeMethod: \"useModel\"\n      method: \"useModel\"\n      when:\n        matcher: \"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"\n      response: \"<response><name>agent</name><reasoning>Mocked response</reasoning><action>RESPOND</action></response>\"\n```\n\n#### Benefits\n\n1. **Deterministic Testing**: Replace LLM calls with static responses\n2. **Full Workflow Testing**: Test complete agent decision flows\n3. **Conditional Mocking**: Apply mocks based on specific conditions\n4. **Runtime Integration**: Works seamlessly with existing agent architecture\n5. **Backward Compatibility**: Existing mocks continue to work\n\n#### Implementation Steps\n\n- MockEngine runtime method support\n- Schema updates for runtimeMethod mocks\n- Conditional matching with matcher functions\n- Integration with scenario runner\n- Basic useModel mocking working\n- Add support for mocking other runtime methods (getService, etc.)\n- Create comprehensive test scenarios\n- Add documentation and examples\n- Consider adding mock recording/replay capabilities\n\n### Technical Details\n\nThe implementation works by:\n1. Creating the `IAgentRuntime` instance in the scenario runner\n2. Applying mocks directly to the runtime object before agent initialization\n3. The bootstrap plugin receives the mocked runtime and uses the mocked methods\n4. Mocks are reverted after scenario completion\n\nThis approach provides the foundation for robust, deterministic agent testing while maintaining the existing architecture.",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "Implement Runtime Method Mocking for Deterministic Agent Testing",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 7668252177,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/testing",
                  "name": "testing",
                  "color": "2D3957",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAAByRA-EQ",
                  "description": ""
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5749,
              "node_id": "I_kwDOMT5cIs7FLaT0",
              "assignee": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "comments": 0,
              "html_url": "https://github.com/elizaOS/eliza/issues/5749",
              "assignees": [
                {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-11T00:08:49Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/labels{/name}",
              "updated_at": "2025-08-11T00:09:37Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3304516859,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747",
              "body": null,
              "type": null,
              "user": {
                "id": 48334430,
                "url": "https://api.github.com/users/samarth30",
                "type": "User",
                "login": "samarth30",
                "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                "html_url": "https://github.com/samarth30",
                "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/samarth30/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/samarth30/followers",
                "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/samarth30/orgs",
                "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                "received_events_url": "https://api.github.com/users/samarth30/received_events"
              },
              "state": "open",
              "title": "Fixing bugs in eliza-cloud",
              "labels": [],
              "locked": false,
              "number": 5747,
              "node_id": "I_kwDOMT5cIs7E9uz7",
              "assignee": {
                "id": 48334430,
                "url": "https://api.github.com/users/samarth30",
                "type": "User",
                "login": "samarth30",
                "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                "html_url": "https://github.com/samarth30",
                "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/samarth30/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/samarth30/followers",
                "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/samarth30/orgs",
                "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                "received_events_url": "https://api.github.com/users/samarth30/received_events"
              },
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5747",
              "assignees": [
                {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-08T16:01:56Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/labels{/name}",
              "updated_at": "2025-08-08T19:02:49Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "MEMBER",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": {
                "id": 20150,
                "name": "Linear",
                "slug": "linear",
                "owner": {
                  "id": 46686594,
                  "url": "https://api.github.com/users/linear",
                  "type": "Organization",
                  "login": "linear",
                  "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ2Njg2NTk0",
                  "html_url": "https://github.com/linear",
                  "gists_url": "https://api.github.com/users/linear/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/linear/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/46686594?v=4",
                  "events_url": "https://api.github.com/users/linear/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/linear/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/linear/followers",
                  "following_url": "https://api.github.com/users/linear/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/linear/orgs",
                  "subscriptions_url": "https://api.github.com/users/linear/subscriptions",
                  "received_events_url": "https://api.github.com/users/linear/received_events"
                },
                "events": [
                  "check_suite",
                  "issues",
                  "issue_comment",
                  "pull_request",
                  "pull_request_review",
                  "repository",
                  "sub_issues"
                ],
                "node_id": "MDM6QXBwMjAxNTA=",
                "html_url": "https://github.com/apps/linear",
                "client_id": "Iv1.085d682ea245c945",
                "created_at": "2018-11-02T18:07:23Z",
                "updated_at": "2025-02-07T14:59:56Z",
                "description": "",
                "permissions": {
                  "checks": "read",
                  "issues": "write",
                  "metadata": "read",
                  "pull_requests": "write"
                },
                "external_url": "https://linear.app"
              }
            },
            {
              "id": 3302237103,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738",
              "body": "## Description\n\nThe `bun run clean` command is failing due to TypeScript errors in `@elizaos/core` package during the DTS (type definition) build phase.\n\n## Error Details\n\n### Build Process\n```\n‚Ä¢ Running build in 17 packages\n‚Ä¢ Remote caching disabled\n@elizaos/config:build: cache miss\n@elizaos/autodoc:build: cache miss\n@elizaos/core:build: cache miss\n```\n\n### TypeScript Errors in @elizaos/core/src/utils.ts\n1. Line 218: `error TS2345: Argument of type '`${string}-${string}-${string}-${string}-${string}`' is not assignable to parameter of type 'never'.`\n2. Line 366: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n3. Line 409: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n4. Line 536: `error TS2345: Argument of type '{ numberOfChunks: number; averageChunkSize: number; }' is not assignable to parameter of type 'never'.`\n\n### Impact\n- Blocks `bun run clean` command\n- Prevents successful build of `@elizaos/core`\n- Affects dependent packages in the monorepo\n\n## Steps to Reproduce\n1. Run `bun run clean`\n2. Observe build failure in `@elizaos/core`\n3. Build fails with TypeScript errors during DTS generation\n\n## Expected Behavior\n- `bun run clean` should complete successfully\n- `@elizaos/core` should build without TypeScript errors\n- Type definitions should be generated correctly\n\n## Suggested Fix\n\nThe errors suggest type mismatches in `utils.ts`. Need to:\n1. Review type definitions in affected lines\n2. Update type assertions or generic constraints\n3. Ensure string template literal types are properly handled\n4. Fix object type assignments\n\n### Files to Update\n- `packages/core/src/utils.ts`\n\n## Priority\n**HIGH** - This is blocking clean builds and potentially affecting development workflow.",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "üêõ Build failure in @elizaos/core causing bun run clean to fail",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5738,
              "node_id": "I_kwDOMT5cIs7E1COv",
              "assignee": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5738",
              "assignees": [
                {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-08T00:26:11Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/labels{/name}",
              "updated_at": "2025-08-11T14:56:01Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3301116813,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734",
              "body": "**Describe the bug**\n\nOn project creation, ElizaOS CLI fails with the following error:\n```\n‚óá  Failed to build project\nstdout: src/index.ts(7,25): error TS2345: Argument of type 'string' is not assignable to parameter of type 'undefined'.\nstderr: $ tsc --noEmit && vite build && tsup\n```\n\n**To Reproduce**\n\n- Install ElizaOS through `bun`\n```\nbun i -g @elizaos/cli\n```\n- Create new ElizaOS project\n```\nelizaos create abcde\n```\n\n**Expected behavior**\n\nProject built successfully\n\n**Screenshots**\n\n<img width=\"1095\" height=\"572\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/967dd6a2-0d70-4e2e-8019-85a2eab5f225\" />\n\n**Additional context**\n\nElizaOS CLI version: `1.3.2`\n",
              "type": null,
              "user": {
                "id": 74447600,
                "url": "https://api.github.com/users/Kemystra",
                "type": "User",
                "login": "Kemystra",
                "node_id": "MDQ6VXNlcjc0NDQ3NjAw",
                "html_url": "https://github.com/Kemystra",
                "gists_url": "https://api.github.com/users/Kemystra/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/Kemystra/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/74447600?v=4",
                "events_url": "https://api.github.com/users/Kemystra/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/Kemystra/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/Kemystra/followers",
                "following_url": "https://api.github.com/users/Kemystra/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/Kemystra/orgs",
                "subscriptions_url": "https://api.github.com/users/Kemystra/subscriptions",
                "received_events_url": "https://api.github.com/users/Kemystra/received_events"
              },
              "state": "open",
              "title": "Eliza CLI failed to build project",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5734,
              "node_id": "I_kwDOMT5cIs7EwwuN",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5734",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T16:14:00Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/labels{/name}",
              "updated_at": "2025-08-08T19:43:52Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "NONE",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3299481897,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729",
              "body": "# Relates to\r\n\r\nN/A (Documentation improvement, not tied to a specific issue or ticket)\r\n\r\n# Risks\r\n\r\nLow.  \r\nThis change only updates documentation and does not affect any code or functionality.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR updates the elizaos README to include a fix for installation errors that may occur due to permission issues. It adds a note suggesting the use of sudo if users encounter a \"Permission denied\" or \"InstallFailed\" error when running the `elizaos create my-agent` command.\r\n\r\n## What kind of change is this?\r\n\r\nImprovements (misc. changes to existing features)  \r\nDocumentation update\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes require a change to the project documentation.  \r\nI have updated the documentation accordingly.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\nStart by reviewing the changes in the README.md file, specifically the section on creating a new project.\r\n\r\n## Detailed testing steps\r\n\r\n- Open the updated README.md.\r\n- Review the new instructions under \"Create Your First Project.\"\r\n- Confirm that the added note about using `sudo` is clear and helpful for users who encounter permission errors.",
              "type": null,
              "user": {
                "id": 32749185,
                "url": "https://api.github.com/users/mandatedisrael",
                "type": "User",
                "login": "mandatedisrael",
                "node_id": "MDQ6VXNlcjMyNzQ5MTg1",
                "html_url": "https://github.com/mandatedisrael",
                "gists_url": "https://api.github.com/users/mandatedisrael/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/mandatedisrael/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/32749185?v=4",
                "events_url": "https://api.github.com/users/mandatedisrael/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/mandatedisrael/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/mandatedisrael/followers",
                "following_url": "https://api.github.com/users/mandatedisrael/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/mandatedisrael/orgs",
                "subscriptions_url": "https://api.github.com/users/mandatedisrael/subscriptions",
                "received_events_url": "https://api.github.com/users/mandatedisrael/received_events"
              },
              "draft": false,
              "state": "open",
              "title": "Update README.md to fix error",
              "labels": [],
              "locked": false,
              "number": 5729,
              "node_id": "PR_kwDOMT5cIs6iiNWN",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/pull/5729",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T08:10:12Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/labels{/name}",
              "updated_at": "2025-08-07T08:10:24Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/comments",
              "pull_request": {
                "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5729",
                "diff_url": "https://github.com/elizaOS/eliza/pull/5729.diff",
                "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                "merged_at": null,
                "patch_url": "https://github.com/elizaOS/eliza/pull/5729.patch"
              },
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "FIRST_TIME_CONTRIBUTOR",
              "performed_via_github_app": null
            },
            {
              "id": 3299322983,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728",
              "body": "# Background\r\n\r\n## What does this PR do?\r\n\r\nIntroduce entity for cancelling runs `CancelRunSignal`\r\n\r\n## Why are we doing this? Any context or related work?\r\n\r\n- Calls to LLMs usually cost some credits\r\n- When we receive the `RUN_STARTED` event we can check current entity and end run to prevent credits spending\r\n\r\n# Documentation changes needed?\r\n\r\n## Methods\r\n\r\n- `static getSignal(runId: UUID)` - get signal by runId or create if null\r\n- `static clear(runId: UUID)` - clear signal from map\r\n- `cancel(content?: Content)` - cancel current run and and send `content` as a response to user\r\n\r\n## Example\r\n\r\n```typescript\r\nimport { Content, EventType, Plugin } from \"@elizaos/core\";\r\nimport { CancelRunSignal } from \"@elizaos/plugin-bootstrap\";\r\n\r\n// consider we have a service to determine eligibility for entity\r\ninterface EligibilityService {\r\n  check(entityId: UUID): Promise<{ result: boolean, reason?: Content }>\r\n}\r\n\r\nconst plugin: Plugin = {\r\n...\r\n  events: {\r\n    [EventType.RUN_STARTED]: ({ entityId, runId, runtime }) => {\r\n      const service = runtime.getService<EligibilityService>(\"USER_MANAGEMENT\");\r\n      const { result, reason } = await service.check(entityId);\r\n      \r\n      if (!result) {\r\n        const signal = CancelRunSignal.getSignal(runId);\r\n        signal.cancel(reason);\r\n      }\r\n    },\r\n    ...\r\n  },\r\n  ...\r\n}\r\n\r\nexport default Plugin;\r\n```\r\n\r\n## Discord username\r\n\r\nalexd000\r\n\r\n",
              "type": null,
              "user": {
                "id": 82507604,
                "url": "https://api.github.com/users/alex-nax",
                "type": "User",
                "login": "alex-nax",
                "node_id": "MDQ6VXNlcjgyNTA3NjA0",
                "html_url": "https://github.com/alex-nax",
                "gists_url": "https://api.github.com/users/alex-nax/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/alex-nax/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/82507604?v=4",
                "events_url": "https://api.github.com/users/alex-nax/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/alex-nax/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/alex-nax/followers",
                "following_url": "https://api.github.com/users/alex-nax/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/alex-nax/orgs",
                "subscriptions_url": "https://api.github.com/users/alex-nax/subscriptions",
                "received_events_url": "https://api.github.com/users/alex-nax/received_events"
              },
              "draft": false,
              "state": "open",
              "title": "feat: ability to cancel current run before any calls to LLM are made",
              "labels": [],
              "locked": false,
              "number": 5728,
              "node_id": "PR_kwDOMT5cIs6ihriD",
              "assignee": null,
              "comments": 3,
              "html_url": "https://github.com/elizaOS/eliza/pull/5728",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T07:19:35Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/labels{/name}",
              "updated_at": "2025-08-07T07:22:05Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/comments",
              "pull_request": {
                "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5728",
                "diff_url": "https://github.com/elizaOS/eliza/pull/5728.diff",
                "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                "merged_at": null,
                "patch_url": "https://github.com/elizaOS/eliza/pull/5728.patch"
              },
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "FIRST_TIME_CONTRIBUTOR",
              "performed_via_github_app": null
            },
            {
              "id": 3298692741,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727",
              "body": "# feat(scenarios): Implement natural language agent interaction and response validation\n\n## Description\n\nThis ticket enables scenarios to test agent behavior through natural language interactions rather than direct code execution. This allows testing of agent reasoning, decision-making, and response generation in realistic conversation contexts with proper evaluation of agent responses.\n\n## Acceptance Criteria\n\n1. Scenario `run` blocks support `input` field for natural language prompts to agents\n2. Agent responses are captured and available for evaluation (text, thoughts, actions)\n3. Evaluators can access both agent response text and execution context\n4. Support for multi-turn conversations in scenarios\n5. Agent responses include thought process and action decisions\n6. Integration with existing evaluation engine for response validation\n7. Support for conversation context across multiple steps\n8. Agent response timing and performance metrics\n\n## Technical Approach\n\n### 1. Enhanced Run Step Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst RunStepSchema = z.object({\n  name: z.string().optional(),\n  // Natural language input to agent\n  input: z.string().optional(),\n  // Direct code execution (existing)\n  lang: z.string().optional(),\n  code: z.string().optional(),\n  // Agent interaction specific\n  agent_context: z.object({\n    conversation_id: z.string().optional(),\n    user_id: z.string().optional(),\n    room_id: z.string().optional(),\n  }).optional(),\n  evaluations: z.array(EvaluationSchema),\n});\n```\n\n### 2. Agent Interaction Engine\n```typescript\n// packages/cli/src/scenarios/agent-interaction.ts\nexport class AgentInteractionEngine {\n  constructor(private runtime: IAgentRuntime) {}\n\n  async interactWithAgent(input: string, context?: AgentContext): Promise<AgentResponse> {\n    // Create message for agent\n    const message: Memory = {\n      entityId: context?.user_id || 'scenario-user',\n      roomId: context?.room_id || 'scenario-room',\n      content: {\n        type: 'text',\n        text: input,\n      },\n      metadata: {\n        type: 'message',\n        conversationId: context?.conversation_id,\n      },\n    };\n\n    // Send to agent and capture response\n    const startTime = Date.now();\n    const response = await this.runtime.processMessage(message);\n    const endTime = Date.now();\n\n    return {\n      text: response.text,\n      thoughts: response.thoughts,\n      actions: response.actions,\n      timing: {\n        startTime,\n        endTime,\n        duration: endTime - startTime,\n      },\n      context: {\n        conversationId: context?.conversation_id,\n        messageId: message.id,\n      },\n    };\n  }\n}\n```\n\n### 3. Enhanced Execution Result\n```typescript\n// packages/cli/src/scenarios/providers.ts\nexport interface ExecutionResult {\n  exitCode: number;\n  stdout: string;\n  stderr: string;\n  files: Record<string, string>;\n  // New: Agent interaction results\n  agentResponse?: AgentResponse;\n  conversationHistory?: AgentResponse[];\n}\n```\n\n## Test Scenario\n\nCreate `agent-interaction-test.scenario.yaml`:\n```yaml\nname: \"Agent Interaction Test\"\ndescription: \"Tests natural language interaction with agents\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Implement Dark Mode\"\n          number: 123\n          state: \"open\"\n          labels: [\"feature\", \"ui\"]\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"2.5\"\n\nrun:\n  - name: \"Ask agent about roadmap\"\n    input: \"What new features are you planning to add?\"\n    agent_context:\n      conversation_id: \"roadmap-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify agent searched for issues\"\n      \n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n        description: \"Verify agent mentioned the mocked issue\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent provide a helpful and coherent response about new features?\"\n        expected: \"yes\"\n        description: \"Verify agent response quality\"\n\n  - name: \"Ask agent about wallet\"\n    input: \"What's my current wallet balance?\"\n    agent_context:\n      conversation_id: \"wallet-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify agent checked wallet balance\"\n      \n      - type: \"string_contains\"\n        value: \"2.5 ETH\"\n        description: \"Verify agent reported the correct balance\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent clearly explain the wallet balance information?\"\n        expected: \"yes\"\n\n  - name: \"Multi-turn conversation\"\n    input: \"Can you help me with both my wallet and roadmap?\"\n    agent_context:\n      conversation_id: \"multi-turn-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"ETH\"\n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent address both wallet and roadmap questions comprehensively?\"\n        expected: \"yes\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Single Turn**: Test basic agent interaction and response\n2. **Multi-turn**: Test conversation context across steps\n3. **Action Tracking**: Verify agent uses appropriate actions\n4. **Response Quality**: Test LLM judge evaluation of responses\n5. **Performance**: Test response timing and metrics\n6. **Error Handling**: Test agent behavior with invalid inputs\n\n## Dependencies\n\n- Requires plugin system integration (Ticket 1)\n- Builds on advanced mocking system (Ticket 2)\n- Integrates with existing evaluation engine\n- Depends on agent runtime message processing",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement natural language agent interaction and response validation",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5727,
              "node_id": "I_kwDOMT5cIs7Eng6F",
              "assignee": null,
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5727",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:49:34Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/labels{/name}",
              "updated_at": "2025-08-07T05:35:40Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3298691383,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726",
              "body": "# feat(scenarios): Implement conditional mocking and complex response structures\n\n## Description\n\nThis ticket enhances the mocking system to support conditional responses based on input parameters and complex response structures with metadata. This enables realistic testing of service interactions like GitHub API calls or EVM transactions with proper request/response matching.\n\n## Acceptance Criteria\n\n1. Mock definitions support `when` clauses for conditional responses\n2. `when` clauses can match on method arguments, input parameters, or request context\n3. Mock responses support complex nested structures with metadata (timestamps, IDs, etc.)\n4. Multiple mock responses can be defined for the same service/method with different conditions\n5. Mock system provides clear logging of which mock was triggered and why\n6. Mock responses can include realistic error conditions and edge cases\n7. Support for dynamic response generation based on input parameters\n8. Mock validation ensures `when` clauses are syntactically correct\n\n## Technical Approach\n\n### 1. Enhanced Mock Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst MockSchema = z.object({\n  service: z.string(),\n  method: z.string(),\n  when: z.object({\n    // Match on method arguments\n    args: z.array(z.any()).optional(),\n    // Match on specific argument values\n    input: z.record(z.any()).optional(),\n    // Match on request context\n    context: z.record(z.any()).optional(),\n    // Custom matching function\n    matcher: z.string().optional(), // JavaScript expression\n  }).optional(),\n  response: z.any(), // Can be function or static value\n  // For dynamic responses\n  responseFn: z.string().optional(), // JavaScript function\n  // Error simulation\n  error: z.object({\n    code: z.string(),\n    message: z.string(),\n  }).optional(),\n});\n```\n\n### 2. Mock Engine Implementation\n```typescript\n// packages/cli/src/scenarios/mock-engine.ts\nexport class MockEngine {\n  private mocks: MockDefinition[] = [];\n\n  addMock(mock: MockDefinition) {\n    this.mocks.push(mock);\n  }\n\n  async findMock(service: string, method: string, args: any[]): Promise<any> {\n    const candidates = this.mocks.filter(m => \n      m.service === service && m.method === method\n    );\n\n    for (const mock of candidates) {\n      if (await this.matchesCondition(mock, args)) {\n        this.logger.info(`Mock triggered: ${service}.${method} with condition: ${JSON.stringify(mock.when)}`);\n        return this.generateResponse(mock, args);\n      }\n    }\n\n    return null; // No mock found\n  }\n\n  private async matchesCondition(mock: MockDefinition, args: any[]): Promise<boolean> {\n    if (!mock.when) return true; // Default mock\n\n    // Match on arguments\n    if (mock.when.args) {\n      if (!this.deepEqual(args, mock.when.args)) return false;\n    }\n\n    // Match on input parameters\n    if (mock.when.input) {\n      const input = this.extractInputFromArgs(args);\n      if (!this.deepEqual(input, mock.when.input)) return false;\n    }\n\n    // Custom matcher function\n    if (mock.when.matcher) {\n      const matcherFn = new Function('args', 'input', mock.when.matcher);\n      return matcherFn(args, this.extractInputFromArgs(args));\n    }\n\n    return true;\n  }\n\n  private generateResponse(mock: MockDefinition, args: any[]): any {\n    if (mock.error) {\n      throw new Error(`${mock.error.code}: ${mock.error.message}`);\n    }\n\n    if (mock.responseFn) {\n      const responseFn = new Function('args', 'input', mock.responseFn);\n      return responseFn(args, this.extractInputFromArgs(args));\n    }\n\n    return mock.response;\n  }\n}\n```\n\n## Test Scenario\n\nCreate `advanced-mocking-test.scenario.yaml`:\n```yaml\nname: \"Advanced Mocking Test\"\ndescription: \"Tests conditional mocking and complex response structures\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    # Conditional GitHub issue search\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"bug\"\n        matcher: \"input.labels.includes('bug')\"\n      response:\n        - title: \"Critical Bug Found\"\n          number: 456\n          state: \"open\"\n          labels: [\"bug\", \"critical\"]\n          created_at: \"2024-07-15T10:00:00Z\"\n\n    # Conditional GitHub issue search - different response\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"feature\"\n        matcher: \"input.labels.includes('feature')\"\n      response:\n        - title: \"New Feature Request\"\n          number: 789\n          state: \"open\"\n          labels: [\"feature\", \"enhancement\"]\n          created_at: \"2024-07-15T11:00:00Z\"\n\n    # Dynamic EVM balance response\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      when:\n        args: [\"0x1234567890abcdef\"]\n      responseFn: |\n        return {\n          chain: \"ethereum\",\n          address: args[0],\n          balances: [\n            { symbol: \"ETH\", amount: \"1.23\" },\n            { symbol: \"USDC\", amount: \"1000.00\" }\n          ],\n          last_updated: new Date().toISOString()\n        }\n\n    # Error simulation\n    - service: \"github-service\"\n      method: \"readFile\"\n      when:\n        input:\n          path: \"/docs/nonexistent.md\"\n      error:\n        code: \"FILE_NOT_FOUND\"\n        message: \"File does not exist\"\n\nrun:\n  - name: \"Test conditional GitHub search\"\n    input: \"Search for issues with bug label\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"Critical Bug Found\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent correctly search for bug issues?\"\n        expected: \"yes\"\n\n  - name: \"Test dynamic EVM response\"\n    input: \"What's the balance for address 0x1234567890abcdef?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n      - type: \"string_contains\"\n        value: \"1000.00 USDC\"\n\n  - name: \"Test error handling\"\n    input: \"Read the file /docs/nonexistent.md\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.readFile\"\n      - type: \"string_contains\"\n        value: \"File does not exist\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Conditional Matching**: Test different responses based on input parameters\n2. **Dynamic Responses**: Test response generation based on arguments\n3. **Error Simulation**: Test error handling and reporting\n4. **Complex Structures**: Test nested response objects with metadata\n5. **Multiple Mocks**: Test multiple mocks for same service/method\n6. **Logging**: Verify mock selection is logged clearly\n\n## Dependencies\n\n- Builds on existing mock system in scenarios\n- Requires plugin system integration (Ticket 1)\n- Integrates with agent interaction testing (Ticket 3) ",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement conditional mocking and complex response structures",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5726,
              "node_id": "I_kwDOMT5cIs7Engk3",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5726",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:49:00Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/labels{/name}",
              "updated_at": "2025-08-07T05:32:53Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3298689704,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725",
              "body": "# feat(scenarios): Implement plugin specification and dynamic loading\n\n## Description\n\nThis ticket implements plugin specification in scenario YAML files, allowing scenarios to declare which plugins are required for testing. This enables testing of agent behaviors that depend on specific plugins like `@elizaos/plugin-github` or `@elizaos/plugin-evm`. The system will dynamically load specified plugins during scenario execution and make their actions, providers, and services available to the agent.\n\n## Acceptance Criteria\n\n1. Scenario YAML supports a `plugins` array at the root level with string plugin names\n2. The `initializeAgent()` function respects scenario plugin specifications and loads them via `startAgent()`\n3. Plugin loading follows the same dependency resolution and error handling as the main CLI\n4. Scenarios can specify both string plugin names (`@elizaos/plugin-github`) and direct plugin objects\n5. Plugin loading errors are clearly reported with actionable guidance\n6. Default plugins (bootstrap, sql) are automatically included unless explicitly excluded via `exclude_defaults: true`\n7. Plugin conflicts are detected and reported during scenario validation\n8. Plugin initialization errors don't crash the scenario but are reported in results\n\n## Technical Approach\n\n### 1. Update Scenario Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst ScenarioSchema = z.object({\n  name: z.string(),\n  description: z.string(),\n  plugins: z.array(z.string()).optional(), // e.g., [\"@elizaos/plugin-github\"]\n  exclude_defaults: z.boolean().optional(), // exclude bootstrap/sql\n  environment: EnvironmentSchema,\n  setup: SetupSchema.optional(),\n  run: z.array(RunStepSchema),\n  judgment: JudgmentSchema,\n});\n```\n\n### 2. Enhance Runtime Factory\n```typescript\n// packages/cli/src/scenarios/runtime-factory.ts\nexport async function initializeAgent(scenario: Scenario): Promise<IAgentRuntime> {\n  const character: Character = {\n    name: 'scenario-runner',\n    id: stringToUuid('scenario-runner'),\n    bio: 'A minimal character for running scenarios',\n    plugins: scenario.plugins || []\n  };\n\n  // Load default plugins unless excluded\n  if (!scenario.exclude_defaults) {\n    character.plugins.push('@elizaos/plugin-bootstrap', '@elizaos/plugin-sql');\n  }\n\n  const runtime = await startAgent(\n    encryptedCharacter(character),\n    server,\n    undefined,\n    character.plugins,\n    { isTestMode: true }\n  );\n\n  return runtime;\n}\n```\n\n### 3. Plugin Validation\n```typescript\n// packages/cli/src/scenarios/plugin-validator.ts\nexport async function validateScenarioPlugins(scenario: Scenario): Promise<ValidationResult[]> {\n  const results: ValidationResult[] = [];\n  \n  for (const pluginName of scenario.plugins || []) {\n    try {\n      const plugin = await loadAndPreparePlugin(pluginName);\n      if (!plugin) {\n        results.push({\n          type: 'error',\n          message: `Plugin '${pluginName}' could not be loaded`,\n          suggestion: 'Check if plugin is installed or built correctly'\n        });\n      }\n    } catch (error) {\n      results.push({\n        type: 'error', \n        message: `Failed to validate plugin '${pluginName}': ${error.message}`,\n        suggestion: 'Verify plugin dependencies and configuration'\n      });\n    }\n  }\n  \n  return results;\n}\n```\n\n## Test Scenario\n\nCreate `plugin-integration-test.scenario.yaml`:\n```yaml\nname: \"Plugin Integration Test\"\ndescription: \"Tests loading and using plugins specified in scenario YAML\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Test Issue\"\n          number: 123\n          state: \"open\"\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"1.23\"\n\nrun:\n  - name: \"Test GitHub plugin actions\"\n    input: \"Search for issues with label 'bug'\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify GitHub plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"Test Issue\"\n        description: \"Verify agent found the mocked issue\"\n\n  - name: \"Test EVM plugin actions\"\n    input: \"What's my wallet balance?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify EVM plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n        description: \"Verify agent reported the mocked balance\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Plugin Loading Test**: Verify plugins load without errors\n2. **Action Availability Test**: Confirm agent can use plugin actions\n3. **Error Handling Test**: Test with non-existent plugin\n4. **Default Plugin Test**: Verify bootstrap/sql are included by default\n5. **Exclusion Test**: Test `exclude_defaults: true` behavior\n\n## Dependencies\n\n- Fixes the `startAgent` hanging issue (#5719) to enable plugin testing\n- Builds on existing `loadAndPreparePlugin` functionality\n- Integrates with current scenario execution flow ",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement plugin specification and dynamic loading",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5725,
              "node_id": "I_kwDOMT5cIs7EngKo",
              "assignee": null,
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5725",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:48:08Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/labels{/name}",
              "updated_at": "2025-08-07T05:37:32Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            }
          ]
        },
        "text": "Open issues for elizaOS/eliza (10 shown):\n‚Ä¢ #5754: Critical: Plugin Publishing Fails with False Success Reports (open) [bug]\n‚Ä¢ #5749: Implement Runtime Method Mocking for Deterministic Agent Testing (open) [enhancement, testing, Reality Spiral]\n‚Ä¢ #5747: Fixing bugs in eliza-cloud (open)\n‚Ä¢ #5738: üêõ Build failure in @elizaos/core causing bun run clean to fail (open) [bug]\n‚Ä¢ #5734: Eliza CLI failed to build project (open) [bug]\n‚Ä¢ #5729: Update README.md to fix error (open)\n‚Ä¢ #5728: feat: ability to cancel current run before any calls to LLM are made (open)\n‚Ä¢ #5727: feat(scenarios): Implement natural language agent interaction and response validation (open) [enhancement, Reality Spiral]\n‚Ä¢ #5726: feat(scenarios): Implement conditional mocking and complex response structures (open) [enhancement, Reality Spiral]\n‚Ä¢ #5725: feat(scenarios): Implement plugin specification and dynamic loading (open) [enhancement, Reality Spiral]",
        "values": {
          "issues": [
            {
              "id": 3310285907,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754",
              "body": "## Issue Summary\nThe `elizaos publish --npm` command reports successful publishing but the plugin is not actually published to npm, despite showing success messages. The npm publish is failing with a 404 error, but the ElizaOS CLI incorrectly reports success.\n\n## Key Problems Identified\n\n### 1. Critical NPM Publishing Failure\n- **Error**: `npm error 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found`\n- **Issue**: The package scope `@elizaos` doesn't exist on npm, preventing publishing\n- **Impact**: Package cannot be published to npm, but CLI reports success\n\n### 2. False Success Reporting\n- **Issue**: CLI reports `[‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm`\n- **Reality**: npm publish failed with 404 error\n- **Impact**: Developers believe their plugin is published when it's not\n\n### 3. Registry Repository Mismatch\n- **Expected**: Should create PR against `https://github.com/elizaos-plugins/registry`\n- **Actual**: Still references old registry `https://github.com/elizaos/registry`\n- **Impact**: Plugin won't appear in the official ElizaOS registry\n\n## Steps to Reproduce\n\n```bash\n# Navigate to the plugin directory\ncd packages/plugin-polygon\n\n# Ensure you're on the correct branch with the changes\ngit checkout polygon\n\n# Run the publish command\nelizaos publish --npm\n\n# Verify the success message appears\n# [‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm\n\n# Check if package actually exists on npm\nnpm view @elizaos/plugin-polygon@1.0.0\n# Result: 404 Not Found - '@elizaos/plugin-polygon@1.0.0' is not in this registry\n```\n\n## Technical Details\n\n### NPM Error Analysis\nThe npm logs show the root cause:\n```\nhttp fetch PUT 404 https://registry.npmjs.org/@elizaos%2fplugin-polygon 507ms\nerror 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found\n```\n\nThis indicates that the `@elizaos` scope doesn't exist on npm, which is required for publishing scoped packages.\n\n### CLI Error Handling Failure\nThe ElizaOS CLI is not properly parsing npm error codes:\n- npm returns exit code 1 (failure)\n- CLI ignores the error and reports success\n- No validation that the package actually exists on npm\n\n## Expected Behavior\n1. CLI should detect npm publish failures (exit code 1)\n2. CLI should fail with clear error message when package scope doesn't exist\n3. CLI should validate that package actually exists on npm after publishing\n4. CLI should create PRs against the correct registry repository\n\n## Recommended Fixes\n\n### 1. Fix NPM Error Detection\n```typescript\n// In the publish command, check npm exit code\nconst npmResult = await exec('npm publish', { cwd: pluginDir });\nif (npmResult.exitCode !== 0) {\n  throw new Error(`NPM publish failed: ${npmResult.stderr}`);\n}\n```\n\n### 2. Add Package Scope Validation\n```typescript\n// Before publishing, check if scope exists\nconst scopeExists = await checkNpmScope('@elizaos');\nif (!scopeExists) {\n  throw new Error('Package scope @elizaos does not exist on npm. Contact npm support to create the scope.');\n}\n```\n\n### 3. Add Post-Publish Validation\n```typescript\n// After publishing, verify package exists\nconst packageExists = await checkPackageExists(packageName, version);\nif (!packageExists) {\n  throw new Error(`Package was not published successfully. Check npm logs for details.`);\n}\n```\n\n## Priority\n**Critical** - This completely blocks plugin publishing and creates false success reports.\n\n## Affected Components\n- `packages/cli/src/commands/publish.ts`\n- NPM publishing logic\n- Error handling and success reporting\n- Package scope validation\n- Registry repository configuration\n\n## Immediate Action Required\n1. **Create the `@elizaos` scope on npm** or use an existing scope\n2. Update CLI to properly detect and handle npm publish failures\n3. Add post-publish validation to ensure packages actually exist on npm\n4. Update registry repository configuration\n\n## Alternative Solutions\n1. **Use existing scope**: Change package name to `@monilpat/plugin-polygon`\n2. **Create organization scope**: Set up `@elizaos` organization on npm\n3. **Use unscoped package**: Publish as `elizaos-plugin-polygon`\n\nThis issue is critically blocking plugin developers from successfully publishing their work and needs immediate attention from the ElizaOS team.\n",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "Critical: Plugin Publishing Fails with False Success Reports",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5754,
              "node_id": "I_kwDOMT5cIs7FTvRT",
              "assignee": null,
              "comments": 0,
              "html_url": "https://github.com/elizaOS/eliza/issues/5754",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-11T14:20:08Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/labels{/name}",
              "updated_at": "2025-08-11T14:20:08Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3308102900,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749",
              "body": "### Problem Statement\nCurrently, ElizaOS scenario testing lacks the ability to mock internal agent runtime calls (particularly LLM interactions) when testing via the API client. This makes it difficult to create deterministic tests for agent behavior and workflows.\n\n### Current Limitations\n- Global function mocks only work for code executed in the same process\n- No way to intercept `runtime.useModel` calls from the bootstrap plugin\n- Agent behavior is non-deterministic due to real LLM calls\n- Difficult to test specific agent decision paths and responses\n\n### Why Different Approach Was Needed\n\nThe existing mocking system was designed for **code execution environments** (E2B sandbox and local `node -e` processes), where mocks are applied to the execution context. However, **agent testing** works differently:\n\n- **E2B/Local Execution**: Code runs in isolated processes/sandboxes where global mocks can be applied\n- **Agent Testing**: Agent runs as a service with API client interaction, requiring direct runtime method interception\n- **Architecture Gap**: The bootstrap plugin calls `runtime.useModel` internally, which can't be mocked through the execution environment approach\n\nThis architectural difference necessitated a new approach that directly intercepts runtime methods rather than relying on execution context mocking.\n\n### Proposed Solution: Runtime Method Mocking\n\nWe've implemented a new mocking approach that directly intercepts `IAgentRuntime` method calls:\n\n#### Key Components\n\n1. **MockEngine Enhancement**\n   - Added `runtimeMethodMocks` to support mocking runtime methods\n   - Priority system: `runtimeMethod` > `service` > `globalFunction`\n   - Direct method replacement on the runtime instance\n\n2. **Schema Updates**\n   - Extended `MockSchema` to include `runtimeMethod: z.string().optional()`\n   - Supports mocking any `IAgentRuntime` method (e.g., `useModel`, `getService`)\n\n3. **Conditional Matching**\n   - Matcher functions can inspect method arguments\n   - Example: `\"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"`\n   - Supports complex conditional logic for when to apply mocks\n\n#### Usage Example\n\n```yaml\nsetup:\n  mocks:\n    - runtimeMethod: \"useModel\"\n      method: \"useModel\"\n      when:\n        matcher: \"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"\n      response: \"<response><name>agent</name><reasoning>Mocked response</reasoning><action>RESPOND</action></response>\"\n```\n\n#### Benefits\n\n1. **Deterministic Testing**: Replace LLM calls with static responses\n2. **Full Workflow Testing**: Test complete agent decision flows\n3. **Conditional Mocking**: Apply mocks based on specific conditions\n4. **Runtime Integration**: Works seamlessly with existing agent architecture\n5. **Backward Compatibility**: Existing mocks continue to work\n\n#### Implementation Steps\n\n- MockEngine runtime method support\n- Schema updates for runtimeMethod mocks\n- Conditional matching with matcher functions\n- Integration with scenario runner\n- Basic useModel mocking working\n- Add support for mocking other runtime methods (getService, etc.)\n- Create comprehensive test scenarios\n- Add documentation and examples\n- Consider adding mock recording/replay capabilities\n\n### Technical Details\n\nThe implementation works by:\n1. Creating the `IAgentRuntime` instance in the scenario runner\n2. Applying mocks directly to the runtime object before agent initialization\n3. The bootstrap plugin receives the mocked runtime and uses the mocked methods\n4. Mocks are reverted after scenario completion\n\nThis approach provides the foundation for robust, deterministic agent testing while maintaining the existing architecture.",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "Implement Runtime Method Mocking for Deterministic Agent Testing",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 7668252177,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/testing",
                  "name": "testing",
                  "color": "2D3957",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAAByRA-EQ",
                  "description": ""
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5749,
              "node_id": "I_kwDOMT5cIs7FLaT0",
              "assignee": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "comments": 0,
              "html_url": "https://github.com/elizaOS/eliza/issues/5749",
              "assignees": [
                {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-11T00:08:49Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/labels{/name}",
              "updated_at": "2025-08-11T00:09:37Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3304516859,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747",
              "body": null,
              "type": null,
              "user": {
                "id": 48334430,
                "url": "https://api.github.com/users/samarth30",
                "type": "User",
                "login": "samarth30",
                "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                "html_url": "https://github.com/samarth30",
                "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/samarth30/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/samarth30/followers",
                "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/samarth30/orgs",
                "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                "received_events_url": "https://api.github.com/users/samarth30/received_events"
              },
              "state": "open",
              "title": "Fixing bugs in eliza-cloud",
              "labels": [],
              "locked": false,
              "number": 5747,
              "node_id": "I_kwDOMT5cIs7E9uz7",
              "assignee": {
                "id": 48334430,
                "url": "https://api.github.com/users/samarth30",
                "type": "User",
                "login": "samarth30",
                "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                "html_url": "https://github.com/samarth30",
                "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/samarth30/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/samarth30/followers",
                "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/samarth30/orgs",
                "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                "received_events_url": "https://api.github.com/users/samarth30/received_events"
              },
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5747",
              "assignees": [
                {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-08T16:01:56Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/labels{/name}",
              "updated_at": "2025-08-08T19:02:49Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "MEMBER",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": {
                "id": 20150,
                "name": "Linear",
                "slug": "linear",
                "owner": {
                  "id": 46686594,
                  "url": "https://api.github.com/users/linear",
                  "type": "Organization",
                  "login": "linear",
                  "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ2Njg2NTk0",
                  "html_url": "https://github.com/linear",
                  "gists_url": "https://api.github.com/users/linear/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/linear/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/46686594?v=4",
                  "events_url": "https://api.github.com/users/linear/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/linear/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/linear/followers",
                  "following_url": "https://api.github.com/users/linear/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/linear/orgs",
                  "subscriptions_url": "https://api.github.com/users/linear/subscriptions",
                  "received_events_url": "https://api.github.com/users/linear/received_events"
                },
                "events": [
                  "check_suite",
                  "issues",
                  "issue_comment",
                  "pull_request",
                  "pull_request_review",
                  "repository",
                  "sub_issues"
                ],
                "node_id": "MDM6QXBwMjAxNTA=",
                "html_url": "https://github.com/apps/linear",
                "client_id": "Iv1.085d682ea245c945",
                "created_at": "2018-11-02T18:07:23Z",
                "updated_at": "2025-02-07T14:59:56Z",
                "description": "",
                "permissions": {
                  "checks": "read",
                  "issues": "write",
                  "metadata": "read",
                  "pull_requests": "write"
                },
                "external_url": "https://linear.app"
              }
            },
            {
              "id": 3302237103,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738",
              "body": "## Description\n\nThe `bun run clean` command is failing due to TypeScript errors in `@elizaos/core` package during the DTS (type definition) build phase.\n\n## Error Details\n\n### Build Process\n```\n‚Ä¢ Running build in 17 packages\n‚Ä¢ Remote caching disabled\n@elizaos/config:build: cache miss\n@elizaos/autodoc:build: cache miss\n@elizaos/core:build: cache miss\n```\n\n### TypeScript Errors in @elizaos/core/src/utils.ts\n1. Line 218: `error TS2345: Argument of type '`${string}-${string}-${string}-${string}-${string}`' is not assignable to parameter of type 'never'.`\n2. Line 366: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n3. Line 409: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n4. Line 536: `error TS2345: Argument of type '{ numberOfChunks: number; averageChunkSize: number; }' is not assignable to parameter of type 'never'.`\n\n### Impact\n- Blocks `bun run clean` command\n- Prevents successful build of `@elizaos/core`\n- Affects dependent packages in the monorepo\n\n## Steps to Reproduce\n1. Run `bun run clean`\n2. Observe build failure in `@elizaos/core`\n3. Build fails with TypeScript errors during DTS generation\n\n## Expected Behavior\n- `bun run clean` should complete successfully\n- `@elizaos/core` should build without TypeScript errors\n- Type definitions should be generated correctly\n\n## Suggested Fix\n\nThe errors suggest type mismatches in `utils.ts`. Need to:\n1. Review type definitions in affected lines\n2. Update type assertions or generic constraints\n3. Ensure string template literal types are properly handled\n4. Fix object type assignments\n\n### Files to Update\n- `packages/core/src/utils.ts`\n\n## Priority\n**HIGH** - This is blocking clean builds and potentially affecting development workflow.",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "üêõ Build failure in @elizaos/core causing bun run clean to fail",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5738,
              "node_id": "I_kwDOMT5cIs7E1COv",
              "assignee": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5738",
              "assignees": [
                {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-08T00:26:11Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/labels{/name}",
              "updated_at": "2025-08-11T14:56:01Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3301116813,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734",
              "body": "**Describe the bug**\n\nOn project creation, ElizaOS CLI fails with the following error:\n```\n‚óá  Failed to build project\nstdout: src/index.ts(7,25): error TS2345: Argument of type 'string' is not assignable to parameter of type 'undefined'.\nstderr: $ tsc --noEmit && vite build && tsup\n```\n\n**To Reproduce**\n\n- Install ElizaOS through `bun`\n```\nbun i -g @elizaos/cli\n```\n- Create new ElizaOS project\n```\nelizaos create abcde\n```\n\n**Expected behavior**\n\nProject built successfully\n\n**Screenshots**\n\n<img width=\"1095\" height=\"572\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/967dd6a2-0d70-4e2e-8019-85a2eab5f225\" />\n\n**Additional context**\n\nElizaOS CLI version: `1.3.2`\n",
              "type": null,
              "user": {
                "id": 74447600,
                "url": "https://api.github.com/users/Kemystra",
                "type": "User",
                "login": "Kemystra",
                "node_id": "MDQ6VXNlcjc0NDQ3NjAw",
                "html_url": "https://github.com/Kemystra",
                "gists_url": "https://api.github.com/users/Kemystra/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/Kemystra/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/74447600?v=4",
                "events_url": "https://api.github.com/users/Kemystra/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/Kemystra/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/Kemystra/followers",
                "following_url": "https://api.github.com/users/Kemystra/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/Kemystra/orgs",
                "subscriptions_url": "https://api.github.com/users/Kemystra/subscriptions",
                "received_events_url": "https://api.github.com/users/Kemystra/received_events"
              },
              "state": "open",
              "title": "Eliza CLI failed to build project",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5734,
              "node_id": "I_kwDOMT5cIs7EwwuN",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5734",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T16:14:00Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/labels{/name}",
              "updated_at": "2025-08-08T19:43:52Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "NONE",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3299481897,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729",
              "body": "# Relates to\r\n\r\nN/A (Documentation improvement, not tied to a specific issue or ticket)\r\n\r\n# Risks\r\n\r\nLow.  \r\nThis change only updates documentation and does not affect any code or functionality.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR updates the elizaos README to include a fix for installation errors that may occur due to permission issues. It adds a note suggesting the use of sudo if users encounter a \"Permission denied\" or \"InstallFailed\" error when running the `elizaos create my-agent` command.\r\n\r\n## What kind of change is this?\r\n\r\nImprovements (misc. changes to existing features)  \r\nDocumentation update\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes require a change to the project documentation.  \r\nI have updated the documentation accordingly.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\nStart by reviewing the changes in the README.md file, specifically the section on creating a new project.\r\n\r\n## Detailed testing steps\r\n\r\n- Open the updated README.md.\r\n- Review the new instructions under \"Create Your First Project.\"\r\n- Confirm that the added note about using `sudo` is clear and helpful for users who encounter permission errors.",
              "type": null,
              "user": {
                "id": 32749185,
                "url": "https://api.github.com/users/mandatedisrael",
                "type": "User",
                "login": "mandatedisrael",
                "node_id": "MDQ6VXNlcjMyNzQ5MTg1",
                "html_url": "https://github.com/mandatedisrael",
                "gists_url": "https://api.github.com/users/mandatedisrael/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/mandatedisrael/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/32749185?v=4",
                "events_url": "https://api.github.com/users/mandatedisrael/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/mandatedisrael/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/mandatedisrael/followers",
                "following_url": "https://api.github.com/users/mandatedisrael/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/mandatedisrael/orgs",
                "subscriptions_url": "https://api.github.com/users/mandatedisrael/subscriptions",
                "received_events_url": "https://api.github.com/users/mandatedisrael/received_events"
              },
              "draft": false,
              "state": "open",
              "title": "Update README.md to fix error",
              "labels": [],
              "locked": false,
              "number": 5729,
              "node_id": "PR_kwDOMT5cIs6iiNWN",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/pull/5729",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T08:10:12Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/labels{/name}",
              "updated_at": "2025-08-07T08:10:24Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/comments",
              "pull_request": {
                "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5729",
                "diff_url": "https://github.com/elizaOS/eliza/pull/5729.diff",
                "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                "merged_at": null,
                "patch_url": "https://github.com/elizaOS/eliza/pull/5729.patch"
              },
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "FIRST_TIME_CONTRIBUTOR",
              "performed_via_github_app": null
            },
            {
              "id": 3299322983,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728",
              "body": "# Background\r\n\r\n## What does this PR do?\r\n\r\nIntroduce entity for cancelling runs `CancelRunSignal`\r\n\r\n## Why are we doing this? Any context or related work?\r\n\r\n- Calls to LLMs usually cost some credits\r\n- When we receive the `RUN_STARTED` event we can check current entity and end run to prevent credits spending\r\n\r\n# Documentation changes needed?\r\n\r\n## Methods\r\n\r\n- `static getSignal(runId: UUID)` - get signal by runId or create if null\r\n- `static clear(runId: UUID)` - clear signal from map\r\n- `cancel(content?: Content)` - cancel current run and and send `content` as a response to user\r\n\r\n## Example\r\n\r\n```typescript\r\nimport { Content, EventType, Plugin } from \"@elizaos/core\";\r\nimport { CancelRunSignal } from \"@elizaos/plugin-bootstrap\";\r\n\r\n// consider we have a service to determine eligibility for entity\r\ninterface EligibilityService {\r\n  check(entityId: UUID): Promise<{ result: boolean, reason?: Content }>\r\n}\r\n\r\nconst plugin: Plugin = {\r\n...\r\n  events: {\r\n    [EventType.RUN_STARTED]: ({ entityId, runId, runtime }) => {\r\n      const service = runtime.getService<EligibilityService>(\"USER_MANAGEMENT\");\r\n      const { result, reason } = await service.check(entityId);\r\n      \r\n      if (!result) {\r\n        const signal = CancelRunSignal.getSignal(runId);\r\n        signal.cancel(reason);\r\n      }\r\n    },\r\n    ...\r\n  },\r\n  ...\r\n}\r\n\r\nexport default Plugin;\r\n```\r\n\r\n## Discord username\r\n\r\nalexd000\r\n\r\n",
              "type": null,
              "user": {
                "id": 82507604,
                "url": "https://api.github.com/users/alex-nax",
                "type": "User",
                "login": "alex-nax",
                "node_id": "MDQ6VXNlcjgyNTA3NjA0",
                "html_url": "https://github.com/alex-nax",
                "gists_url": "https://api.github.com/users/alex-nax/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/alex-nax/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/82507604?v=4",
                "events_url": "https://api.github.com/users/alex-nax/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/alex-nax/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/alex-nax/followers",
                "following_url": "https://api.github.com/users/alex-nax/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/alex-nax/orgs",
                "subscriptions_url": "https://api.github.com/users/alex-nax/subscriptions",
                "received_events_url": "https://api.github.com/users/alex-nax/received_events"
              },
              "draft": false,
              "state": "open",
              "title": "feat: ability to cancel current run before any calls to LLM are made",
              "labels": [],
              "locked": false,
              "number": 5728,
              "node_id": "PR_kwDOMT5cIs6ihriD",
              "assignee": null,
              "comments": 3,
              "html_url": "https://github.com/elizaOS/eliza/pull/5728",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T07:19:35Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/labels{/name}",
              "updated_at": "2025-08-07T07:22:05Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/comments",
              "pull_request": {
                "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5728",
                "diff_url": "https://github.com/elizaOS/eliza/pull/5728.diff",
                "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                "merged_at": null,
                "patch_url": "https://github.com/elizaOS/eliza/pull/5728.patch"
              },
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "FIRST_TIME_CONTRIBUTOR",
              "performed_via_github_app": null
            },
            {
              "id": 3298692741,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727",
              "body": "# feat(scenarios): Implement natural language agent interaction and response validation\n\n## Description\n\nThis ticket enables scenarios to test agent behavior through natural language interactions rather than direct code execution. This allows testing of agent reasoning, decision-making, and response generation in realistic conversation contexts with proper evaluation of agent responses.\n\n## Acceptance Criteria\n\n1. Scenario `run` blocks support `input` field for natural language prompts to agents\n2. Agent responses are captured and available for evaluation (text, thoughts, actions)\n3. Evaluators can access both agent response text and execution context\n4. Support for multi-turn conversations in scenarios\n5. Agent responses include thought process and action decisions\n6. Integration with existing evaluation engine for response validation\n7. Support for conversation context across multiple steps\n8. Agent response timing and performance metrics\n\n## Technical Approach\n\n### 1. Enhanced Run Step Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst RunStepSchema = z.object({\n  name: z.string().optional(),\n  // Natural language input to agent\n  input: z.string().optional(),\n  // Direct code execution (existing)\n  lang: z.string().optional(),\n  code: z.string().optional(),\n  // Agent interaction specific\n  agent_context: z.object({\n    conversation_id: z.string().optional(),\n    user_id: z.string().optional(),\n    room_id: z.string().optional(),\n  }).optional(),\n  evaluations: z.array(EvaluationSchema),\n});\n```\n\n### 2. Agent Interaction Engine\n```typescript\n// packages/cli/src/scenarios/agent-interaction.ts\nexport class AgentInteractionEngine {\n  constructor(private runtime: IAgentRuntime) {}\n\n  async interactWithAgent(input: string, context?: AgentContext): Promise<AgentResponse> {\n    // Create message for agent\n    const message: Memory = {\n      entityId: context?.user_id || 'scenario-user',\n      roomId: context?.room_id || 'scenario-room',\n      content: {\n        type: 'text',\n        text: input,\n      },\n      metadata: {\n        type: 'message',\n        conversationId: context?.conversation_id,\n      },\n    };\n\n    // Send to agent and capture response\n    const startTime = Date.now();\n    const response = await this.runtime.processMessage(message);\n    const endTime = Date.now();\n\n    return {\n      text: response.text,\n      thoughts: response.thoughts,\n      actions: response.actions,\n      timing: {\n        startTime,\n        endTime,\n        duration: endTime - startTime,\n      },\n      context: {\n        conversationId: context?.conversation_id,\n        messageId: message.id,\n      },\n    };\n  }\n}\n```\n\n### 3. Enhanced Execution Result\n```typescript\n// packages/cli/src/scenarios/providers.ts\nexport interface ExecutionResult {\n  exitCode: number;\n  stdout: string;\n  stderr: string;\n  files: Record<string, string>;\n  // New: Agent interaction results\n  agentResponse?: AgentResponse;\n  conversationHistory?: AgentResponse[];\n}\n```\n\n## Test Scenario\n\nCreate `agent-interaction-test.scenario.yaml`:\n```yaml\nname: \"Agent Interaction Test\"\ndescription: \"Tests natural language interaction with agents\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Implement Dark Mode\"\n          number: 123\n          state: \"open\"\n          labels: [\"feature\", \"ui\"]\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"2.5\"\n\nrun:\n  - name: \"Ask agent about roadmap\"\n    input: \"What new features are you planning to add?\"\n    agent_context:\n      conversation_id: \"roadmap-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify agent searched for issues\"\n      \n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n        description: \"Verify agent mentioned the mocked issue\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent provide a helpful and coherent response about new features?\"\n        expected: \"yes\"\n        description: \"Verify agent response quality\"\n\n  - name: \"Ask agent about wallet\"\n    input: \"What's my current wallet balance?\"\n    agent_context:\n      conversation_id: \"wallet-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify agent checked wallet balance\"\n      \n      - type: \"string_contains\"\n        value: \"2.5 ETH\"\n        description: \"Verify agent reported the correct balance\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent clearly explain the wallet balance information?\"\n        expected: \"yes\"\n\n  - name: \"Multi-turn conversation\"\n    input: \"Can you help me with both my wallet and roadmap?\"\n    agent_context:\n      conversation_id: \"multi-turn-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"ETH\"\n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent address both wallet and roadmap questions comprehensively?\"\n        expected: \"yes\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Single Turn**: Test basic agent interaction and response\n2. **Multi-turn**: Test conversation context across steps\n3. **Action Tracking**: Verify agent uses appropriate actions\n4. **Response Quality**: Test LLM judge evaluation of responses\n5. **Performance**: Test response timing and metrics\n6. **Error Handling**: Test agent behavior with invalid inputs\n\n## Dependencies\n\n- Requires plugin system integration (Ticket 1)\n- Builds on advanced mocking system (Ticket 2)\n- Integrates with existing evaluation engine\n- Depends on agent runtime message processing",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement natural language agent interaction and response validation",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5727,
              "node_id": "I_kwDOMT5cIs7Eng6F",
              "assignee": null,
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5727",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:49:34Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/labels{/name}",
              "updated_at": "2025-08-07T05:35:40Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3298691383,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726",
              "body": "# feat(scenarios): Implement conditional mocking and complex response structures\n\n## Description\n\nThis ticket enhances the mocking system to support conditional responses based on input parameters and complex response structures with metadata. This enables realistic testing of service interactions like GitHub API calls or EVM transactions with proper request/response matching.\n\n## Acceptance Criteria\n\n1. Mock definitions support `when` clauses for conditional responses\n2. `when` clauses can match on method arguments, input parameters, or request context\n3. Mock responses support complex nested structures with metadata (timestamps, IDs, etc.)\n4. Multiple mock responses can be defined for the same service/method with different conditions\n5. Mock system provides clear logging of which mock was triggered and why\n6. Mock responses can include realistic error conditions and edge cases\n7. Support for dynamic response generation based on input parameters\n8. Mock validation ensures `when` clauses are syntactically correct\n\n## Technical Approach\n\n### 1. Enhanced Mock Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst MockSchema = z.object({\n  service: z.string(),\n  method: z.string(),\n  when: z.object({\n    // Match on method arguments\n    args: z.array(z.any()).optional(),\n    // Match on specific argument values\n    input: z.record(z.any()).optional(),\n    // Match on request context\n    context: z.record(z.any()).optional(),\n    // Custom matching function\n    matcher: z.string().optional(), // JavaScript expression\n  }).optional(),\n  response: z.any(), // Can be function or static value\n  // For dynamic responses\n  responseFn: z.string().optional(), // JavaScript function\n  // Error simulation\n  error: z.object({\n    code: z.string(),\n    message: z.string(),\n  }).optional(),\n});\n```\n\n### 2. Mock Engine Implementation\n```typescript\n// packages/cli/src/scenarios/mock-engine.ts\nexport class MockEngine {\n  private mocks: MockDefinition[] = [];\n\n  addMock(mock: MockDefinition) {\n    this.mocks.push(mock);\n  }\n\n  async findMock(service: string, method: string, args: any[]): Promise<any> {\n    const candidates = this.mocks.filter(m => \n      m.service === service && m.method === method\n    );\n\n    for (const mock of candidates) {\n      if (await this.matchesCondition(mock, args)) {\n        this.logger.info(`Mock triggered: ${service}.${method} with condition: ${JSON.stringify(mock.when)}`);\n        return this.generateResponse(mock, args);\n      }\n    }\n\n    return null; // No mock found\n  }\n\n  private async matchesCondition(mock: MockDefinition, args: any[]): Promise<boolean> {\n    if (!mock.when) return true; // Default mock\n\n    // Match on arguments\n    if (mock.when.args) {\n      if (!this.deepEqual(args, mock.when.args)) return false;\n    }\n\n    // Match on input parameters\n    if (mock.when.input) {\n      const input = this.extractInputFromArgs(args);\n      if (!this.deepEqual(input, mock.when.input)) return false;\n    }\n\n    // Custom matcher function\n    if (mock.when.matcher) {\n      const matcherFn = new Function('args', 'input', mock.when.matcher);\n      return matcherFn(args, this.extractInputFromArgs(args));\n    }\n\n    return true;\n  }\n\n  private generateResponse(mock: MockDefinition, args: any[]): any {\n    if (mock.error) {\n      throw new Error(`${mock.error.code}: ${mock.error.message}`);\n    }\n\n    if (mock.responseFn) {\n      const responseFn = new Function('args', 'input', mock.responseFn);\n      return responseFn(args, this.extractInputFromArgs(args));\n    }\n\n    return mock.response;\n  }\n}\n```\n\n## Test Scenario\n\nCreate `advanced-mocking-test.scenario.yaml`:\n```yaml\nname: \"Advanced Mocking Test\"\ndescription: \"Tests conditional mocking and complex response structures\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    # Conditional GitHub issue search\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"bug\"\n        matcher: \"input.labels.includes('bug')\"\n      response:\n        - title: \"Critical Bug Found\"\n          number: 456\n          state: \"open\"\n          labels: [\"bug\", \"critical\"]\n          created_at: \"2024-07-15T10:00:00Z\"\n\n    # Conditional GitHub issue search - different response\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"feature\"\n        matcher: \"input.labels.includes('feature')\"\n      response:\n        - title: \"New Feature Request\"\n          number: 789\n          state: \"open\"\n          labels: [\"feature\", \"enhancement\"]\n          created_at: \"2024-07-15T11:00:00Z\"\n\n    # Dynamic EVM balance response\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      when:\n        args: [\"0x1234567890abcdef\"]\n      responseFn: |\n        return {\n          chain: \"ethereum\",\n          address: args[0],\n          balances: [\n            { symbol: \"ETH\", amount: \"1.23\" },\n            { symbol: \"USDC\", amount: \"1000.00\" }\n          ],\n          last_updated: new Date().toISOString()\n        }\n\n    # Error simulation\n    - service: \"github-service\"\n      method: \"readFile\"\n      when:\n        input:\n          path: \"/docs/nonexistent.md\"\n      error:\n        code: \"FILE_NOT_FOUND\"\n        message: \"File does not exist\"\n\nrun:\n  - name: \"Test conditional GitHub search\"\n    input: \"Search for issues with bug label\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"Critical Bug Found\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent correctly search for bug issues?\"\n        expected: \"yes\"\n\n  - name: \"Test dynamic EVM response\"\n    input: \"What's the balance for address 0x1234567890abcdef?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n      - type: \"string_contains\"\n        value: \"1000.00 USDC\"\n\n  - name: \"Test error handling\"\n    input: \"Read the file /docs/nonexistent.md\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.readFile\"\n      - type: \"string_contains\"\n        value: \"File does not exist\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Conditional Matching**: Test different responses based on input parameters\n2. **Dynamic Responses**: Test response generation based on arguments\n3. **Error Simulation**: Test error handling and reporting\n4. **Complex Structures**: Test nested response objects with metadata\n5. **Multiple Mocks**: Test multiple mocks for same service/method\n6. **Logging**: Verify mock selection is logged clearly\n\n## Dependencies\n\n- Builds on existing mock system in scenarios\n- Requires plugin system integration (Ticket 1)\n- Integrates with agent interaction testing (Ticket 3) ",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement conditional mocking and complex response structures",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5726,
              "node_id": "I_kwDOMT5cIs7Engk3",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5726",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:49:00Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/labels{/name}",
              "updated_at": "2025-08-07T05:32:53Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3298689704,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725",
              "body": "# feat(scenarios): Implement plugin specification and dynamic loading\n\n## Description\n\nThis ticket implements plugin specification in scenario YAML files, allowing scenarios to declare which plugins are required for testing. This enables testing of agent behaviors that depend on specific plugins like `@elizaos/plugin-github` or `@elizaos/plugin-evm`. The system will dynamically load specified plugins during scenario execution and make their actions, providers, and services available to the agent.\n\n## Acceptance Criteria\n\n1. Scenario YAML supports a `plugins` array at the root level with string plugin names\n2. The `initializeAgent()` function respects scenario plugin specifications and loads them via `startAgent()`\n3. Plugin loading follows the same dependency resolution and error handling as the main CLI\n4. Scenarios can specify both string plugin names (`@elizaos/plugin-github`) and direct plugin objects\n5. Plugin loading errors are clearly reported with actionable guidance\n6. Default plugins (bootstrap, sql) are automatically included unless explicitly excluded via `exclude_defaults: true`\n7. Plugin conflicts are detected and reported during scenario validation\n8. Plugin initialization errors don't crash the scenario but are reported in results\n\n## Technical Approach\n\n### 1. Update Scenario Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst ScenarioSchema = z.object({\n  name: z.string(),\n  description: z.string(),\n  plugins: z.array(z.string()).optional(), // e.g., [\"@elizaos/plugin-github\"]\n  exclude_defaults: z.boolean().optional(), // exclude bootstrap/sql\n  environment: EnvironmentSchema,\n  setup: SetupSchema.optional(),\n  run: z.array(RunStepSchema),\n  judgment: JudgmentSchema,\n});\n```\n\n### 2. Enhance Runtime Factory\n```typescript\n// packages/cli/src/scenarios/runtime-factory.ts\nexport async function initializeAgent(scenario: Scenario): Promise<IAgentRuntime> {\n  const character: Character = {\n    name: 'scenario-runner',\n    id: stringToUuid('scenario-runner'),\n    bio: 'A minimal character for running scenarios',\n    plugins: scenario.plugins || []\n  };\n\n  // Load default plugins unless excluded\n  if (!scenario.exclude_defaults) {\n    character.plugins.push('@elizaos/plugin-bootstrap', '@elizaos/plugin-sql');\n  }\n\n  const runtime = await startAgent(\n    encryptedCharacter(character),\n    server,\n    undefined,\n    character.plugins,\n    { isTestMode: true }\n  );\n\n  return runtime;\n}\n```\n\n### 3. Plugin Validation\n```typescript\n// packages/cli/src/scenarios/plugin-validator.ts\nexport async function validateScenarioPlugins(scenario: Scenario): Promise<ValidationResult[]> {\n  const results: ValidationResult[] = [];\n  \n  for (const pluginName of scenario.plugins || []) {\n    try {\n      const plugin = await loadAndPreparePlugin(pluginName);\n      if (!plugin) {\n        results.push({\n          type: 'error',\n          message: `Plugin '${pluginName}' could not be loaded`,\n          suggestion: 'Check if plugin is installed or built correctly'\n        });\n      }\n    } catch (error) {\n      results.push({\n        type: 'error', \n        message: `Failed to validate plugin '${pluginName}': ${error.message}`,\n        suggestion: 'Verify plugin dependencies and configuration'\n      });\n    }\n  }\n  \n  return results;\n}\n```\n\n## Test Scenario\n\nCreate `plugin-integration-test.scenario.yaml`:\n```yaml\nname: \"Plugin Integration Test\"\ndescription: \"Tests loading and using plugins specified in scenario YAML\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Test Issue\"\n          number: 123\n          state: \"open\"\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"1.23\"\n\nrun:\n  - name: \"Test GitHub plugin actions\"\n    input: \"Search for issues with label 'bug'\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify GitHub plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"Test Issue\"\n        description: \"Verify agent found the mocked issue\"\n\n  - name: \"Test EVM plugin actions\"\n    input: \"What's my wallet balance?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify EVM plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n        description: \"Verify agent reported the mocked balance\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Plugin Loading Test**: Verify plugins load without errors\n2. **Action Availability Test**: Confirm agent can use plugin actions\n3. **Error Handling Test**: Test with non-existent plugin\n4. **Default Plugin Test**: Verify bootstrap/sql are included by default\n5. **Exclusion Test**: Test `exclude_defaults: true` behavior\n\n## Dependencies\n\n- Fixes the `startAgent` hanging issue (#5719) to enable plugin testing\n- Builds on existing `loadAndPreparePlugin` functionality\n- Integrates with current scenario execution flow ",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement plugin specification and dynamic loading",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5725,
              "node_id": "I_kwDOMT5cIs7EngKo",
              "assignee": null,
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5725",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:48:08Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/labels{/name}",
              "updated_at": "2025-08-07T05:37:32Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            }
          ],
          "issueCount": 10,
          "repository": "elizaOS/eliza"
        },
        "success": true
      },
      "actionStatus": "completed"
    },
    "entityId": "0137f0e4-d2e2-0ee6-82e5-af58b88ec91b",
    "agentId": "0137f0e4-d2e2-0ee6-82e5-af58b88ec91b",
    "roomId": "22cdf31d-8d1d-0d81-898c-0d7ff5ed0f3c",
    "unique": true,
    "metadata": {
      "type": "action_result",
      "runId": "3b9be52e-7131-4ff1-8446-4d53c6af1982",
      "actionId": "fa7a2ed2-467e-4b54-84f0-60b4836e08ee",
      "actionName": "LIST_GITHUB_ISSUES",
      "totalSteps": 2,
      "currentStep": 2
    }
  },
  {
    "id": "6ff4cc76-54f1-49ce-9b27-47f4ad7ad343",
    "type": "messages",
    "createdAt": 1754968218370,
    "content": {
      "text": "Generated reply: Let me retrieve the open issues for the elizaOS/eliza repository...",
      "type": "action_result",
      "runId": "3b9be52e-7131-4ff1-8446-4d53c6af1982",
      "source": "action",
      "planStep": "1/2",
      "actionName": "REPLY",
      "planThought": "I need to list the open issues for the elizaOS/eliza repository as requested by the user.",
      "actionResult": {
        "data": {
          "thought": "Preparing to list open issues for elizaOS/eliza repository.",
          "response": {
            "text": "Let me retrieve the open issues for the elizaOS/eliza repository...",
            "actions": [
              "REPLY"
            ],
            "thought": "Preparing to list open issues for elizaOS/eliza repository."
          },
          "actionName": "REPLY",
          "messageGenerated": true
        },
        "text": "Generated reply: Let me retrieve the open issues for the elizaOS/eliza repository...",
        "values": {
          "success": true,
          "lastReply": "Let me retrieve the open issues for the elizaOS/eliza repository...",
          "responded": true,
          "lastReplyTime": 1754968218368,
          "thoughtProcess": "Preparing to list open issues for elizaOS/eliza repository."
        },
        "success": true
      },
      "actionStatus": "completed"
    },
    "entityId": "0137f0e4-d2e2-0ee6-82e5-af58b88ec91b",
    "agentId": "0137f0e4-d2e2-0ee6-82e5-af58b88ec91b",
    "roomId": "22cdf31d-8d1d-0d81-898c-0d7ff5ed0f3c",
    "unique": true,
    "metadata": {
      "type": "action_result",
      "runId": "3b9be52e-7131-4ff1-8446-4d53c6af1982",
      "actionId": "6ff4cc76-54f1-49ce-9b27-47f4ad7ad343",
      "actionName": "REPLY",
      "totalSteps": 2,
      "currentStep": 1
    }
  },
  {
    "id": "648e58ad-e2a8-463a-8cf1-d030fc36eb2d",
    "type": "messages",
    "createdAt": 1754967671030,
    "content": {
      "text": "Open issues for elizaOS/eliza (10 shown):\n‚Ä¢ #5754: Critical: Plugin Publishing Fails with False Success Reports (open) [bug]\n‚Ä¢ #5749: Implement Runtime Method Mocking for Deterministic Agent Testing (open) [enhancement, testing, Reality Spiral]\n‚Ä¢ #5747: Fixing bugs in eliza-cloud (open)\n‚Ä¢ #5738: üêõ Build failure in @elizaos/core causing bun run clean to fail (open) [bug]\n‚Ä¢ #5734: Eliza CLI failed to build project (open) [bug]\n‚Ä¢ #5729: Update README.md to fix error (open)\n‚Ä¢ #5728: feat: ability to cancel current run before any calls to LLM are made (open)\n‚Ä¢ #5727: feat(scenarios): Implement natural language agent interaction and response validation (open) [enhancement, Reality Spiral]\n‚Ä¢ #5726: feat(scenarios): Implement conditional mocking and complex response structures (open) [enhancement, Reality Spiral]\n‚Ä¢ #5725: feat(scenarios): Implement plugin specification and dynamic loading (open) [enhancement, Reality Spiral]",
      "type": "action_result",
      "runId": "61dfd284-fe07-4a96-af4d-7254d1b27359",
      "source": "action",
      "planStep": "2/2",
      "actionName": "LIST_GITHUB_ISSUES",
      "planThought": "I need to list the open issues for the specified GitHub repository.",
      "actionResult": {
        "data": {
          "github": {
            "issues": {
              "elizaOS/eliza#5725": {
                "id": 3298689704,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725",
                "body": "# feat(scenarios): Implement plugin specification and dynamic loading\n\n## Description\n\nThis ticket implements plugin specification in scenario YAML files, allowing scenarios to declare which plugins are required for testing. This enables testing of agent behaviors that depend on specific plugins like `@elizaos/plugin-github` or `@elizaos/plugin-evm`. The system will dynamically load specified plugins during scenario execution and make their actions, providers, and services available to the agent.\n\n## Acceptance Criteria\n\n1. Scenario YAML supports a `plugins` array at the root level with string plugin names\n2. The `initializeAgent()` function respects scenario plugin specifications and loads them via `startAgent()`\n3. Plugin loading follows the same dependency resolution and error handling as the main CLI\n4. Scenarios can specify both string plugin names (`@elizaos/plugin-github`) and direct plugin objects\n5. Plugin loading errors are clearly reported with actionable guidance\n6. Default plugins (bootstrap, sql) are automatically included unless explicitly excluded via `exclude_defaults: true`\n7. Plugin conflicts are detected and reported during scenario validation\n8. Plugin initialization errors don't crash the scenario but are reported in results\n\n## Technical Approach\n\n### 1. Update Scenario Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst ScenarioSchema = z.object({\n  name: z.string(),\n  description: z.string(),\n  plugins: z.array(z.string()).optional(), // e.g., [\"@elizaos/plugin-github\"]\n  exclude_defaults: z.boolean().optional(), // exclude bootstrap/sql\n  environment: EnvironmentSchema,\n  setup: SetupSchema.optional(),\n  run: z.array(RunStepSchema),\n  judgment: JudgmentSchema,\n});\n```\n\n### 2. Enhance Runtime Factory\n```typescript\n// packages/cli/src/scenarios/runtime-factory.ts\nexport async function initializeAgent(scenario: Scenario): Promise<IAgentRuntime> {\n  const character: Character = {\n    name: 'scenario-runner',\n    id: stringToUuid('scenario-runner'),\n    bio: 'A minimal character for running scenarios',\n    plugins: scenario.plugins || []\n  };\n\n  // Load default plugins unless excluded\n  if (!scenario.exclude_defaults) {\n    character.plugins.push('@elizaos/plugin-bootstrap', '@elizaos/plugin-sql');\n  }\n\n  const runtime = await startAgent(\n    encryptedCharacter(character),\n    server,\n    undefined,\n    character.plugins,\n    { isTestMode: true }\n  );\n\n  return runtime;\n}\n```\n\n### 3. Plugin Validation\n```typescript\n// packages/cli/src/scenarios/plugin-validator.ts\nexport async function validateScenarioPlugins(scenario: Scenario): Promise<ValidationResult[]> {\n  const results: ValidationResult[] = [];\n  \n  for (const pluginName of scenario.plugins || []) {\n    try {\n      const plugin = await loadAndPreparePlugin(pluginName);\n      if (!plugin) {\n        results.push({\n          type: 'error',\n          message: `Plugin '${pluginName}' could not be loaded`,\n          suggestion: 'Check if plugin is installed or built correctly'\n        });\n      }\n    } catch (error) {\n      results.push({\n        type: 'error', \n        message: `Failed to validate plugin '${pluginName}': ${error.message}`,\n        suggestion: 'Verify plugin dependencies and configuration'\n      });\n    }\n  }\n  \n  return results;\n}\n```\n\n## Test Scenario\n\nCreate `plugin-integration-test.scenario.yaml`:\n```yaml\nname: \"Plugin Integration Test\"\ndescription: \"Tests loading and using plugins specified in scenario YAML\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Test Issue\"\n          number: 123\n          state: \"open\"\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"1.23\"\n\nrun:\n  - name: \"Test GitHub plugin actions\"\n    input: \"Search for issues with label 'bug'\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify GitHub plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"Test Issue\"\n        description: \"Verify agent found the mocked issue\"\n\n  - name: \"Test EVM plugin actions\"\n    input: \"What's my wallet balance?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify EVM plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n        description: \"Verify agent reported the mocked balance\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Plugin Loading Test**: Verify plugins load without errors\n2. **Action Availability Test**: Confirm agent can use plugin actions\n3. **Error Handling Test**: Test with non-existent plugin\n4. **Default Plugin Test**: Verify bootstrap/sql are included by default\n5. **Exclusion Test**: Test `exclude_defaults: true` behavior\n\n## Dependencies\n\n- Fixes the `startAgent` hanging issue (#5719) to enable plugin testing\n- Builds on existing `loadAndPreparePlugin` functionality\n- Integrates with current scenario execution flow ",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement plugin specification and dynamic loading",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5725,
                "node_id": "I_kwDOMT5cIs7EngKo",
                "assignee": null,
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5725",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:48:08Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/labels{/name}",
                "updated_at": "2025-08-07T05:37:32Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5726": {
                "id": 3298691383,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726",
                "body": "# feat(scenarios): Implement conditional mocking and complex response structures\n\n## Description\n\nThis ticket enhances the mocking system to support conditional responses based on input parameters and complex response structures with metadata. This enables realistic testing of service interactions like GitHub API calls or EVM transactions with proper request/response matching.\n\n## Acceptance Criteria\n\n1. Mock definitions support `when` clauses for conditional responses\n2. `when` clauses can match on method arguments, input parameters, or request context\n3. Mock responses support complex nested structures with metadata (timestamps, IDs, etc.)\n4. Multiple mock responses can be defined for the same service/method with different conditions\n5. Mock system provides clear logging of which mock was triggered and why\n6. Mock responses can include realistic error conditions and edge cases\n7. Support for dynamic response generation based on input parameters\n8. Mock validation ensures `when` clauses are syntactically correct\n\n## Technical Approach\n\n### 1. Enhanced Mock Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst MockSchema = z.object({\n  service: z.string(),\n  method: z.string(),\n  when: z.object({\n    // Match on method arguments\n    args: z.array(z.any()).optional(),\n    // Match on specific argument values\n    input: z.record(z.any()).optional(),\n    // Match on request context\n    context: z.record(z.any()).optional(),\n    // Custom matching function\n    matcher: z.string().optional(), // JavaScript expression\n  }).optional(),\n  response: z.any(), // Can be function or static value\n  // For dynamic responses\n  responseFn: z.string().optional(), // JavaScript function\n  // Error simulation\n  error: z.object({\n    code: z.string(),\n    message: z.string(),\n  }).optional(),\n});\n```\n\n### 2. Mock Engine Implementation\n```typescript\n// packages/cli/src/scenarios/mock-engine.ts\nexport class MockEngine {\n  private mocks: MockDefinition[] = [];\n\n  addMock(mock: MockDefinition) {\n    this.mocks.push(mock);\n  }\n\n  async findMock(service: string, method: string, args: any[]): Promise<any> {\n    const candidates = this.mocks.filter(m => \n      m.service === service && m.method === method\n    );\n\n    for (const mock of candidates) {\n      if (await this.matchesCondition(mock, args)) {\n        this.logger.info(`Mock triggered: ${service}.${method} with condition: ${JSON.stringify(mock.when)}`);\n        return this.generateResponse(mock, args);\n      }\n    }\n\n    return null; // No mock found\n  }\n\n  private async matchesCondition(mock: MockDefinition, args: any[]): Promise<boolean> {\n    if (!mock.when) return true; // Default mock\n\n    // Match on arguments\n    if (mock.when.args) {\n      if (!this.deepEqual(args, mock.when.args)) return false;\n    }\n\n    // Match on input parameters\n    if (mock.when.input) {\n      const input = this.extractInputFromArgs(args);\n      if (!this.deepEqual(input, mock.when.input)) return false;\n    }\n\n    // Custom matcher function\n    if (mock.when.matcher) {\n      const matcherFn = new Function('args', 'input', mock.when.matcher);\n      return matcherFn(args, this.extractInputFromArgs(args));\n    }\n\n    return true;\n  }\n\n  private generateResponse(mock: MockDefinition, args: any[]): any {\n    if (mock.error) {\n      throw new Error(`${mock.error.code}: ${mock.error.message}`);\n    }\n\n    if (mock.responseFn) {\n      const responseFn = new Function('args', 'input', mock.responseFn);\n      return responseFn(args, this.extractInputFromArgs(args));\n    }\n\n    return mock.response;\n  }\n}\n```\n\n## Test Scenario\n\nCreate `advanced-mocking-test.scenario.yaml`:\n```yaml\nname: \"Advanced Mocking Test\"\ndescription: \"Tests conditional mocking and complex response structures\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    # Conditional GitHub issue search\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"bug\"\n        matcher: \"input.labels.includes('bug')\"\n      response:\n        - title: \"Critical Bug Found\"\n          number: 456\n          state: \"open\"\n          labels: [\"bug\", \"critical\"]\n          created_at: \"2024-07-15T10:00:00Z\"\n\n    # Conditional GitHub issue search - different response\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"feature\"\n        matcher: \"input.labels.includes('feature')\"\n      response:\n        - title: \"New Feature Request\"\n          number: 789\n          state: \"open\"\n          labels: [\"feature\", \"enhancement\"]\n          created_at: \"2024-07-15T11:00:00Z\"\n\n    # Dynamic EVM balance response\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      when:\n        args: [\"0x1234567890abcdef\"]\n      responseFn: |\n        return {\n          chain: \"ethereum\",\n          address: args[0],\n          balances: [\n            { symbol: \"ETH\", amount: \"1.23\" },\n            { symbol: \"USDC\", amount: \"1000.00\" }\n          ],\n          last_updated: new Date().toISOString()\n        }\n\n    # Error simulation\n    - service: \"github-service\"\n      method: \"readFile\"\n      when:\n        input:\n          path: \"/docs/nonexistent.md\"\n      error:\n        code: \"FILE_NOT_FOUND\"\n        message: \"File does not exist\"\n\nrun:\n  - name: \"Test conditional GitHub search\"\n    input: \"Search for issues with bug label\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"Critical Bug Found\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent correctly search for bug issues?\"\n        expected: \"yes\"\n\n  - name: \"Test dynamic EVM response\"\n    input: \"What's the balance for address 0x1234567890abcdef?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n      - type: \"string_contains\"\n        value: \"1000.00 USDC\"\n\n  - name: \"Test error handling\"\n    input: \"Read the file /docs/nonexistent.md\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.readFile\"\n      - type: \"string_contains\"\n        value: \"File does not exist\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Conditional Matching**: Test different responses based on input parameters\n2. **Dynamic Responses**: Test response generation based on arguments\n3. **Error Simulation**: Test error handling and reporting\n4. **Complex Structures**: Test nested response objects with metadata\n5. **Multiple Mocks**: Test multiple mocks for same service/method\n6. **Logging**: Verify mock selection is logged clearly\n\n## Dependencies\n\n- Builds on existing mock system in scenarios\n- Requires plugin system integration (Ticket 1)\n- Integrates with agent interaction testing (Ticket 3) ",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement conditional mocking and complex response structures",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5726,
                "node_id": "I_kwDOMT5cIs7Engk3",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5726",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:49:00Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/labels{/name}",
                "updated_at": "2025-08-07T05:32:53Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5727": {
                "id": 3298692741,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727",
                "body": "# feat(scenarios): Implement natural language agent interaction and response validation\n\n## Description\n\nThis ticket enables scenarios to test agent behavior through natural language interactions rather than direct code execution. This allows testing of agent reasoning, decision-making, and response generation in realistic conversation contexts with proper evaluation of agent responses.\n\n## Acceptance Criteria\n\n1. Scenario `run` blocks support `input` field for natural language prompts to agents\n2. Agent responses are captured and available for evaluation (text, thoughts, actions)\n3. Evaluators can access both agent response text and execution context\n4. Support for multi-turn conversations in scenarios\n5. Agent responses include thought process and action decisions\n6. Integration with existing evaluation engine for response validation\n7. Support for conversation context across multiple steps\n8. Agent response timing and performance metrics\n\n## Technical Approach\n\n### 1. Enhanced Run Step Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst RunStepSchema = z.object({\n  name: z.string().optional(),\n  // Natural language input to agent\n  input: z.string().optional(),\n  // Direct code execution (existing)\n  lang: z.string().optional(),\n  code: z.string().optional(),\n  // Agent interaction specific\n  agent_context: z.object({\n    conversation_id: z.string().optional(),\n    user_id: z.string().optional(),\n    room_id: z.string().optional(),\n  }).optional(),\n  evaluations: z.array(EvaluationSchema),\n});\n```\n\n### 2. Agent Interaction Engine\n```typescript\n// packages/cli/src/scenarios/agent-interaction.ts\nexport class AgentInteractionEngine {\n  constructor(private runtime: IAgentRuntime) {}\n\n  async interactWithAgent(input: string, context?: AgentContext): Promise<AgentResponse> {\n    // Create message for agent\n    const message: Memory = {\n      entityId: context?.user_id || 'scenario-user',\n      roomId: context?.room_id || 'scenario-room',\n      content: {\n        type: 'text',\n        text: input,\n      },\n      metadata: {\n        type: 'message',\n        conversationId: context?.conversation_id,\n      },\n    };\n\n    // Send to agent and capture response\n    const startTime = Date.now();\n    const response = await this.runtime.processMessage(message);\n    const endTime = Date.now();\n\n    return {\n      text: response.text,\n      thoughts: response.thoughts,\n      actions: response.actions,\n      timing: {\n        startTime,\n        endTime,\n        duration: endTime - startTime,\n      },\n      context: {\n        conversationId: context?.conversation_id,\n        messageId: message.id,\n      },\n    };\n  }\n}\n```\n\n### 3. Enhanced Execution Result\n```typescript\n// packages/cli/src/scenarios/providers.ts\nexport interface ExecutionResult {\n  exitCode: number;\n  stdout: string;\n  stderr: string;\n  files: Record<string, string>;\n  // New: Agent interaction results\n  agentResponse?: AgentResponse;\n  conversationHistory?: AgentResponse[];\n}\n```\n\n## Test Scenario\n\nCreate `agent-interaction-test.scenario.yaml`:\n```yaml\nname: \"Agent Interaction Test\"\ndescription: \"Tests natural language interaction with agents\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Implement Dark Mode\"\n          number: 123\n          state: \"open\"\n          labels: [\"feature\", \"ui\"]\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"2.5\"\n\nrun:\n  - name: \"Ask agent about roadmap\"\n    input: \"What new features are you planning to add?\"\n    agent_context:\n      conversation_id: \"roadmap-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify agent searched for issues\"\n      \n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n        description: \"Verify agent mentioned the mocked issue\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent provide a helpful and coherent response about new features?\"\n        expected: \"yes\"\n        description: \"Verify agent response quality\"\n\n  - name: \"Ask agent about wallet\"\n    input: \"What's my current wallet balance?\"\n    agent_context:\n      conversation_id: \"wallet-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify agent checked wallet balance\"\n      \n      - type: \"string_contains\"\n        value: \"2.5 ETH\"\n        description: \"Verify agent reported the correct balance\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent clearly explain the wallet balance information?\"\n        expected: \"yes\"\n\n  - name: \"Multi-turn conversation\"\n    input: \"Can you help me with both my wallet and roadmap?\"\n    agent_context:\n      conversation_id: \"multi-turn-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"ETH\"\n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent address both wallet and roadmap questions comprehensively?\"\n        expected: \"yes\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Single Turn**: Test basic agent interaction and response\n2. **Multi-turn**: Test conversation context across steps\n3. **Action Tracking**: Verify agent uses appropriate actions\n4. **Response Quality**: Test LLM judge evaluation of responses\n5. **Performance**: Test response timing and metrics\n6. **Error Handling**: Test agent behavior with invalid inputs\n\n## Dependencies\n\n- Requires plugin system integration (Ticket 1)\n- Builds on advanced mocking system (Ticket 2)\n- Integrates with existing evaluation engine\n- Depends on agent runtime message processing",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement natural language agent interaction and response validation",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5727,
                "node_id": "I_kwDOMT5cIs7Eng6F",
                "assignee": null,
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5727",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:49:34Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/labels{/name}",
                "updated_at": "2025-08-07T05:35:40Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5728": {
                "id": 3299322983,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728",
                "body": "# Background\r\n\r\n## What does this PR do?\r\n\r\nIntroduce entity for cancelling runs `CancelRunSignal`\r\n\r\n## Why are we doing this? Any context or related work?\r\n\r\n- Calls to LLMs usually cost some credits\r\n- When we receive the `RUN_STARTED` event we can check current entity and end run to prevent credits spending\r\n\r\n# Documentation changes needed?\r\n\r\n## Methods\r\n\r\n- `static getSignal(runId: UUID)` - get signal by runId or create if null\r\n- `static clear(runId: UUID)` - clear signal from map\r\n- `cancel(content?: Content)` - cancel current run and and send `content` as a response to user\r\n\r\n## Example\r\n\r\n```typescript\r\nimport { Content, EventType, Plugin } from \"@elizaos/core\";\r\nimport { CancelRunSignal } from \"@elizaos/plugin-bootstrap\";\r\n\r\n// consider we have a service to determine eligibility for entity\r\ninterface EligibilityService {\r\n  check(entityId: UUID): Promise<{ result: boolean, reason?: Content }>\r\n}\r\n\r\nconst plugin: Plugin = {\r\n...\r\n  events: {\r\n    [EventType.RUN_STARTED]: ({ entityId, runId, runtime }) => {\r\n      const service = runtime.getService<EligibilityService>(\"USER_MANAGEMENT\");\r\n      const { result, reason } = await service.check(entityId);\r\n      \r\n      if (!result) {\r\n        const signal = CancelRunSignal.getSignal(runId);\r\n        signal.cancel(reason);\r\n      }\r\n    },\r\n    ...\r\n  },\r\n  ...\r\n}\r\n\r\nexport default Plugin;\r\n```\r\n\r\n## Discord username\r\n\r\nalexd000\r\n\r\n",
                "type": null,
                "user": {
                  "id": 82507604,
                  "url": "https://api.github.com/users/alex-nax",
                  "type": "User",
                  "login": "alex-nax",
                  "node_id": "MDQ6VXNlcjgyNTA3NjA0",
                  "html_url": "https://github.com/alex-nax",
                  "gists_url": "https://api.github.com/users/alex-nax/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/alex-nax/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/82507604?v=4",
                  "events_url": "https://api.github.com/users/alex-nax/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/alex-nax/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/alex-nax/followers",
                  "following_url": "https://api.github.com/users/alex-nax/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/alex-nax/orgs",
                  "subscriptions_url": "https://api.github.com/users/alex-nax/subscriptions",
                  "received_events_url": "https://api.github.com/users/alex-nax/received_events"
                },
                "draft": false,
                "state": "open",
                "title": "feat: ability to cancel current run before any calls to LLM are made",
                "labels": [],
                "locked": false,
                "number": 5728,
                "node_id": "PR_kwDOMT5cIs6ihriD",
                "assignee": null,
                "comments": 3,
                "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T07:19:35Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/labels{/name}",
                "updated_at": "2025-08-07T07:22:05Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/comments",
                "pull_request": {
                  "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5728",
                  "diff_url": "https://github.com/elizaOS/eliza/pull/5728.diff",
                  "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                  "merged_at": null,
                  "patch_url": "https://github.com/elizaOS/eliza/pull/5728.patch"
                },
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "FIRST_TIME_CONTRIBUTOR",
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5729": {
                "id": 3299481897,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729",
                "body": "# Relates to\r\n\r\nN/A (Documentation improvement, not tied to a specific issue or ticket)\r\n\r\n# Risks\r\n\r\nLow.  \r\nThis change only updates documentation and does not affect any code or functionality.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR updates the elizaos README to include a fix for installation errors that may occur due to permission issues. It adds a note suggesting the use of sudo if users encounter a \"Permission denied\" or \"InstallFailed\" error when running the `elizaos create my-agent` command.\r\n\r\n## What kind of change is this?\r\n\r\nImprovements (misc. changes to existing features)  \r\nDocumentation update\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes require a change to the project documentation.  \r\nI have updated the documentation accordingly.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\nStart by reviewing the changes in the README.md file, specifically the section on creating a new project.\r\n\r\n## Detailed testing steps\r\n\r\n- Open the updated README.md.\r\n- Review the new instructions under \"Create Your First Project.\"\r\n- Confirm that the added note about using `sudo` is clear and helpful for users who encounter permission errors.",
                "type": null,
                "user": {
                  "id": 32749185,
                  "url": "https://api.github.com/users/mandatedisrael",
                  "type": "User",
                  "login": "mandatedisrael",
                  "node_id": "MDQ6VXNlcjMyNzQ5MTg1",
                  "html_url": "https://github.com/mandatedisrael",
                  "gists_url": "https://api.github.com/users/mandatedisrael/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/mandatedisrael/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/32749185?v=4",
                  "events_url": "https://api.github.com/users/mandatedisrael/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/mandatedisrael/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/mandatedisrael/followers",
                  "following_url": "https://api.github.com/users/mandatedisrael/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/mandatedisrael/orgs",
                  "subscriptions_url": "https://api.github.com/users/mandatedisrael/subscriptions",
                  "received_events_url": "https://api.github.com/users/mandatedisrael/received_events"
                },
                "draft": false,
                "state": "open",
                "title": "Update README.md to fix error",
                "labels": [],
                "locked": false,
                "number": 5729,
                "node_id": "PR_kwDOMT5cIs6iiNWN",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T08:10:12Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/labels{/name}",
                "updated_at": "2025-08-07T08:10:24Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/comments",
                "pull_request": {
                  "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5729",
                  "diff_url": "https://github.com/elizaOS/eliza/pull/5729.diff",
                  "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                  "merged_at": null,
                  "patch_url": "https://github.com/elizaOS/eliza/pull/5729.patch"
                },
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "FIRST_TIME_CONTRIBUTOR",
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5734": {
                "id": 3301116813,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734",
                "body": "**Describe the bug**\n\nOn project creation, ElizaOS CLI fails with the following error:\n```\n‚óá  Failed to build project\nstdout: src/index.ts(7,25): error TS2345: Argument of type 'string' is not assignable to parameter of type 'undefined'.\nstderr: $ tsc --noEmit && vite build && tsup\n```\n\n**To Reproduce**\n\n- Install ElizaOS through `bun`\n```\nbun i -g @elizaos/cli\n```\n- Create new ElizaOS project\n```\nelizaos create abcde\n```\n\n**Expected behavior**\n\nProject built successfully\n\n**Screenshots**\n\n<img width=\"1095\" height=\"572\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/967dd6a2-0d70-4e2e-8019-85a2eab5f225\" />\n\n**Additional context**\n\nElizaOS CLI version: `1.3.2`\n",
                "type": null,
                "user": {
                  "id": 74447600,
                  "url": "https://api.github.com/users/Kemystra",
                  "type": "User",
                  "login": "Kemystra",
                  "node_id": "MDQ6VXNlcjc0NDQ3NjAw",
                  "html_url": "https://github.com/Kemystra",
                  "gists_url": "https://api.github.com/users/Kemystra/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/Kemystra/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/74447600?v=4",
                  "events_url": "https://api.github.com/users/Kemystra/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/Kemystra/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/Kemystra/followers",
                  "following_url": "https://api.github.com/users/Kemystra/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/Kemystra/orgs",
                  "subscriptions_url": "https://api.github.com/users/Kemystra/subscriptions",
                  "received_events_url": "https://api.github.com/users/Kemystra/received_events"
                },
                "state": "open",
                "title": "Eliza CLI failed to build project",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5734,
                "node_id": "I_kwDOMT5cIs7EwwuN",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5734",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T16:14:00Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/labels{/name}",
                "updated_at": "2025-08-08T19:43:52Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "NONE",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5738": {
                "id": 3302237103,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738",
                "body": "## Description\n\nThe `bun run clean` command is failing due to TypeScript errors in `@elizaos/core` package during the DTS (type definition) build phase.\n\n## Error Details\n\n### Build Process\n```\n‚Ä¢ Running build in 17 packages\n‚Ä¢ Remote caching disabled\n@elizaos/config:build: cache miss\n@elizaos/autodoc:build: cache miss\n@elizaos/core:build: cache miss\n```\n\n### TypeScript Errors in @elizaos/core/src/utils.ts\n1. Line 218: `error TS2345: Argument of type '`${string}-${string}-${string}-${string}-${string}`' is not assignable to parameter of type 'never'.`\n2. Line 366: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n3. Line 409: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n4. Line 536: `error TS2345: Argument of type '{ numberOfChunks: number; averageChunkSize: number; }' is not assignable to parameter of type 'never'.`\n\n### Impact\n- Blocks `bun run clean` command\n- Prevents successful build of `@elizaos/core`\n- Affects dependent packages in the monorepo\n\n## Steps to Reproduce\n1. Run `bun run clean`\n2. Observe build failure in `@elizaos/core`\n3. Build fails with TypeScript errors during DTS generation\n\n## Expected Behavior\n- `bun run clean` should complete successfully\n- `@elizaos/core` should build without TypeScript errors\n- Type definitions should be generated correctly\n\n## Suggested Fix\n\nThe errors suggest type mismatches in `utils.ts`. Need to:\n1. Review type definitions in affected lines\n2. Update type assertions or generic constraints\n3. Ensure string template literal types are properly handled\n4. Fix object type assignments\n\n### Files to Update\n- `packages/core/src/utils.ts`\n\n## Priority\n**HIGH** - This is blocking clean builds and potentially affecting development workflow.",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "üêõ Build failure in @elizaos/core causing bun run clean to fail",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5738,
                "node_id": "I_kwDOMT5cIs7E1COv",
                "assignee": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5738",
                "assignees": [
                  {
                    "id": 15067321,
                    "url": "https://api.github.com/users/monilpat",
                    "type": "User",
                    "login": "monilpat",
                    "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                    "html_url": "https://github.com/monilpat",
                    "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/monilpat/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                    "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/monilpat/followers",
                    "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/monilpat/orgs",
                    "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                    "received_events_url": "https://api.github.com/users/monilpat/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-08T00:26:11Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/labels{/name}",
                "updated_at": "2025-08-11T14:56:01Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5747": {
                "id": 3304516859,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747",
                "body": null,
                "type": null,
                "user": {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                },
                "state": "open",
                "title": "Fixing bugs in eliza-cloud",
                "labels": [],
                "locked": false,
                "number": 5747,
                "node_id": "I_kwDOMT5cIs7E9uz7",
                "assignee": {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                },
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5747",
                "assignees": [
                  {
                    "id": 48334430,
                    "url": "https://api.github.com/users/samarth30",
                    "type": "User",
                    "login": "samarth30",
                    "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                    "html_url": "https://github.com/samarth30",
                    "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/samarth30/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                    "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/samarth30/followers",
                    "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/samarth30/orgs",
                    "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                    "received_events_url": "https://api.github.com/users/samarth30/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-08T16:01:56Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/labels{/name}",
                "updated_at": "2025-08-08T19:02:49Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "MEMBER",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": {
                  "id": 20150,
                  "name": "Linear",
                  "slug": "linear",
                  "owner": {
                    "id": 46686594,
                    "url": "https://api.github.com/users/linear",
                    "type": "Organization",
                    "login": "linear",
                    "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ2Njg2NTk0",
                    "html_url": "https://github.com/linear",
                    "gists_url": "https://api.github.com/users/linear/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/linear/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/46686594?v=4",
                    "events_url": "https://api.github.com/users/linear/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/linear/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/linear/followers",
                    "following_url": "https://api.github.com/users/linear/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/linear/orgs",
                    "subscriptions_url": "https://api.github.com/users/linear/subscriptions",
                    "received_events_url": "https://api.github.com/users/linear/received_events"
                  },
                  "events": [
                    "check_suite",
                    "issues",
                    "issue_comment",
                    "pull_request",
                    "pull_request_review",
                    "repository",
                    "sub_issues"
                  ],
                  "node_id": "MDM6QXBwMjAxNTA=",
                  "html_url": "https://github.com/apps/linear",
                  "client_id": "Iv1.085d682ea245c945",
                  "created_at": "2018-11-02T18:07:23Z",
                  "updated_at": "2025-02-07T14:59:56Z",
                  "description": "",
                  "permissions": {
                    "checks": "read",
                    "issues": "write",
                    "metadata": "read",
                    "pull_requests": "write"
                  },
                  "external_url": "https://linear.app"
                }
              },
              "elizaOS/eliza#5749": {
                "id": 3308102900,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749",
                "body": "### Problem Statement\nCurrently, ElizaOS scenario testing lacks the ability to mock internal agent runtime calls (particularly LLM interactions) when testing via the API client. This makes it difficult to create deterministic tests for agent behavior and workflows.\n\n### Current Limitations\n- Global function mocks only work for code executed in the same process\n- No way to intercept `runtime.useModel` calls from the bootstrap plugin\n- Agent behavior is non-deterministic due to real LLM calls\n- Difficult to test specific agent decision paths and responses\n\n### Why Different Approach Was Needed\n\nThe existing mocking system was designed for **code execution environments** (E2B sandbox and local `node -e` processes), where mocks are applied to the execution context. However, **agent testing** works differently:\n\n- **E2B/Local Execution**: Code runs in isolated processes/sandboxes where global mocks can be applied\n- **Agent Testing**: Agent runs as a service with API client interaction, requiring direct runtime method interception\n- **Architecture Gap**: The bootstrap plugin calls `runtime.useModel` internally, which can't be mocked through the execution environment approach\n\nThis architectural difference necessitated a new approach that directly intercepts runtime methods rather than relying on execution context mocking.\n\n### Proposed Solution: Runtime Method Mocking\n\nWe've implemented a new mocking approach that directly intercepts `IAgentRuntime` method calls:\n\n#### Key Components\n\n1. **MockEngine Enhancement**\n   - Added `runtimeMethodMocks` to support mocking runtime methods\n   - Priority system: `runtimeMethod` > `service` > `globalFunction`\n   - Direct method replacement on the runtime instance\n\n2. **Schema Updates**\n   - Extended `MockSchema` to include `runtimeMethod: z.string().optional()`\n   - Supports mocking any `IAgentRuntime` method (e.g., `useModel`, `getService`)\n\n3. **Conditional Matching**\n   - Matcher functions can inspect method arguments\n   - Example: `\"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"`\n   - Supports complex conditional logic for when to apply mocks\n\n#### Usage Example\n\n```yaml\nsetup:\n  mocks:\n    - runtimeMethod: \"useModel\"\n      method: \"useModel\"\n      when:\n        matcher: \"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"\n      response: \"<response><name>agent</name><reasoning>Mocked response</reasoning><action>RESPOND</action></response>\"\n```\n\n#### Benefits\n\n1. **Deterministic Testing**: Replace LLM calls with static responses\n2. **Full Workflow Testing**: Test complete agent decision flows\n3. **Conditional Mocking**: Apply mocks based on specific conditions\n4. **Runtime Integration**: Works seamlessly with existing agent architecture\n5. **Backward Compatibility**: Existing mocks continue to work\n\n#### Implementation Steps\n\n- MockEngine runtime method support\n- Schema updates for runtimeMethod mocks\n- Conditional matching with matcher functions\n- Integration with scenario runner\n- Basic useModel mocking working\n- Add support for mocking other runtime methods (getService, etc.)\n- Create comprehensive test scenarios\n- Add documentation and examples\n- Consider adding mock recording/replay capabilities\n\n### Technical Details\n\nThe implementation works by:\n1. Creating the `IAgentRuntime` instance in the scenario runner\n2. Applying mocks directly to the runtime object before agent initialization\n3. The bootstrap plugin receives the mocked runtime and uses the mocked methods\n4. Mocks are reverted after scenario completion\n\nThis approach provides the foundation for robust, deterministic agent testing while maintaining the existing architecture.",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "Implement Runtime Method Mocking for Deterministic Agent Testing",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 7668252177,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/testing",
                    "name": "testing",
                    "color": "2D3957",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAAByRA-EQ",
                    "description": ""
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5749,
                "node_id": "I_kwDOMT5cIs7FLaT0",
                "assignee": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "comments": 0,
                "html_url": "https://github.com/elizaOS/eliza/issues/5749",
                "assignees": [
                  {
                    "id": 15067321,
                    "url": "https://api.github.com/users/monilpat",
                    "type": "User",
                    "login": "monilpat",
                    "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                    "html_url": "https://github.com/monilpat",
                    "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/monilpat/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                    "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/monilpat/followers",
                    "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/monilpat/orgs",
                    "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                    "received_events_url": "https://api.github.com/users/monilpat/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-11T00:08:49Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/labels{/name}",
                "updated_at": "2025-08-11T00:09:37Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5754": {
                "id": 3310285907,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754",
                "body": "## Issue Summary\nThe `elizaos publish --npm` command reports successful publishing but the plugin is not actually published to npm, despite showing success messages. The npm publish is failing with a 404 error, but the ElizaOS CLI incorrectly reports success.\n\n## Key Problems Identified\n\n### 1. Critical NPM Publishing Failure\n- **Error**: `npm error 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found`\n- **Issue**: The package scope `@elizaos` doesn't exist on npm, preventing publishing\n- **Impact**: Package cannot be published to npm, but CLI reports success\n\n### 2. False Success Reporting\n- **Issue**: CLI reports `[‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm`\n- **Reality**: npm publish failed with 404 error\n- **Impact**: Developers believe their plugin is published when it's not\n\n### 3. Registry Repository Mismatch\n- **Expected**: Should create PR against `https://github.com/elizaos-plugins/registry`\n- **Actual**: Still references old registry `https://github.com/elizaos/registry`\n- **Impact**: Plugin won't appear in the official ElizaOS registry\n\n## Steps to Reproduce\n\n```bash\n# Navigate to the plugin directory\ncd packages/plugin-polygon\n\n# Ensure you're on the correct branch with the changes\ngit checkout polygon\n\n# Run the publish command\nelizaos publish --npm\n\n# Verify the success message appears\n# [‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm\n\n# Check if package actually exists on npm\nnpm view @elizaos/plugin-polygon@1.0.0\n# Result: 404 Not Found - '@elizaos/plugin-polygon@1.0.0' is not in this registry\n```\n\n## Technical Details\n\n### NPM Error Analysis\nThe npm logs show the root cause:\n```\nhttp fetch PUT 404 https://registry.npmjs.org/@elizaos%2fplugin-polygon 507ms\nerror 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found\n```\n\nThis indicates that the `@elizaos` scope doesn't exist on npm, which is required for publishing scoped packages.\n\n### CLI Error Handling Failure\nThe ElizaOS CLI is not properly parsing npm error codes:\n- npm returns exit code 1 (failure)\n- CLI ignores the error and reports success\n- No validation that the package actually exists on npm\n\n## Expected Behavior\n1. CLI should detect npm publish failures (exit code 1)\n2. CLI should fail with clear error message when package scope doesn't exist\n3. CLI should validate that package actually exists on npm after publishing\n4. CLI should create PRs against the correct registry repository\n\n## Recommended Fixes\n\n### 1. Fix NPM Error Detection\n```typescript\n// In the publish command, check npm exit code\nconst npmResult = await exec('npm publish', { cwd: pluginDir });\nif (npmResult.exitCode !== 0) {\n  throw new Error(`NPM publish failed: ${npmResult.stderr}`);\n}\n```\n\n### 2. Add Package Scope Validation\n```typescript\n// Before publishing, check if scope exists\nconst scopeExists = await checkNpmScope('@elizaos');\nif (!scopeExists) {\n  throw new Error('Package scope @elizaos does not exist on npm. Contact npm support to create the scope.');\n}\n```\n\n### 3. Add Post-Publish Validation\n```typescript\n// After publishing, verify package exists\nconst packageExists = await checkPackageExists(packageName, version);\nif (!packageExists) {\n  throw new Error(`Package was not published successfully. Check npm logs for details.`);\n}\n```\n\n## Priority\n**Critical** - This completely blocks plugin publishing and creates false success reports.\n\n## Affected Components\n- `packages/cli/src/commands/publish.ts`\n- NPM publishing logic\n- Error handling and success reporting\n- Package scope validation\n- Registry repository configuration\n\n## Immediate Action Required\n1. **Create the `@elizaos` scope on npm** or use an existing scope\n2. Update CLI to properly detect and handle npm publish failures\n3. Add post-publish validation to ensure packages actually exist on npm\n4. Update registry repository configuration\n\n## Alternative Solutions\n1. **Use existing scope**: Change package name to `@monilpat/plugin-polygon`\n2. **Create organization scope**: Set up `@elizaos` organization on npm\n3. **Use unscoped package**: Publish as `elizaos-plugin-polygon`\n\nThis issue is critically blocking plugin developers from successfully publishing their work and needs immediate attention from the ElizaOS team.\n",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "Critical: Plugin Publishing Fails with False Success Reports",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5754,
                "node_id": "I_kwDOMT5cIs7FTvRT",
                "assignee": null,
                "comments": 0,
                "html_url": "https://github.com/elizaOS/eliza/issues/5754",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-11T14:20:08Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/labels{/name}",
                "updated_at": "2025-08-11T14:20:08Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              }
            },
            "lastIssues": [
              {
                "id": 3310285907,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754",
                "body": "## Issue Summary\nThe `elizaos publish --npm` command reports successful publishing but the plugin is not actually published to npm, despite showing success messages. The npm publish is failing with a 404 error, but the ElizaOS CLI incorrectly reports success.\n\n## Key Problems Identified\n\n### 1. Critical NPM Publishing Failure\n- **Error**: `npm error 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found`\n- **Issue**: The package scope `@elizaos` doesn't exist on npm, preventing publishing\n- **Impact**: Package cannot be published to npm, but CLI reports success\n\n### 2. False Success Reporting\n- **Issue**: CLI reports `[‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm`\n- **Reality**: npm publish failed with 404 error\n- **Impact**: Developers believe their plugin is published when it's not\n\n### 3. Registry Repository Mismatch\n- **Expected**: Should create PR against `https://github.com/elizaos-plugins/registry`\n- **Actual**: Still references old registry `https://github.com/elizaos/registry`\n- **Impact**: Plugin won't appear in the official ElizaOS registry\n\n## Steps to Reproduce\n\n```bash\n# Navigate to the plugin directory\ncd packages/plugin-polygon\n\n# Ensure you're on the correct branch with the changes\ngit checkout polygon\n\n# Run the publish command\nelizaos publish --npm\n\n# Verify the success message appears\n# [‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm\n\n# Check if package actually exists on npm\nnpm view @elizaos/plugin-polygon@1.0.0\n# Result: 404 Not Found - '@elizaos/plugin-polygon@1.0.0' is not in this registry\n```\n\n## Technical Details\n\n### NPM Error Analysis\nThe npm logs show the root cause:\n```\nhttp fetch PUT 404 https://registry.npmjs.org/@elizaos%2fplugin-polygon 507ms\nerror 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found\n```\n\nThis indicates that the `@elizaos` scope doesn't exist on npm, which is required for publishing scoped packages.\n\n### CLI Error Handling Failure\nThe ElizaOS CLI is not properly parsing npm error codes:\n- npm returns exit code 1 (failure)\n- CLI ignores the error and reports success\n- No validation that the package actually exists on npm\n\n## Expected Behavior\n1. CLI should detect npm publish failures (exit code 1)\n2. CLI should fail with clear error message when package scope doesn't exist\n3. CLI should validate that package actually exists on npm after publishing\n4. CLI should create PRs against the correct registry repository\n\n## Recommended Fixes\n\n### 1. Fix NPM Error Detection\n```typescript\n// In the publish command, check npm exit code\nconst npmResult = await exec('npm publish', { cwd: pluginDir });\nif (npmResult.exitCode !== 0) {\n  throw new Error(`NPM publish failed: ${npmResult.stderr}`);\n}\n```\n\n### 2. Add Package Scope Validation\n```typescript\n// Before publishing, check if scope exists\nconst scopeExists = await checkNpmScope('@elizaos');\nif (!scopeExists) {\n  throw new Error('Package scope @elizaos does not exist on npm. Contact npm support to create the scope.');\n}\n```\n\n### 3. Add Post-Publish Validation\n```typescript\n// After publishing, verify package exists\nconst packageExists = await checkPackageExists(packageName, version);\nif (!packageExists) {\n  throw new Error(`Package was not published successfully. Check npm logs for details.`);\n}\n```\n\n## Priority\n**Critical** - This completely blocks plugin publishing and creates false success reports.\n\n## Affected Components\n- `packages/cli/src/commands/publish.ts`\n- NPM publishing logic\n- Error handling and success reporting\n- Package scope validation\n- Registry repository configuration\n\n## Immediate Action Required\n1. **Create the `@elizaos` scope on npm** or use an existing scope\n2. Update CLI to properly detect and handle npm publish failures\n3. Add post-publish validation to ensure packages actually exist on npm\n4. Update registry repository configuration\n\n## Alternative Solutions\n1. **Use existing scope**: Change package name to `@monilpat/plugin-polygon`\n2. **Create organization scope**: Set up `@elizaos` organization on npm\n3. **Use unscoped package**: Publish as `elizaos-plugin-polygon`\n\nThis issue is critically blocking plugin developers from successfully publishing their work and needs immediate attention from the ElizaOS team.\n",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "Critical: Plugin Publishing Fails with False Success Reports",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5754,
                "node_id": "I_kwDOMT5cIs7FTvRT",
                "assignee": null,
                "comments": 0,
                "html_url": "https://github.com/elizaOS/eliza/issues/5754",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-11T14:20:08Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/labels{/name}",
                "updated_at": "2025-08-11T14:20:08Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3308102900,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749",
                "body": "### Problem Statement\nCurrently, ElizaOS scenario testing lacks the ability to mock internal agent runtime calls (particularly LLM interactions) when testing via the API client. This makes it difficult to create deterministic tests for agent behavior and workflows.\n\n### Current Limitations\n- Global function mocks only work for code executed in the same process\n- No way to intercept `runtime.useModel` calls from the bootstrap plugin\n- Agent behavior is non-deterministic due to real LLM calls\n- Difficult to test specific agent decision paths and responses\n\n### Why Different Approach Was Needed\n\nThe existing mocking system was designed for **code execution environments** (E2B sandbox and local `node -e` processes), where mocks are applied to the execution context. However, **agent testing** works differently:\n\n- **E2B/Local Execution**: Code runs in isolated processes/sandboxes where global mocks can be applied\n- **Agent Testing**: Agent runs as a service with API client interaction, requiring direct runtime method interception\n- **Architecture Gap**: The bootstrap plugin calls `runtime.useModel` internally, which can't be mocked through the execution environment approach\n\nThis architectural difference necessitated a new approach that directly intercepts runtime methods rather than relying on execution context mocking.\n\n### Proposed Solution: Runtime Method Mocking\n\nWe've implemented a new mocking approach that directly intercepts `IAgentRuntime` method calls:\n\n#### Key Components\n\n1. **MockEngine Enhancement**\n   - Added `runtimeMethodMocks` to support mocking runtime methods\n   - Priority system: `runtimeMethod` > `service` > `globalFunction`\n   - Direct method replacement on the runtime instance\n\n2. **Schema Updates**\n   - Extended `MockSchema` to include `runtimeMethod: z.string().optional()`\n   - Supports mocking any `IAgentRuntime` method (e.g., `useModel`, `getService`)\n\n3. **Conditional Matching**\n   - Matcher functions can inspect method arguments\n   - Example: `\"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"`\n   - Supports complex conditional logic for when to apply mocks\n\n#### Usage Example\n\n```yaml\nsetup:\n  mocks:\n    - runtimeMethod: \"useModel\"\n      method: \"useModel\"\n      when:\n        matcher: \"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"\n      response: \"<response><name>agent</name><reasoning>Mocked response</reasoning><action>RESPOND</action></response>\"\n```\n\n#### Benefits\n\n1. **Deterministic Testing**: Replace LLM calls with static responses\n2. **Full Workflow Testing**: Test complete agent decision flows\n3. **Conditional Mocking**: Apply mocks based on specific conditions\n4. **Runtime Integration**: Works seamlessly with existing agent architecture\n5. **Backward Compatibility**: Existing mocks continue to work\n\n#### Implementation Steps\n\n- MockEngine runtime method support\n- Schema updates for runtimeMethod mocks\n- Conditional matching with matcher functions\n- Integration with scenario runner\n- Basic useModel mocking working\n- Add support for mocking other runtime methods (getService, etc.)\n- Create comprehensive test scenarios\n- Add documentation and examples\n- Consider adding mock recording/replay capabilities\n\n### Technical Details\n\nThe implementation works by:\n1. Creating the `IAgentRuntime` instance in the scenario runner\n2. Applying mocks directly to the runtime object before agent initialization\n3. The bootstrap plugin receives the mocked runtime and uses the mocked methods\n4. Mocks are reverted after scenario completion\n\nThis approach provides the foundation for robust, deterministic agent testing while maintaining the existing architecture.",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "Implement Runtime Method Mocking for Deterministic Agent Testing",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 7668252177,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/testing",
                    "name": "testing",
                    "color": "2D3957",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAAByRA-EQ",
                    "description": ""
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5749,
                "node_id": "I_kwDOMT5cIs7FLaT0",
                "assignee": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "comments": 0,
                "html_url": "https://github.com/elizaOS/eliza/issues/5749",
                "assignees": [
                  {
                    "id": 15067321,
                    "url": "https://api.github.com/users/monilpat",
                    "type": "User",
                    "login": "monilpat",
                    "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                    "html_url": "https://github.com/monilpat",
                    "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/monilpat/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                    "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/monilpat/followers",
                    "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/monilpat/orgs",
                    "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                    "received_events_url": "https://api.github.com/users/monilpat/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-11T00:08:49Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/labels{/name}",
                "updated_at": "2025-08-11T00:09:37Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3304516859,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747",
                "body": null,
                "type": null,
                "user": {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                },
                "state": "open",
                "title": "Fixing bugs in eliza-cloud",
                "labels": [],
                "locked": false,
                "number": 5747,
                "node_id": "I_kwDOMT5cIs7E9uz7",
                "assignee": {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                },
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5747",
                "assignees": [
                  {
                    "id": 48334430,
                    "url": "https://api.github.com/users/samarth30",
                    "type": "User",
                    "login": "samarth30",
                    "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                    "html_url": "https://github.com/samarth30",
                    "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/samarth30/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                    "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/samarth30/followers",
                    "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/samarth30/orgs",
                    "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                    "received_events_url": "https://api.github.com/users/samarth30/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-08T16:01:56Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/labels{/name}",
                "updated_at": "2025-08-08T19:02:49Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "MEMBER",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": {
                  "id": 20150,
                  "name": "Linear",
                  "slug": "linear",
                  "owner": {
                    "id": 46686594,
                    "url": "https://api.github.com/users/linear",
                    "type": "Organization",
                    "login": "linear",
                    "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ2Njg2NTk0",
                    "html_url": "https://github.com/linear",
                    "gists_url": "https://api.github.com/users/linear/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/linear/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/46686594?v=4",
                    "events_url": "https://api.github.com/users/linear/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/linear/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/linear/followers",
                    "following_url": "https://api.github.com/users/linear/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/linear/orgs",
                    "subscriptions_url": "https://api.github.com/users/linear/subscriptions",
                    "received_events_url": "https://api.github.com/users/linear/received_events"
                  },
                  "events": [
                    "check_suite",
                    "issues",
                    "issue_comment",
                    "pull_request",
                    "pull_request_review",
                    "repository",
                    "sub_issues"
                  ],
                  "node_id": "MDM6QXBwMjAxNTA=",
                  "html_url": "https://github.com/apps/linear",
                  "client_id": "Iv1.085d682ea245c945",
                  "created_at": "2018-11-02T18:07:23Z",
                  "updated_at": "2025-02-07T14:59:56Z",
                  "description": "",
                  "permissions": {
                    "checks": "read",
                    "issues": "write",
                    "metadata": "read",
                    "pull_requests": "write"
                  },
                  "external_url": "https://linear.app"
                }
              },
              {
                "id": 3302237103,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738",
                "body": "## Description\n\nThe `bun run clean` command is failing due to TypeScript errors in `@elizaos/core` package during the DTS (type definition) build phase.\n\n## Error Details\n\n### Build Process\n```\n‚Ä¢ Running build in 17 packages\n‚Ä¢ Remote caching disabled\n@elizaos/config:build: cache miss\n@elizaos/autodoc:build: cache miss\n@elizaos/core:build: cache miss\n```\n\n### TypeScript Errors in @elizaos/core/src/utils.ts\n1. Line 218: `error TS2345: Argument of type '`${string}-${string}-${string}-${string}-${string}`' is not assignable to parameter of type 'never'.`\n2. Line 366: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n3. Line 409: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n4. Line 536: `error TS2345: Argument of type '{ numberOfChunks: number; averageChunkSize: number; }' is not assignable to parameter of type 'never'.`\n\n### Impact\n- Blocks `bun run clean` command\n- Prevents successful build of `@elizaos/core`\n- Affects dependent packages in the monorepo\n\n## Steps to Reproduce\n1. Run `bun run clean`\n2. Observe build failure in `@elizaos/core`\n3. Build fails with TypeScript errors during DTS generation\n\n## Expected Behavior\n- `bun run clean` should complete successfully\n- `@elizaos/core` should build without TypeScript errors\n- Type definitions should be generated correctly\n\n## Suggested Fix\n\nThe errors suggest type mismatches in `utils.ts`. Need to:\n1. Review type definitions in affected lines\n2. Update type assertions or generic constraints\n3. Ensure string template literal types are properly handled\n4. Fix object type assignments\n\n### Files to Update\n- `packages/core/src/utils.ts`\n\n## Priority\n**HIGH** - This is blocking clean builds and potentially affecting development workflow.",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "üêõ Build failure in @elizaos/core causing bun run clean to fail",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5738,
                "node_id": "I_kwDOMT5cIs7E1COv",
                "assignee": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5738",
                "assignees": [
                  {
                    "id": 15067321,
                    "url": "https://api.github.com/users/monilpat",
                    "type": "User",
                    "login": "monilpat",
                    "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                    "html_url": "https://github.com/monilpat",
                    "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/monilpat/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                    "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/monilpat/followers",
                    "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/monilpat/orgs",
                    "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                    "received_events_url": "https://api.github.com/users/monilpat/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-08T00:26:11Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/labels{/name}",
                "updated_at": "2025-08-11T14:56:01Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3301116813,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734",
                "body": "**Describe the bug**\n\nOn project creation, ElizaOS CLI fails with the following error:\n```\n‚óá  Failed to build project\nstdout: src/index.ts(7,25): error TS2345: Argument of type 'string' is not assignable to parameter of type 'undefined'.\nstderr: $ tsc --noEmit && vite build && tsup\n```\n\n**To Reproduce**\n\n- Install ElizaOS through `bun`\n```\nbun i -g @elizaos/cli\n```\n- Create new ElizaOS project\n```\nelizaos create abcde\n```\n\n**Expected behavior**\n\nProject built successfully\n\n**Screenshots**\n\n<img width=\"1095\" height=\"572\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/967dd6a2-0d70-4e2e-8019-85a2eab5f225\" />\n\n**Additional context**\n\nElizaOS CLI version: `1.3.2`\n",
                "type": null,
                "user": {
                  "id": 74447600,
                  "url": "https://api.github.com/users/Kemystra",
                  "type": "User",
                  "login": "Kemystra",
                  "node_id": "MDQ6VXNlcjc0NDQ3NjAw",
                  "html_url": "https://github.com/Kemystra",
                  "gists_url": "https://api.github.com/users/Kemystra/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/Kemystra/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/74447600?v=4",
                  "events_url": "https://api.github.com/users/Kemystra/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/Kemystra/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/Kemystra/followers",
                  "following_url": "https://api.github.com/users/Kemystra/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/Kemystra/orgs",
                  "subscriptions_url": "https://api.github.com/users/Kemystra/subscriptions",
                  "received_events_url": "https://api.github.com/users/Kemystra/received_events"
                },
                "state": "open",
                "title": "Eliza CLI failed to build project",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5734,
                "node_id": "I_kwDOMT5cIs7EwwuN",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5734",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T16:14:00Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/labels{/name}",
                "updated_at": "2025-08-08T19:43:52Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "NONE",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3299481897,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729",
                "body": "# Relates to\r\n\r\nN/A (Documentation improvement, not tied to a specific issue or ticket)\r\n\r\n# Risks\r\n\r\nLow.  \r\nThis change only updates documentation and does not affect any code or functionality.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR updates the elizaos README to include a fix for installation errors that may occur due to permission issues. It adds a note suggesting the use of sudo if users encounter a \"Permission denied\" or \"InstallFailed\" error when running the `elizaos create my-agent` command.\r\n\r\n## What kind of change is this?\r\n\r\nImprovements (misc. changes to existing features)  \r\nDocumentation update\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes require a change to the project documentation.  \r\nI have updated the documentation accordingly.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\nStart by reviewing the changes in the README.md file, specifically the section on creating a new project.\r\n\r\n## Detailed testing steps\r\n\r\n- Open the updated README.md.\r\n- Review the new instructions under \"Create Your First Project.\"\r\n- Confirm that the added note about using `sudo` is clear and helpful for users who encounter permission errors.",
                "type": null,
                "user": {
                  "id": 32749185,
                  "url": "https://api.github.com/users/mandatedisrael",
                  "type": "User",
                  "login": "mandatedisrael",
                  "node_id": "MDQ6VXNlcjMyNzQ5MTg1",
                  "html_url": "https://github.com/mandatedisrael",
                  "gists_url": "https://api.github.com/users/mandatedisrael/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/mandatedisrael/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/32749185?v=4",
                  "events_url": "https://api.github.com/users/mandatedisrael/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/mandatedisrael/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/mandatedisrael/followers",
                  "following_url": "https://api.github.com/users/mandatedisrael/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/mandatedisrael/orgs",
                  "subscriptions_url": "https://api.github.com/users/mandatedisrael/subscriptions",
                  "received_events_url": "https://api.github.com/users/mandatedisrael/received_events"
                },
                "draft": false,
                "state": "open",
                "title": "Update README.md to fix error",
                "labels": [],
                "locked": false,
                "number": 5729,
                "node_id": "PR_kwDOMT5cIs6iiNWN",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T08:10:12Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/labels{/name}",
                "updated_at": "2025-08-07T08:10:24Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/comments",
                "pull_request": {
                  "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5729",
                  "diff_url": "https://github.com/elizaOS/eliza/pull/5729.diff",
                  "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                  "merged_at": null,
                  "patch_url": "https://github.com/elizaOS/eliza/pull/5729.patch"
                },
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "FIRST_TIME_CONTRIBUTOR",
                "performed_via_github_app": null
              },
              {
                "id": 3299322983,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728",
                "body": "# Background\r\n\r\n## What does this PR do?\r\n\r\nIntroduce entity for cancelling runs `CancelRunSignal`\r\n\r\n## Why are we doing this? Any context or related work?\r\n\r\n- Calls to LLMs usually cost some credits\r\n- When we receive the `RUN_STARTED` event we can check current entity and end run to prevent credits spending\r\n\r\n# Documentation changes needed?\r\n\r\n## Methods\r\n\r\n- `static getSignal(runId: UUID)` - get signal by runId or create if null\r\n- `static clear(runId: UUID)` - clear signal from map\r\n- `cancel(content?: Content)` - cancel current run and and send `content` as a response to user\r\n\r\n## Example\r\n\r\n```typescript\r\nimport { Content, EventType, Plugin } from \"@elizaos/core\";\r\nimport { CancelRunSignal } from \"@elizaos/plugin-bootstrap\";\r\n\r\n// consider we have a service to determine eligibility for entity\r\ninterface EligibilityService {\r\n  check(entityId: UUID): Promise<{ result: boolean, reason?: Content }>\r\n}\r\n\r\nconst plugin: Plugin = {\r\n...\r\n  events: {\r\n    [EventType.RUN_STARTED]: ({ entityId, runId, runtime }) => {\r\n      const service = runtime.getService<EligibilityService>(\"USER_MANAGEMENT\");\r\n      const { result, reason } = await service.check(entityId);\r\n      \r\n      if (!result) {\r\n        const signal = CancelRunSignal.getSignal(runId);\r\n        signal.cancel(reason);\r\n      }\r\n    },\r\n    ...\r\n  },\r\n  ...\r\n}\r\n\r\nexport default Plugin;\r\n```\r\n\r\n## Discord username\r\n\r\nalexd000\r\n\r\n",
                "type": null,
                "user": {
                  "id": 82507604,
                  "url": "https://api.github.com/users/alex-nax",
                  "type": "User",
                  "login": "alex-nax",
                  "node_id": "MDQ6VXNlcjgyNTA3NjA0",
                  "html_url": "https://github.com/alex-nax",
                  "gists_url": "https://api.github.com/users/alex-nax/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/alex-nax/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/82507604?v=4",
                  "events_url": "https://api.github.com/users/alex-nax/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/alex-nax/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/alex-nax/followers",
                  "following_url": "https://api.github.com/users/alex-nax/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/alex-nax/orgs",
                  "subscriptions_url": "https://api.github.com/users/alex-nax/subscriptions",
                  "received_events_url": "https://api.github.com/users/alex-nax/received_events"
                },
                "draft": false,
                "state": "open",
                "title": "feat: ability to cancel current run before any calls to LLM are made",
                "labels": [],
                "locked": false,
                "number": 5728,
                "node_id": "PR_kwDOMT5cIs6ihriD",
                "assignee": null,
                "comments": 3,
                "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T07:19:35Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/labels{/name}",
                "updated_at": "2025-08-07T07:22:05Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/comments",
                "pull_request": {
                  "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5728",
                  "diff_url": "https://github.com/elizaOS/eliza/pull/5728.diff",
                  "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                  "merged_at": null,
                  "patch_url": "https://github.com/elizaOS/eliza/pull/5728.patch"
                },
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "FIRST_TIME_CONTRIBUTOR",
                "performed_via_github_app": null
              },
              {
                "id": 3298692741,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727",
                "body": "# feat(scenarios): Implement natural language agent interaction and response validation\n\n## Description\n\nThis ticket enables scenarios to test agent behavior through natural language interactions rather than direct code execution. This allows testing of agent reasoning, decision-making, and response generation in realistic conversation contexts with proper evaluation of agent responses.\n\n## Acceptance Criteria\n\n1. Scenario `run` blocks support `input` field for natural language prompts to agents\n2. Agent responses are captured and available for evaluation (text, thoughts, actions)\n3. Evaluators can access both agent response text and execution context\n4. Support for multi-turn conversations in scenarios\n5. Agent responses include thought process and action decisions\n6. Integration with existing evaluation engine for response validation\n7. Support for conversation context across multiple steps\n8. Agent response timing and performance metrics\n\n## Technical Approach\n\n### 1. Enhanced Run Step Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst RunStepSchema = z.object({\n  name: z.string().optional(),\n  // Natural language input to agent\n  input: z.string().optional(),\n  // Direct code execution (existing)\n  lang: z.string().optional(),\n  code: z.string().optional(),\n  // Agent interaction specific\n  agent_context: z.object({\n    conversation_id: z.string().optional(),\n    user_id: z.string().optional(),\n    room_id: z.string().optional(),\n  }).optional(),\n  evaluations: z.array(EvaluationSchema),\n});\n```\n\n### 2. Agent Interaction Engine\n```typescript\n// packages/cli/src/scenarios/agent-interaction.ts\nexport class AgentInteractionEngine {\n  constructor(private runtime: IAgentRuntime) {}\n\n  async interactWithAgent(input: string, context?: AgentContext): Promise<AgentResponse> {\n    // Create message for agent\n    const message: Memory = {\n      entityId: context?.user_id || 'scenario-user',\n      roomId: context?.room_id || 'scenario-room',\n      content: {\n        type: 'text',\n        text: input,\n      },\n      metadata: {\n        type: 'message',\n        conversationId: context?.conversation_id,\n      },\n    };\n\n    // Send to agent and capture response\n    const startTime = Date.now();\n    const response = await this.runtime.processMessage(message);\n    const endTime = Date.now();\n\n    return {\n      text: response.text,\n      thoughts: response.thoughts,\n      actions: response.actions,\n      timing: {\n        startTime,\n        endTime,\n        duration: endTime - startTime,\n      },\n      context: {\n        conversationId: context?.conversation_id,\n        messageId: message.id,\n      },\n    };\n  }\n}\n```\n\n### 3. Enhanced Execution Result\n```typescript\n// packages/cli/src/scenarios/providers.ts\nexport interface ExecutionResult {\n  exitCode: number;\n  stdout: string;\n  stderr: string;\n  files: Record<string, string>;\n  // New: Agent interaction results\n  agentResponse?: AgentResponse;\n  conversationHistory?: AgentResponse[];\n}\n```\n\n## Test Scenario\n\nCreate `agent-interaction-test.scenario.yaml`:\n```yaml\nname: \"Agent Interaction Test\"\ndescription: \"Tests natural language interaction with agents\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Implement Dark Mode\"\n          number: 123\n          state: \"open\"\n          labels: [\"feature\", \"ui\"]\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"2.5\"\n\nrun:\n  - name: \"Ask agent about roadmap\"\n    input: \"What new features are you planning to add?\"\n    agent_context:\n      conversation_id: \"roadmap-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify agent searched for issues\"\n      \n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n        description: \"Verify agent mentioned the mocked issue\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent provide a helpful and coherent response about new features?\"\n        expected: \"yes\"\n        description: \"Verify agent response quality\"\n\n  - name: \"Ask agent about wallet\"\n    input: \"What's my current wallet balance?\"\n    agent_context:\n      conversation_id: \"wallet-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify agent checked wallet balance\"\n      \n      - type: \"string_contains\"\n        value: \"2.5 ETH\"\n        description: \"Verify agent reported the correct balance\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent clearly explain the wallet balance information?\"\n        expected: \"yes\"\n\n  - name: \"Multi-turn conversation\"\n    input: \"Can you help me with both my wallet and roadmap?\"\n    agent_context:\n      conversation_id: \"multi-turn-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"ETH\"\n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent address both wallet and roadmap questions comprehensively?\"\n        expected: \"yes\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Single Turn**: Test basic agent interaction and response\n2. **Multi-turn**: Test conversation context across steps\n3. **Action Tracking**: Verify agent uses appropriate actions\n4. **Response Quality**: Test LLM judge evaluation of responses\n5. **Performance**: Test response timing and metrics\n6. **Error Handling**: Test agent behavior with invalid inputs\n\n## Dependencies\n\n- Requires plugin system integration (Ticket 1)\n- Builds on advanced mocking system (Ticket 2)\n- Integrates with existing evaluation engine\n- Depends on agent runtime message processing",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement natural language agent interaction and response validation",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5727,
                "node_id": "I_kwDOMT5cIs7Eng6F",
                "assignee": null,
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5727",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:49:34Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/labels{/name}",
                "updated_at": "2025-08-07T05:35:40Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3298691383,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726",
                "body": "# feat(scenarios): Implement conditional mocking and complex response structures\n\n## Description\n\nThis ticket enhances the mocking system to support conditional responses based on input parameters and complex response structures with metadata. This enables realistic testing of service interactions like GitHub API calls or EVM transactions with proper request/response matching.\n\n## Acceptance Criteria\n\n1. Mock definitions support `when` clauses for conditional responses\n2. `when` clauses can match on method arguments, input parameters, or request context\n3. Mock responses support complex nested structures with metadata (timestamps, IDs, etc.)\n4. Multiple mock responses can be defined for the same service/method with different conditions\n5. Mock system provides clear logging of which mock was triggered and why\n6. Mock responses can include realistic error conditions and edge cases\n7. Support for dynamic response generation based on input parameters\n8. Mock validation ensures `when` clauses are syntactically correct\n\n## Technical Approach\n\n### 1. Enhanced Mock Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst MockSchema = z.object({\n  service: z.string(),\n  method: z.string(),\n  when: z.object({\n    // Match on method arguments\n    args: z.array(z.any()).optional(),\n    // Match on specific argument values\n    input: z.record(z.any()).optional(),\n    // Match on request context\n    context: z.record(z.any()).optional(),\n    // Custom matching function\n    matcher: z.string().optional(), // JavaScript expression\n  }).optional(),\n  response: z.any(), // Can be function or static value\n  // For dynamic responses\n  responseFn: z.string().optional(), // JavaScript function\n  // Error simulation\n  error: z.object({\n    code: z.string(),\n    message: z.string(),\n  }).optional(),\n});\n```\n\n### 2. Mock Engine Implementation\n```typescript\n// packages/cli/src/scenarios/mock-engine.ts\nexport class MockEngine {\n  private mocks: MockDefinition[] = [];\n\n  addMock(mock: MockDefinition) {\n    this.mocks.push(mock);\n  }\n\n  async findMock(service: string, method: string, args: any[]): Promise<any> {\n    const candidates = this.mocks.filter(m => \n      m.service === service && m.method === method\n    );\n\n    for (const mock of candidates) {\n      if (await this.matchesCondition(mock, args)) {\n        this.logger.info(`Mock triggered: ${service}.${method} with condition: ${JSON.stringify(mock.when)}`);\n        return this.generateResponse(mock, args);\n      }\n    }\n\n    return null; // No mock found\n  }\n\n  private async matchesCondition(mock: MockDefinition, args: any[]): Promise<boolean> {\n    if (!mock.when) return true; // Default mock\n\n    // Match on arguments\n    if (mock.when.args) {\n      if (!this.deepEqual(args, mock.when.args)) return false;\n    }\n\n    // Match on input parameters\n    if (mock.when.input) {\n      const input = this.extractInputFromArgs(args);\n      if (!this.deepEqual(input, mock.when.input)) return false;\n    }\n\n    // Custom matcher function\n    if (mock.when.matcher) {\n      const matcherFn = new Function('args', 'input', mock.when.matcher);\n      return matcherFn(args, this.extractInputFromArgs(args));\n    }\n\n    return true;\n  }\n\n  private generateResponse(mock: MockDefinition, args: any[]): any {\n    if (mock.error) {\n      throw new Error(`${mock.error.code}: ${mock.error.message}`);\n    }\n\n    if (mock.responseFn) {\n      const responseFn = new Function('args', 'input', mock.responseFn);\n      return responseFn(args, this.extractInputFromArgs(args));\n    }\n\n    return mock.response;\n  }\n}\n```\n\n## Test Scenario\n\nCreate `advanced-mocking-test.scenario.yaml`:\n```yaml\nname: \"Advanced Mocking Test\"\ndescription: \"Tests conditional mocking and complex response structures\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    # Conditional GitHub issue search\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"bug\"\n        matcher: \"input.labels.includes('bug')\"\n      response:\n        - title: \"Critical Bug Found\"\n          number: 456\n          state: \"open\"\n          labels: [\"bug\", \"critical\"]\n          created_at: \"2024-07-15T10:00:00Z\"\n\n    # Conditional GitHub issue search - different response\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"feature\"\n        matcher: \"input.labels.includes('feature')\"\n      response:\n        - title: \"New Feature Request\"\n          number: 789\n          state: \"open\"\n          labels: [\"feature\", \"enhancement\"]\n          created_at: \"2024-07-15T11:00:00Z\"\n\n    # Dynamic EVM balance response\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      when:\n        args: [\"0x1234567890abcdef\"]\n      responseFn: |\n        return {\n          chain: \"ethereum\",\n          address: args[0],\n          balances: [\n            { symbol: \"ETH\", amount: \"1.23\" },\n            { symbol: \"USDC\", amount: \"1000.00\" }\n          ],\n          last_updated: new Date().toISOString()\n        }\n\n    # Error simulation\n    - service: \"github-service\"\n      method: \"readFile\"\n      when:\n        input:\n          path: \"/docs/nonexistent.md\"\n      error:\n        code: \"FILE_NOT_FOUND\"\n        message: \"File does not exist\"\n\nrun:\n  - name: \"Test conditional GitHub search\"\n    input: \"Search for issues with bug label\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"Critical Bug Found\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent correctly search for bug issues?\"\n        expected: \"yes\"\n\n  - name: \"Test dynamic EVM response\"\n    input: \"What's the balance for address 0x1234567890abcdef?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n      - type: \"string_contains\"\n        value: \"1000.00 USDC\"\n\n  - name: \"Test error handling\"\n    input: \"Read the file /docs/nonexistent.md\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.readFile\"\n      - type: \"string_contains\"\n        value: \"File does not exist\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Conditional Matching**: Test different responses based on input parameters\n2. **Dynamic Responses**: Test response generation based on arguments\n3. **Error Simulation**: Test error handling and reporting\n4. **Complex Structures**: Test nested response objects with metadata\n5. **Multiple Mocks**: Test multiple mocks for same service/method\n6. **Logging**: Verify mock selection is logged clearly\n\n## Dependencies\n\n- Builds on existing mock system in scenarios\n- Requires plugin system integration (Ticket 1)\n- Integrates with agent interaction testing (Ticket 3) ",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement conditional mocking and complex response structures",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5726,
                "node_id": "I_kwDOMT5cIs7Engk3",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5726",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:49:00Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/labels{/name}",
                "updated_at": "2025-08-07T05:32:53Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3298689704,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725",
                "body": "# feat(scenarios): Implement plugin specification and dynamic loading\n\n## Description\n\nThis ticket implements plugin specification in scenario YAML files, allowing scenarios to declare which plugins are required for testing. This enables testing of agent behaviors that depend on specific plugins like `@elizaos/plugin-github` or `@elizaos/plugin-evm`. The system will dynamically load specified plugins during scenario execution and make their actions, providers, and services available to the agent.\n\n## Acceptance Criteria\n\n1. Scenario YAML supports a `plugins` array at the root level with string plugin names\n2. The `initializeAgent()` function respects scenario plugin specifications and loads them via `startAgent()`\n3. Plugin loading follows the same dependency resolution and error handling as the main CLI\n4. Scenarios can specify both string plugin names (`@elizaos/plugin-github`) and direct plugin objects\n5. Plugin loading errors are clearly reported with actionable guidance\n6. Default plugins (bootstrap, sql) are automatically included unless explicitly excluded via `exclude_defaults: true`\n7. Plugin conflicts are detected and reported during scenario validation\n8. Plugin initialization errors don't crash the scenario but are reported in results\n\n## Technical Approach\n\n### 1. Update Scenario Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst ScenarioSchema = z.object({\n  name: z.string(),\n  description: z.string(),\n  plugins: z.array(z.string()).optional(), // e.g., [\"@elizaos/plugin-github\"]\n  exclude_defaults: z.boolean().optional(), // exclude bootstrap/sql\n  environment: EnvironmentSchema,\n  setup: SetupSchema.optional(),\n  run: z.array(RunStepSchema),\n  judgment: JudgmentSchema,\n});\n```\n\n### 2. Enhance Runtime Factory\n```typescript\n// packages/cli/src/scenarios/runtime-factory.ts\nexport async function initializeAgent(scenario: Scenario): Promise<IAgentRuntime> {\n  const character: Character = {\n    name: 'scenario-runner',\n    id: stringToUuid('scenario-runner'),\n    bio: 'A minimal character for running scenarios',\n    plugins: scenario.plugins || []\n  };\n\n  // Load default plugins unless excluded\n  if (!scenario.exclude_defaults) {\n    character.plugins.push('@elizaos/plugin-bootstrap', '@elizaos/plugin-sql');\n  }\n\n  const runtime = await startAgent(\n    encryptedCharacter(character),\n    server,\n    undefined,\n    character.plugins,\n    { isTestMode: true }\n  );\n\n  return runtime;\n}\n```\n\n### 3. Plugin Validation\n```typescript\n// packages/cli/src/scenarios/plugin-validator.ts\nexport async function validateScenarioPlugins(scenario: Scenario): Promise<ValidationResult[]> {\n  const results: ValidationResult[] = [];\n  \n  for (const pluginName of scenario.plugins || []) {\n    try {\n      const plugin = await loadAndPreparePlugin(pluginName);\n      if (!plugin) {\n        results.push({\n          type: 'error',\n          message: `Plugin '${pluginName}' could not be loaded`,\n          suggestion: 'Check if plugin is installed or built correctly'\n        });\n      }\n    } catch (error) {\n      results.push({\n        type: 'error', \n        message: `Failed to validate plugin '${pluginName}': ${error.message}`,\n        suggestion: 'Verify plugin dependencies and configuration'\n      });\n    }\n  }\n  \n  return results;\n}\n```\n\n## Test Scenario\n\nCreate `plugin-integration-test.scenario.yaml`:\n```yaml\nname: \"Plugin Integration Test\"\ndescription: \"Tests loading and using plugins specified in scenario YAML\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Test Issue\"\n          number: 123\n          state: \"open\"\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"1.23\"\n\nrun:\n  - name: \"Test GitHub plugin actions\"\n    input: \"Search for issues with label 'bug'\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify GitHub plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"Test Issue\"\n        description: \"Verify agent found the mocked issue\"\n\n  - name: \"Test EVM plugin actions\"\n    input: \"What's my wallet balance?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify EVM plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n        description: \"Verify agent reported the mocked balance\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Plugin Loading Test**: Verify plugins load without errors\n2. **Action Availability Test**: Confirm agent can use plugin actions\n3. **Error Handling Test**: Test with non-existent plugin\n4. **Default Plugin Test**: Verify bootstrap/sql are included by default\n5. **Exclusion Test**: Test `exclude_defaults: true` behavior\n\n## Dependencies\n\n- Fixes the `startAgent` hanging issue (#5719) to enable plugin testing\n- Builds on existing `loadAndPreparePlugin` functionality\n- Integrates with current scenario execution flow ",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement plugin specification and dynamic loading",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5725,
                "node_id": "I_kwDOMT5cIs7EngKo",
                "assignee": null,
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5725",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:48:08Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/labels{/name}",
                "updated_at": "2025-08-07T05:37:32Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              }
            ]
          },
          "issues": [
            {
              "id": 3310285907,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754",
              "body": "## Issue Summary\nThe `elizaos publish --npm` command reports successful publishing but the plugin is not actually published to npm, despite showing success messages. The npm publish is failing with a 404 error, but the ElizaOS CLI incorrectly reports success.\n\n## Key Problems Identified\n\n### 1. Critical NPM Publishing Failure\n- **Error**: `npm error 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found`\n- **Issue**: The package scope `@elizaos` doesn't exist on npm, preventing publishing\n- **Impact**: Package cannot be published to npm, but CLI reports success\n\n### 2. False Success Reporting\n- **Issue**: CLI reports `[‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm`\n- **Reality**: npm publish failed with 404 error\n- **Impact**: Developers believe their plugin is published when it's not\n\n### 3. Registry Repository Mismatch\n- **Expected**: Should create PR against `https://github.com/elizaos-plugins/registry`\n- **Actual**: Still references old registry `https://github.com/elizaos/registry`\n- **Impact**: Plugin won't appear in the official ElizaOS registry\n\n## Steps to Reproduce\n\n```bash\n# Navigate to the plugin directory\ncd packages/plugin-polygon\n\n# Ensure you're on the correct branch with the changes\ngit checkout polygon\n\n# Run the publish command\nelizaos publish --npm\n\n# Verify the success message appears\n# [‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm\n\n# Check if package actually exists on npm\nnpm view @elizaos/plugin-polygon@1.0.0\n# Result: 404 Not Found - '@elizaos/plugin-polygon@1.0.0' is not in this registry\n```\n\n## Technical Details\n\n### NPM Error Analysis\nThe npm logs show the root cause:\n```\nhttp fetch PUT 404 https://registry.npmjs.org/@elizaos%2fplugin-polygon 507ms\nerror 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found\n```\n\nThis indicates that the `@elizaos` scope doesn't exist on npm, which is required for publishing scoped packages.\n\n### CLI Error Handling Failure\nThe ElizaOS CLI is not properly parsing npm error codes:\n- npm returns exit code 1 (failure)\n- CLI ignores the error and reports success\n- No validation that the package actually exists on npm\n\n## Expected Behavior\n1. CLI should detect npm publish failures (exit code 1)\n2. CLI should fail with clear error message when package scope doesn't exist\n3. CLI should validate that package actually exists on npm after publishing\n4. CLI should create PRs against the correct registry repository\n\n## Recommended Fixes\n\n### 1. Fix NPM Error Detection\n```typescript\n// In the publish command, check npm exit code\nconst npmResult = await exec('npm publish', { cwd: pluginDir });\nif (npmResult.exitCode !== 0) {\n  throw new Error(`NPM publish failed: ${npmResult.stderr}`);\n}\n```\n\n### 2. Add Package Scope Validation\n```typescript\n// Before publishing, check if scope exists\nconst scopeExists = await checkNpmScope('@elizaos');\nif (!scopeExists) {\n  throw new Error('Package scope @elizaos does not exist on npm. Contact npm support to create the scope.');\n}\n```\n\n### 3. Add Post-Publish Validation\n```typescript\n// After publishing, verify package exists\nconst packageExists = await checkPackageExists(packageName, version);\nif (!packageExists) {\n  throw new Error(`Package was not published successfully. Check npm logs for details.`);\n}\n```\n\n## Priority\n**Critical** - This completely blocks plugin publishing and creates false success reports.\n\n## Affected Components\n- `packages/cli/src/commands/publish.ts`\n- NPM publishing logic\n- Error handling and success reporting\n- Package scope validation\n- Registry repository configuration\n\n## Immediate Action Required\n1. **Create the `@elizaos` scope on npm** or use an existing scope\n2. Update CLI to properly detect and handle npm publish failures\n3. Add post-publish validation to ensure packages actually exist on npm\n4. Update registry repository configuration\n\n## Alternative Solutions\n1. **Use existing scope**: Change package name to `@monilpat/plugin-polygon`\n2. **Create organization scope**: Set up `@elizaos` organization on npm\n3. **Use unscoped package**: Publish as `elizaos-plugin-polygon`\n\nThis issue is critically blocking plugin developers from successfully publishing their work and needs immediate attention from the ElizaOS team.\n",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "Critical: Plugin Publishing Fails with False Success Reports",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5754,
              "node_id": "I_kwDOMT5cIs7FTvRT",
              "assignee": null,
              "comments": 0,
              "html_url": "https://github.com/elizaOS/eliza/issues/5754",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-11T14:20:08Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/labels{/name}",
              "updated_at": "2025-08-11T14:20:08Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3308102900,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749",
              "body": "### Problem Statement\nCurrently, ElizaOS scenario testing lacks the ability to mock internal agent runtime calls (particularly LLM interactions) when testing via the API client. This makes it difficult to create deterministic tests for agent behavior and workflows.\n\n### Current Limitations\n- Global function mocks only work for code executed in the same process\n- No way to intercept `runtime.useModel` calls from the bootstrap plugin\n- Agent behavior is non-deterministic due to real LLM calls\n- Difficult to test specific agent decision paths and responses\n\n### Why Different Approach Was Needed\n\nThe existing mocking system was designed for **code execution environments** (E2B sandbox and local `node -e` processes), where mocks are applied to the execution context. However, **agent testing** works differently:\n\n- **E2B/Local Execution**: Code runs in isolated processes/sandboxes where global mocks can be applied\n- **Agent Testing**: Agent runs as a service with API client interaction, requiring direct runtime method interception\n- **Architecture Gap**: The bootstrap plugin calls `runtime.useModel` internally, which can't be mocked through the execution environment approach\n\nThis architectural difference necessitated a new approach that directly intercepts runtime methods rather than relying on execution context mocking.\n\n### Proposed Solution: Runtime Method Mocking\n\nWe've implemented a new mocking approach that directly intercepts `IAgentRuntime` method calls:\n\n#### Key Components\n\n1. **MockEngine Enhancement**\n   - Added `runtimeMethodMocks` to support mocking runtime methods\n   - Priority system: `runtimeMethod` > `service` > `globalFunction`\n   - Direct method replacement on the runtime instance\n\n2. **Schema Updates**\n   - Extended `MockSchema` to include `runtimeMethod: z.string().optional()`\n   - Supports mocking any `IAgentRuntime` method (e.g., `useModel`, `getService`)\n\n3. **Conditional Matching**\n   - Matcher functions can inspect method arguments\n   - Example: `\"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"`\n   - Supports complex conditional logic for when to apply mocks\n\n#### Usage Example\n\n```yaml\nsetup:\n  mocks:\n    - runtimeMethod: \"useModel\"\n      method: \"useModel\"\n      when:\n        matcher: \"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"\n      response: \"<response><name>agent</name><reasoning>Mocked response</reasoning><action>RESPOND</action></response>\"\n```\n\n#### Benefits\n\n1. **Deterministic Testing**: Replace LLM calls with static responses\n2. **Full Workflow Testing**: Test complete agent decision flows\n3. **Conditional Mocking**: Apply mocks based on specific conditions\n4. **Runtime Integration**: Works seamlessly with existing agent architecture\n5. **Backward Compatibility**: Existing mocks continue to work\n\n#### Implementation Steps\n\n- MockEngine runtime method support\n- Schema updates for runtimeMethod mocks\n- Conditional matching with matcher functions\n- Integration with scenario runner\n- Basic useModel mocking working\n- Add support for mocking other runtime methods (getService, etc.)\n- Create comprehensive test scenarios\n- Add documentation and examples\n- Consider adding mock recording/replay capabilities\n\n### Technical Details\n\nThe implementation works by:\n1. Creating the `IAgentRuntime` instance in the scenario runner\n2. Applying mocks directly to the runtime object before agent initialization\n3. The bootstrap plugin receives the mocked runtime and uses the mocked methods\n4. Mocks are reverted after scenario completion\n\nThis approach provides the foundation for robust, deterministic agent testing while maintaining the existing architecture.",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "Implement Runtime Method Mocking for Deterministic Agent Testing",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 7668252177,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/testing",
                  "name": "testing",
                  "color": "2D3957",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAAByRA-EQ",
                  "description": ""
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5749,
              "node_id": "I_kwDOMT5cIs7FLaT0",
              "assignee": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "comments": 0,
              "html_url": "https://github.com/elizaOS/eliza/issues/5749",
              "assignees": [
                {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-11T00:08:49Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/labels{/name}",
              "updated_at": "2025-08-11T00:09:37Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3304516859,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747",
              "body": null,
              "type": null,
              "user": {
                "id": 48334430,
                "url": "https://api.github.com/users/samarth30",
                "type": "User",
                "login": "samarth30",
                "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                "html_url": "https://github.com/samarth30",
                "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/samarth30/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/samarth30/followers",
                "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/samarth30/orgs",
                "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                "received_events_url": "https://api.github.com/users/samarth30/received_events"
              },
              "state": "open",
              "title": "Fixing bugs in eliza-cloud",
              "labels": [],
              "locked": false,
              "number": 5747,
              "node_id": "I_kwDOMT5cIs7E9uz7",
              "assignee": {
                "id": 48334430,
                "url": "https://api.github.com/users/samarth30",
                "type": "User",
                "login": "samarth30",
                "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                "html_url": "https://github.com/samarth30",
                "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/samarth30/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/samarth30/followers",
                "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/samarth30/orgs",
                "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                "received_events_url": "https://api.github.com/users/samarth30/received_events"
              },
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5747",
              "assignees": [
                {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-08T16:01:56Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/labels{/name}",
              "updated_at": "2025-08-08T19:02:49Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "MEMBER",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": {
                "id": 20150,
                "name": "Linear",
                "slug": "linear",
                "owner": {
                  "id": 46686594,
                  "url": "https://api.github.com/users/linear",
                  "type": "Organization",
                  "login": "linear",
                  "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ2Njg2NTk0",
                  "html_url": "https://github.com/linear",
                  "gists_url": "https://api.github.com/users/linear/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/linear/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/46686594?v=4",
                  "events_url": "https://api.github.com/users/linear/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/linear/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/linear/followers",
                  "following_url": "https://api.github.com/users/linear/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/linear/orgs",
                  "subscriptions_url": "https://api.github.com/users/linear/subscriptions",
                  "received_events_url": "https://api.github.com/users/linear/received_events"
                },
                "events": [
                  "check_suite",
                  "issues",
                  "issue_comment",
                  "pull_request",
                  "pull_request_review",
                  "repository",
                  "sub_issues"
                ],
                "node_id": "MDM6QXBwMjAxNTA=",
                "html_url": "https://github.com/apps/linear",
                "client_id": "Iv1.085d682ea245c945",
                "created_at": "2018-11-02T18:07:23Z",
                "updated_at": "2025-02-07T14:59:56Z",
                "description": "",
                "permissions": {
                  "checks": "read",
                  "issues": "write",
                  "metadata": "read",
                  "pull_requests": "write"
                },
                "external_url": "https://linear.app"
              }
            },
            {
              "id": 3302237103,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738",
              "body": "## Description\n\nThe `bun run clean` command is failing due to TypeScript errors in `@elizaos/core` package during the DTS (type definition) build phase.\n\n## Error Details\n\n### Build Process\n```\n‚Ä¢ Running build in 17 packages\n‚Ä¢ Remote caching disabled\n@elizaos/config:build: cache miss\n@elizaos/autodoc:build: cache miss\n@elizaos/core:build: cache miss\n```\n\n### TypeScript Errors in @elizaos/core/src/utils.ts\n1. Line 218: `error TS2345: Argument of type '`${string}-${string}-${string}-${string}-${string}`' is not assignable to parameter of type 'never'.`\n2. Line 366: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n3. Line 409: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n4. Line 536: `error TS2345: Argument of type '{ numberOfChunks: number; averageChunkSize: number; }' is not assignable to parameter of type 'never'.`\n\n### Impact\n- Blocks `bun run clean` command\n- Prevents successful build of `@elizaos/core`\n- Affects dependent packages in the monorepo\n\n## Steps to Reproduce\n1. Run `bun run clean`\n2. Observe build failure in `@elizaos/core`\n3. Build fails with TypeScript errors during DTS generation\n\n## Expected Behavior\n- `bun run clean` should complete successfully\n- `@elizaos/core` should build without TypeScript errors\n- Type definitions should be generated correctly\n\n## Suggested Fix\n\nThe errors suggest type mismatches in `utils.ts`. Need to:\n1. Review type definitions in affected lines\n2. Update type assertions or generic constraints\n3. Ensure string template literal types are properly handled\n4. Fix object type assignments\n\n### Files to Update\n- `packages/core/src/utils.ts`\n\n## Priority\n**HIGH** - This is blocking clean builds and potentially affecting development workflow.",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "üêõ Build failure in @elizaos/core causing bun run clean to fail",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5738,
              "node_id": "I_kwDOMT5cIs7E1COv",
              "assignee": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5738",
              "assignees": [
                {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-08T00:26:11Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/labels{/name}",
              "updated_at": "2025-08-11T14:56:01Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3301116813,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734",
              "body": "**Describe the bug**\n\nOn project creation, ElizaOS CLI fails with the following error:\n```\n‚óá  Failed to build project\nstdout: src/index.ts(7,25): error TS2345: Argument of type 'string' is not assignable to parameter of type 'undefined'.\nstderr: $ tsc --noEmit && vite build && tsup\n```\n\n**To Reproduce**\n\n- Install ElizaOS through `bun`\n```\nbun i -g @elizaos/cli\n```\n- Create new ElizaOS project\n```\nelizaos create abcde\n```\n\n**Expected behavior**\n\nProject built successfully\n\n**Screenshots**\n\n<img width=\"1095\" height=\"572\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/967dd6a2-0d70-4e2e-8019-85a2eab5f225\" />\n\n**Additional context**\n\nElizaOS CLI version: `1.3.2`\n",
              "type": null,
              "user": {
                "id": 74447600,
                "url": "https://api.github.com/users/Kemystra",
                "type": "User",
                "login": "Kemystra",
                "node_id": "MDQ6VXNlcjc0NDQ3NjAw",
                "html_url": "https://github.com/Kemystra",
                "gists_url": "https://api.github.com/users/Kemystra/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/Kemystra/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/74447600?v=4",
                "events_url": "https://api.github.com/users/Kemystra/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/Kemystra/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/Kemystra/followers",
                "following_url": "https://api.github.com/users/Kemystra/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/Kemystra/orgs",
                "subscriptions_url": "https://api.github.com/users/Kemystra/subscriptions",
                "received_events_url": "https://api.github.com/users/Kemystra/received_events"
              },
              "state": "open",
              "title": "Eliza CLI failed to build project",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5734,
              "node_id": "I_kwDOMT5cIs7EwwuN",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5734",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T16:14:00Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/labels{/name}",
              "updated_at": "2025-08-08T19:43:52Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "NONE",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3299481897,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729",
              "body": "# Relates to\r\n\r\nN/A (Documentation improvement, not tied to a specific issue or ticket)\r\n\r\n# Risks\r\n\r\nLow.  \r\nThis change only updates documentation and does not affect any code or functionality.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR updates the elizaos README to include a fix for installation errors that may occur due to permission issues. It adds a note suggesting the use of sudo if users encounter a \"Permission denied\" or \"InstallFailed\" error when running the `elizaos create my-agent` command.\r\n\r\n## What kind of change is this?\r\n\r\nImprovements (misc. changes to existing features)  \r\nDocumentation update\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes require a change to the project documentation.  \r\nI have updated the documentation accordingly.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\nStart by reviewing the changes in the README.md file, specifically the section on creating a new project.\r\n\r\n## Detailed testing steps\r\n\r\n- Open the updated README.md.\r\n- Review the new instructions under \"Create Your First Project.\"\r\n- Confirm that the added note about using `sudo` is clear and helpful for users who encounter permission errors.",
              "type": null,
              "user": {
                "id": 32749185,
                "url": "https://api.github.com/users/mandatedisrael",
                "type": "User",
                "login": "mandatedisrael",
                "node_id": "MDQ6VXNlcjMyNzQ5MTg1",
                "html_url": "https://github.com/mandatedisrael",
                "gists_url": "https://api.github.com/users/mandatedisrael/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/mandatedisrael/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/32749185?v=4",
                "events_url": "https://api.github.com/users/mandatedisrael/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/mandatedisrael/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/mandatedisrael/followers",
                "following_url": "https://api.github.com/users/mandatedisrael/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/mandatedisrael/orgs",
                "subscriptions_url": "https://api.github.com/users/mandatedisrael/subscriptions",
                "received_events_url": "https://api.github.com/users/mandatedisrael/received_events"
              },
              "draft": false,
              "state": "open",
              "title": "Update README.md to fix error",
              "labels": [],
              "locked": false,
              "number": 5729,
              "node_id": "PR_kwDOMT5cIs6iiNWN",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/pull/5729",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T08:10:12Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/labels{/name}",
              "updated_at": "2025-08-07T08:10:24Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/comments",
              "pull_request": {
                "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5729",
                "diff_url": "https://github.com/elizaOS/eliza/pull/5729.diff",
                "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                "merged_at": null,
                "patch_url": "https://github.com/elizaOS/eliza/pull/5729.patch"
              },
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "FIRST_TIME_CONTRIBUTOR",
              "performed_via_github_app": null
            },
            {
              "id": 3299322983,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728",
              "body": "# Background\r\n\r\n## What does this PR do?\r\n\r\nIntroduce entity for cancelling runs `CancelRunSignal`\r\n\r\n## Why are we doing this? Any context or related work?\r\n\r\n- Calls to LLMs usually cost some credits\r\n- When we receive the `RUN_STARTED` event we can check current entity and end run to prevent credits spending\r\n\r\n# Documentation changes needed?\r\n\r\n## Methods\r\n\r\n- `static getSignal(runId: UUID)` - get signal by runId or create if null\r\n- `static clear(runId: UUID)` - clear signal from map\r\n- `cancel(content?: Content)` - cancel current run and and send `content` as a response to user\r\n\r\n## Example\r\n\r\n```typescript\r\nimport { Content, EventType, Plugin } from \"@elizaos/core\";\r\nimport { CancelRunSignal } from \"@elizaos/plugin-bootstrap\";\r\n\r\n// consider we have a service to determine eligibility for entity\r\ninterface EligibilityService {\r\n  check(entityId: UUID): Promise<{ result: boolean, reason?: Content }>\r\n}\r\n\r\nconst plugin: Plugin = {\r\n...\r\n  events: {\r\n    [EventType.RUN_STARTED]: ({ entityId, runId, runtime }) => {\r\n      const service = runtime.getService<EligibilityService>(\"USER_MANAGEMENT\");\r\n      const { result, reason } = await service.check(entityId);\r\n      \r\n      if (!result) {\r\n        const signal = CancelRunSignal.getSignal(runId);\r\n        signal.cancel(reason);\r\n      }\r\n    },\r\n    ...\r\n  },\r\n  ...\r\n}\r\n\r\nexport default Plugin;\r\n```\r\n\r\n## Discord username\r\n\r\nalexd000\r\n\r\n",
              "type": null,
              "user": {
                "id": 82507604,
                "url": "https://api.github.com/users/alex-nax",
                "type": "User",
                "login": "alex-nax",
                "node_id": "MDQ6VXNlcjgyNTA3NjA0",
                "html_url": "https://github.com/alex-nax",
                "gists_url": "https://api.github.com/users/alex-nax/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/alex-nax/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/82507604?v=4",
                "events_url": "https://api.github.com/users/alex-nax/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/alex-nax/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/alex-nax/followers",
                "following_url": "https://api.github.com/users/alex-nax/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/alex-nax/orgs",
                "subscriptions_url": "https://api.github.com/users/alex-nax/subscriptions",
                "received_events_url": "https://api.github.com/users/alex-nax/received_events"
              },
              "draft": false,
              "state": "open",
              "title": "feat: ability to cancel current run before any calls to LLM are made",
              "labels": [],
              "locked": false,
              "number": 5728,
              "node_id": "PR_kwDOMT5cIs6ihriD",
              "assignee": null,
              "comments": 3,
              "html_url": "https://github.com/elizaOS/eliza/pull/5728",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T07:19:35Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/labels{/name}",
              "updated_at": "2025-08-07T07:22:05Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/comments",
              "pull_request": {
                "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5728",
                "diff_url": "https://github.com/elizaOS/eliza/pull/5728.diff",
                "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                "merged_at": null,
                "patch_url": "https://github.com/elizaOS/eliza/pull/5728.patch"
              },
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "FIRST_TIME_CONTRIBUTOR",
              "performed_via_github_app": null
            },
            {
              "id": 3298692741,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727",
              "body": "# feat(scenarios): Implement natural language agent interaction and response validation\n\n## Description\n\nThis ticket enables scenarios to test agent behavior through natural language interactions rather than direct code execution. This allows testing of agent reasoning, decision-making, and response generation in realistic conversation contexts with proper evaluation of agent responses.\n\n## Acceptance Criteria\n\n1. Scenario `run` blocks support `input` field for natural language prompts to agents\n2. Agent responses are captured and available for evaluation (text, thoughts, actions)\n3. Evaluators can access both agent response text and execution context\n4. Support for multi-turn conversations in scenarios\n5. Agent responses include thought process and action decisions\n6. Integration with existing evaluation engine for response validation\n7. Support for conversation context across multiple steps\n8. Agent response timing and performance metrics\n\n## Technical Approach\n\n### 1. Enhanced Run Step Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst RunStepSchema = z.object({\n  name: z.string().optional(),\n  // Natural language input to agent\n  input: z.string().optional(),\n  // Direct code execution (existing)\n  lang: z.string().optional(),\n  code: z.string().optional(),\n  // Agent interaction specific\n  agent_context: z.object({\n    conversation_id: z.string().optional(),\n    user_id: z.string().optional(),\n    room_id: z.string().optional(),\n  }).optional(),\n  evaluations: z.array(EvaluationSchema),\n});\n```\n\n### 2. Agent Interaction Engine\n```typescript\n// packages/cli/src/scenarios/agent-interaction.ts\nexport class AgentInteractionEngine {\n  constructor(private runtime: IAgentRuntime) {}\n\n  async interactWithAgent(input: string, context?: AgentContext): Promise<AgentResponse> {\n    // Create message for agent\n    const message: Memory = {\n      entityId: context?.user_id || 'scenario-user',\n      roomId: context?.room_id || 'scenario-room',\n      content: {\n        type: 'text',\n        text: input,\n      },\n      metadata: {\n        type: 'message',\n        conversationId: context?.conversation_id,\n      },\n    };\n\n    // Send to agent and capture response\n    const startTime = Date.now();\n    const response = await this.runtime.processMessage(message);\n    const endTime = Date.now();\n\n    return {\n      text: response.text,\n      thoughts: response.thoughts,\n      actions: response.actions,\n      timing: {\n        startTime,\n        endTime,\n        duration: endTime - startTime,\n      },\n      context: {\n        conversationId: context?.conversation_id,\n        messageId: message.id,\n      },\n    };\n  }\n}\n```\n\n### 3. Enhanced Execution Result\n```typescript\n// packages/cli/src/scenarios/providers.ts\nexport interface ExecutionResult {\n  exitCode: number;\n  stdout: string;\n  stderr: string;\n  files: Record<string, string>;\n  // New: Agent interaction results\n  agentResponse?: AgentResponse;\n  conversationHistory?: AgentResponse[];\n}\n```\n\n## Test Scenario\n\nCreate `agent-interaction-test.scenario.yaml`:\n```yaml\nname: \"Agent Interaction Test\"\ndescription: \"Tests natural language interaction with agents\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Implement Dark Mode\"\n          number: 123\n          state: \"open\"\n          labels: [\"feature\", \"ui\"]\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"2.5\"\n\nrun:\n  - name: \"Ask agent about roadmap\"\n    input: \"What new features are you planning to add?\"\n    agent_context:\n      conversation_id: \"roadmap-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify agent searched for issues\"\n      \n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n        description: \"Verify agent mentioned the mocked issue\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent provide a helpful and coherent response about new features?\"\n        expected: \"yes\"\n        description: \"Verify agent response quality\"\n\n  - name: \"Ask agent about wallet\"\n    input: \"What's my current wallet balance?\"\n    agent_context:\n      conversation_id: \"wallet-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify agent checked wallet balance\"\n      \n      - type: \"string_contains\"\n        value: \"2.5 ETH\"\n        description: \"Verify agent reported the correct balance\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent clearly explain the wallet balance information?\"\n        expected: \"yes\"\n\n  - name: \"Multi-turn conversation\"\n    input: \"Can you help me with both my wallet and roadmap?\"\n    agent_context:\n      conversation_id: \"multi-turn-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"ETH\"\n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent address both wallet and roadmap questions comprehensively?\"\n        expected: \"yes\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Single Turn**: Test basic agent interaction and response\n2. **Multi-turn**: Test conversation context across steps\n3. **Action Tracking**: Verify agent uses appropriate actions\n4. **Response Quality**: Test LLM judge evaluation of responses\n5. **Performance**: Test response timing and metrics\n6. **Error Handling**: Test agent behavior with invalid inputs\n\n## Dependencies\n\n- Requires plugin system integration (Ticket 1)\n- Builds on advanced mocking system (Ticket 2)\n- Integrates with existing evaluation engine\n- Depends on agent runtime message processing",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement natural language agent interaction and response validation",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5727,
              "node_id": "I_kwDOMT5cIs7Eng6F",
              "assignee": null,
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5727",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:49:34Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/labels{/name}",
              "updated_at": "2025-08-07T05:35:40Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3298691383,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726",
              "body": "# feat(scenarios): Implement conditional mocking and complex response structures\n\n## Description\n\nThis ticket enhances the mocking system to support conditional responses based on input parameters and complex response structures with metadata. This enables realistic testing of service interactions like GitHub API calls or EVM transactions with proper request/response matching.\n\n## Acceptance Criteria\n\n1. Mock definitions support `when` clauses for conditional responses\n2. `when` clauses can match on method arguments, input parameters, or request context\n3. Mock responses support complex nested structures with metadata (timestamps, IDs, etc.)\n4. Multiple mock responses can be defined for the same service/method with different conditions\n5. Mock system provides clear logging of which mock was triggered and why\n6. Mock responses can include realistic error conditions and edge cases\n7. Support for dynamic response generation based on input parameters\n8. Mock validation ensures `when` clauses are syntactically correct\n\n## Technical Approach\n\n### 1. Enhanced Mock Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst MockSchema = z.object({\n  service: z.string(),\n  method: z.string(),\n  when: z.object({\n    // Match on method arguments\n    args: z.array(z.any()).optional(),\n    // Match on specific argument values\n    input: z.record(z.any()).optional(),\n    // Match on request context\n    context: z.record(z.any()).optional(),\n    // Custom matching function\n    matcher: z.string().optional(), // JavaScript expression\n  }).optional(),\n  response: z.any(), // Can be function or static value\n  // For dynamic responses\n  responseFn: z.string().optional(), // JavaScript function\n  // Error simulation\n  error: z.object({\n    code: z.string(),\n    message: z.string(),\n  }).optional(),\n});\n```\n\n### 2. Mock Engine Implementation\n```typescript\n// packages/cli/src/scenarios/mock-engine.ts\nexport class MockEngine {\n  private mocks: MockDefinition[] = [];\n\n  addMock(mock: MockDefinition) {\n    this.mocks.push(mock);\n  }\n\n  async findMock(service: string, method: string, args: any[]): Promise<any> {\n    const candidates = this.mocks.filter(m => \n      m.service === service && m.method === method\n    );\n\n    for (const mock of candidates) {\n      if (await this.matchesCondition(mock, args)) {\n        this.logger.info(`Mock triggered: ${service}.${method} with condition: ${JSON.stringify(mock.when)}`);\n        return this.generateResponse(mock, args);\n      }\n    }\n\n    return null; // No mock found\n  }\n\n  private async matchesCondition(mock: MockDefinition, args: any[]): Promise<boolean> {\n    if (!mock.when) return true; // Default mock\n\n    // Match on arguments\n    if (mock.when.args) {\n      if (!this.deepEqual(args, mock.when.args)) return false;\n    }\n\n    // Match on input parameters\n    if (mock.when.input) {\n      const input = this.extractInputFromArgs(args);\n      if (!this.deepEqual(input, mock.when.input)) return false;\n    }\n\n    // Custom matcher function\n    if (mock.when.matcher) {\n      const matcherFn = new Function('args', 'input', mock.when.matcher);\n      return matcherFn(args, this.extractInputFromArgs(args));\n    }\n\n    return true;\n  }\n\n  private generateResponse(mock: MockDefinition, args: any[]): any {\n    if (mock.error) {\n      throw new Error(`${mock.error.code}: ${mock.error.message}`);\n    }\n\n    if (mock.responseFn) {\n      const responseFn = new Function('args', 'input', mock.responseFn);\n      return responseFn(args, this.extractInputFromArgs(args));\n    }\n\n    return mock.response;\n  }\n}\n```\n\n## Test Scenario\n\nCreate `advanced-mocking-test.scenario.yaml`:\n```yaml\nname: \"Advanced Mocking Test\"\ndescription: \"Tests conditional mocking and complex response structures\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    # Conditional GitHub issue search\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"bug\"\n        matcher: \"input.labels.includes('bug')\"\n      response:\n        - title: \"Critical Bug Found\"\n          number: 456\n          state: \"open\"\n          labels: [\"bug\", \"critical\"]\n          created_at: \"2024-07-15T10:00:00Z\"\n\n    # Conditional GitHub issue search - different response\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"feature\"\n        matcher: \"input.labels.includes('feature')\"\n      response:\n        - title: \"New Feature Request\"\n          number: 789\n          state: \"open\"\n          labels: [\"feature\", \"enhancement\"]\n          created_at: \"2024-07-15T11:00:00Z\"\n\n    # Dynamic EVM balance response\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      when:\n        args: [\"0x1234567890abcdef\"]\n      responseFn: |\n        return {\n          chain: \"ethereum\",\n          address: args[0],\n          balances: [\n            { symbol: \"ETH\", amount: \"1.23\" },\n            { symbol: \"USDC\", amount: \"1000.00\" }\n          ],\n          last_updated: new Date().toISOString()\n        }\n\n    # Error simulation\n    - service: \"github-service\"\n      method: \"readFile\"\n      when:\n        input:\n          path: \"/docs/nonexistent.md\"\n      error:\n        code: \"FILE_NOT_FOUND\"\n        message: \"File does not exist\"\n\nrun:\n  - name: \"Test conditional GitHub search\"\n    input: \"Search for issues with bug label\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"Critical Bug Found\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent correctly search for bug issues?\"\n        expected: \"yes\"\n\n  - name: \"Test dynamic EVM response\"\n    input: \"What's the balance for address 0x1234567890abcdef?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n      - type: \"string_contains\"\n        value: \"1000.00 USDC\"\n\n  - name: \"Test error handling\"\n    input: \"Read the file /docs/nonexistent.md\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.readFile\"\n      - type: \"string_contains\"\n        value: \"File does not exist\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Conditional Matching**: Test different responses based on input parameters\n2. **Dynamic Responses**: Test response generation based on arguments\n3. **Error Simulation**: Test error handling and reporting\n4. **Complex Structures**: Test nested response objects with metadata\n5. **Multiple Mocks**: Test multiple mocks for same service/method\n6. **Logging**: Verify mock selection is logged clearly\n\n## Dependencies\n\n- Builds on existing mock system in scenarios\n- Requires plugin system integration (Ticket 1)\n- Integrates with agent interaction testing (Ticket 3) ",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement conditional mocking and complex response structures",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5726,
              "node_id": "I_kwDOMT5cIs7Engk3",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5726",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:49:00Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/labels{/name}",
              "updated_at": "2025-08-07T05:32:53Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3298689704,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725",
              "body": "# feat(scenarios): Implement plugin specification and dynamic loading\n\n## Description\n\nThis ticket implements plugin specification in scenario YAML files, allowing scenarios to declare which plugins are required for testing. This enables testing of agent behaviors that depend on specific plugins like `@elizaos/plugin-github` or `@elizaos/plugin-evm`. The system will dynamically load specified plugins during scenario execution and make their actions, providers, and services available to the agent.\n\n## Acceptance Criteria\n\n1. Scenario YAML supports a `plugins` array at the root level with string plugin names\n2. The `initializeAgent()` function respects scenario plugin specifications and loads them via `startAgent()`\n3. Plugin loading follows the same dependency resolution and error handling as the main CLI\n4. Scenarios can specify both string plugin names (`@elizaos/plugin-github`) and direct plugin objects\n5. Plugin loading errors are clearly reported with actionable guidance\n6. Default plugins (bootstrap, sql) are automatically included unless explicitly excluded via `exclude_defaults: true`\n7. Plugin conflicts are detected and reported during scenario validation\n8. Plugin initialization errors don't crash the scenario but are reported in results\n\n## Technical Approach\n\n### 1. Update Scenario Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst ScenarioSchema = z.object({\n  name: z.string(),\n  description: z.string(),\n  plugins: z.array(z.string()).optional(), // e.g., [\"@elizaos/plugin-github\"]\n  exclude_defaults: z.boolean().optional(), // exclude bootstrap/sql\n  environment: EnvironmentSchema,\n  setup: SetupSchema.optional(),\n  run: z.array(RunStepSchema),\n  judgment: JudgmentSchema,\n});\n```\n\n### 2. Enhance Runtime Factory\n```typescript\n// packages/cli/src/scenarios/runtime-factory.ts\nexport async function initializeAgent(scenario: Scenario): Promise<IAgentRuntime> {\n  const character: Character = {\n    name: 'scenario-runner',\n    id: stringToUuid('scenario-runner'),\n    bio: 'A minimal character for running scenarios',\n    plugins: scenario.plugins || []\n  };\n\n  // Load default plugins unless excluded\n  if (!scenario.exclude_defaults) {\n    character.plugins.push('@elizaos/plugin-bootstrap', '@elizaos/plugin-sql');\n  }\n\n  const runtime = await startAgent(\n    encryptedCharacter(character),\n    server,\n    undefined,\n    character.plugins,\n    { isTestMode: true }\n  );\n\n  return runtime;\n}\n```\n\n### 3. Plugin Validation\n```typescript\n// packages/cli/src/scenarios/plugin-validator.ts\nexport async function validateScenarioPlugins(scenario: Scenario): Promise<ValidationResult[]> {\n  const results: ValidationResult[] = [];\n  \n  for (const pluginName of scenario.plugins || []) {\n    try {\n      const plugin = await loadAndPreparePlugin(pluginName);\n      if (!plugin) {\n        results.push({\n          type: 'error',\n          message: `Plugin '${pluginName}' could not be loaded`,\n          suggestion: 'Check if plugin is installed or built correctly'\n        });\n      }\n    } catch (error) {\n      results.push({\n        type: 'error', \n        message: `Failed to validate plugin '${pluginName}': ${error.message}`,\n        suggestion: 'Verify plugin dependencies and configuration'\n      });\n    }\n  }\n  \n  return results;\n}\n```\n\n## Test Scenario\n\nCreate `plugin-integration-test.scenario.yaml`:\n```yaml\nname: \"Plugin Integration Test\"\ndescription: \"Tests loading and using plugins specified in scenario YAML\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Test Issue\"\n          number: 123\n          state: \"open\"\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"1.23\"\n\nrun:\n  - name: \"Test GitHub plugin actions\"\n    input: \"Search for issues with label 'bug'\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify GitHub plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"Test Issue\"\n        description: \"Verify agent found the mocked issue\"\n\n  - name: \"Test EVM plugin actions\"\n    input: \"What's my wallet balance?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify EVM plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n        description: \"Verify agent reported the mocked balance\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Plugin Loading Test**: Verify plugins load without errors\n2. **Action Availability Test**: Confirm agent can use plugin actions\n3. **Error Handling Test**: Test with non-existent plugin\n4. **Default Plugin Test**: Verify bootstrap/sql are included by default\n5. **Exclusion Test**: Test `exclude_defaults: true` behavior\n\n## Dependencies\n\n- Fixes the `startAgent` hanging issue (#5719) to enable plugin testing\n- Builds on existing `loadAndPreparePlugin` functionality\n- Integrates with current scenario execution flow ",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement plugin specification and dynamic loading",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5725,
              "node_id": "I_kwDOMT5cIs7EngKo",
              "assignee": null,
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5725",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:48:08Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/labels{/name}",
              "updated_at": "2025-08-07T05:37:32Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            }
          ]
        },
        "text": "Open issues for elizaOS/eliza (10 shown):\n‚Ä¢ #5754: Critical: Plugin Publishing Fails with False Success Reports (open) [bug]\n‚Ä¢ #5749: Implement Runtime Method Mocking for Deterministic Agent Testing (open) [enhancement, testing, Reality Spiral]\n‚Ä¢ #5747: Fixing bugs in eliza-cloud (open)\n‚Ä¢ #5738: üêõ Build failure in @elizaos/core causing bun run clean to fail (open) [bug]\n‚Ä¢ #5734: Eliza CLI failed to build project (open) [bug]\n‚Ä¢ #5729: Update README.md to fix error (open)\n‚Ä¢ #5728: feat: ability to cancel current run before any calls to LLM are made (open)\n‚Ä¢ #5727: feat(scenarios): Implement natural language agent interaction and response validation (open) [enhancement, Reality Spiral]\n‚Ä¢ #5726: feat(scenarios): Implement conditional mocking and complex response structures (open) [enhancement, Reality Spiral]\n‚Ä¢ #5725: feat(scenarios): Implement plugin specification and dynamic loading (open) [enhancement, Reality Spiral]",
        "values": {
          "issues": [
            {
              "id": 3310285907,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754",
              "body": "## Issue Summary\nThe `elizaos publish --npm` command reports successful publishing but the plugin is not actually published to npm, despite showing success messages. The npm publish is failing with a 404 error, but the ElizaOS CLI incorrectly reports success.\n\n## Key Problems Identified\n\n### 1. Critical NPM Publishing Failure\n- **Error**: `npm error 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found`\n- **Issue**: The package scope `@elizaos` doesn't exist on npm, preventing publishing\n- **Impact**: Package cannot be published to npm, but CLI reports success\n\n### 2. False Success Reporting\n- **Issue**: CLI reports `[‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm`\n- **Reality**: npm publish failed with 404 error\n- **Impact**: Developers believe their plugin is published when it's not\n\n### 3. Registry Repository Mismatch\n- **Expected**: Should create PR against `https://github.com/elizaos-plugins/registry`\n- **Actual**: Still references old registry `https://github.com/elizaos/registry`\n- **Impact**: Plugin won't appear in the official ElizaOS registry\n\n## Steps to Reproduce\n\n```bash\n# Navigate to the plugin directory\ncd packages/plugin-polygon\n\n# Ensure you're on the correct branch with the changes\ngit checkout polygon\n\n# Run the publish command\nelizaos publish --npm\n\n# Verify the success message appears\n# [‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm\n\n# Check if package actually exists on npm\nnpm view @elizaos/plugin-polygon@1.0.0\n# Result: 404 Not Found - '@elizaos/plugin-polygon@1.0.0' is not in this registry\n```\n\n## Technical Details\n\n### NPM Error Analysis\nThe npm logs show the root cause:\n```\nhttp fetch PUT 404 https://registry.npmjs.org/@elizaos%2fplugin-polygon 507ms\nerror 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found\n```\n\nThis indicates that the `@elizaos` scope doesn't exist on npm, which is required for publishing scoped packages.\n\n### CLI Error Handling Failure\nThe ElizaOS CLI is not properly parsing npm error codes:\n- npm returns exit code 1 (failure)\n- CLI ignores the error and reports success\n- No validation that the package actually exists on npm\n\n## Expected Behavior\n1. CLI should detect npm publish failures (exit code 1)\n2. CLI should fail with clear error message when package scope doesn't exist\n3. CLI should validate that package actually exists on npm after publishing\n4. CLI should create PRs against the correct registry repository\n\n## Recommended Fixes\n\n### 1. Fix NPM Error Detection\n```typescript\n// In the publish command, check npm exit code\nconst npmResult = await exec('npm publish', { cwd: pluginDir });\nif (npmResult.exitCode !== 0) {\n  throw new Error(`NPM publish failed: ${npmResult.stderr}`);\n}\n```\n\n### 2. Add Package Scope Validation\n```typescript\n// Before publishing, check if scope exists\nconst scopeExists = await checkNpmScope('@elizaos');\nif (!scopeExists) {\n  throw new Error('Package scope @elizaos does not exist on npm. Contact npm support to create the scope.');\n}\n```\n\n### 3. Add Post-Publish Validation\n```typescript\n// After publishing, verify package exists\nconst packageExists = await checkPackageExists(packageName, version);\nif (!packageExists) {\n  throw new Error(`Package was not published successfully. Check npm logs for details.`);\n}\n```\n\n## Priority\n**Critical** - This completely blocks plugin publishing and creates false success reports.\n\n## Affected Components\n- `packages/cli/src/commands/publish.ts`\n- NPM publishing logic\n- Error handling and success reporting\n- Package scope validation\n- Registry repository configuration\n\n## Immediate Action Required\n1. **Create the `@elizaos` scope on npm** or use an existing scope\n2. Update CLI to properly detect and handle npm publish failures\n3. Add post-publish validation to ensure packages actually exist on npm\n4. Update registry repository configuration\n\n## Alternative Solutions\n1. **Use existing scope**: Change package name to `@monilpat/plugin-polygon`\n2. **Create organization scope**: Set up `@elizaos` organization on npm\n3. **Use unscoped package**: Publish as `elizaos-plugin-polygon`\n\nThis issue is critically blocking plugin developers from successfully publishing their work and needs immediate attention from the ElizaOS team.\n",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "Critical: Plugin Publishing Fails with False Success Reports",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5754,
              "node_id": "I_kwDOMT5cIs7FTvRT",
              "assignee": null,
              "comments": 0,
              "html_url": "https://github.com/elizaOS/eliza/issues/5754",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-11T14:20:08Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/labels{/name}",
              "updated_at": "2025-08-11T14:20:08Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3308102900,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749",
              "body": "### Problem Statement\nCurrently, ElizaOS scenario testing lacks the ability to mock internal agent runtime calls (particularly LLM interactions) when testing via the API client. This makes it difficult to create deterministic tests for agent behavior and workflows.\n\n### Current Limitations\n- Global function mocks only work for code executed in the same process\n- No way to intercept `runtime.useModel` calls from the bootstrap plugin\n- Agent behavior is non-deterministic due to real LLM calls\n- Difficult to test specific agent decision paths and responses\n\n### Why Different Approach Was Needed\n\nThe existing mocking system was designed for **code execution environments** (E2B sandbox and local `node -e` processes), where mocks are applied to the execution context. However, **agent testing** works differently:\n\n- **E2B/Local Execution**: Code runs in isolated processes/sandboxes where global mocks can be applied\n- **Agent Testing**: Agent runs as a service with API client interaction, requiring direct runtime method interception\n- **Architecture Gap**: The bootstrap plugin calls `runtime.useModel` internally, which can't be mocked through the execution environment approach\n\nThis architectural difference necessitated a new approach that directly intercepts runtime methods rather than relying on execution context mocking.\n\n### Proposed Solution: Runtime Method Mocking\n\nWe've implemented a new mocking approach that directly intercepts `IAgentRuntime` method calls:\n\n#### Key Components\n\n1. **MockEngine Enhancement**\n   - Added `runtimeMethodMocks` to support mocking runtime methods\n   - Priority system: `runtimeMethod` > `service` > `globalFunction`\n   - Direct method replacement on the runtime instance\n\n2. **Schema Updates**\n   - Extended `MockSchema` to include `runtimeMethod: z.string().optional()`\n   - Supports mocking any `IAgentRuntime` method (e.g., `useModel`, `getService`)\n\n3. **Conditional Matching**\n   - Matcher functions can inspect method arguments\n   - Example: `\"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"`\n   - Supports complex conditional logic for when to apply mocks\n\n#### Usage Example\n\n```yaml\nsetup:\n  mocks:\n    - runtimeMethod: \"useModel\"\n      method: \"useModel\"\n      when:\n        matcher: \"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"\n      response: \"<response><name>agent</name><reasoning>Mocked response</reasoning><action>RESPOND</action></response>\"\n```\n\n#### Benefits\n\n1. **Deterministic Testing**: Replace LLM calls with static responses\n2. **Full Workflow Testing**: Test complete agent decision flows\n3. **Conditional Mocking**: Apply mocks based on specific conditions\n4. **Runtime Integration**: Works seamlessly with existing agent architecture\n5. **Backward Compatibility**: Existing mocks continue to work\n\n#### Implementation Steps\n\n- MockEngine runtime method support\n- Schema updates for runtimeMethod mocks\n- Conditional matching with matcher functions\n- Integration with scenario runner\n- Basic useModel mocking working\n- Add support for mocking other runtime methods (getService, etc.)\n- Create comprehensive test scenarios\n- Add documentation and examples\n- Consider adding mock recording/replay capabilities\n\n### Technical Details\n\nThe implementation works by:\n1. Creating the `IAgentRuntime` instance in the scenario runner\n2. Applying mocks directly to the runtime object before agent initialization\n3. The bootstrap plugin receives the mocked runtime and uses the mocked methods\n4. Mocks are reverted after scenario completion\n\nThis approach provides the foundation for robust, deterministic agent testing while maintaining the existing architecture.",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "Implement Runtime Method Mocking for Deterministic Agent Testing",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 7668252177,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/testing",
                  "name": "testing",
                  "color": "2D3957",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAAByRA-EQ",
                  "description": ""
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5749,
              "node_id": "I_kwDOMT5cIs7FLaT0",
              "assignee": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "comments": 0,
              "html_url": "https://github.com/elizaOS/eliza/issues/5749",
              "assignees": [
                {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-11T00:08:49Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/labels{/name}",
              "updated_at": "2025-08-11T00:09:37Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3304516859,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747",
              "body": null,
              "type": null,
              "user": {
                "id": 48334430,
                "url": "https://api.github.com/users/samarth30",
                "type": "User",
                "login": "samarth30",
                "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                "html_url": "https://github.com/samarth30",
                "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/samarth30/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/samarth30/followers",
                "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/samarth30/orgs",
                "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                "received_events_url": "https://api.github.com/users/samarth30/received_events"
              },
              "state": "open",
              "title": "Fixing bugs in eliza-cloud",
              "labels": [],
              "locked": false,
              "number": 5747,
              "node_id": "I_kwDOMT5cIs7E9uz7",
              "assignee": {
                "id": 48334430,
                "url": "https://api.github.com/users/samarth30",
                "type": "User",
                "login": "samarth30",
                "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                "html_url": "https://github.com/samarth30",
                "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/samarth30/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/samarth30/followers",
                "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/samarth30/orgs",
                "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                "received_events_url": "https://api.github.com/users/samarth30/received_events"
              },
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5747",
              "assignees": [
                {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-08T16:01:56Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/labels{/name}",
              "updated_at": "2025-08-08T19:02:49Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "MEMBER",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": {
                "id": 20150,
                "name": "Linear",
                "slug": "linear",
                "owner": {
                  "id": 46686594,
                  "url": "https://api.github.com/users/linear",
                  "type": "Organization",
                  "login": "linear",
                  "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ2Njg2NTk0",
                  "html_url": "https://github.com/linear",
                  "gists_url": "https://api.github.com/users/linear/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/linear/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/46686594?v=4",
                  "events_url": "https://api.github.com/users/linear/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/linear/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/linear/followers",
                  "following_url": "https://api.github.com/users/linear/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/linear/orgs",
                  "subscriptions_url": "https://api.github.com/users/linear/subscriptions",
                  "received_events_url": "https://api.github.com/users/linear/received_events"
                },
                "events": [
                  "check_suite",
                  "issues",
                  "issue_comment",
                  "pull_request",
                  "pull_request_review",
                  "repository",
                  "sub_issues"
                ],
                "node_id": "MDM6QXBwMjAxNTA=",
                "html_url": "https://github.com/apps/linear",
                "client_id": "Iv1.085d682ea245c945",
                "created_at": "2018-11-02T18:07:23Z",
                "updated_at": "2025-02-07T14:59:56Z",
                "description": "",
                "permissions": {
                  "checks": "read",
                  "issues": "write",
                  "metadata": "read",
                  "pull_requests": "write"
                },
                "external_url": "https://linear.app"
              }
            },
            {
              "id": 3302237103,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738",
              "body": "## Description\n\nThe `bun run clean` command is failing due to TypeScript errors in `@elizaos/core` package during the DTS (type definition) build phase.\n\n## Error Details\n\n### Build Process\n```\n‚Ä¢ Running build in 17 packages\n‚Ä¢ Remote caching disabled\n@elizaos/config:build: cache miss\n@elizaos/autodoc:build: cache miss\n@elizaos/core:build: cache miss\n```\n\n### TypeScript Errors in @elizaos/core/src/utils.ts\n1. Line 218: `error TS2345: Argument of type '`${string}-${string}-${string}-${string}-${string}`' is not assignable to parameter of type 'never'.`\n2. Line 366: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n3. Line 409: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n4. Line 536: `error TS2345: Argument of type '{ numberOfChunks: number; averageChunkSize: number; }' is not assignable to parameter of type 'never'.`\n\n### Impact\n- Blocks `bun run clean` command\n- Prevents successful build of `@elizaos/core`\n- Affects dependent packages in the monorepo\n\n## Steps to Reproduce\n1. Run `bun run clean`\n2. Observe build failure in `@elizaos/core`\n3. Build fails with TypeScript errors during DTS generation\n\n## Expected Behavior\n- `bun run clean` should complete successfully\n- `@elizaos/core` should build without TypeScript errors\n- Type definitions should be generated correctly\n\n## Suggested Fix\n\nThe errors suggest type mismatches in `utils.ts`. Need to:\n1. Review type definitions in affected lines\n2. Update type assertions or generic constraints\n3. Ensure string template literal types are properly handled\n4. Fix object type assignments\n\n### Files to Update\n- `packages/core/src/utils.ts`\n\n## Priority\n**HIGH** - This is blocking clean builds and potentially affecting development workflow.",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "üêõ Build failure in @elizaos/core causing bun run clean to fail",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5738,
              "node_id": "I_kwDOMT5cIs7E1COv",
              "assignee": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5738",
              "assignees": [
                {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-08T00:26:11Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/labels{/name}",
              "updated_at": "2025-08-11T14:56:01Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3301116813,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734",
              "body": "**Describe the bug**\n\nOn project creation, ElizaOS CLI fails with the following error:\n```\n‚óá  Failed to build project\nstdout: src/index.ts(7,25): error TS2345: Argument of type 'string' is not assignable to parameter of type 'undefined'.\nstderr: $ tsc --noEmit && vite build && tsup\n```\n\n**To Reproduce**\n\n- Install ElizaOS through `bun`\n```\nbun i -g @elizaos/cli\n```\n- Create new ElizaOS project\n```\nelizaos create abcde\n```\n\n**Expected behavior**\n\nProject built successfully\n\n**Screenshots**\n\n<img width=\"1095\" height=\"572\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/967dd6a2-0d70-4e2e-8019-85a2eab5f225\" />\n\n**Additional context**\n\nElizaOS CLI version: `1.3.2`\n",
              "type": null,
              "user": {
                "id": 74447600,
                "url": "https://api.github.com/users/Kemystra",
                "type": "User",
                "login": "Kemystra",
                "node_id": "MDQ6VXNlcjc0NDQ3NjAw",
                "html_url": "https://github.com/Kemystra",
                "gists_url": "https://api.github.com/users/Kemystra/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/Kemystra/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/74447600?v=4",
                "events_url": "https://api.github.com/users/Kemystra/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/Kemystra/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/Kemystra/followers",
                "following_url": "https://api.github.com/users/Kemystra/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/Kemystra/orgs",
                "subscriptions_url": "https://api.github.com/users/Kemystra/subscriptions",
                "received_events_url": "https://api.github.com/users/Kemystra/received_events"
              },
              "state": "open",
              "title": "Eliza CLI failed to build project",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5734,
              "node_id": "I_kwDOMT5cIs7EwwuN",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5734",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T16:14:00Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/labels{/name}",
              "updated_at": "2025-08-08T19:43:52Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "NONE",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3299481897,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729",
              "body": "# Relates to\r\n\r\nN/A (Documentation improvement, not tied to a specific issue or ticket)\r\n\r\n# Risks\r\n\r\nLow.  \r\nThis change only updates documentation and does not affect any code or functionality.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR updates the elizaos README to include a fix for installation errors that may occur due to permission issues. It adds a note suggesting the use of sudo if users encounter a \"Permission denied\" or \"InstallFailed\" error when running the `elizaos create my-agent` command.\r\n\r\n## What kind of change is this?\r\n\r\nImprovements (misc. changes to existing features)  \r\nDocumentation update\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes require a change to the project documentation.  \r\nI have updated the documentation accordingly.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\nStart by reviewing the changes in the README.md file, specifically the section on creating a new project.\r\n\r\n## Detailed testing steps\r\n\r\n- Open the updated README.md.\r\n- Review the new instructions under \"Create Your First Project.\"\r\n- Confirm that the added note about using `sudo` is clear and helpful for users who encounter permission errors.",
              "type": null,
              "user": {
                "id": 32749185,
                "url": "https://api.github.com/users/mandatedisrael",
                "type": "User",
                "login": "mandatedisrael",
                "node_id": "MDQ6VXNlcjMyNzQ5MTg1",
                "html_url": "https://github.com/mandatedisrael",
                "gists_url": "https://api.github.com/users/mandatedisrael/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/mandatedisrael/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/32749185?v=4",
                "events_url": "https://api.github.com/users/mandatedisrael/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/mandatedisrael/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/mandatedisrael/followers",
                "following_url": "https://api.github.com/users/mandatedisrael/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/mandatedisrael/orgs",
                "subscriptions_url": "https://api.github.com/users/mandatedisrael/subscriptions",
                "received_events_url": "https://api.github.com/users/mandatedisrael/received_events"
              },
              "draft": false,
              "state": "open",
              "title": "Update README.md to fix error",
              "labels": [],
              "locked": false,
              "number": 5729,
              "node_id": "PR_kwDOMT5cIs6iiNWN",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/pull/5729",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T08:10:12Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/labels{/name}",
              "updated_at": "2025-08-07T08:10:24Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/comments",
              "pull_request": {
                "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5729",
                "diff_url": "https://github.com/elizaOS/eliza/pull/5729.diff",
                "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                "merged_at": null,
                "patch_url": "https://github.com/elizaOS/eliza/pull/5729.patch"
              },
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "FIRST_TIME_CONTRIBUTOR",
              "performed_via_github_app": null
            },
            {
              "id": 3299322983,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728",
              "body": "# Background\r\n\r\n## What does this PR do?\r\n\r\nIntroduce entity for cancelling runs `CancelRunSignal`\r\n\r\n## Why are we doing this? Any context or related work?\r\n\r\n- Calls to LLMs usually cost some credits\r\n- When we receive the `RUN_STARTED` event we can check current entity and end run to prevent credits spending\r\n\r\n# Documentation changes needed?\r\n\r\n## Methods\r\n\r\n- `static getSignal(runId: UUID)` - get signal by runId or create if null\r\n- `static clear(runId: UUID)` - clear signal from map\r\n- `cancel(content?: Content)` - cancel current run and and send `content` as a response to user\r\n\r\n## Example\r\n\r\n```typescript\r\nimport { Content, EventType, Plugin } from \"@elizaos/core\";\r\nimport { CancelRunSignal } from \"@elizaos/plugin-bootstrap\";\r\n\r\n// consider we have a service to determine eligibility for entity\r\ninterface EligibilityService {\r\n  check(entityId: UUID): Promise<{ result: boolean, reason?: Content }>\r\n}\r\n\r\nconst plugin: Plugin = {\r\n...\r\n  events: {\r\n    [EventType.RUN_STARTED]: ({ entityId, runId, runtime }) => {\r\n      const service = runtime.getService<EligibilityService>(\"USER_MANAGEMENT\");\r\n      const { result, reason } = await service.check(entityId);\r\n      \r\n      if (!result) {\r\n        const signal = CancelRunSignal.getSignal(runId);\r\n        signal.cancel(reason);\r\n      }\r\n    },\r\n    ...\r\n  },\r\n  ...\r\n}\r\n\r\nexport default Plugin;\r\n```\r\n\r\n## Discord username\r\n\r\nalexd000\r\n\r\n",
              "type": null,
              "user": {
                "id": 82507604,
                "url": "https://api.github.com/users/alex-nax",
                "type": "User",
                "login": "alex-nax",
                "node_id": "MDQ6VXNlcjgyNTA3NjA0",
                "html_url": "https://github.com/alex-nax",
                "gists_url": "https://api.github.com/users/alex-nax/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/alex-nax/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/82507604?v=4",
                "events_url": "https://api.github.com/users/alex-nax/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/alex-nax/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/alex-nax/followers",
                "following_url": "https://api.github.com/users/alex-nax/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/alex-nax/orgs",
                "subscriptions_url": "https://api.github.com/users/alex-nax/subscriptions",
                "received_events_url": "https://api.github.com/users/alex-nax/received_events"
              },
              "draft": false,
              "state": "open",
              "title": "feat: ability to cancel current run before any calls to LLM are made",
              "labels": [],
              "locked": false,
              "number": 5728,
              "node_id": "PR_kwDOMT5cIs6ihriD",
              "assignee": null,
              "comments": 3,
              "html_url": "https://github.com/elizaOS/eliza/pull/5728",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T07:19:35Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/labels{/name}",
              "updated_at": "2025-08-07T07:22:05Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/comments",
              "pull_request": {
                "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5728",
                "diff_url": "https://github.com/elizaOS/eliza/pull/5728.diff",
                "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                "merged_at": null,
                "patch_url": "https://github.com/elizaOS/eliza/pull/5728.patch"
              },
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "FIRST_TIME_CONTRIBUTOR",
              "performed_via_github_app": null
            },
            {
              "id": 3298692741,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727",
              "body": "# feat(scenarios): Implement natural language agent interaction and response validation\n\n## Description\n\nThis ticket enables scenarios to test agent behavior through natural language interactions rather than direct code execution. This allows testing of agent reasoning, decision-making, and response generation in realistic conversation contexts with proper evaluation of agent responses.\n\n## Acceptance Criteria\n\n1. Scenario `run` blocks support `input` field for natural language prompts to agents\n2. Agent responses are captured and available for evaluation (text, thoughts, actions)\n3. Evaluators can access both agent response text and execution context\n4. Support for multi-turn conversations in scenarios\n5. Agent responses include thought process and action decisions\n6. Integration with existing evaluation engine for response validation\n7. Support for conversation context across multiple steps\n8. Agent response timing and performance metrics\n\n## Technical Approach\n\n### 1. Enhanced Run Step Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst RunStepSchema = z.object({\n  name: z.string().optional(),\n  // Natural language input to agent\n  input: z.string().optional(),\n  // Direct code execution (existing)\n  lang: z.string().optional(),\n  code: z.string().optional(),\n  // Agent interaction specific\n  agent_context: z.object({\n    conversation_id: z.string().optional(),\n    user_id: z.string().optional(),\n    room_id: z.string().optional(),\n  }).optional(),\n  evaluations: z.array(EvaluationSchema),\n});\n```\n\n### 2. Agent Interaction Engine\n```typescript\n// packages/cli/src/scenarios/agent-interaction.ts\nexport class AgentInteractionEngine {\n  constructor(private runtime: IAgentRuntime) {}\n\n  async interactWithAgent(input: string, context?: AgentContext): Promise<AgentResponse> {\n    // Create message for agent\n    const message: Memory = {\n      entityId: context?.user_id || 'scenario-user',\n      roomId: context?.room_id || 'scenario-room',\n      content: {\n        type: 'text',\n        text: input,\n      },\n      metadata: {\n        type: 'message',\n        conversationId: context?.conversation_id,\n      },\n    };\n\n    // Send to agent and capture response\n    const startTime = Date.now();\n    const response = await this.runtime.processMessage(message);\n    const endTime = Date.now();\n\n    return {\n      text: response.text,\n      thoughts: response.thoughts,\n      actions: response.actions,\n      timing: {\n        startTime,\n        endTime,\n        duration: endTime - startTime,\n      },\n      context: {\n        conversationId: context?.conversation_id,\n        messageId: message.id,\n      },\n    };\n  }\n}\n```\n\n### 3. Enhanced Execution Result\n```typescript\n// packages/cli/src/scenarios/providers.ts\nexport interface ExecutionResult {\n  exitCode: number;\n  stdout: string;\n  stderr: string;\n  files: Record<string, string>;\n  // New: Agent interaction results\n  agentResponse?: AgentResponse;\n  conversationHistory?: AgentResponse[];\n}\n```\n\n## Test Scenario\n\nCreate `agent-interaction-test.scenario.yaml`:\n```yaml\nname: \"Agent Interaction Test\"\ndescription: \"Tests natural language interaction with agents\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Implement Dark Mode\"\n          number: 123\n          state: \"open\"\n          labels: [\"feature\", \"ui\"]\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"2.5\"\n\nrun:\n  - name: \"Ask agent about roadmap\"\n    input: \"What new features are you planning to add?\"\n    agent_context:\n      conversation_id: \"roadmap-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify agent searched for issues\"\n      \n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n        description: \"Verify agent mentioned the mocked issue\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent provide a helpful and coherent response about new features?\"\n        expected: \"yes\"\n        description: \"Verify agent response quality\"\n\n  - name: \"Ask agent about wallet\"\n    input: \"What's my current wallet balance?\"\n    agent_context:\n      conversation_id: \"wallet-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify agent checked wallet balance\"\n      \n      - type: \"string_contains\"\n        value: \"2.5 ETH\"\n        description: \"Verify agent reported the correct balance\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent clearly explain the wallet balance information?\"\n        expected: \"yes\"\n\n  - name: \"Multi-turn conversation\"\n    input: \"Can you help me with both my wallet and roadmap?\"\n    agent_context:\n      conversation_id: \"multi-turn-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"ETH\"\n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent address both wallet and roadmap questions comprehensively?\"\n        expected: \"yes\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Single Turn**: Test basic agent interaction and response\n2. **Multi-turn**: Test conversation context across steps\n3. **Action Tracking**: Verify agent uses appropriate actions\n4. **Response Quality**: Test LLM judge evaluation of responses\n5. **Performance**: Test response timing and metrics\n6. **Error Handling**: Test agent behavior with invalid inputs\n\n## Dependencies\n\n- Requires plugin system integration (Ticket 1)\n- Builds on advanced mocking system (Ticket 2)\n- Integrates with existing evaluation engine\n- Depends on agent runtime message processing",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement natural language agent interaction and response validation",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5727,
              "node_id": "I_kwDOMT5cIs7Eng6F",
              "assignee": null,
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5727",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:49:34Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/labels{/name}",
              "updated_at": "2025-08-07T05:35:40Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3298691383,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726",
              "body": "# feat(scenarios): Implement conditional mocking and complex response structures\n\n## Description\n\nThis ticket enhances the mocking system to support conditional responses based on input parameters and complex response structures with metadata. This enables realistic testing of service interactions like GitHub API calls or EVM transactions with proper request/response matching.\n\n## Acceptance Criteria\n\n1. Mock definitions support `when` clauses for conditional responses\n2. `when` clauses can match on method arguments, input parameters, or request context\n3. Mock responses support complex nested structures with metadata (timestamps, IDs, etc.)\n4. Multiple mock responses can be defined for the same service/method with different conditions\n5. Mock system provides clear logging of which mock was triggered and why\n6. Mock responses can include realistic error conditions and edge cases\n7. Support for dynamic response generation based on input parameters\n8. Mock validation ensures `when` clauses are syntactically correct\n\n## Technical Approach\n\n### 1. Enhanced Mock Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst MockSchema = z.object({\n  service: z.string(),\n  method: z.string(),\n  when: z.object({\n    // Match on method arguments\n    args: z.array(z.any()).optional(),\n    // Match on specific argument values\n    input: z.record(z.any()).optional(),\n    // Match on request context\n    context: z.record(z.any()).optional(),\n    // Custom matching function\n    matcher: z.string().optional(), // JavaScript expression\n  }).optional(),\n  response: z.any(), // Can be function or static value\n  // For dynamic responses\n  responseFn: z.string().optional(), // JavaScript function\n  // Error simulation\n  error: z.object({\n    code: z.string(),\n    message: z.string(),\n  }).optional(),\n});\n```\n\n### 2. Mock Engine Implementation\n```typescript\n// packages/cli/src/scenarios/mock-engine.ts\nexport class MockEngine {\n  private mocks: MockDefinition[] = [];\n\n  addMock(mock: MockDefinition) {\n    this.mocks.push(mock);\n  }\n\n  async findMock(service: string, method: string, args: any[]): Promise<any> {\n    const candidates = this.mocks.filter(m => \n      m.service === service && m.method === method\n    );\n\n    for (const mock of candidates) {\n      if (await this.matchesCondition(mock, args)) {\n        this.logger.info(`Mock triggered: ${service}.${method} with condition: ${JSON.stringify(mock.when)}`);\n        return this.generateResponse(mock, args);\n      }\n    }\n\n    return null; // No mock found\n  }\n\n  private async matchesCondition(mock: MockDefinition, args: any[]): Promise<boolean> {\n    if (!mock.when) return true; // Default mock\n\n    // Match on arguments\n    if (mock.when.args) {\n      if (!this.deepEqual(args, mock.when.args)) return false;\n    }\n\n    // Match on input parameters\n    if (mock.when.input) {\n      const input = this.extractInputFromArgs(args);\n      if (!this.deepEqual(input, mock.when.input)) return false;\n    }\n\n    // Custom matcher function\n    if (mock.when.matcher) {\n      const matcherFn = new Function('args', 'input', mock.when.matcher);\n      return matcherFn(args, this.extractInputFromArgs(args));\n    }\n\n    return true;\n  }\n\n  private generateResponse(mock: MockDefinition, args: any[]): any {\n    if (mock.error) {\n      throw new Error(`${mock.error.code}: ${mock.error.message}`);\n    }\n\n    if (mock.responseFn) {\n      const responseFn = new Function('args', 'input', mock.responseFn);\n      return responseFn(args, this.extractInputFromArgs(args));\n    }\n\n    return mock.response;\n  }\n}\n```\n\n## Test Scenario\n\nCreate `advanced-mocking-test.scenario.yaml`:\n```yaml\nname: \"Advanced Mocking Test\"\ndescription: \"Tests conditional mocking and complex response structures\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    # Conditional GitHub issue search\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"bug\"\n        matcher: \"input.labels.includes('bug')\"\n      response:\n        - title: \"Critical Bug Found\"\n          number: 456\n          state: \"open\"\n          labels: [\"bug\", \"critical\"]\n          created_at: \"2024-07-15T10:00:00Z\"\n\n    # Conditional GitHub issue search - different response\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"feature\"\n        matcher: \"input.labels.includes('feature')\"\n      response:\n        - title: \"New Feature Request\"\n          number: 789\n          state: \"open\"\n          labels: [\"feature\", \"enhancement\"]\n          created_at: \"2024-07-15T11:00:00Z\"\n\n    # Dynamic EVM balance response\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      when:\n        args: [\"0x1234567890abcdef\"]\n      responseFn: |\n        return {\n          chain: \"ethereum\",\n          address: args[0],\n          balances: [\n            { symbol: \"ETH\", amount: \"1.23\" },\n            { symbol: \"USDC\", amount: \"1000.00\" }\n          ],\n          last_updated: new Date().toISOString()\n        }\n\n    # Error simulation\n    - service: \"github-service\"\n      method: \"readFile\"\n      when:\n        input:\n          path: \"/docs/nonexistent.md\"\n      error:\n        code: \"FILE_NOT_FOUND\"\n        message: \"File does not exist\"\n\nrun:\n  - name: \"Test conditional GitHub search\"\n    input: \"Search for issues with bug label\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"Critical Bug Found\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent correctly search for bug issues?\"\n        expected: \"yes\"\n\n  - name: \"Test dynamic EVM response\"\n    input: \"What's the balance for address 0x1234567890abcdef?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n      - type: \"string_contains\"\n        value: \"1000.00 USDC\"\n\n  - name: \"Test error handling\"\n    input: \"Read the file /docs/nonexistent.md\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.readFile\"\n      - type: \"string_contains\"\n        value: \"File does not exist\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Conditional Matching**: Test different responses based on input parameters\n2. **Dynamic Responses**: Test response generation based on arguments\n3. **Error Simulation**: Test error handling and reporting\n4. **Complex Structures**: Test nested response objects with metadata\n5. **Multiple Mocks**: Test multiple mocks for same service/method\n6. **Logging**: Verify mock selection is logged clearly\n\n## Dependencies\n\n- Builds on existing mock system in scenarios\n- Requires plugin system integration (Ticket 1)\n- Integrates with agent interaction testing (Ticket 3) ",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement conditional mocking and complex response structures",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5726,
              "node_id": "I_kwDOMT5cIs7Engk3",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5726",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:49:00Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/labels{/name}",
              "updated_at": "2025-08-07T05:32:53Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3298689704,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725",
              "body": "# feat(scenarios): Implement plugin specification and dynamic loading\n\n## Description\n\nThis ticket implements plugin specification in scenario YAML files, allowing scenarios to declare which plugins are required for testing. This enables testing of agent behaviors that depend on specific plugins like `@elizaos/plugin-github` or `@elizaos/plugin-evm`. The system will dynamically load specified plugins during scenario execution and make their actions, providers, and services available to the agent.\n\n## Acceptance Criteria\n\n1. Scenario YAML supports a `plugins` array at the root level with string plugin names\n2. The `initializeAgent()` function respects scenario plugin specifications and loads them via `startAgent()`\n3. Plugin loading follows the same dependency resolution and error handling as the main CLI\n4. Scenarios can specify both string plugin names (`@elizaos/plugin-github`) and direct plugin objects\n5. Plugin loading errors are clearly reported with actionable guidance\n6. Default plugins (bootstrap, sql) are automatically included unless explicitly excluded via `exclude_defaults: true`\n7. Plugin conflicts are detected and reported during scenario validation\n8. Plugin initialization errors don't crash the scenario but are reported in results\n\n## Technical Approach\n\n### 1. Update Scenario Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst ScenarioSchema = z.object({\n  name: z.string(),\n  description: z.string(),\n  plugins: z.array(z.string()).optional(), // e.g., [\"@elizaos/plugin-github\"]\n  exclude_defaults: z.boolean().optional(), // exclude bootstrap/sql\n  environment: EnvironmentSchema,\n  setup: SetupSchema.optional(),\n  run: z.array(RunStepSchema),\n  judgment: JudgmentSchema,\n});\n```\n\n### 2. Enhance Runtime Factory\n```typescript\n// packages/cli/src/scenarios/runtime-factory.ts\nexport async function initializeAgent(scenario: Scenario): Promise<IAgentRuntime> {\n  const character: Character = {\n    name: 'scenario-runner',\n    id: stringToUuid('scenario-runner'),\n    bio: 'A minimal character for running scenarios',\n    plugins: scenario.plugins || []\n  };\n\n  // Load default plugins unless excluded\n  if (!scenario.exclude_defaults) {\n    character.plugins.push('@elizaos/plugin-bootstrap', '@elizaos/plugin-sql');\n  }\n\n  const runtime = await startAgent(\n    encryptedCharacter(character),\n    server,\n    undefined,\n    character.plugins,\n    { isTestMode: true }\n  );\n\n  return runtime;\n}\n```\n\n### 3. Plugin Validation\n```typescript\n// packages/cli/src/scenarios/plugin-validator.ts\nexport async function validateScenarioPlugins(scenario: Scenario): Promise<ValidationResult[]> {\n  const results: ValidationResult[] = [];\n  \n  for (const pluginName of scenario.plugins || []) {\n    try {\n      const plugin = await loadAndPreparePlugin(pluginName);\n      if (!plugin) {\n        results.push({\n          type: 'error',\n          message: `Plugin '${pluginName}' could not be loaded`,\n          suggestion: 'Check if plugin is installed or built correctly'\n        });\n      }\n    } catch (error) {\n      results.push({\n        type: 'error', \n        message: `Failed to validate plugin '${pluginName}': ${error.message}`,\n        suggestion: 'Verify plugin dependencies and configuration'\n      });\n    }\n  }\n  \n  return results;\n}\n```\n\n## Test Scenario\n\nCreate `plugin-integration-test.scenario.yaml`:\n```yaml\nname: \"Plugin Integration Test\"\ndescription: \"Tests loading and using plugins specified in scenario YAML\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Test Issue\"\n          number: 123\n          state: \"open\"\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"1.23\"\n\nrun:\n  - name: \"Test GitHub plugin actions\"\n    input: \"Search for issues with label 'bug'\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify GitHub plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"Test Issue\"\n        description: \"Verify agent found the mocked issue\"\n\n  - name: \"Test EVM plugin actions\"\n    input: \"What's my wallet balance?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify EVM plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n        description: \"Verify agent reported the mocked balance\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Plugin Loading Test**: Verify plugins load without errors\n2. **Action Availability Test**: Confirm agent can use plugin actions\n3. **Error Handling Test**: Test with non-existent plugin\n4. **Default Plugin Test**: Verify bootstrap/sql are included by default\n5. **Exclusion Test**: Test `exclude_defaults: true` behavior\n\n## Dependencies\n\n- Fixes the `startAgent` hanging issue (#5719) to enable plugin testing\n- Builds on existing `loadAndPreparePlugin` functionality\n- Integrates with current scenario execution flow ",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement plugin specification and dynamic loading",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5725,
              "node_id": "I_kwDOMT5cIs7EngKo",
              "assignee": null,
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5725",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:48:08Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/labels{/name}",
              "updated_at": "2025-08-07T05:37:32Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            }
          ],
          "issueCount": 10,
          "repository": "elizaOS/eliza"
        },
        "success": true
      },
      "actionStatus": "completed"
    },
    "entityId": "0137f0e4-d2e2-0ee6-82e5-af58b88ec91b",
    "agentId": "0137f0e4-d2e2-0ee6-82e5-af58b88ec91b",
    "roomId": "3b0aba0c-627e-0911-a405-ff0d3af61b8f",
    "unique": true,
    "metadata": {
      "type": "action_result",
      "runId": "61dfd284-fe07-4a96-af4d-7254d1b27359",
      "actionId": "648e58ad-e2a8-463a-8cf1-d030fc36eb2d",
      "actionName": "LIST_GITHUB_ISSUES",
      "totalSteps": 2,
      "currentStep": 2
    }
  },
  {
    "id": "a6ab4fc2-f270-4937-aaf5-d4689fb1b7d2",
    "type": "messages",
    "createdAt": 1754967666367,
    "content": {
      "text": "Generated reply: Let me fetch the open issues for the `elizaOS/eliza` repository. Please hold on a moment...",
      "type": "action_result",
      "runId": "61dfd284-fe07-4a96-af4d-7254d1b27359",
      "source": "action",
      "planStep": "1/2",
      "actionName": "REPLY",
      "planThought": "I need to list the open issues for the specified GitHub repository.",
      "actionResult": {
        "data": {
          "thought": "I'm planning to list the open issues for the specified repository.",
          "response": {
            "text": "Let me fetch the open issues for the `elizaOS/eliza` repository. Please hold on a moment...",
            "actions": [
              "REPLY"
            ],
            "thought": "I'm planning to list the open issues for the specified repository."
          },
          "actionName": "REPLY",
          "messageGenerated": true
        },
        "text": "Generated reply: Let me fetch the open issues for the `elizaOS/eliza` repository. Please hold on a moment...",
        "values": {
          "success": true,
          "lastReply": "Let me fetch the open issues for the `elizaOS/eliza` repository. Please hold on a moment...",
          "responded": true,
          "lastReplyTime": 1754967666366,
          "thoughtProcess": "I'm planning to list the open issues for the specified repository."
        },
        "success": true
      },
      "actionStatus": "completed"
    },
    "entityId": "0137f0e4-d2e2-0ee6-82e5-af58b88ec91b",
    "agentId": "0137f0e4-d2e2-0ee6-82e5-af58b88ec91b",
    "roomId": "3b0aba0c-627e-0911-a405-ff0d3af61b8f",
    "unique": true,
    "metadata": {
      "type": "action_result",
      "runId": "61dfd284-fe07-4a96-af4d-7254d1b27359",
      "actionId": "a6ab4fc2-f270-4937-aaf5-d4689fb1b7d2",
      "actionName": "REPLY",
      "totalSteps": 2,
      "currentStep": 1
    }
  },
  {
    "id": "9821fd9f-d60b-4e63-a5d4-c88e81120636",
    "type": "messages",
    "createdAt": 1754967315557,
    "content": {
      "text": "Open issues for elizaOS/eliza (10 shown):\n‚Ä¢ #5754: Critical: Plugin Publishing Fails with False Success Reports (open) [bug]\n‚Ä¢ #5749: Implement Runtime Method Mocking for Deterministic Agent Testing (open) [enhancement, testing, Reality Spiral]\n‚Ä¢ #5747: Fixing bugs in eliza-cloud (open)\n‚Ä¢ #5738: üêõ Build failure in @elizaos/core causing bun run clean to fail (open) [bug]\n‚Ä¢ #5734: Eliza CLI failed to build project (open) [bug]\n‚Ä¢ #5729: Update README.md to fix error (open)\n‚Ä¢ #5728: feat: ability to cancel current run before any calls to LLM are made (open)\n‚Ä¢ #5727: feat(scenarios): Implement natural language agent interaction and response validation (open) [enhancement, Reality Spiral]\n‚Ä¢ #5726: feat(scenarios): Implement conditional mocking and complex response structures (open) [enhancement, Reality Spiral]\n‚Ä¢ #5725: feat(scenarios): Implement plugin specification and dynamic loading (open) [enhancement, Reality Spiral]",
      "type": "action_result",
      "runId": "09fdd719-2a13-4045-843d-2de52bbc2a34",
      "source": "action",
      "planStep": "2/2",
      "actionName": "LIST_GITHUB_ISSUES",
      "planThought": "I need to list the open issues for the elizaOS/eliza repository.",
      "actionResult": {
        "data": {
          "github": {
            "issues": {
              "elizaOS/eliza#5725": {
                "id": 3298689704,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725",
                "body": "# feat(scenarios): Implement plugin specification and dynamic loading\n\n## Description\n\nThis ticket implements plugin specification in scenario YAML files, allowing scenarios to declare which plugins are required for testing. This enables testing of agent behaviors that depend on specific plugins like `@elizaos/plugin-github` or `@elizaos/plugin-evm`. The system will dynamically load specified plugins during scenario execution and make their actions, providers, and services available to the agent.\n\n## Acceptance Criteria\n\n1. Scenario YAML supports a `plugins` array at the root level with string plugin names\n2. The `initializeAgent()` function respects scenario plugin specifications and loads them via `startAgent()`\n3. Plugin loading follows the same dependency resolution and error handling as the main CLI\n4. Scenarios can specify both string plugin names (`@elizaos/plugin-github`) and direct plugin objects\n5. Plugin loading errors are clearly reported with actionable guidance\n6. Default plugins (bootstrap, sql) are automatically included unless explicitly excluded via `exclude_defaults: true`\n7. Plugin conflicts are detected and reported during scenario validation\n8. Plugin initialization errors don't crash the scenario but are reported in results\n\n## Technical Approach\n\n### 1. Update Scenario Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst ScenarioSchema = z.object({\n  name: z.string(),\n  description: z.string(),\n  plugins: z.array(z.string()).optional(), // e.g., [\"@elizaos/plugin-github\"]\n  exclude_defaults: z.boolean().optional(), // exclude bootstrap/sql\n  environment: EnvironmentSchema,\n  setup: SetupSchema.optional(),\n  run: z.array(RunStepSchema),\n  judgment: JudgmentSchema,\n});\n```\n\n### 2. Enhance Runtime Factory\n```typescript\n// packages/cli/src/scenarios/runtime-factory.ts\nexport async function initializeAgent(scenario: Scenario): Promise<IAgentRuntime> {\n  const character: Character = {\n    name: 'scenario-runner',\n    id: stringToUuid('scenario-runner'),\n    bio: 'A minimal character for running scenarios',\n    plugins: scenario.plugins || []\n  };\n\n  // Load default plugins unless excluded\n  if (!scenario.exclude_defaults) {\n    character.plugins.push('@elizaos/plugin-bootstrap', '@elizaos/plugin-sql');\n  }\n\n  const runtime = await startAgent(\n    encryptedCharacter(character),\n    server,\n    undefined,\n    character.plugins,\n    { isTestMode: true }\n  );\n\n  return runtime;\n}\n```\n\n### 3. Plugin Validation\n```typescript\n// packages/cli/src/scenarios/plugin-validator.ts\nexport async function validateScenarioPlugins(scenario: Scenario): Promise<ValidationResult[]> {\n  const results: ValidationResult[] = [];\n  \n  for (const pluginName of scenario.plugins || []) {\n    try {\n      const plugin = await loadAndPreparePlugin(pluginName);\n      if (!plugin) {\n        results.push({\n          type: 'error',\n          message: `Plugin '${pluginName}' could not be loaded`,\n          suggestion: 'Check if plugin is installed or built correctly'\n        });\n      }\n    } catch (error) {\n      results.push({\n        type: 'error', \n        message: `Failed to validate plugin '${pluginName}': ${error.message}`,\n        suggestion: 'Verify plugin dependencies and configuration'\n      });\n    }\n  }\n  \n  return results;\n}\n```\n\n## Test Scenario\n\nCreate `plugin-integration-test.scenario.yaml`:\n```yaml\nname: \"Plugin Integration Test\"\ndescription: \"Tests loading and using plugins specified in scenario YAML\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Test Issue\"\n          number: 123\n          state: \"open\"\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"1.23\"\n\nrun:\n  - name: \"Test GitHub plugin actions\"\n    input: \"Search for issues with label 'bug'\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify GitHub plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"Test Issue\"\n        description: \"Verify agent found the mocked issue\"\n\n  - name: \"Test EVM plugin actions\"\n    input: \"What's my wallet balance?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify EVM plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n        description: \"Verify agent reported the mocked balance\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Plugin Loading Test**: Verify plugins load without errors\n2. **Action Availability Test**: Confirm agent can use plugin actions\n3. **Error Handling Test**: Test with non-existent plugin\n4. **Default Plugin Test**: Verify bootstrap/sql are included by default\n5. **Exclusion Test**: Test `exclude_defaults: true` behavior\n\n## Dependencies\n\n- Fixes the `startAgent` hanging issue (#5719) to enable plugin testing\n- Builds on existing `loadAndPreparePlugin` functionality\n- Integrates with current scenario execution flow ",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement plugin specification and dynamic loading",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5725,
                "node_id": "I_kwDOMT5cIs7EngKo",
                "assignee": null,
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5725",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:48:08Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/labels{/name}",
                "updated_at": "2025-08-07T05:37:32Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5726": {
                "id": 3298691383,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726",
                "body": "# feat(scenarios): Implement conditional mocking and complex response structures\n\n## Description\n\nThis ticket enhances the mocking system to support conditional responses based on input parameters and complex response structures with metadata. This enables realistic testing of service interactions like GitHub API calls or EVM transactions with proper request/response matching.\n\n## Acceptance Criteria\n\n1. Mock definitions support `when` clauses for conditional responses\n2. `when` clauses can match on method arguments, input parameters, or request context\n3. Mock responses support complex nested structures with metadata (timestamps, IDs, etc.)\n4. Multiple mock responses can be defined for the same service/method with different conditions\n5. Mock system provides clear logging of which mock was triggered and why\n6. Mock responses can include realistic error conditions and edge cases\n7. Support for dynamic response generation based on input parameters\n8. Mock validation ensures `when` clauses are syntactically correct\n\n## Technical Approach\n\n### 1. Enhanced Mock Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst MockSchema = z.object({\n  service: z.string(),\n  method: z.string(),\n  when: z.object({\n    // Match on method arguments\n    args: z.array(z.any()).optional(),\n    // Match on specific argument values\n    input: z.record(z.any()).optional(),\n    // Match on request context\n    context: z.record(z.any()).optional(),\n    // Custom matching function\n    matcher: z.string().optional(), // JavaScript expression\n  }).optional(),\n  response: z.any(), // Can be function or static value\n  // For dynamic responses\n  responseFn: z.string().optional(), // JavaScript function\n  // Error simulation\n  error: z.object({\n    code: z.string(),\n    message: z.string(),\n  }).optional(),\n});\n```\n\n### 2. Mock Engine Implementation\n```typescript\n// packages/cli/src/scenarios/mock-engine.ts\nexport class MockEngine {\n  private mocks: MockDefinition[] = [];\n\n  addMock(mock: MockDefinition) {\n    this.mocks.push(mock);\n  }\n\n  async findMock(service: string, method: string, args: any[]): Promise<any> {\n    const candidates = this.mocks.filter(m => \n      m.service === service && m.method === method\n    );\n\n    for (const mock of candidates) {\n      if (await this.matchesCondition(mock, args)) {\n        this.logger.info(`Mock triggered: ${service}.${method} with condition: ${JSON.stringify(mock.when)}`);\n        return this.generateResponse(mock, args);\n      }\n    }\n\n    return null; // No mock found\n  }\n\n  private async matchesCondition(mock: MockDefinition, args: any[]): Promise<boolean> {\n    if (!mock.when) return true; // Default mock\n\n    // Match on arguments\n    if (mock.when.args) {\n      if (!this.deepEqual(args, mock.when.args)) return false;\n    }\n\n    // Match on input parameters\n    if (mock.when.input) {\n      const input = this.extractInputFromArgs(args);\n      if (!this.deepEqual(input, mock.when.input)) return false;\n    }\n\n    // Custom matcher function\n    if (mock.when.matcher) {\n      const matcherFn = new Function('args', 'input', mock.when.matcher);\n      return matcherFn(args, this.extractInputFromArgs(args));\n    }\n\n    return true;\n  }\n\n  private generateResponse(mock: MockDefinition, args: any[]): any {\n    if (mock.error) {\n      throw new Error(`${mock.error.code}: ${mock.error.message}`);\n    }\n\n    if (mock.responseFn) {\n      const responseFn = new Function('args', 'input', mock.responseFn);\n      return responseFn(args, this.extractInputFromArgs(args));\n    }\n\n    return mock.response;\n  }\n}\n```\n\n## Test Scenario\n\nCreate `advanced-mocking-test.scenario.yaml`:\n```yaml\nname: \"Advanced Mocking Test\"\ndescription: \"Tests conditional mocking and complex response structures\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    # Conditional GitHub issue search\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"bug\"\n        matcher: \"input.labels.includes('bug')\"\n      response:\n        - title: \"Critical Bug Found\"\n          number: 456\n          state: \"open\"\n          labels: [\"bug\", \"critical\"]\n          created_at: \"2024-07-15T10:00:00Z\"\n\n    # Conditional GitHub issue search - different response\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"feature\"\n        matcher: \"input.labels.includes('feature')\"\n      response:\n        - title: \"New Feature Request\"\n          number: 789\n          state: \"open\"\n          labels: [\"feature\", \"enhancement\"]\n          created_at: \"2024-07-15T11:00:00Z\"\n\n    # Dynamic EVM balance response\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      when:\n        args: [\"0x1234567890abcdef\"]\n      responseFn: |\n        return {\n          chain: \"ethereum\",\n          address: args[0],\n          balances: [\n            { symbol: \"ETH\", amount: \"1.23\" },\n            { symbol: \"USDC\", amount: \"1000.00\" }\n          ],\n          last_updated: new Date().toISOString()\n        }\n\n    # Error simulation\n    - service: \"github-service\"\n      method: \"readFile\"\n      when:\n        input:\n          path: \"/docs/nonexistent.md\"\n      error:\n        code: \"FILE_NOT_FOUND\"\n        message: \"File does not exist\"\n\nrun:\n  - name: \"Test conditional GitHub search\"\n    input: \"Search for issues with bug label\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"Critical Bug Found\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent correctly search for bug issues?\"\n        expected: \"yes\"\n\n  - name: \"Test dynamic EVM response\"\n    input: \"What's the balance for address 0x1234567890abcdef?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n      - type: \"string_contains\"\n        value: \"1000.00 USDC\"\n\n  - name: \"Test error handling\"\n    input: \"Read the file /docs/nonexistent.md\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.readFile\"\n      - type: \"string_contains\"\n        value: \"File does not exist\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Conditional Matching**: Test different responses based on input parameters\n2. **Dynamic Responses**: Test response generation based on arguments\n3. **Error Simulation**: Test error handling and reporting\n4. **Complex Structures**: Test nested response objects with metadata\n5. **Multiple Mocks**: Test multiple mocks for same service/method\n6. **Logging**: Verify mock selection is logged clearly\n\n## Dependencies\n\n- Builds on existing mock system in scenarios\n- Requires plugin system integration (Ticket 1)\n- Integrates with agent interaction testing (Ticket 3) ",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement conditional mocking and complex response structures",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5726,
                "node_id": "I_kwDOMT5cIs7Engk3",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5726",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:49:00Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/labels{/name}",
                "updated_at": "2025-08-07T05:32:53Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5727": {
                "id": 3298692741,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727",
                "body": "# feat(scenarios): Implement natural language agent interaction and response validation\n\n## Description\n\nThis ticket enables scenarios to test agent behavior through natural language interactions rather than direct code execution. This allows testing of agent reasoning, decision-making, and response generation in realistic conversation contexts with proper evaluation of agent responses.\n\n## Acceptance Criteria\n\n1. Scenario `run` blocks support `input` field for natural language prompts to agents\n2. Agent responses are captured and available for evaluation (text, thoughts, actions)\n3. Evaluators can access both agent response text and execution context\n4. Support for multi-turn conversations in scenarios\n5. Agent responses include thought process and action decisions\n6. Integration with existing evaluation engine for response validation\n7. Support for conversation context across multiple steps\n8. Agent response timing and performance metrics\n\n## Technical Approach\n\n### 1. Enhanced Run Step Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst RunStepSchema = z.object({\n  name: z.string().optional(),\n  // Natural language input to agent\n  input: z.string().optional(),\n  // Direct code execution (existing)\n  lang: z.string().optional(),\n  code: z.string().optional(),\n  // Agent interaction specific\n  agent_context: z.object({\n    conversation_id: z.string().optional(),\n    user_id: z.string().optional(),\n    room_id: z.string().optional(),\n  }).optional(),\n  evaluations: z.array(EvaluationSchema),\n});\n```\n\n### 2. Agent Interaction Engine\n```typescript\n// packages/cli/src/scenarios/agent-interaction.ts\nexport class AgentInteractionEngine {\n  constructor(private runtime: IAgentRuntime) {}\n\n  async interactWithAgent(input: string, context?: AgentContext): Promise<AgentResponse> {\n    // Create message for agent\n    const message: Memory = {\n      entityId: context?.user_id || 'scenario-user',\n      roomId: context?.room_id || 'scenario-room',\n      content: {\n        type: 'text',\n        text: input,\n      },\n      metadata: {\n        type: 'message',\n        conversationId: context?.conversation_id,\n      },\n    };\n\n    // Send to agent and capture response\n    const startTime = Date.now();\n    const response = await this.runtime.processMessage(message);\n    const endTime = Date.now();\n\n    return {\n      text: response.text,\n      thoughts: response.thoughts,\n      actions: response.actions,\n      timing: {\n        startTime,\n        endTime,\n        duration: endTime - startTime,\n      },\n      context: {\n        conversationId: context?.conversation_id,\n        messageId: message.id,\n      },\n    };\n  }\n}\n```\n\n### 3. Enhanced Execution Result\n```typescript\n// packages/cli/src/scenarios/providers.ts\nexport interface ExecutionResult {\n  exitCode: number;\n  stdout: string;\n  stderr: string;\n  files: Record<string, string>;\n  // New: Agent interaction results\n  agentResponse?: AgentResponse;\n  conversationHistory?: AgentResponse[];\n}\n```\n\n## Test Scenario\n\nCreate `agent-interaction-test.scenario.yaml`:\n```yaml\nname: \"Agent Interaction Test\"\ndescription: \"Tests natural language interaction with agents\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Implement Dark Mode\"\n          number: 123\n          state: \"open\"\n          labels: [\"feature\", \"ui\"]\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"2.5\"\n\nrun:\n  - name: \"Ask agent about roadmap\"\n    input: \"What new features are you planning to add?\"\n    agent_context:\n      conversation_id: \"roadmap-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify agent searched for issues\"\n      \n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n        description: \"Verify agent mentioned the mocked issue\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent provide a helpful and coherent response about new features?\"\n        expected: \"yes\"\n        description: \"Verify agent response quality\"\n\n  - name: \"Ask agent about wallet\"\n    input: \"What's my current wallet balance?\"\n    agent_context:\n      conversation_id: \"wallet-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify agent checked wallet balance\"\n      \n      - type: \"string_contains\"\n        value: \"2.5 ETH\"\n        description: \"Verify agent reported the correct balance\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent clearly explain the wallet balance information?\"\n        expected: \"yes\"\n\n  - name: \"Multi-turn conversation\"\n    input: \"Can you help me with both my wallet and roadmap?\"\n    agent_context:\n      conversation_id: \"multi-turn-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"ETH\"\n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent address both wallet and roadmap questions comprehensively?\"\n        expected: \"yes\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Single Turn**: Test basic agent interaction and response\n2. **Multi-turn**: Test conversation context across steps\n3. **Action Tracking**: Verify agent uses appropriate actions\n4. **Response Quality**: Test LLM judge evaluation of responses\n5. **Performance**: Test response timing and metrics\n6. **Error Handling**: Test agent behavior with invalid inputs\n\n## Dependencies\n\n- Requires plugin system integration (Ticket 1)\n- Builds on advanced mocking system (Ticket 2)\n- Integrates with existing evaluation engine\n- Depends on agent runtime message processing",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement natural language agent interaction and response validation",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5727,
                "node_id": "I_kwDOMT5cIs7Eng6F",
                "assignee": null,
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5727",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:49:34Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/labels{/name}",
                "updated_at": "2025-08-07T05:35:40Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5728": {
                "id": 3299322983,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728",
                "body": "# Background\r\n\r\n## What does this PR do?\r\n\r\nIntroduce entity for cancelling runs `CancelRunSignal`\r\n\r\n## Why are we doing this? Any context or related work?\r\n\r\n- Calls to LLMs usually cost some credits\r\n- When we receive the `RUN_STARTED` event we can check current entity and end run to prevent credits spending\r\n\r\n# Documentation changes needed?\r\n\r\n## Methods\r\n\r\n- `static getSignal(runId: UUID)` - get signal by runId or create if null\r\n- `static clear(runId: UUID)` - clear signal from map\r\n- `cancel(content?: Content)` - cancel current run and and send `content` as a response to user\r\n\r\n## Example\r\n\r\n```typescript\r\nimport { Content, EventType, Plugin } from \"@elizaos/core\";\r\nimport { CancelRunSignal } from \"@elizaos/plugin-bootstrap\";\r\n\r\n// consider we have a service to determine eligibility for entity\r\ninterface EligibilityService {\r\n  check(entityId: UUID): Promise<{ result: boolean, reason?: Content }>\r\n}\r\n\r\nconst plugin: Plugin = {\r\n...\r\n  events: {\r\n    [EventType.RUN_STARTED]: ({ entityId, runId, runtime }) => {\r\n      const service = runtime.getService<EligibilityService>(\"USER_MANAGEMENT\");\r\n      const { result, reason } = await service.check(entityId);\r\n      \r\n      if (!result) {\r\n        const signal = CancelRunSignal.getSignal(runId);\r\n        signal.cancel(reason);\r\n      }\r\n    },\r\n    ...\r\n  },\r\n  ...\r\n}\r\n\r\nexport default Plugin;\r\n```\r\n\r\n## Discord username\r\n\r\nalexd000\r\n\r\n",
                "type": null,
                "user": {
                  "id": 82507604,
                  "url": "https://api.github.com/users/alex-nax",
                  "type": "User",
                  "login": "alex-nax",
                  "node_id": "MDQ6VXNlcjgyNTA3NjA0",
                  "html_url": "https://github.com/alex-nax",
                  "gists_url": "https://api.github.com/users/alex-nax/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/alex-nax/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/82507604?v=4",
                  "events_url": "https://api.github.com/users/alex-nax/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/alex-nax/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/alex-nax/followers",
                  "following_url": "https://api.github.com/users/alex-nax/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/alex-nax/orgs",
                  "subscriptions_url": "https://api.github.com/users/alex-nax/subscriptions",
                  "received_events_url": "https://api.github.com/users/alex-nax/received_events"
                },
                "draft": false,
                "state": "open",
                "title": "feat: ability to cancel current run before any calls to LLM are made",
                "labels": [],
                "locked": false,
                "number": 5728,
                "node_id": "PR_kwDOMT5cIs6ihriD",
                "assignee": null,
                "comments": 3,
                "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T07:19:35Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/labels{/name}",
                "updated_at": "2025-08-07T07:22:05Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/comments",
                "pull_request": {
                  "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5728",
                  "diff_url": "https://github.com/elizaOS/eliza/pull/5728.diff",
                  "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                  "merged_at": null,
                  "patch_url": "https://github.com/elizaOS/eliza/pull/5728.patch"
                },
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "FIRST_TIME_CONTRIBUTOR",
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5729": {
                "id": 3299481897,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729",
                "body": "# Relates to\r\n\r\nN/A (Documentation improvement, not tied to a specific issue or ticket)\r\n\r\n# Risks\r\n\r\nLow.  \r\nThis change only updates documentation and does not affect any code or functionality.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR updates the elizaos README to include a fix for installation errors that may occur due to permission issues. It adds a note suggesting the use of sudo if users encounter a \"Permission denied\" or \"InstallFailed\" error when running the `elizaos create my-agent` command.\r\n\r\n## What kind of change is this?\r\n\r\nImprovements (misc. changes to existing features)  \r\nDocumentation update\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes require a change to the project documentation.  \r\nI have updated the documentation accordingly.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\nStart by reviewing the changes in the README.md file, specifically the section on creating a new project.\r\n\r\n## Detailed testing steps\r\n\r\n- Open the updated README.md.\r\n- Review the new instructions under \"Create Your First Project.\"\r\n- Confirm that the added note about using `sudo` is clear and helpful for users who encounter permission errors.",
                "type": null,
                "user": {
                  "id": 32749185,
                  "url": "https://api.github.com/users/mandatedisrael",
                  "type": "User",
                  "login": "mandatedisrael",
                  "node_id": "MDQ6VXNlcjMyNzQ5MTg1",
                  "html_url": "https://github.com/mandatedisrael",
                  "gists_url": "https://api.github.com/users/mandatedisrael/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/mandatedisrael/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/32749185?v=4",
                  "events_url": "https://api.github.com/users/mandatedisrael/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/mandatedisrael/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/mandatedisrael/followers",
                  "following_url": "https://api.github.com/users/mandatedisrael/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/mandatedisrael/orgs",
                  "subscriptions_url": "https://api.github.com/users/mandatedisrael/subscriptions",
                  "received_events_url": "https://api.github.com/users/mandatedisrael/received_events"
                },
                "draft": false,
                "state": "open",
                "title": "Update README.md to fix error",
                "labels": [],
                "locked": false,
                "number": 5729,
                "node_id": "PR_kwDOMT5cIs6iiNWN",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T08:10:12Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/labels{/name}",
                "updated_at": "2025-08-07T08:10:24Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/comments",
                "pull_request": {
                  "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5729",
                  "diff_url": "https://github.com/elizaOS/eliza/pull/5729.diff",
                  "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                  "merged_at": null,
                  "patch_url": "https://github.com/elizaOS/eliza/pull/5729.patch"
                },
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "FIRST_TIME_CONTRIBUTOR",
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5734": {
                "id": 3301116813,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734",
                "body": "**Describe the bug**\n\nOn project creation, ElizaOS CLI fails with the following error:\n```\n‚óá  Failed to build project\nstdout: src/index.ts(7,25): error TS2345: Argument of type 'string' is not assignable to parameter of type 'undefined'.\nstderr: $ tsc --noEmit && vite build && tsup\n```\n\n**To Reproduce**\n\n- Install ElizaOS through `bun`\n```\nbun i -g @elizaos/cli\n```\n- Create new ElizaOS project\n```\nelizaos create abcde\n```\n\n**Expected behavior**\n\nProject built successfully\n\n**Screenshots**\n\n<img width=\"1095\" height=\"572\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/967dd6a2-0d70-4e2e-8019-85a2eab5f225\" />\n\n**Additional context**\n\nElizaOS CLI version: `1.3.2`\n",
                "type": null,
                "user": {
                  "id": 74447600,
                  "url": "https://api.github.com/users/Kemystra",
                  "type": "User",
                  "login": "Kemystra",
                  "node_id": "MDQ6VXNlcjc0NDQ3NjAw",
                  "html_url": "https://github.com/Kemystra",
                  "gists_url": "https://api.github.com/users/Kemystra/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/Kemystra/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/74447600?v=4",
                  "events_url": "https://api.github.com/users/Kemystra/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/Kemystra/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/Kemystra/followers",
                  "following_url": "https://api.github.com/users/Kemystra/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/Kemystra/orgs",
                  "subscriptions_url": "https://api.github.com/users/Kemystra/subscriptions",
                  "received_events_url": "https://api.github.com/users/Kemystra/received_events"
                },
                "state": "open",
                "title": "Eliza CLI failed to build project",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5734,
                "node_id": "I_kwDOMT5cIs7EwwuN",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5734",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T16:14:00Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/labels{/name}",
                "updated_at": "2025-08-08T19:43:52Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "NONE",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5738": {
                "id": 3302237103,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738",
                "body": "## Description\n\nThe `bun run clean` command is failing due to TypeScript errors in `@elizaos/core` package during the DTS (type definition) build phase.\n\n## Error Details\n\n### Build Process\n```\n‚Ä¢ Running build in 17 packages\n‚Ä¢ Remote caching disabled\n@elizaos/config:build: cache miss\n@elizaos/autodoc:build: cache miss\n@elizaos/core:build: cache miss\n```\n\n### TypeScript Errors in @elizaos/core/src/utils.ts\n1. Line 218: `error TS2345: Argument of type '`${string}-${string}-${string}-${string}-${string}`' is not assignable to parameter of type 'never'.`\n2. Line 366: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n3. Line 409: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n4. Line 536: `error TS2345: Argument of type '{ numberOfChunks: number; averageChunkSize: number; }' is not assignable to parameter of type 'never'.`\n\n### Impact\n- Blocks `bun run clean` command\n- Prevents successful build of `@elizaos/core`\n- Affects dependent packages in the monorepo\n\n## Steps to Reproduce\n1. Run `bun run clean`\n2. Observe build failure in `@elizaos/core`\n3. Build fails with TypeScript errors during DTS generation\n\n## Expected Behavior\n- `bun run clean` should complete successfully\n- `@elizaos/core` should build without TypeScript errors\n- Type definitions should be generated correctly\n\n## Suggested Fix\n\nThe errors suggest type mismatches in `utils.ts`. Need to:\n1. Review type definitions in affected lines\n2. Update type assertions or generic constraints\n3. Ensure string template literal types are properly handled\n4. Fix object type assignments\n\n### Files to Update\n- `packages/core/src/utils.ts`\n\n## Priority\n**HIGH** - This is blocking clean builds and potentially affecting development workflow.",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "üêõ Build failure in @elizaos/core causing bun run clean to fail",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5738,
                "node_id": "I_kwDOMT5cIs7E1COv",
                "assignee": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5738",
                "assignees": [
                  {
                    "id": 15067321,
                    "url": "https://api.github.com/users/monilpat",
                    "type": "User",
                    "login": "monilpat",
                    "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                    "html_url": "https://github.com/monilpat",
                    "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/monilpat/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                    "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/monilpat/followers",
                    "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/monilpat/orgs",
                    "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                    "received_events_url": "https://api.github.com/users/monilpat/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-08T00:26:11Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/labels{/name}",
                "updated_at": "2025-08-11T14:56:01Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5747": {
                "id": 3304516859,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747",
                "body": null,
                "type": null,
                "user": {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                },
                "state": "open",
                "title": "Fixing bugs in eliza-cloud",
                "labels": [],
                "locked": false,
                "number": 5747,
                "node_id": "I_kwDOMT5cIs7E9uz7",
                "assignee": {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                },
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5747",
                "assignees": [
                  {
                    "id": 48334430,
                    "url": "https://api.github.com/users/samarth30",
                    "type": "User",
                    "login": "samarth30",
                    "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                    "html_url": "https://github.com/samarth30",
                    "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/samarth30/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                    "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/samarth30/followers",
                    "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/samarth30/orgs",
                    "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                    "received_events_url": "https://api.github.com/users/samarth30/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-08T16:01:56Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/labels{/name}",
                "updated_at": "2025-08-08T19:02:49Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "MEMBER",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": {
                  "id": 20150,
                  "name": "Linear",
                  "slug": "linear",
                  "owner": {
                    "id": 46686594,
                    "url": "https://api.github.com/users/linear",
                    "type": "Organization",
                    "login": "linear",
                    "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ2Njg2NTk0",
                    "html_url": "https://github.com/linear",
                    "gists_url": "https://api.github.com/users/linear/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/linear/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/46686594?v=4",
                    "events_url": "https://api.github.com/users/linear/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/linear/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/linear/followers",
                    "following_url": "https://api.github.com/users/linear/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/linear/orgs",
                    "subscriptions_url": "https://api.github.com/users/linear/subscriptions",
                    "received_events_url": "https://api.github.com/users/linear/received_events"
                  },
                  "events": [
                    "check_suite",
                    "issues",
                    "issue_comment",
                    "pull_request",
                    "pull_request_review",
                    "repository",
                    "sub_issues"
                  ],
                  "node_id": "MDM6QXBwMjAxNTA=",
                  "html_url": "https://github.com/apps/linear",
                  "client_id": "Iv1.085d682ea245c945",
                  "created_at": "2018-11-02T18:07:23Z",
                  "updated_at": "2025-02-07T14:59:56Z",
                  "description": "",
                  "permissions": {
                    "checks": "read",
                    "issues": "write",
                    "metadata": "read",
                    "pull_requests": "write"
                  },
                  "external_url": "https://linear.app"
                }
              },
              "elizaOS/eliza#5749": {
                "id": 3308102900,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749",
                "body": "### Problem Statement\nCurrently, ElizaOS scenario testing lacks the ability to mock internal agent runtime calls (particularly LLM interactions) when testing via the API client. This makes it difficult to create deterministic tests for agent behavior and workflows.\n\n### Current Limitations\n- Global function mocks only work for code executed in the same process\n- No way to intercept `runtime.useModel` calls from the bootstrap plugin\n- Agent behavior is non-deterministic due to real LLM calls\n- Difficult to test specific agent decision paths and responses\n\n### Why Different Approach Was Needed\n\nThe existing mocking system was designed for **code execution environments** (E2B sandbox and local `node -e` processes), where mocks are applied to the execution context. However, **agent testing** works differently:\n\n- **E2B/Local Execution**: Code runs in isolated processes/sandboxes where global mocks can be applied\n- **Agent Testing**: Agent runs as a service with API client interaction, requiring direct runtime method interception\n- **Architecture Gap**: The bootstrap plugin calls `runtime.useModel` internally, which can't be mocked through the execution environment approach\n\nThis architectural difference necessitated a new approach that directly intercepts runtime methods rather than relying on execution context mocking.\n\n### Proposed Solution: Runtime Method Mocking\n\nWe've implemented a new mocking approach that directly intercepts `IAgentRuntime` method calls:\n\n#### Key Components\n\n1. **MockEngine Enhancement**\n   - Added `runtimeMethodMocks` to support mocking runtime methods\n   - Priority system: `runtimeMethod` > `service` > `globalFunction`\n   - Direct method replacement on the runtime instance\n\n2. **Schema Updates**\n   - Extended `MockSchema` to include `runtimeMethod: z.string().optional()`\n   - Supports mocking any `IAgentRuntime` method (e.g., `useModel`, `getService`)\n\n3. **Conditional Matching**\n   - Matcher functions can inspect method arguments\n   - Example: `\"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"`\n   - Supports complex conditional logic for when to apply mocks\n\n#### Usage Example\n\n```yaml\nsetup:\n  mocks:\n    - runtimeMethod: \"useModel\"\n      method: \"useModel\"\n      when:\n        matcher: \"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"\n      response: \"<response><name>agent</name><reasoning>Mocked response</reasoning><action>RESPOND</action></response>\"\n```\n\n#### Benefits\n\n1. **Deterministic Testing**: Replace LLM calls with static responses\n2. **Full Workflow Testing**: Test complete agent decision flows\n3. **Conditional Mocking**: Apply mocks based on specific conditions\n4. **Runtime Integration**: Works seamlessly with existing agent architecture\n5. **Backward Compatibility**: Existing mocks continue to work\n\n#### Implementation Steps\n\n- MockEngine runtime method support\n- Schema updates for runtimeMethod mocks\n- Conditional matching with matcher functions\n- Integration with scenario runner\n- Basic useModel mocking working\n- Add support for mocking other runtime methods (getService, etc.)\n- Create comprehensive test scenarios\n- Add documentation and examples\n- Consider adding mock recording/replay capabilities\n\n### Technical Details\n\nThe implementation works by:\n1. Creating the `IAgentRuntime` instance in the scenario runner\n2. Applying mocks directly to the runtime object before agent initialization\n3. The bootstrap plugin receives the mocked runtime and uses the mocked methods\n4. Mocks are reverted after scenario completion\n\nThis approach provides the foundation for robust, deterministic agent testing while maintaining the existing architecture.",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "Implement Runtime Method Mocking for Deterministic Agent Testing",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 7668252177,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/testing",
                    "name": "testing",
                    "color": "2D3957",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAAByRA-EQ",
                    "description": ""
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5749,
                "node_id": "I_kwDOMT5cIs7FLaT0",
                "assignee": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "comments": 0,
                "html_url": "https://github.com/elizaOS/eliza/issues/5749",
                "assignees": [
                  {
                    "id": 15067321,
                    "url": "https://api.github.com/users/monilpat",
                    "type": "User",
                    "login": "monilpat",
                    "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                    "html_url": "https://github.com/monilpat",
                    "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/monilpat/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                    "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/monilpat/followers",
                    "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/monilpat/orgs",
                    "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                    "received_events_url": "https://api.github.com/users/monilpat/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-11T00:08:49Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/labels{/name}",
                "updated_at": "2025-08-11T00:09:37Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5754": {
                "id": 3310285907,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754",
                "body": "## Issue Summary\nThe `elizaos publish --npm` command reports successful publishing but the plugin is not actually published to npm, despite showing success messages. The npm publish is failing with a 404 error, but the ElizaOS CLI incorrectly reports success.\n\n## Key Problems Identified\n\n### 1. Critical NPM Publishing Failure\n- **Error**: `npm error 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found`\n- **Issue**: The package scope `@elizaos` doesn't exist on npm, preventing publishing\n- **Impact**: Package cannot be published to npm, but CLI reports success\n\n### 2. False Success Reporting\n- **Issue**: CLI reports `[‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm`\n- **Reality**: npm publish failed with 404 error\n- **Impact**: Developers believe their plugin is published when it's not\n\n### 3. Registry Repository Mismatch\n- **Expected**: Should create PR against `https://github.com/elizaos-plugins/registry`\n- **Actual**: Still references old registry `https://github.com/elizaos/registry`\n- **Impact**: Plugin won't appear in the official ElizaOS registry\n\n## Steps to Reproduce\n\n```bash\n# Navigate to the plugin directory\ncd packages/plugin-polygon\n\n# Ensure you're on the correct branch with the changes\ngit checkout polygon\n\n# Run the publish command\nelizaos publish --npm\n\n# Verify the success message appears\n# [‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm\n\n# Check if package actually exists on npm\nnpm view @elizaos/plugin-polygon@1.0.0\n# Result: 404 Not Found - '@elizaos/plugin-polygon@1.0.0' is not in this registry\n```\n\n## Technical Details\n\n### NPM Error Analysis\nThe npm logs show the root cause:\n```\nhttp fetch PUT 404 https://registry.npmjs.org/@elizaos%2fplugin-polygon 507ms\nerror 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found\n```\n\nThis indicates that the `@elizaos` scope doesn't exist on npm, which is required for publishing scoped packages.\n\n### CLI Error Handling Failure\nThe ElizaOS CLI is not properly parsing npm error codes:\n- npm returns exit code 1 (failure)\n- CLI ignores the error and reports success\n- No validation that the package actually exists on npm\n\n## Expected Behavior\n1. CLI should detect npm publish failures (exit code 1)\n2. CLI should fail with clear error message when package scope doesn't exist\n3. CLI should validate that package actually exists on npm after publishing\n4. CLI should create PRs against the correct registry repository\n\n## Recommended Fixes\n\n### 1. Fix NPM Error Detection\n```typescript\n// In the publish command, check npm exit code\nconst npmResult = await exec('npm publish', { cwd: pluginDir });\nif (npmResult.exitCode !== 0) {\n  throw new Error(`NPM publish failed: ${npmResult.stderr}`);\n}\n```\n\n### 2. Add Package Scope Validation\n```typescript\n// Before publishing, check if scope exists\nconst scopeExists = await checkNpmScope('@elizaos');\nif (!scopeExists) {\n  throw new Error('Package scope @elizaos does not exist on npm. Contact npm support to create the scope.');\n}\n```\n\n### 3. Add Post-Publish Validation\n```typescript\n// After publishing, verify package exists\nconst packageExists = await checkPackageExists(packageName, version);\nif (!packageExists) {\n  throw new Error(`Package was not published successfully. Check npm logs for details.`);\n}\n```\n\n## Priority\n**Critical** - This completely blocks plugin publishing and creates false success reports.\n\n## Affected Components\n- `packages/cli/src/commands/publish.ts`\n- NPM publishing logic\n- Error handling and success reporting\n- Package scope validation\n- Registry repository configuration\n\n## Immediate Action Required\n1. **Create the `@elizaos` scope on npm** or use an existing scope\n2. Update CLI to properly detect and handle npm publish failures\n3. Add post-publish validation to ensure packages actually exist on npm\n4. Update registry repository configuration\n\n## Alternative Solutions\n1. **Use existing scope**: Change package name to `@monilpat/plugin-polygon`\n2. **Create organization scope**: Set up `@elizaos` organization on npm\n3. **Use unscoped package**: Publish as `elizaos-plugin-polygon`\n\nThis issue is critically blocking plugin developers from successfully publishing their work and needs immediate attention from the ElizaOS team.\n",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "Critical: Plugin Publishing Fails with False Success Reports",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5754,
                "node_id": "I_kwDOMT5cIs7FTvRT",
                "assignee": null,
                "comments": 0,
                "html_url": "https://github.com/elizaOS/eliza/issues/5754",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-11T14:20:08Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/labels{/name}",
                "updated_at": "2025-08-11T14:20:08Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              }
            },
            "lastIssues": [
              {
                "id": 3310285907,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754",
                "body": "## Issue Summary\nThe `elizaos publish --npm` command reports successful publishing but the plugin is not actually published to npm, despite showing success messages. The npm publish is failing with a 404 error, but the ElizaOS CLI incorrectly reports success.\n\n## Key Problems Identified\n\n### 1. Critical NPM Publishing Failure\n- **Error**: `npm error 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found`\n- **Issue**: The package scope `@elizaos` doesn't exist on npm, preventing publishing\n- **Impact**: Package cannot be published to npm, but CLI reports success\n\n### 2. False Success Reporting\n- **Issue**: CLI reports `[‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm`\n- **Reality**: npm publish failed with 404 error\n- **Impact**: Developers believe their plugin is published when it's not\n\n### 3. Registry Repository Mismatch\n- **Expected**: Should create PR against `https://github.com/elizaos-plugins/registry`\n- **Actual**: Still references old registry `https://github.com/elizaos/registry`\n- **Impact**: Plugin won't appear in the official ElizaOS registry\n\n## Steps to Reproduce\n\n```bash\n# Navigate to the plugin directory\ncd packages/plugin-polygon\n\n# Ensure you're on the correct branch with the changes\ngit checkout polygon\n\n# Run the publish command\nelizaos publish --npm\n\n# Verify the success message appears\n# [‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm\n\n# Check if package actually exists on npm\nnpm view @elizaos/plugin-polygon@1.0.0\n# Result: 404 Not Found - '@elizaos/plugin-polygon@1.0.0' is not in this registry\n```\n\n## Technical Details\n\n### NPM Error Analysis\nThe npm logs show the root cause:\n```\nhttp fetch PUT 404 https://registry.npmjs.org/@elizaos%2fplugin-polygon 507ms\nerror 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found\n```\n\nThis indicates that the `@elizaos` scope doesn't exist on npm, which is required for publishing scoped packages.\n\n### CLI Error Handling Failure\nThe ElizaOS CLI is not properly parsing npm error codes:\n- npm returns exit code 1 (failure)\n- CLI ignores the error and reports success\n- No validation that the package actually exists on npm\n\n## Expected Behavior\n1. CLI should detect npm publish failures (exit code 1)\n2. CLI should fail with clear error message when package scope doesn't exist\n3. CLI should validate that package actually exists on npm after publishing\n4. CLI should create PRs against the correct registry repository\n\n## Recommended Fixes\n\n### 1. Fix NPM Error Detection\n```typescript\n// In the publish command, check npm exit code\nconst npmResult = await exec('npm publish', { cwd: pluginDir });\nif (npmResult.exitCode !== 0) {\n  throw new Error(`NPM publish failed: ${npmResult.stderr}`);\n}\n```\n\n### 2. Add Package Scope Validation\n```typescript\n// Before publishing, check if scope exists\nconst scopeExists = await checkNpmScope('@elizaos');\nif (!scopeExists) {\n  throw new Error('Package scope @elizaos does not exist on npm. Contact npm support to create the scope.');\n}\n```\n\n### 3. Add Post-Publish Validation\n```typescript\n// After publishing, verify package exists\nconst packageExists = await checkPackageExists(packageName, version);\nif (!packageExists) {\n  throw new Error(`Package was not published successfully. Check npm logs for details.`);\n}\n```\n\n## Priority\n**Critical** - This completely blocks plugin publishing and creates false success reports.\n\n## Affected Components\n- `packages/cli/src/commands/publish.ts`\n- NPM publishing logic\n- Error handling and success reporting\n- Package scope validation\n- Registry repository configuration\n\n## Immediate Action Required\n1. **Create the `@elizaos` scope on npm** or use an existing scope\n2. Update CLI to properly detect and handle npm publish failures\n3. Add post-publish validation to ensure packages actually exist on npm\n4. Update registry repository configuration\n\n## Alternative Solutions\n1. **Use existing scope**: Change package name to `@monilpat/plugin-polygon`\n2. **Create organization scope**: Set up `@elizaos` organization on npm\n3. **Use unscoped package**: Publish as `elizaos-plugin-polygon`\n\nThis issue is critically blocking plugin developers from successfully publishing their work and needs immediate attention from the ElizaOS team.\n",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "Critical: Plugin Publishing Fails with False Success Reports",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5754,
                "node_id": "I_kwDOMT5cIs7FTvRT",
                "assignee": null,
                "comments": 0,
                "html_url": "https://github.com/elizaOS/eliza/issues/5754",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-11T14:20:08Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/labels{/name}",
                "updated_at": "2025-08-11T14:20:08Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3308102900,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749",
                "body": "### Problem Statement\nCurrently, ElizaOS scenario testing lacks the ability to mock internal agent runtime calls (particularly LLM interactions) when testing via the API client. This makes it difficult to create deterministic tests for agent behavior and workflows.\n\n### Current Limitations\n- Global function mocks only work for code executed in the same process\n- No way to intercept `runtime.useModel` calls from the bootstrap plugin\n- Agent behavior is non-deterministic due to real LLM calls\n- Difficult to test specific agent decision paths and responses\n\n### Why Different Approach Was Needed\n\nThe existing mocking system was designed for **code execution environments** (E2B sandbox and local `node -e` processes), where mocks are applied to the execution context. However, **agent testing** works differently:\n\n- **E2B/Local Execution**: Code runs in isolated processes/sandboxes where global mocks can be applied\n- **Agent Testing**: Agent runs as a service with API client interaction, requiring direct runtime method interception\n- **Architecture Gap**: The bootstrap plugin calls `runtime.useModel` internally, which can't be mocked through the execution environment approach\n\nThis architectural difference necessitated a new approach that directly intercepts runtime methods rather than relying on execution context mocking.\n\n### Proposed Solution: Runtime Method Mocking\n\nWe've implemented a new mocking approach that directly intercepts `IAgentRuntime` method calls:\n\n#### Key Components\n\n1. **MockEngine Enhancement**\n   - Added `runtimeMethodMocks` to support mocking runtime methods\n   - Priority system: `runtimeMethod` > `service` > `globalFunction`\n   - Direct method replacement on the runtime instance\n\n2. **Schema Updates**\n   - Extended `MockSchema` to include `runtimeMethod: z.string().optional()`\n   - Supports mocking any `IAgentRuntime` method (e.g., `useModel`, `getService`)\n\n3. **Conditional Matching**\n   - Matcher functions can inspect method arguments\n   - Example: `\"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"`\n   - Supports complex conditional logic for when to apply mocks\n\n#### Usage Example\n\n```yaml\nsetup:\n  mocks:\n    - runtimeMethod: \"useModel\"\n      method: \"useModel\"\n      when:\n        matcher: \"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"\n      response: \"<response><name>agent</name><reasoning>Mocked response</reasoning><action>RESPOND</action></response>\"\n```\n\n#### Benefits\n\n1. **Deterministic Testing**: Replace LLM calls with static responses\n2. **Full Workflow Testing**: Test complete agent decision flows\n3. **Conditional Mocking**: Apply mocks based on specific conditions\n4. **Runtime Integration**: Works seamlessly with existing agent architecture\n5. **Backward Compatibility**: Existing mocks continue to work\n\n#### Implementation Steps\n\n- MockEngine runtime method support\n- Schema updates for runtimeMethod mocks\n- Conditional matching with matcher functions\n- Integration with scenario runner\n- Basic useModel mocking working\n- Add support for mocking other runtime methods (getService, etc.)\n- Create comprehensive test scenarios\n- Add documentation and examples\n- Consider adding mock recording/replay capabilities\n\n### Technical Details\n\nThe implementation works by:\n1. Creating the `IAgentRuntime` instance in the scenario runner\n2. Applying mocks directly to the runtime object before agent initialization\n3. The bootstrap plugin receives the mocked runtime and uses the mocked methods\n4. Mocks are reverted after scenario completion\n\nThis approach provides the foundation for robust, deterministic agent testing while maintaining the existing architecture.",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "Implement Runtime Method Mocking for Deterministic Agent Testing",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 7668252177,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/testing",
                    "name": "testing",
                    "color": "2D3957",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAAByRA-EQ",
                    "description": ""
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5749,
                "node_id": "I_kwDOMT5cIs7FLaT0",
                "assignee": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "comments": 0,
                "html_url": "https://github.com/elizaOS/eliza/issues/5749",
                "assignees": [
                  {
                    "id": 15067321,
                    "url": "https://api.github.com/users/monilpat",
                    "type": "User",
                    "login": "monilpat",
                    "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                    "html_url": "https://github.com/monilpat",
                    "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/monilpat/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                    "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/monilpat/followers",
                    "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/monilpat/orgs",
                    "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                    "received_events_url": "https://api.github.com/users/monilpat/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-11T00:08:49Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/labels{/name}",
                "updated_at": "2025-08-11T00:09:37Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3304516859,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747",
                "body": null,
                "type": null,
                "user": {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                },
                "state": "open",
                "title": "Fixing bugs in eliza-cloud",
                "labels": [],
                "locked": false,
                "number": 5747,
                "node_id": "I_kwDOMT5cIs7E9uz7",
                "assignee": {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                },
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5747",
                "assignees": [
                  {
                    "id": 48334430,
                    "url": "https://api.github.com/users/samarth30",
                    "type": "User",
                    "login": "samarth30",
                    "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                    "html_url": "https://github.com/samarth30",
                    "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/samarth30/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                    "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/samarth30/followers",
                    "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/samarth30/orgs",
                    "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                    "received_events_url": "https://api.github.com/users/samarth30/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-08T16:01:56Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/labels{/name}",
                "updated_at": "2025-08-08T19:02:49Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "MEMBER",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": {
                  "id": 20150,
                  "name": "Linear",
                  "slug": "linear",
                  "owner": {
                    "id": 46686594,
                    "url": "https://api.github.com/users/linear",
                    "type": "Organization",
                    "login": "linear",
                    "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ2Njg2NTk0",
                    "html_url": "https://github.com/linear",
                    "gists_url": "https://api.github.com/users/linear/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/linear/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/46686594?v=4",
                    "events_url": "https://api.github.com/users/linear/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/linear/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/linear/followers",
                    "following_url": "https://api.github.com/users/linear/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/linear/orgs",
                    "subscriptions_url": "https://api.github.com/users/linear/subscriptions",
                    "received_events_url": "https://api.github.com/users/linear/received_events"
                  },
                  "events": [
                    "check_suite",
                    "issues",
                    "issue_comment",
                    "pull_request",
                    "pull_request_review",
                    "repository",
                    "sub_issues"
                  ],
                  "node_id": "MDM6QXBwMjAxNTA=",
                  "html_url": "https://github.com/apps/linear",
                  "client_id": "Iv1.085d682ea245c945",
                  "created_at": "2018-11-02T18:07:23Z",
                  "updated_at": "2025-02-07T14:59:56Z",
                  "description": "",
                  "permissions": {
                    "checks": "read",
                    "issues": "write",
                    "metadata": "read",
                    "pull_requests": "write"
                  },
                  "external_url": "https://linear.app"
                }
              },
              {
                "id": 3302237103,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738",
                "body": "## Description\n\nThe `bun run clean` command is failing due to TypeScript errors in `@elizaos/core` package during the DTS (type definition) build phase.\n\n## Error Details\n\n### Build Process\n```\n‚Ä¢ Running build in 17 packages\n‚Ä¢ Remote caching disabled\n@elizaos/config:build: cache miss\n@elizaos/autodoc:build: cache miss\n@elizaos/core:build: cache miss\n```\n\n### TypeScript Errors in @elizaos/core/src/utils.ts\n1. Line 218: `error TS2345: Argument of type '`${string}-${string}-${string}-${string}-${string}`' is not assignable to parameter of type 'never'.`\n2. Line 366: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n3. Line 409: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n4. Line 536: `error TS2345: Argument of type '{ numberOfChunks: number; averageChunkSize: number; }' is not assignable to parameter of type 'never'.`\n\n### Impact\n- Blocks `bun run clean` command\n- Prevents successful build of `@elizaos/core`\n- Affects dependent packages in the monorepo\n\n## Steps to Reproduce\n1. Run `bun run clean`\n2. Observe build failure in `@elizaos/core`\n3. Build fails with TypeScript errors during DTS generation\n\n## Expected Behavior\n- `bun run clean` should complete successfully\n- `@elizaos/core` should build without TypeScript errors\n- Type definitions should be generated correctly\n\n## Suggested Fix\n\nThe errors suggest type mismatches in `utils.ts`. Need to:\n1. Review type definitions in affected lines\n2. Update type assertions or generic constraints\n3. Ensure string template literal types are properly handled\n4. Fix object type assignments\n\n### Files to Update\n- `packages/core/src/utils.ts`\n\n## Priority\n**HIGH** - This is blocking clean builds and potentially affecting development workflow.",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "üêõ Build failure in @elizaos/core causing bun run clean to fail",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5738,
                "node_id": "I_kwDOMT5cIs7E1COv",
                "assignee": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5738",
                "assignees": [
                  {
                    "id": 15067321,
                    "url": "https://api.github.com/users/monilpat",
                    "type": "User",
                    "login": "monilpat",
                    "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                    "html_url": "https://github.com/monilpat",
                    "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/monilpat/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                    "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/monilpat/followers",
                    "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/monilpat/orgs",
                    "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                    "received_events_url": "https://api.github.com/users/monilpat/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-08T00:26:11Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/labels{/name}",
                "updated_at": "2025-08-11T14:56:01Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3301116813,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734",
                "body": "**Describe the bug**\n\nOn project creation, ElizaOS CLI fails with the following error:\n```\n‚óá  Failed to build project\nstdout: src/index.ts(7,25): error TS2345: Argument of type 'string' is not assignable to parameter of type 'undefined'.\nstderr: $ tsc --noEmit && vite build && tsup\n```\n\n**To Reproduce**\n\n- Install ElizaOS through `bun`\n```\nbun i -g @elizaos/cli\n```\n- Create new ElizaOS project\n```\nelizaos create abcde\n```\n\n**Expected behavior**\n\nProject built successfully\n\n**Screenshots**\n\n<img width=\"1095\" height=\"572\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/967dd6a2-0d70-4e2e-8019-85a2eab5f225\" />\n\n**Additional context**\n\nElizaOS CLI version: `1.3.2`\n",
                "type": null,
                "user": {
                  "id": 74447600,
                  "url": "https://api.github.com/users/Kemystra",
                  "type": "User",
                  "login": "Kemystra",
                  "node_id": "MDQ6VXNlcjc0NDQ3NjAw",
                  "html_url": "https://github.com/Kemystra",
                  "gists_url": "https://api.github.com/users/Kemystra/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/Kemystra/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/74447600?v=4",
                  "events_url": "https://api.github.com/users/Kemystra/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/Kemystra/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/Kemystra/followers",
                  "following_url": "https://api.github.com/users/Kemystra/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/Kemystra/orgs",
                  "subscriptions_url": "https://api.github.com/users/Kemystra/subscriptions",
                  "received_events_url": "https://api.github.com/users/Kemystra/received_events"
                },
                "state": "open",
                "title": "Eliza CLI failed to build project",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5734,
                "node_id": "I_kwDOMT5cIs7EwwuN",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5734",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T16:14:00Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/labels{/name}",
                "updated_at": "2025-08-08T19:43:52Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "NONE",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3299481897,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729",
                "body": "# Relates to\r\n\r\nN/A (Documentation improvement, not tied to a specific issue or ticket)\r\n\r\n# Risks\r\n\r\nLow.  \r\nThis change only updates documentation and does not affect any code or functionality.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR updates the elizaos README to include a fix for installation errors that may occur due to permission issues. It adds a note suggesting the use of sudo if users encounter a \"Permission denied\" or \"InstallFailed\" error when running the `elizaos create my-agent` command.\r\n\r\n## What kind of change is this?\r\n\r\nImprovements (misc. changes to existing features)  \r\nDocumentation update\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes require a change to the project documentation.  \r\nI have updated the documentation accordingly.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\nStart by reviewing the changes in the README.md file, specifically the section on creating a new project.\r\n\r\n## Detailed testing steps\r\n\r\n- Open the updated README.md.\r\n- Review the new instructions under \"Create Your First Project.\"\r\n- Confirm that the added note about using `sudo` is clear and helpful for users who encounter permission errors.",
                "type": null,
                "user": {
                  "id": 32749185,
                  "url": "https://api.github.com/users/mandatedisrael",
                  "type": "User",
                  "login": "mandatedisrael",
                  "node_id": "MDQ6VXNlcjMyNzQ5MTg1",
                  "html_url": "https://github.com/mandatedisrael",
                  "gists_url": "https://api.github.com/users/mandatedisrael/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/mandatedisrael/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/32749185?v=4",
                  "events_url": "https://api.github.com/users/mandatedisrael/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/mandatedisrael/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/mandatedisrael/followers",
                  "following_url": "https://api.github.com/users/mandatedisrael/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/mandatedisrael/orgs",
                  "subscriptions_url": "https://api.github.com/users/mandatedisrael/subscriptions",
                  "received_events_url": "https://api.github.com/users/mandatedisrael/received_events"
                },
                "draft": false,
                "state": "open",
                "title": "Update README.md to fix error",
                "labels": [],
                "locked": false,
                "number": 5729,
                "node_id": "PR_kwDOMT5cIs6iiNWN",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T08:10:12Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/labels{/name}",
                "updated_at": "2025-08-07T08:10:24Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/comments",
                "pull_request": {
                  "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5729",
                  "diff_url": "https://github.com/elizaOS/eliza/pull/5729.diff",
                  "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                  "merged_at": null,
                  "patch_url": "https://github.com/elizaOS/eliza/pull/5729.patch"
                },
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "FIRST_TIME_CONTRIBUTOR",
                "performed_via_github_app": null
              },
              {
                "id": 3299322983,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728",
                "body": "# Background\r\n\r\n## What does this PR do?\r\n\r\nIntroduce entity for cancelling runs `CancelRunSignal`\r\n\r\n## Why are we doing this? Any context or related work?\r\n\r\n- Calls to LLMs usually cost some credits\r\n- When we receive the `RUN_STARTED` event we can check current entity and end run to prevent credits spending\r\n\r\n# Documentation changes needed?\r\n\r\n## Methods\r\n\r\n- `static getSignal(runId: UUID)` - get signal by runId or create if null\r\n- `static clear(runId: UUID)` - clear signal from map\r\n- `cancel(content?: Content)` - cancel current run and and send `content` as a response to user\r\n\r\n## Example\r\n\r\n```typescript\r\nimport { Content, EventType, Plugin } from \"@elizaos/core\";\r\nimport { CancelRunSignal } from \"@elizaos/plugin-bootstrap\";\r\n\r\n// consider we have a service to determine eligibility for entity\r\ninterface EligibilityService {\r\n  check(entityId: UUID): Promise<{ result: boolean, reason?: Content }>\r\n}\r\n\r\nconst plugin: Plugin = {\r\n...\r\n  events: {\r\n    [EventType.RUN_STARTED]: ({ entityId, runId, runtime }) => {\r\n      const service = runtime.getService<EligibilityService>(\"USER_MANAGEMENT\");\r\n      const { result, reason } = await service.check(entityId);\r\n      \r\n      if (!result) {\r\n        const signal = CancelRunSignal.getSignal(runId);\r\n        signal.cancel(reason);\r\n      }\r\n    },\r\n    ...\r\n  },\r\n  ...\r\n}\r\n\r\nexport default Plugin;\r\n```\r\n\r\n## Discord username\r\n\r\nalexd000\r\n\r\n",
                "type": null,
                "user": {
                  "id": 82507604,
                  "url": "https://api.github.com/users/alex-nax",
                  "type": "User",
                  "login": "alex-nax",
                  "node_id": "MDQ6VXNlcjgyNTA3NjA0",
                  "html_url": "https://github.com/alex-nax",
                  "gists_url": "https://api.github.com/users/alex-nax/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/alex-nax/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/82507604?v=4",
                  "events_url": "https://api.github.com/users/alex-nax/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/alex-nax/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/alex-nax/followers",
                  "following_url": "https://api.github.com/users/alex-nax/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/alex-nax/orgs",
                  "subscriptions_url": "https://api.github.com/users/alex-nax/subscriptions",
                  "received_events_url": "https://api.github.com/users/alex-nax/received_events"
                },
                "draft": false,
                "state": "open",
                "title": "feat: ability to cancel current run before any calls to LLM are made",
                "labels": [],
                "locked": false,
                "number": 5728,
                "node_id": "PR_kwDOMT5cIs6ihriD",
                "assignee": null,
                "comments": 3,
                "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T07:19:35Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/labels{/name}",
                "updated_at": "2025-08-07T07:22:05Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/comments",
                "pull_request": {
                  "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5728",
                  "diff_url": "https://github.com/elizaOS/eliza/pull/5728.diff",
                  "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                  "merged_at": null,
                  "patch_url": "https://github.com/elizaOS/eliza/pull/5728.patch"
                },
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "FIRST_TIME_CONTRIBUTOR",
                "performed_via_github_app": null
              },
              {
                "id": 3298692741,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727",
                "body": "# feat(scenarios): Implement natural language agent interaction and response validation\n\n## Description\n\nThis ticket enables scenarios to test agent behavior through natural language interactions rather than direct code execution. This allows testing of agent reasoning, decision-making, and response generation in realistic conversation contexts with proper evaluation of agent responses.\n\n## Acceptance Criteria\n\n1. Scenario `run` blocks support `input` field for natural language prompts to agents\n2. Agent responses are captured and available for evaluation (text, thoughts, actions)\n3. Evaluators can access both agent response text and execution context\n4. Support for multi-turn conversations in scenarios\n5. Agent responses include thought process and action decisions\n6. Integration with existing evaluation engine for response validation\n7. Support for conversation context across multiple steps\n8. Agent response timing and performance metrics\n\n## Technical Approach\n\n### 1. Enhanced Run Step Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst RunStepSchema = z.object({\n  name: z.string().optional(),\n  // Natural language input to agent\n  input: z.string().optional(),\n  // Direct code execution (existing)\n  lang: z.string().optional(),\n  code: z.string().optional(),\n  // Agent interaction specific\n  agent_context: z.object({\n    conversation_id: z.string().optional(),\n    user_id: z.string().optional(),\n    room_id: z.string().optional(),\n  }).optional(),\n  evaluations: z.array(EvaluationSchema),\n});\n```\n\n### 2. Agent Interaction Engine\n```typescript\n// packages/cli/src/scenarios/agent-interaction.ts\nexport class AgentInteractionEngine {\n  constructor(private runtime: IAgentRuntime) {}\n\n  async interactWithAgent(input: string, context?: AgentContext): Promise<AgentResponse> {\n    // Create message for agent\n    const message: Memory = {\n      entityId: context?.user_id || 'scenario-user',\n      roomId: context?.room_id || 'scenario-room',\n      content: {\n        type: 'text',\n        text: input,\n      },\n      metadata: {\n        type: 'message',\n        conversationId: context?.conversation_id,\n      },\n    };\n\n    // Send to agent and capture response\n    const startTime = Date.now();\n    const response = await this.runtime.processMessage(message);\n    const endTime = Date.now();\n\n    return {\n      text: response.text,\n      thoughts: response.thoughts,\n      actions: response.actions,\n      timing: {\n        startTime,\n        endTime,\n        duration: endTime - startTime,\n      },\n      context: {\n        conversationId: context?.conversation_id,\n        messageId: message.id,\n      },\n    };\n  }\n}\n```\n\n### 3. Enhanced Execution Result\n```typescript\n// packages/cli/src/scenarios/providers.ts\nexport interface ExecutionResult {\n  exitCode: number;\n  stdout: string;\n  stderr: string;\n  files: Record<string, string>;\n  // New: Agent interaction results\n  agentResponse?: AgentResponse;\n  conversationHistory?: AgentResponse[];\n}\n```\n\n## Test Scenario\n\nCreate `agent-interaction-test.scenario.yaml`:\n```yaml\nname: \"Agent Interaction Test\"\ndescription: \"Tests natural language interaction with agents\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Implement Dark Mode\"\n          number: 123\n          state: \"open\"\n          labels: [\"feature\", \"ui\"]\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"2.5\"\n\nrun:\n  - name: \"Ask agent about roadmap\"\n    input: \"What new features are you planning to add?\"\n    agent_context:\n      conversation_id: \"roadmap-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify agent searched for issues\"\n      \n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n        description: \"Verify agent mentioned the mocked issue\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent provide a helpful and coherent response about new features?\"\n        expected: \"yes\"\n        description: \"Verify agent response quality\"\n\n  - name: \"Ask agent about wallet\"\n    input: \"What's my current wallet balance?\"\n    agent_context:\n      conversation_id: \"wallet-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify agent checked wallet balance\"\n      \n      - type: \"string_contains\"\n        value: \"2.5 ETH\"\n        description: \"Verify agent reported the correct balance\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent clearly explain the wallet balance information?\"\n        expected: \"yes\"\n\n  - name: \"Multi-turn conversation\"\n    input: \"Can you help me with both my wallet and roadmap?\"\n    agent_context:\n      conversation_id: \"multi-turn-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"ETH\"\n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent address both wallet and roadmap questions comprehensively?\"\n        expected: \"yes\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Single Turn**: Test basic agent interaction and response\n2. **Multi-turn**: Test conversation context across steps\n3. **Action Tracking**: Verify agent uses appropriate actions\n4. **Response Quality**: Test LLM judge evaluation of responses\n5. **Performance**: Test response timing and metrics\n6. **Error Handling**: Test agent behavior with invalid inputs\n\n## Dependencies\n\n- Requires plugin system integration (Ticket 1)\n- Builds on advanced mocking system (Ticket 2)\n- Integrates with existing evaluation engine\n- Depends on agent runtime message processing",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement natural language agent interaction and response validation",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5727,
                "node_id": "I_kwDOMT5cIs7Eng6F",
                "assignee": null,
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5727",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:49:34Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/labels{/name}",
                "updated_at": "2025-08-07T05:35:40Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3298691383,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726",
                "body": "# feat(scenarios): Implement conditional mocking and complex response structures\n\n## Description\n\nThis ticket enhances the mocking system to support conditional responses based on input parameters and complex response structures with metadata. This enables realistic testing of service interactions like GitHub API calls or EVM transactions with proper request/response matching.\n\n## Acceptance Criteria\n\n1. Mock definitions support `when` clauses for conditional responses\n2. `when` clauses can match on method arguments, input parameters, or request context\n3. Mock responses support complex nested structures with metadata (timestamps, IDs, etc.)\n4. Multiple mock responses can be defined for the same service/method with different conditions\n5. Mock system provides clear logging of which mock was triggered and why\n6. Mock responses can include realistic error conditions and edge cases\n7. Support for dynamic response generation based on input parameters\n8. Mock validation ensures `when` clauses are syntactically correct\n\n## Technical Approach\n\n### 1. Enhanced Mock Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst MockSchema = z.object({\n  service: z.string(),\n  method: z.string(),\n  when: z.object({\n    // Match on method arguments\n    args: z.array(z.any()).optional(),\n    // Match on specific argument values\n    input: z.record(z.any()).optional(),\n    // Match on request context\n    context: z.record(z.any()).optional(),\n    // Custom matching function\n    matcher: z.string().optional(), // JavaScript expression\n  }).optional(),\n  response: z.any(), // Can be function or static value\n  // For dynamic responses\n  responseFn: z.string().optional(), // JavaScript function\n  // Error simulation\n  error: z.object({\n    code: z.string(),\n    message: z.string(),\n  }).optional(),\n});\n```\n\n### 2. Mock Engine Implementation\n```typescript\n// packages/cli/src/scenarios/mock-engine.ts\nexport class MockEngine {\n  private mocks: MockDefinition[] = [];\n\n  addMock(mock: MockDefinition) {\n    this.mocks.push(mock);\n  }\n\n  async findMock(service: string, method: string, args: any[]): Promise<any> {\n    const candidates = this.mocks.filter(m => \n      m.service === service && m.method === method\n    );\n\n    for (const mock of candidates) {\n      if (await this.matchesCondition(mock, args)) {\n        this.logger.info(`Mock triggered: ${service}.${method} with condition: ${JSON.stringify(mock.when)}`);\n        return this.generateResponse(mock, args);\n      }\n    }\n\n    return null; // No mock found\n  }\n\n  private async matchesCondition(mock: MockDefinition, args: any[]): Promise<boolean> {\n    if (!mock.when) return true; // Default mock\n\n    // Match on arguments\n    if (mock.when.args) {\n      if (!this.deepEqual(args, mock.when.args)) return false;\n    }\n\n    // Match on input parameters\n    if (mock.when.input) {\n      const input = this.extractInputFromArgs(args);\n      if (!this.deepEqual(input, mock.when.input)) return false;\n    }\n\n    // Custom matcher function\n    if (mock.when.matcher) {\n      const matcherFn = new Function('args', 'input', mock.when.matcher);\n      return matcherFn(args, this.extractInputFromArgs(args));\n    }\n\n    return true;\n  }\n\n  private generateResponse(mock: MockDefinition, args: any[]): any {\n    if (mock.error) {\n      throw new Error(`${mock.error.code}: ${mock.error.message}`);\n    }\n\n    if (mock.responseFn) {\n      const responseFn = new Function('args', 'input', mock.responseFn);\n      return responseFn(args, this.extractInputFromArgs(args));\n    }\n\n    return mock.response;\n  }\n}\n```\n\n## Test Scenario\n\nCreate `advanced-mocking-test.scenario.yaml`:\n```yaml\nname: \"Advanced Mocking Test\"\ndescription: \"Tests conditional mocking and complex response structures\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    # Conditional GitHub issue search\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"bug\"\n        matcher: \"input.labels.includes('bug')\"\n      response:\n        - title: \"Critical Bug Found\"\n          number: 456\n          state: \"open\"\n          labels: [\"bug\", \"critical\"]\n          created_at: \"2024-07-15T10:00:00Z\"\n\n    # Conditional GitHub issue search - different response\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"feature\"\n        matcher: \"input.labels.includes('feature')\"\n      response:\n        - title: \"New Feature Request\"\n          number: 789\n          state: \"open\"\n          labels: [\"feature\", \"enhancement\"]\n          created_at: \"2024-07-15T11:00:00Z\"\n\n    # Dynamic EVM balance response\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      when:\n        args: [\"0x1234567890abcdef\"]\n      responseFn: |\n        return {\n          chain: \"ethereum\",\n          address: args[0],\n          balances: [\n            { symbol: \"ETH\", amount: \"1.23\" },\n            { symbol: \"USDC\", amount: \"1000.00\" }\n          ],\n          last_updated: new Date().toISOString()\n        }\n\n    # Error simulation\n    - service: \"github-service\"\n      method: \"readFile\"\n      when:\n        input:\n          path: \"/docs/nonexistent.md\"\n      error:\n        code: \"FILE_NOT_FOUND\"\n        message: \"File does not exist\"\n\nrun:\n  - name: \"Test conditional GitHub search\"\n    input: \"Search for issues with bug label\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"Critical Bug Found\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent correctly search for bug issues?\"\n        expected: \"yes\"\n\n  - name: \"Test dynamic EVM response\"\n    input: \"What's the balance for address 0x1234567890abcdef?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n      - type: \"string_contains\"\n        value: \"1000.00 USDC\"\n\n  - name: \"Test error handling\"\n    input: \"Read the file /docs/nonexistent.md\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.readFile\"\n      - type: \"string_contains\"\n        value: \"File does not exist\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Conditional Matching**: Test different responses based on input parameters\n2. **Dynamic Responses**: Test response generation based on arguments\n3. **Error Simulation**: Test error handling and reporting\n4. **Complex Structures**: Test nested response objects with metadata\n5. **Multiple Mocks**: Test multiple mocks for same service/method\n6. **Logging**: Verify mock selection is logged clearly\n\n## Dependencies\n\n- Builds on existing mock system in scenarios\n- Requires plugin system integration (Ticket 1)\n- Integrates with agent interaction testing (Ticket 3) ",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement conditional mocking and complex response structures",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5726,
                "node_id": "I_kwDOMT5cIs7Engk3",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5726",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:49:00Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/labels{/name}",
                "updated_at": "2025-08-07T05:32:53Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3298689704,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725",
                "body": "# feat(scenarios): Implement plugin specification and dynamic loading\n\n## Description\n\nThis ticket implements plugin specification in scenario YAML files, allowing scenarios to declare which plugins are required for testing. This enables testing of agent behaviors that depend on specific plugins like `@elizaos/plugin-github` or `@elizaos/plugin-evm`. The system will dynamically load specified plugins during scenario execution and make their actions, providers, and services available to the agent.\n\n## Acceptance Criteria\n\n1. Scenario YAML supports a `plugins` array at the root level with string plugin names\n2. The `initializeAgent()` function respects scenario plugin specifications and loads them via `startAgent()`\n3. Plugin loading follows the same dependency resolution and error handling as the main CLI\n4. Scenarios can specify both string plugin names (`@elizaos/plugin-github`) and direct plugin objects\n5. Plugin loading errors are clearly reported with actionable guidance\n6. Default plugins (bootstrap, sql) are automatically included unless explicitly excluded via `exclude_defaults: true`\n7. Plugin conflicts are detected and reported during scenario validation\n8. Plugin initialization errors don't crash the scenario but are reported in results\n\n## Technical Approach\n\n### 1. Update Scenario Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst ScenarioSchema = z.object({\n  name: z.string(),\n  description: z.string(),\n  plugins: z.array(z.string()).optional(), // e.g., [\"@elizaos/plugin-github\"]\n  exclude_defaults: z.boolean().optional(), // exclude bootstrap/sql\n  environment: EnvironmentSchema,\n  setup: SetupSchema.optional(),\n  run: z.array(RunStepSchema),\n  judgment: JudgmentSchema,\n});\n```\n\n### 2. Enhance Runtime Factory\n```typescript\n// packages/cli/src/scenarios/runtime-factory.ts\nexport async function initializeAgent(scenario: Scenario): Promise<IAgentRuntime> {\n  const character: Character = {\n    name: 'scenario-runner',\n    id: stringToUuid('scenario-runner'),\n    bio: 'A minimal character for running scenarios',\n    plugins: scenario.plugins || []\n  };\n\n  // Load default plugins unless excluded\n  if (!scenario.exclude_defaults) {\n    character.plugins.push('@elizaos/plugin-bootstrap', '@elizaos/plugin-sql');\n  }\n\n  const runtime = await startAgent(\n    encryptedCharacter(character),\n    server,\n    undefined,\n    character.plugins,\n    { isTestMode: true }\n  );\n\n  return runtime;\n}\n```\n\n### 3. Plugin Validation\n```typescript\n// packages/cli/src/scenarios/plugin-validator.ts\nexport async function validateScenarioPlugins(scenario: Scenario): Promise<ValidationResult[]> {\n  const results: ValidationResult[] = [];\n  \n  for (const pluginName of scenario.plugins || []) {\n    try {\n      const plugin = await loadAndPreparePlugin(pluginName);\n      if (!plugin) {\n        results.push({\n          type: 'error',\n          message: `Plugin '${pluginName}' could not be loaded`,\n          suggestion: 'Check if plugin is installed or built correctly'\n        });\n      }\n    } catch (error) {\n      results.push({\n        type: 'error', \n        message: `Failed to validate plugin '${pluginName}': ${error.message}`,\n        suggestion: 'Verify plugin dependencies and configuration'\n      });\n    }\n  }\n  \n  return results;\n}\n```\n\n## Test Scenario\n\nCreate `plugin-integration-test.scenario.yaml`:\n```yaml\nname: \"Plugin Integration Test\"\ndescription: \"Tests loading and using plugins specified in scenario YAML\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Test Issue\"\n          number: 123\n          state: \"open\"\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"1.23\"\n\nrun:\n  - name: \"Test GitHub plugin actions\"\n    input: \"Search for issues with label 'bug'\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify GitHub plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"Test Issue\"\n        description: \"Verify agent found the mocked issue\"\n\n  - name: \"Test EVM plugin actions\"\n    input: \"What's my wallet balance?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify EVM plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n        description: \"Verify agent reported the mocked balance\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Plugin Loading Test**: Verify plugins load without errors\n2. **Action Availability Test**: Confirm agent can use plugin actions\n3. **Error Handling Test**: Test with non-existent plugin\n4. **Default Plugin Test**: Verify bootstrap/sql are included by default\n5. **Exclusion Test**: Test `exclude_defaults: true` behavior\n\n## Dependencies\n\n- Fixes the `startAgent` hanging issue (#5719) to enable plugin testing\n- Builds on existing `loadAndPreparePlugin` functionality\n- Integrates with current scenario execution flow ",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement plugin specification and dynamic loading",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5725,
                "node_id": "I_kwDOMT5cIs7EngKo",
                "assignee": null,
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5725",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:48:08Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/labels{/name}",
                "updated_at": "2025-08-07T05:37:32Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              }
            ]
          },
          "issues": [
            {
              "id": 3310285907,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754",
              "body": "## Issue Summary\nThe `elizaos publish --npm` command reports successful publishing but the plugin is not actually published to npm, despite showing success messages. The npm publish is failing with a 404 error, but the ElizaOS CLI incorrectly reports success.\n\n## Key Problems Identified\n\n### 1. Critical NPM Publishing Failure\n- **Error**: `npm error 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found`\n- **Issue**: The package scope `@elizaos` doesn't exist on npm, preventing publishing\n- **Impact**: Package cannot be published to npm, but CLI reports success\n\n### 2. False Success Reporting\n- **Issue**: CLI reports `[‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm`\n- **Reality**: npm publish failed with 404 error\n- **Impact**: Developers believe their plugin is published when it's not\n\n### 3. Registry Repository Mismatch\n- **Expected**: Should create PR against `https://github.com/elizaos-plugins/registry`\n- **Actual**: Still references old registry `https://github.com/elizaos/registry`\n- **Impact**: Plugin won't appear in the official ElizaOS registry\n\n## Steps to Reproduce\n\n```bash\n# Navigate to the plugin directory\ncd packages/plugin-polygon\n\n# Ensure you're on the correct branch with the changes\ngit checkout polygon\n\n# Run the publish command\nelizaos publish --npm\n\n# Verify the success message appears\n# [‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm\n\n# Check if package actually exists on npm\nnpm view @elizaos/plugin-polygon@1.0.0\n# Result: 404 Not Found - '@elizaos/plugin-polygon@1.0.0' is not in this registry\n```\n\n## Technical Details\n\n### NPM Error Analysis\nThe npm logs show the root cause:\n```\nhttp fetch PUT 404 https://registry.npmjs.org/@elizaos%2fplugin-polygon 507ms\nerror 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found\n```\n\nThis indicates that the `@elizaos` scope doesn't exist on npm, which is required for publishing scoped packages.\n\n### CLI Error Handling Failure\nThe ElizaOS CLI is not properly parsing npm error codes:\n- npm returns exit code 1 (failure)\n- CLI ignores the error and reports success\n- No validation that the package actually exists on npm\n\n## Expected Behavior\n1. CLI should detect npm publish failures (exit code 1)\n2. CLI should fail with clear error message when package scope doesn't exist\n3. CLI should validate that package actually exists on npm after publishing\n4. CLI should create PRs against the correct registry repository\n\n## Recommended Fixes\n\n### 1. Fix NPM Error Detection\n```typescript\n// In the publish command, check npm exit code\nconst npmResult = await exec('npm publish', { cwd: pluginDir });\nif (npmResult.exitCode !== 0) {\n  throw new Error(`NPM publish failed: ${npmResult.stderr}`);\n}\n```\n\n### 2. Add Package Scope Validation\n```typescript\n// Before publishing, check if scope exists\nconst scopeExists = await checkNpmScope('@elizaos');\nif (!scopeExists) {\n  throw new Error('Package scope @elizaos does not exist on npm. Contact npm support to create the scope.');\n}\n```\n\n### 3. Add Post-Publish Validation\n```typescript\n// After publishing, verify package exists\nconst packageExists = await checkPackageExists(packageName, version);\nif (!packageExists) {\n  throw new Error(`Package was not published successfully. Check npm logs for details.`);\n}\n```\n\n## Priority\n**Critical** - This completely blocks plugin publishing and creates false success reports.\n\n## Affected Components\n- `packages/cli/src/commands/publish.ts`\n- NPM publishing logic\n- Error handling and success reporting\n- Package scope validation\n- Registry repository configuration\n\n## Immediate Action Required\n1. **Create the `@elizaos` scope on npm** or use an existing scope\n2. Update CLI to properly detect and handle npm publish failures\n3. Add post-publish validation to ensure packages actually exist on npm\n4. Update registry repository configuration\n\n## Alternative Solutions\n1. **Use existing scope**: Change package name to `@monilpat/plugin-polygon`\n2. **Create organization scope**: Set up `@elizaos` organization on npm\n3. **Use unscoped package**: Publish as `elizaos-plugin-polygon`\n\nThis issue is critically blocking plugin developers from successfully publishing their work and needs immediate attention from the ElizaOS team.\n",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "Critical: Plugin Publishing Fails with False Success Reports",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5754,
              "node_id": "I_kwDOMT5cIs7FTvRT",
              "assignee": null,
              "comments": 0,
              "html_url": "https://github.com/elizaOS/eliza/issues/5754",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-11T14:20:08Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/labels{/name}",
              "updated_at": "2025-08-11T14:20:08Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3308102900,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749",
              "body": "### Problem Statement\nCurrently, ElizaOS scenario testing lacks the ability to mock internal agent runtime calls (particularly LLM interactions) when testing via the API client. This makes it difficult to create deterministic tests for agent behavior and workflows.\n\n### Current Limitations\n- Global function mocks only work for code executed in the same process\n- No way to intercept `runtime.useModel` calls from the bootstrap plugin\n- Agent behavior is non-deterministic due to real LLM calls\n- Difficult to test specific agent decision paths and responses\n\n### Why Different Approach Was Needed\n\nThe existing mocking system was designed for **code execution environments** (E2B sandbox and local `node -e` processes), where mocks are applied to the execution context. However, **agent testing** works differently:\n\n- **E2B/Local Execution**: Code runs in isolated processes/sandboxes where global mocks can be applied\n- **Agent Testing**: Agent runs as a service with API client interaction, requiring direct runtime method interception\n- **Architecture Gap**: The bootstrap plugin calls `runtime.useModel` internally, which can't be mocked through the execution environment approach\n\nThis architectural difference necessitated a new approach that directly intercepts runtime methods rather than relying on execution context mocking.\n\n### Proposed Solution: Runtime Method Mocking\n\nWe've implemented a new mocking approach that directly intercepts `IAgentRuntime` method calls:\n\n#### Key Components\n\n1. **MockEngine Enhancement**\n   - Added `runtimeMethodMocks` to support mocking runtime methods\n   - Priority system: `runtimeMethod` > `service` > `globalFunction`\n   - Direct method replacement on the runtime instance\n\n2. **Schema Updates**\n   - Extended `MockSchema` to include `runtimeMethod: z.string().optional()`\n   - Supports mocking any `IAgentRuntime` method (e.g., `useModel`, `getService`)\n\n3. **Conditional Matching**\n   - Matcher functions can inspect method arguments\n   - Example: `\"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"`\n   - Supports complex conditional logic for when to apply mocks\n\n#### Usage Example\n\n```yaml\nsetup:\n  mocks:\n    - runtimeMethod: \"useModel\"\n      method: \"useModel\"\n      when:\n        matcher: \"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"\n      response: \"<response><name>agent</name><reasoning>Mocked response</reasoning><action>RESPOND</action></response>\"\n```\n\n#### Benefits\n\n1. **Deterministic Testing**: Replace LLM calls with static responses\n2. **Full Workflow Testing**: Test complete agent decision flows\n3. **Conditional Mocking**: Apply mocks based on specific conditions\n4. **Runtime Integration**: Works seamlessly with existing agent architecture\n5. **Backward Compatibility**: Existing mocks continue to work\n\n#### Implementation Steps\n\n- MockEngine runtime method support\n- Schema updates for runtimeMethod mocks\n- Conditional matching with matcher functions\n- Integration with scenario runner\n- Basic useModel mocking working\n- Add support for mocking other runtime methods (getService, etc.)\n- Create comprehensive test scenarios\n- Add documentation and examples\n- Consider adding mock recording/replay capabilities\n\n### Technical Details\n\nThe implementation works by:\n1. Creating the `IAgentRuntime` instance in the scenario runner\n2. Applying mocks directly to the runtime object before agent initialization\n3. The bootstrap plugin receives the mocked runtime and uses the mocked methods\n4. Mocks are reverted after scenario completion\n\nThis approach provides the foundation for robust, deterministic agent testing while maintaining the existing architecture.",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "Implement Runtime Method Mocking for Deterministic Agent Testing",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 7668252177,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/testing",
                  "name": "testing",
                  "color": "2D3957",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAAByRA-EQ",
                  "description": ""
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5749,
              "node_id": "I_kwDOMT5cIs7FLaT0",
              "assignee": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "comments": 0,
              "html_url": "https://github.com/elizaOS/eliza/issues/5749",
              "assignees": [
                {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-11T00:08:49Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/labels{/name}",
              "updated_at": "2025-08-11T00:09:37Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3304516859,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747",
              "body": null,
              "type": null,
              "user": {
                "id": 48334430,
                "url": "https://api.github.com/users/samarth30",
                "type": "User",
                "login": "samarth30",
                "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                "html_url": "https://github.com/samarth30",
                "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/samarth30/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/samarth30/followers",
                "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/samarth30/orgs",
                "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                "received_events_url": "https://api.github.com/users/samarth30/received_events"
              },
              "state": "open",
              "title": "Fixing bugs in eliza-cloud",
              "labels": [],
              "locked": false,
              "number": 5747,
              "node_id": "I_kwDOMT5cIs7E9uz7",
              "assignee": {
                "id": 48334430,
                "url": "https://api.github.com/users/samarth30",
                "type": "User",
                "login": "samarth30",
                "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                "html_url": "https://github.com/samarth30",
                "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/samarth30/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/samarth30/followers",
                "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/samarth30/orgs",
                "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                "received_events_url": "https://api.github.com/users/samarth30/received_events"
              },
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5747",
              "assignees": [
                {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-08T16:01:56Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/labels{/name}",
              "updated_at": "2025-08-08T19:02:49Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "MEMBER",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": {
                "id": 20150,
                "name": "Linear",
                "slug": "linear",
                "owner": {
                  "id": 46686594,
                  "url": "https://api.github.com/users/linear",
                  "type": "Organization",
                  "login": "linear",
                  "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ2Njg2NTk0",
                  "html_url": "https://github.com/linear",
                  "gists_url": "https://api.github.com/users/linear/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/linear/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/46686594?v=4",
                  "events_url": "https://api.github.com/users/linear/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/linear/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/linear/followers",
                  "following_url": "https://api.github.com/users/linear/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/linear/orgs",
                  "subscriptions_url": "https://api.github.com/users/linear/subscriptions",
                  "received_events_url": "https://api.github.com/users/linear/received_events"
                },
                "events": [
                  "check_suite",
                  "issues",
                  "issue_comment",
                  "pull_request",
                  "pull_request_review",
                  "repository",
                  "sub_issues"
                ],
                "node_id": "MDM6QXBwMjAxNTA=",
                "html_url": "https://github.com/apps/linear",
                "client_id": "Iv1.085d682ea245c945",
                "created_at": "2018-11-02T18:07:23Z",
                "updated_at": "2025-02-07T14:59:56Z",
                "description": "",
                "permissions": {
                  "checks": "read",
                  "issues": "write",
                  "metadata": "read",
                  "pull_requests": "write"
                },
                "external_url": "https://linear.app"
              }
            },
            {
              "id": 3302237103,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738",
              "body": "## Description\n\nThe `bun run clean` command is failing due to TypeScript errors in `@elizaos/core` package during the DTS (type definition) build phase.\n\n## Error Details\n\n### Build Process\n```\n‚Ä¢ Running build in 17 packages\n‚Ä¢ Remote caching disabled\n@elizaos/config:build: cache miss\n@elizaos/autodoc:build: cache miss\n@elizaos/core:build: cache miss\n```\n\n### TypeScript Errors in @elizaos/core/src/utils.ts\n1. Line 218: `error TS2345: Argument of type '`${string}-${string}-${string}-${string}-${string}`' is not assignable to parameter of type 'never'.`\n2. Line 366: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n3. Line 409: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n4. Line 536: `error TS2345: Argument of type '{ numberOfChunks: number; averageChunkSize: number; }' is not assignable to parameter of type 'never'.`\n\n### Impact\n- Blocks `bun run clean` command\n- Prevents successful build of `@elizaos/core`\n- Affects dependent packages in the monorepo\n\n## Steps to Reproduce\n1. Run `bun run clean`\n2. Observe build failure in `@elizaos/core`\n3. Build fails with TypeScript errors during DTS generation\n\n## Expected Behavior\n- `bun run clean` should complete successfully\n- `@elizaos/core` should build without TypeScript errors\n- Type definitions should be generated correctly\n\n## Suggested Fix\n\nThe errors suggest type mismatches in `utils.ts`. Need to:\n1. Review type definitions in affected lines\n2. Update type assertions or generic constraints\n3. Ensure string template literal types are properly handled\n4. Fix object type assignments\n\n### Files to Update\n- `packages/core/src/utils.ts`\n\n## Priority\n**HIGH** - This is blocking clean builds and potentially affecting development workflow.",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "üêõ Build failure in @elizaos/core causing bun run clean to fail",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5738,
              "node_id": "I_kwDOMT5cIs7E1COv",
              "assignee": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5738",
              "assignees": [
                {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-08T00:26:11Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/labels{/name}",
              "updated_at": "2025-08-11T14:56:01Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3301116813,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734",
              "body": "**Describe the bug**\n\nOn project creation, ElizaOS CLI fails with the following error:\n```\n‚óá  Failed to build project\nstdout: src/index.ts(7,25): error TS2345: Argument of type 'string' is not assignable to parameter of type 'undefined'.\nstderr: $ tsc --noEmit && vite build && tsup\n```\n\n**To Reproduce**\n\n- Install ElizaOS through `bun`\n```\nbun i -g @elizaos/cli\n```\n- Create new ElizaOS project\n```\nelizaos create abcde\n```\n\n**Expected behavior**\n\nProject built successfully\n\n**Screenshots**\n\n<img width=\"1095\" height=\"572\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/967dd6a2-0d70-4e2e-8019-85a2eab5f225\" />\n\n**Additional context**\n\nElizaOS CLI version: `1.3.2`\n",
              "type": null,
              "user": {
                "id": 74447600,
                "url": "https://api.github.com/users/Kemystra",
                "type": "User",
                "login": "Kemystra",
                "node_id": "MDQ6VXNlcjc0NDQ3NjAw",
                "html_url": "https://github.com/Kemystra",
                "gists_url": "https://api.github.com/users/Kemystra/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/Kemystra/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/74447600?v=4",
                "events_url": "https://api.github.com/users/Kemystra/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/Kemystra/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/Kemystra/followers",
                "following_url": "https://api.github.com/users/Kemystra/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/Kemystra/orgs",
                "subscriptions_url": "https://api.github.com/users/Kemystra/subscriptions",
                "received_events_url": "https://api.github.com/users/Kemystra/received_events"
              },
              "state": "open",
              "title": "Eliza CLI failed to build project",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5734,
              "node_id": "I_kwDOMT5cIs7EwwuN",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5734",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T16:14:00Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/labels{/name}",
              "updated_at": "2025-08-08T19:43:52Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "NONE",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3299481897,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729",
              "body": "# Relates to\r\n\r\nN/A (Documentation improvement, not tied to a specific issue or ticket)\r\n\r\n# Risks\r\n\r\nLow.  \r\nThis change only updates documentation and does not affect any code or functionality.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR updates the elizaos README to include a fix for installation errors that may occur due to permission issues. It adds a note suggesting the use of sudo if users encounter a \"Permission denied\" or \"InstallFailed\" error when running the `elizaos create my-agent` command.\r\n\r\n## What kind of change is this?\r\n\r\nImprovements (misc. changes to existing features)  \r\nDocumentation update\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes require a change to the project documentation.  \r\nI have updated the documentation accordingly.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\nStart by reviewing the changes in the README.md file, specifically the section on creating a new project.\r\n\r\n## Detailed testing steps\r\n\r\n- Open the updated README.md.\r\n- Review the new instructions under \"Create Your First Project.\"\r\n- Confirm that the added note about using `sudo` is clear and helpful for users who encounter permission errors.",
              "type": null,
              "user": {
                "id": 32749185,
                "url": "https://api.github.com/users/mandatedisrael",
                "type": "User",
                "login": "mandatedisrael",
                "node_id": "MDQ6VXNlcjMyNzQ5MTg1",
                "html_url": "https://github.com/mandatedisrael",
                "gists_url": "https://api.github.com/users/mandatedisrael/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/mandatedisrael/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/32749185?v=4",
                "events_url": "https://api.github.com/users/mandatedisrael/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/mandatedisrael/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/mandatedisrael/followers",
                "following_url": "https://api.github.com/users/mandatedisrael/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/mandatedisrael/orgs",
                "subscriptions_url": "https://api.github.com/users/mandatedisrael/subscriptions",
                "received_events_url": "https://api.github.com/users/mandatedisrael/received_events"
              },
              "draft": false,
              "state": "open",
              "title": "Update README.md to fix error",
              "labels": [],
              "locked": false,
              "number": 5729,
              "node_id": "PR_kwDOMT5cIs6iiNWN",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/pull/5729",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T08:10:12Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/labels{/name}",
              "updated_at": "2025-08-07T08:10:24Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/comments",
              "pull_request": {
                "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5729",
                "diff_url": "https://github.com/elizaOS/eliza/pull/5729.diff",
                "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                "merged_at": null,
                "patch_url": "https://github.com/elizaOS/eliza/pull/5729.patch"
              },
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "FIRST_TIME_CONTRIBUTOR",
              "performed_via_github_app": null
            },
            {
              "id": 3299322983,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728",
              "body": "# Background\r\n\r\n## What does this PR do?\r\n\r\nIntroduce entity for cancelling runs `CancelRunSignal`\r\n\r\n## Why are we doing this? Any context or related work?\r\n\r\n- Calls to LLMs usually cost some credits\r\n- When we receive the `RUN_STARTED` event we can check current entity and end run to prevent credits spending\r\n\r\n# Documentation changes needed?\r\n\r\n## Methods\r\n\r\n- `static getSignal(runId: UUID)` - get signal by runId or create if null\r\n- `static clear(runId: UUID)` - clear signal from map\r\n- `cancel(content?: Content)` - cancel current run and and send `content` as a response to user\r\n\r\n## Example\r\n\r\n```typescript\r\nimport { Content, EventType, Plugin } from \"@elizaos/core\";\r\nimport { CancelRunSignal } from \"@elizaos/plugin-bootstrap\";\r\n\r\n// consider we have a service to determine eligibility for entity\r\ninterface EligibilityService {\r\n  check(entityId: UUID): Promise<{ result: boolean, reason?: Content }>\r\n}\r\n\r\nconst plugin: Plugin = {\r\n...\r\n  events: {\r\n    [EventType.RUN_STARTED]: ({ entityId, runId, runtime }) => {\r\n      const service = runtime.getService<EligibilityService>(\"USER_MANAGEMENT\");\r\n      const { result, reason } = await service.check(entityId);\r\n      \r\n      if (!result) {\r\n        const signal = CancelRunSignal.getSignal(runId);\r\n        signal.cancel(reason);\r\n      }\r\n    },\r\n    ...\r\n  },\r\n  ...\r\n}\r\n\r\nexport default Plugin;\r\n```\r\n\r\n## Discord username\r\n\r\nalexd000\r\n\r\n",
              "type": null,
              "user": {
                "id": 82507604,
                "url": "https://api.github.com/users/alex-nax",
                "type": "User",
                "login": "alex-nax",
                "node_id": "MDQ6VXNlcjgyNTA3NjA0",
                "html_url": "https://github.com/alex-nax",
                "gists_url": "https://api.github.com/users/alex-nax/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/alex-nax/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/82507604?v=4",
                "events_url": "https://api.github.com/users/alex-nax/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/alex-nax/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/alex-nax/followers",
                "following_url": "https://api.github.com/users/alex-nax/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/alex-nax/orgs",
                "subscriptions_url": "https://api.github.com/users/alex-nax/subscriptions",
                "received_events_url": "https://api.github.com/users/alex-nax/received_events"
              },
              "draft": false,
              "state": "open",
              "title": "feat: ability to cancel current run before any calls to LLM are made",
              "labels": [],
              "locked": false,
              "number": 5728,
              "node_id": "PR_kwDOMT5cIs6ihriD",
              "assignee": null,
              "comments": 3,
              "html_url": "https://github.com/elizaOS/eliza/pull/5728",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T07:19:35Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/labels{/name}",
              "updated_at": "2025-08-07T07:22:05Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/comments",
              "pull_request": {
                "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5728",
                "diff_url": "https://github.com/elizaOS/eliza/pull/5728.diff",
                "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                "merged_at": null,
                "patch_url": "https://github.com/elizaOS/eliza/pull/5728.patch"
              },
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "FIRST_TIME_CONTRIBUTOR",
              "performed_via_github_app": null
            },
            {
              "id": 3298692741,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727",
              "body": "# feat(scenarios): Implement natural language agent interaction and response validation\n\n## Description\n\nThis ticket enables scenarios to test agent behavior through natural language interactions rather than direct code execution. This allows testing of agent reasoning, decision-making, and response generation in realistic conversation contexts with proper evaluation of agent responses.\n\n## Acceptance Criteria\n\n1. Scenario `run` blocks support `input` field for natural language prompts to agents\n2. Agent responses are captured and available for evaluation (text, thoughts, actions)\n3. Evaluators can access both agent response text and execution context\n4. Support for multi-turn conversations in scenarios\n5. Agent responses include thought process and action decisions\n6. Integration with existing evaluation engine for response validation\n7. Support for conversation context across multiple steps\n8. Agent response timing and performance metrics\n\n## Technical Approach\n\n### 1. Enhanced Run Step Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst RunStepSchema = z.object({\n  name: z.string().optional(),\n  // Natural language input to agent\n  input: z.string().optional(),\n  // Direct code execution (existing)\n  lang: z.string().optional(),\n  code: z.string().optional(),\n  // Agent interaction specific\n  agent_context: z.object({\n    conversation_id: z.string().optional(),\n    user_id: z.string().optional(),\n    room_id: z.string().optional(),\n  }).optional(),\n  evaluations: z.array(EvaluationSchema),\n});\n```\n\n### 2. Agent Interaction Engine\n```typescript\n// packages/cli/src/scenarios/agent-interaction.ts\nexport class AgentInteractionEngine {\n  constructor(private runtime: IAgentRuntime) {}\n\n  async interactWithAgent(input: string, context?: AgentContext): Promise<AgentResponse> {\n    // Create message for agent\n    const message: Memory = {\n      entityId: context?.user_id || 'scenario-user',\n      roomId: context?.room_id || 'scenario-room',\n      content: {\n        type: 'text',\n        text: input,\n      },\n      metadata: {\n        type: 'message',\n        conversationId: context?.conversation_id,\n      },\n    };\n\n    // Send to agent and capture response\n    const startTime = Date.now();\n    const response = await this.runtime.processMessage(message);\n    const endTime = Date.now();\n\n    return {\n      text: response.text,\n      thoughts: response.thoughts,\n      actions: response.actions,\n      timing: {\n        startTime,\n        endTime,\n        duration: endTime - startTime,\n      },\n      context: {\n        conversationId: context?.conversation_id,\n        messageId: message.id,\n      },\n    };\n  }\n}\n```\n\n### 3. Enhanced Execution Result\n```typescript\n// packages/cli/src/scenarios/providers.ts\nexport interface ExecutionResult {\n  exitCode: number;\n  stdout: string;\n  stderr: string;\n  files: Record<string, string>;\n  // New: Agent interaction results\n  agentResponse?: AgentResponse;\n  conversationHistory?: AgentResponse[];\n}\n```\n\n## Test Scenario\n\nCreate `agent-interaction-test.scenario.yaml`:\n```yaml\nname: \"Agent Interaction Test\"\ndescription: \"Tests natural language interaction with agents\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Implement Dark Mode\"\n          number: 123\n          state: \"open\"\n          labels: [\"feature\", \"ui\"]\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"2.5\"\n\nrun:\n  - name: \"Ask agent about roadmap\"\n    input: \"What new features are you planning to add?\"\n    agent_context:\n      conversation_id: \"roadmap-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify agent searched for issues\"\n      \n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n        description: \"Verify agent mentioned the mocked issue\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent provide a helpful and coherent response about new features?\"\n        expected: \"yes\"\n        description: \"Verify agent response quality\"\n\n  - name: \"Ask agent about wallet\"\n    input: \"What's my current wallet balance?\"\n    agent_context:\n      conversation_id: \"wallet-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify agent checked wallet balance\"\n      \n      - type: \"string_contains\"\n        value: \"2.5 ETH\"\n        description: \"Verify agent reported the correct balance\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent clearly explain the wallet balance information?\"\n        expected: \"yes\"\n\n  - name: \"Multi-turn conversation\"\n    input: \"Can you help me with both my wallet and roadmap?\"\n    agent_context:\n      conversation_id: \"multi-turn-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"ETH\"\n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent address both wallet and roadmap questions comprehensively?\"\n        expected: \"yes\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Single Turn**: Test basic agent interaction and response\n2. **Multi-turn**: Test conversation context across steps\n3. **Action Tracking**: Verify agent uses appropriate actions\n4. **Response Quality**: Test LLM judge evaluation of responses\n5. **Performance**: Test response timing and metrics\n6. **Error Handling**: Test agent behavior with invalid inputs\n\n## Dependencies\n\n- Requires plugin system integration (Ticket 1)\n- Builds on advanced mocking system (Ticket 2)\n- Integrates with existing evaluation engine\n- Depends on agent runtime message processing",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement natural language agent interaction and response validation",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5727,
              "node_id": "I_kwDOMT5cIs7Eng6F",
              "assignee": null,
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5727",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:49:34Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/labels{/name}",
              "updated_at": "2025-08-07T05:35:40Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3298691383,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726",
              "body": "# feat(scenarios): Implement conditional mocking and complex response structures\n\n## Description\n\nThis ticket enhances the mocking system to support conditional responses based on input parameters and complex response structures with metadata. This enables realistic testing of service interactions like GitHub API calls or EVM transactions with proper request/response matching.\n\n## Acceptance Criteria\n\n1. Mock definitions support `when` clauses for conditional responses\n2. `when` clauses can match on method arguments, input parameters, or request context\n3. Mock responses support complex nested structures with metadata (timestamps, IDs, etc.)\n4. Multiple mock responses can be defined for the same service/method with different conditions\n5. Mock system provides clear logging of which mock was triggered and why\n6. Mock responses can include realistic error conditions and edge cases\n7. Support for dynamic response generation based on input parameters\n8. Mock validation ensures `when` clauses are syntactically correct\n\n## Technical Approach\n\n### 1. Enhanced Mock Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst MockSchema = z.object({\n  service: z.string(),\n  method: z.string(),\n  when: z.object({\n    // Match on method arguments\n    args: z.array(z.any()).optional(),\n    // Match on specific argument values\n    input: z.record(z.any()).optional(),\n    // Match on request context\n    context: z.record(z.any()).optional(),\n    // Custom matching function\n    matcher: z.string().optional(), // JavaScript expression\n  }).optional(),\n  response: z.any(), // Can be function or static value\n  // For dynamic responses\n  responseFn: z.string().optional(), // JavaScript function\n  // Error simulation\n  error: z.object({\n    code: z.string(),\n    message: z.string(),\n  }).optional(),\n});\n```\n\n### 2. Mock Engine Implementation\n```typescript\n// packages/cli/src/scenarios/mock-engine.ts\nexport class MockEngine {\n  private mocks: MockDefinition[] = [];\n\n  addMock(mock: MockDefinition) {\n    this.mocks.push(mock);\n  }\n\n  async findMock(service: string, method: string, args: any[]): Promise<any> {\n    const candidates = this.mocks.filter(m => \n      m.service === service && m.method === method\n    );\n\n    for (const mock of candidates) {\n      if (await this.matchesCondition(mock, args)) {\n        this.logger.info(`Mock triggered: ${service}.${method} with condition: ${JSON.stringify(mock.when)}`);\n        return this.generateResponse(mock, args);\n      }\n    }\n\n    return null; // No mock found\n  }\n\n  private async matchesCondition(mock: MockDefinition, args: any[]): Promise<boolean> {\n    if (!mock.when) return true; // Default mock\n\n    // Match on arguments\n    if (mock.when.args) {\n      if (!this.deepEqual(args, mock.when.args)) return false;\n    }\n\n    // Match on input parameters\n    if (mock.when.input) {\n      const input = this.extractInputFromArgs(args);\n      if (!this.deepEqual(input, mock.when.input)) return false;\n    }\n\n    // Custom matcher function\n    if (mock.when.matcher) {\n      const matcherFn = new Function('args', 'input', mock.when.matcher);\n      return matcherFn(args, this.extractInputFromArgs(args));\n    }\n\n    return true;\n  }\n\n  private generateResponse(mock: MockDefinition, args: any[]): any {\n    if (mock.error) {\n      throw new Error(`${mock.error.code}: ${mock.error.message}`);\n    }\n\n    if (mock.responseFn) {\n      const responseFn = new Function('args', 'input', mock.responseFn);\n      return responseFn(args, this.extractInputFromArgs(args));\n    }\n\n    return mock.response;\n  }\n}\n```\n\n## Test Scenario\n\nCreate `advanced-mocking-test.scenario.yaml`:\n```yaml\nname: \"Advanced Mocking Test\"\ndescription: \"Tests conditional mocking and complex response structures\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    # Conditional GitHub issue search\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"bug\"\n        matcher: \"input.labels.includes('bug')\"\n      response:\n        - title: \"Critical Bug Found\"\n          number: 456\n          state: \"open\"\n          labels: [\"bug\", \"critical\"]\n          created_at: \"2024-07-15T10:00:00Z\"\n\n    # Conditional GitHub issue search - different response\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"feature\"\n        matcher: \"input.labels.includes('feature')\"\n      response:\n        - title: \"New Feature Request\"\n          number: 789\n          state: \"open\"\n          labels: [\"feature\", \"enhancement\"]\n          created_at: \"2024-07-15T11:00:00Z\"\n\n    # Dynamic EVM balance response\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      when:\n        args: [\"0x1234567890abcdef\"]\n      responseFn: |\n        return {\n          chain: \"ethereum\",\n          address: args[0],\n          balances: [\n            { symbol: \"ETH\", amount: \"1.23\" },\n            { symbol: \"USDC\", amount: \"1000.00\" }\n          ],\n          last_updated: new Date().toISOString()\n        }\n\n    # Error simulation\n    - service: \"github-service\"\n      method: \"readFile\"\n      when:\n        input:\n          path: \"/docs/nonexistent.md\"\n      error:\n        code: \"FILE_NOT_FOUND\"\n        message: \"File does not exist\"\n\nrun:\n  - name: \"Test conditional GitHub search\"\n    input: \"Search for issues with bug label\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"Critical Bug Found\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent correctly search for bug issues?\"\n        expected: \"yes\"\n\n  - name: \"Test dynamic EVM response\"\n    input: \"What's the balance for address 0x1234567890abcdef?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n      - type: \"string_contains\"\n        value: \"1000.00 USDC\"\n\n  - name: \"Test error handling\"\n    input: \"Read the file /docs/nonexistent.md\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.readFile\"\n      - type: \"string_contains\"\n        value: \"File does not exist\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Conditional Matching**: Test different responses based on input parameters\n2. **Dynamic Responses**: Test response generation based on arguments\n3. **Error Simulation**: Test error handling and reporting\n4. **Complex Structures**: Test nested response objects with metadata\n5. **Multiple Mocks**: Test multiple mocks for same service/method\n6. **Logging**: Verify mock selection is logged clearly\n\n## Dependencies\n\n- Builds on existing mock system in scenarios\n- Requires plugin system integration (Ticket 1)\n- Integrates with agent interaction testing (Ticket 3) ",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement conditional mocking and complex response structures",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5726,
              "node_id": "I_kwDOMT5cIs7Engk3",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5726",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:49:00Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/labels{/name}",
              "updated_at": "2025-08-07T05:32:53Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3298689704,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725",
              "body": "# feat(scenarios): Implement plugin specification and dynamic loading\n\n## Description\n\nThis ticket implements plugin specification in scenario YAML files, allowing scenarios to declare which plugins are required for testing. This enables testing of agent behaviors that depend on specific plugins like `@elizaos/plugin-github` or `@elizaos/plugin-evm`. The system will dynamically load specified plugins during scenario execution and make their actions, providers, and services available to the agent.\n\n## Acceptance Criteria\n\n1. Scenario YAML supports a `plugins` array at the root level with string plugin names\n2. The `initializeAgent()` function respects scenario plugin specifications and loads them via `startAgent()`\n3. Plugin loading follows the same dependency resolution and error handling as the main CLI\n4. Scenarios can specify both string plugin names (`@elizaos/plugin-github`) and direct plugin objects\n5. Plugin loading errors are clearly reported with actionable guidance\n6. Default plugins (bootstrap, sql) are automatically included unless explicitly excluded via `exclude_defaults: true`\n7. Plugin conflicts are detected and reported during scenario validation\n8. Plugin initialization errors don't crash the scenario but are reported in results\n\n## Technical Approach\n\n### 1. Update Scenario Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst ScenarioSchema = z.object({\n  name: z.string(),\n  description: z.string(),\n  plugins: z.array(z.string()).optional(), // e.g., [\"@elizaos/plugin-github\"]\n  exclude_defaults: z.boolean().optional(), // exclude bootstrap/sql\n  environment: EnvironmentSchema,\n  setup: SetupSchema.optional(),\n  run: z.array(RunStepSchema),\n  judgment: JudgmentSchema,\n});\n```\n\n### 2. Enhance Runtime Factory\n```typescript\n// packages/cli/src/scenarios/runtime-factory.ts\nexport async function initializeAgent(scenario: Scenario): Promise<IAgentRuntime> {\n  const character: Character = {\n    name: 'scenario-runner',\n    id: stringToUuid('scenario-runner'),\n    bio: 'A minimal character for running scenarios',\n    plugins: scenario.plugins || []\n  };\n\n  // Load default plugins unless excluded\n  if (!scenario.exclude_defaults) {\n    character.plugins.push('@elizaos/plugin-bootstrap', '@elizaos/plugin-sql');\n  }\n\n  const runtime = await startAgent(\n    encryptedCharacter(character),\n    server,\n    undefined,\n    character.plugins,\n    { isTestMode: true }\n  );\n\n  return runtime;\n}\n```\n\n### 3. Plugin Validation\n```typescript\n// packages/cli/src/scenarios/plugin-validator.ts\nexport async function validateScenarioPlugins(scenario: Scenario): Promise<ValidationResult[]> {\n  const results: ValidationResult[] = [];\n  \n  for (const pluginName of scenario.plugins || []) {\n    try {\n      const plugin = await loadAndPreparePlugin(pluginName);\n      if (!plugin) {\n        results.push({\n          type: 'error',\n          message: `Plugin '${pluginName}' could not be loaded`,\n          suggestion: 'Check if plugin is installed or built correctly'\n        });\n      }\n    } catch (error) {\n      results.push({\n        type: 'error', \n        message: `Failed to validate plugin '${pluginName}': ${error.message}`,\n        suggestion: 'Verify plugin dependencies and configuration'\n      });\n    }\n  }\n  \n  return results;\n}\n```\n\n## Test Scenario\n\nCreate `plugin-integration-test.scenario.yaml`:\n```yaml\nname: \"Plugin Integration Test\"\ndescription: \"Tests loading and using plugins specified in scenario YAML\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Test Issue\"\n          number: 123\n          state: \"open\"\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"1.23\"\n\nrun:\n  - name: \"Test GitHub plugin actions\"\n    input: \"Search for issues with label 'bug'\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify GitHub plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"Test Issue\"\n        description: \"Verify agent found the mocked issue\"\n\n  - name: \"Test EVM plugin actions\"\n    input: \"What's my wallet balance?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify EVM plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n        description: \"Verify agent reported the mocked balance\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Plugin Loading Test**: Verify plugins load without errors\n2. **Action Availability Test**: Confirm agent can use plugin actions\n3. **Error Handling Test**: Test with non-existent plugin\n4. **Default Plugin Test**: Verify bootstrap/sql are included by default\n5. **Exclusion Test**: Test `exclude_defaults: true` behavior\n\n## Dependencies\n\n- Fixes the `startAgent` hanging issue (#5719) to enable plugin testing\n- Builds on existing `loadAndPreparePlugin` functionality\n- Integrates with current scenario execution flow ",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement plugin specification and dynamic loading",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5725,
              "node_id": "I_kwDOMT5cIs7EngKo",
              "assignee": null,
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5725",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:48:08Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/labels{/name}",
              "updated_at": "2025-08-07T05:37:32Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            }
          ]
        },
        "text": "Open issues for elizaOS/eliza (10 shown):\n‚Ä¢ #5754: Critical: Plugin Publishing Fails with False Success Reports (open) [bug]\n‚Ä¢ #5749: Implement Runtime Method Mocking for Deterministic Agent Testing (open) [enhancement, testing, Reality Spiral]\n‚Ä¢ #5747: Fixing bugs in eliza-cloud (open)\n‚Ä¢ #5738: üêõ Build failure in @elizaos/core causing bun run clean to fail (open) [bug]\n‚Ä¢ #5734: Eliza CLI failed to build project (open) [bug]\n‚Ä¢ #5729: Update README.md to fix error (open)\n‚Ä¢ #5728: feat: ability to cancel current run before any calls to LLM are made (open)\n‚Ä¢ #5727: feat(scenarios): Implement natural language agent interaction and response validation (open) [enhancement, Reality Spiral]\n‚Ä¢ #5726: feat(scenarios): Implement conditional mocking and complex response structures (open) [enhancement, Reality Spiral]\n‚Ä¢ #5725: feat(scenarios): Implement plugin specification and dynamic loading (open) [enhancement, Reality Spiral]",
        "values": {
          "issues": [
            {
              "id": 3310285907,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754",
              "body": "## Issue Summary\nThe `elizaos publish --npm` command reports successful publishing but the plugin is not actually published to npm, despite showing success messages. The npm publish is failing with a 404 error, but the ElizaOS CLI incorrectly reports success.\n\n## Key Problems Identified\n\n### 1. Critical NPM Publishing Failure\n- **Error**: `npm error 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found`\n- **Issue**: The package scope `@elizaos` doesn't exist on npm, preventing publishing\n- **Impact**: Package cannot be published to npm, but CLI reports success\n\n### 2. False Success Reporting\n- **Issue**: CLI reports `[‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm`\n- **Reality**: npm publish failed with 404 error\n- **Impact**: Developers believe their plugin is published when it's not\n\n### 3. Registry Repository Mismatch\n- **Expected**: Should create PR against `https://github.com/elizaos-plugins/registry`\n- **Actual**: Still references old registry `https://github.com/elizaos/registry`\n- **Impact**: Plugin won't appear in the official ElizaOS registry\n\n## Steps to Reproduce\n\n```bash\n# Navigate to the plugin directory\ncd packages/plugin-polygon\n\n# Ensure you're on the correct branch with the changes\ngit checkout polygon\n\n# Run the publish command\nelizaos publish --npm\n\n# Verify the success message appears\n# [‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm\n\n# Check if package actually exists on npm\nnpm view @elizaos/plugin-polygon@1.0.0\n# Result: 404 Not Found - '@elizaos/plugin-polygon@1.0.0' is not in this registry\n```\n\n## Technical Details\n\n### NPM Error Analysis\nThe npm logs show the root cause:\n```\nhttp fetch PUT 404 https://registry.npmjs.org/@elizaos%2fplugin-polygon 507ms\nerror 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found\n```\n\nThis indicates that the `@elizaos` scope doesn't exist on npm, which is required for publishing scoped packages.\n\n### CLI Error Handling Failure\nThe ElizaOS CLI is not properly parsing npm error codes:\n- npm returns exit code 1 (failure)\n- CLI ignores the error and reports success\n- No validation that the package actually exists on npm\n\n## Expected Behavior\n1. CLI should detect npm publish failures (exit code 1)\n2. CLI should fail with clear error message when package scope doesn't exist\n3. CLI should validate that package actually exists on npm after publishing\n4. CLI should create PRs against the correct registry repository\n\n## Recommended Fixes\n\n### 1. Fix NPM Error Detection\n```typescript\n// In the publish command, check npm exit code\nconst npmResult = await exec('npm publish', { cwd: pluginDir });\nif (npmResult.exitCode !== 0) {\n  throw new Error(`NPM publish failed: ${npmResult.stderr}`);\n}\n```\n\n### 2. Add Package Scope Validation\n```typescript\n// Before publishing, check if scope exists\nconst scopeExists = await checkNpmScope('@elizaos');\nif (!scopeExists) {\n  throw new Error('Package scope @elizaos does not exist on npm. Contact npm support to create the scope.');\n}\n```\n\n### 3. Add Post-Publish Validation\n```typescript\n// After publishing, verify package exists\nconst packageExists = await checkPackageExists(packageName, version);\nif (!packageExists) {\n  throw new Error(`Package was not published successfully. Check npm logs for details.`);\n}\n```\n\n## Priority\n**Critical** - This completely blocks plugin publishing and creates false success reports.\n\n## Affected Components\n- `packages/cli/src/commands/publish.ts`\n- NPM publishing logic\n- Error handling and success reporting\n- Package scope validation\n- Registry repository configuration\n\n## Immediate Action Required\n1. **Create the `@elizaos` scope on npm** or use an existing scope\n2. Update CLI to properly detect and handle npm publish failures\n3. Add post-publish validation to ensure packages actually exist on npm\n4. Update registry repository configuration\n\n## Alternative Solutions\n1. **Use existing scope**: Change package name to `@monilpat/plugin-polygon`\n2. **Create organization scope**: Set up `@elizaos` organization on npm\n3. **Use unscoped package**: Publish as `elizaos-plugin-polygon`\n\nThis issue is critically blocking plugin developers from successfully publishing their work and needs immediate attention from the ElizaOS team.\n",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "Critical: Plugin Publishing Fails with False Success Reports",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5754,
              "node_id": "I_kwDOMT5cIs7FTvRT",
              "assignee": null,
              "comments": 0,
              "html_url": "https://github.com/elizaOS/eliza/issues/5754",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-11T14:20:08Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/labels{/name}",
              "updated_at": "2025-08-11T14:20:08Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3308102900,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749",
              "body": "### Problem Statement\nCurrently, ElizaOS scenario testing lacks the ability to mock internal agent runtime calls (particularly LLM interactions) when testing via the API client. This makes it difficult to create deterministic tests for agent behavior and workflows.\n\n### Current Limitations\n- Global function mocks only work for code executed in the same process\n- No way to intercept `runtime.useModel` calls from the bootstrap plugin\n- Agent behavior is non-deterministic due to real LLM calls\n- Difficult to test specific agent decision paths and responses\n\n### Why Different Approach Was Needed\n\nThe existing mocking system was designed for **code execution environments** (E2B sandbox and local `node -e` processes), where mocks are applied to the execution context. However, **agent testing** works differently:\n\n- **E2B/Local Execution**: Code runs in isolated processes/sandboxes where global mocks can be applied\n- **Agent Testing**: Agent runs as a service with API client interaction, requiring direct runtime method interception\n- **Architecture Gap**: The bootstrap plugin calls `runtime.useModel` internally, which can't be mocked through the execution environment approach\n\nThis architectural difference necessitated a new approach that directly intercepts runtime methods rather than relying on execution context mocking.\n\n### Proposed Solution: Runtime Method Mocking\n\nWe've implemented a new mocking approach that directly intercepts `IAgentRuntime` method calls:\n\n#### Key Components\n\n1. **MockEngine Enhancement**\n   - Added `runtimeMethodMocks` to support mocking runtime methods\n   - Priority system: `runtimeMethod` > `service` > `globalFunction`\n   - Direct method replacement on the runtime instance\n\n2. **Schema Updates**\n   - Extended `MockSchema` to include `runtimeMethod: z.string().optional()`\n   - Supports mocking any `IAgentRuntime` method (e.g., `useModel`, `getService`)\n\n3. **Conditional Matching**\n   - Matcher functions can inspect method arguments\n   - Example: `\"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"`\n   - Supports complex conditional logic for when to apply mocks\n\n#### Usage Example\n\n```yaml\nsetup:\n  mocks:\n    - runtimeMethod: \"useModel\"\n      method: \"useModel\"\n      when:\n        matcher: \"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"\n      response: \"<response><name>agent</name><reasoning>Mocked response</reasoning><action>RESPOND</action></response>\"\n```\n\n#### Benefits\n\n1. **Deterministic Testing**: Replace LLM calls with static responses\n2. **Full Workflow Testing**: Test complete agent decision flows\n3. **Conditional Mocking**: Apply mocks based on specific conditions\n4. **Runtime Integration**: Works seamlessly with existing agent architecture\n5. **Backward Compatibility**: Existing mocks continue to work\n\n#### Implementation Steps\n\n- MockEngine runtime method support\n- Schema updates for runtimeMethod mocks\n- Conditional matching with matcher functions\n- Integration with scenario runner\n- Basic useModel mocking working\n- Add support for mocking other runtime methods (getService, etc.)\n- Create comprehensive test scenarios\n- Add documentation and examples\n- Consider adding mock recording/replay capabilities\n\n### Technical Details\n\nThe implementation works by:\n1. Creating the `IAgentRuntime` instance in the scenario runner\n2. Applying mocks directly to the runtime object before agent initialization\n3. The bootstrap plugin receives the mocked runtime and uses the mocked methods\n4. Mocks are reverted after scenario completion\n\nThis approach provides the foundation for robust, deterministic agent testing while maintaining the existing architecture.",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "Implement Runtime Method Mocking for Deterministic Agent Testing",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 7668252177,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/testing",
                  "name": "testing",
                  "color": "2D3957",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAAByRA-EQ",
                  "description": ""
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5749,
              "node_id": "I_kwDOMT5cIs7FLaT0",
              "assignee": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "comments": 0,
              "html_url": "https://github.com/elizaOS/eliza/issues/5749",
              "assignees": [
                {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-11T00:08:49Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/labels{/name}",
              "updated_at": "2025-08-11T00:09:37Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3304516859,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747",
              "body": null,
              "type": null,
              "user": {
                "id": 48334430,
                "url": "https://api.github.com/users/samarth30",
                "type": "User",
                "login": "samarth30",
                "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                "html_url": "https://github.com/samarth30",
                "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/samarth30/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/samarth30/followers",
                "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/samarth30/orgs",
                "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                "received_events_url": "https://api.github.com/users/samarth30/received_events"
              },
              "state": "open",
              "title": "Fixing bugs in eliza-cloud",
              "labels": [],
              "locked": false,
              "number": 5747,
              "node_id": "I_kwDOMT5cIs7E9uz7",
              "assignee": {
                "id": 48334430,
                "url": "https://api.github.com/users/samarth30",
                "type": "User",
                "login": "samarth30",
                "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                "html_url": "https://github.com/samarth30",
                "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/samarth30/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/samarth30/followers",
                "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/samarth30/orgs",
                "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                "received_events_url": "https://api.github.com/users/samarth30/received_events"
              },
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5747",
              "assignees": [
                {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-08T16:01:56Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/labels{/name}",
              "updated_at": "2025-08-08T19:02:49Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "MEMBER",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": {
                "id": 20150,
                "name": "Linear",
                "slug": "linear",
                "owner": {
                  "id": 46686594,
                  "url": "https://api.github.com/users/linear",
                  "type": "Organization",
                  "login": "linear",
                  "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ2Njg2NTk0",
                  "html_url": "https://github.com/linear",
                  "gists_url": "https://api.github.com/users/linear/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/linear/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/46686594?v=4",
                  "events_url": "https://api.github.com/users/linear/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/linear/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/linear/followers",
                  "following_url": "https://api.github.com/users/linear/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/linear/orgs",
                  "subscriptions_url": "https://api.github.com/users/linear/subscriptions",
                  "received_events_url": "https://api.github.com/users/linear/received_events"
                },
                "events": [
                  "check_suite",
                  "issues",
                  "issue_comment",
                  "pull_request",
                  "pull_request_review",
                  "repository",
                  "sub_issues"
                ],
                "node_id": "MDM6QXBwMjAxNTA=",
                "html_url": "https://github.com/apps/linear",
                "client_id": "Iv1.085d682ea245c945",
                "created_at": "2018-11-02T18:07:23Z",
                "updated_at": "2025-02-07T14:59:56Z",
                "description": "",
                "permissions": {
                  "checks": "read",
                  "issues": "write",
                  "metadata": "read",
                  "pull_requests": "write"
                },
                "external_url": "https://linear.app"
              }
            },
            {
              "id": 3302237103,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738",
              "body": "## Description\n\nThe `bun run clean` command is failing due to TypeScript errors in `@elizaos/core` package during the DTS (type definition) build phase.\n\n## Error Details\n\n### Build Process\n```\n‚Ä¢ Running build in 17 packages\n‚Ä¢ Remote caching disabled\n@elizaos/config:build: cache miss\n@elizaos/autodoc:build: cache miss\n@elizaos/core:build: cache miss\n```\n\n### TypeScript Errors in @elizaos/core/src/utils.ts\n1. Line 218: `error TS2345: Argument of type '`${string}-${string}-${string}-${string}-${string}`' is not assignable to parameter of type 'never'.`\n2. Line 366: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n3. Line 409: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n4. Line 536: `error TS2345: Argument of type '{ numberOfChunks: number; averageChunkSize: number; }' is not assignable to parameter of type 'never'.`\n\n### Impact\n- Blocks `bun run clean` command\n- Prevents successful build of `@elizaos/core`\n- Affects dependent packages in the monorepo\n\n## Steps to Reproduce\n1. Run `bun run clean`\n2. Observe build failure in `@elizaos/core`\n3. Build fails with TypeScript errors during DTS generation\n\n## Expected Behavior\n- `bun run clean` should complete successfully\n- `@elizaos/core` should build without TypeScript errors\n- Type definitions should be generated correctly\n\n## Suggested Fix\n\nThe errors suggest type mismatches in `utils.ts`. Need to:\n1. Review type definitions in affected lines\n2. Update type assertions or generic constraints\n3. Ensure string template literal types are properly handled\n4. Fix object type assignments\n\n### Files to Update\n- `packages/core/src/utils.ts`\n\n## Priority\n**HIGH** - This is blocking clean builds and potentially affecting development workflow.",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "üêõ Build failure in @elizaos/core causing bun run clean to fail",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5738,
              "node_id": "I_kwDOMT5cIs7E1COv",
              "assignee": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5738",
              "assignees": [
                {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-08T00:26:11Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/labels{/name}",
              "updated_at": "2025-08-11T14:56:01Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3301116813,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734",
              "body": "**Describe the bug**\n\nOn project creation, ElizaOS CLI fails with the following error:\n```\n‚óá  Failed to build project\nstdout: src/index.ts(7,25): error TS2345: Argument of type 'string' is not assignable to parameter of type 'undefined'.\nstderr: $ tsc --noEmit && vite build && tsup\n```\n\n**To Reproduce**\n\n- Install ElizaOS through `bun`\n```\nbun i -g @elizaos/cli\n```\n- Create new ElizaOS project\n```\nelizaos create abcde\n```\n\n**Expected behavior**\n\nProject built successfully\n\n**Screenshots**\n\n<img width=\"1095\" height=\"572\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/967dd6a2-0d70-4e2e-8019-85a2eab5f225\" />\n\n**Additional context**\n\nElizaOS CLI version: `1.3.2`\n",
              "type": null,
              "user": {
                "id": 74447600,
                "url": "https://api.github.com/users/Kemystra",
                "type": "User",
                "login": "Kemystra",
                "node_id": "MDQ6VXNlcjc0NDQ3NjAw",
                "html_url": "https://github.com/Kemystra",
                "gists_url": "https://api.github.com/users/Kemystra/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/Kemystra/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/74447600?v=4",
                "events_url": "https://api.github.com/users/Kemystra/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/Kemystra/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/Kemystra/followers",
                "following_url": "https://api.github.com/users/Kemystra/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/Kemystra/orgs",
                "subscriptions_url": "https://api.github.com/users/Kemystra/subscriptions",
                "received_events_url": "https://api.github.com/users/Kemystra/received_events"
              },
              "state": "open",
              "title": "Eliza CLI failed to build project",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5734,
              "node_id": "I_kwDOMT5cIs7EwwuN",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5734",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T16:14:00Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/labels{/name}",
              "updated_at": "2025-08-08T19:43:52Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "NONE",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3299481897,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729",
              "body": "# Relates to\r\n\r\nN/A (Documentation improvement, not tied to a specific issue or ticket)\r\n\r\n# Risks\r\n\r\nLow.  \r\nThis change only updates documentation and does not affect any code or functionality.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR updates the elizaos README to include a fix for installation errors that may occur due to permission issues. It adds a note suggesting the use of sudo if users encounter a \"Permission denied\" or \"InstallFailed\" error when running the `elizaos create my-agent` command.\r\n\r\n## What kind of change is this?\r\n\r\nImprovements (misc. changes to existing features)  \r\nDocumentation update\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes require a change to the project documentation.  \r\nI have updated the documentation accordingly.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\nStart by reviewing the changes in the README.md file, specifically the section on creating a new project.\r\n\r\n## Detailed testing steps\r\n\r\n- Open the updated README.md.\r\n- Review the new instructions under \"Create Your First Project.\"\r\n- Confirm that the added note about using `sudo` is clear and helpful for users who encounter permission errors.",
              "type": null,
              "user": {
                "id": 32749185,
                "url": "https://api.github.com/users/mandatedisrael",
                "type": "User",
                "login": "mandatedisrael",
                "node_id": "MDQ6VXNlcjMyNzQ5MTg1",
                "html_url": "https://github.com/mandatedisrael",
                "gists_url": "https://api.github.com/users/mandatedisrael/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/mandatedisrael/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/32749185?v=4",
                "events_url": "https://api.github.com/users/mandatedisrael/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/mandatedisrael/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/mandatedisrael/followers",
                "following_url": "https://api.github.com/users/mandatedisrael/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/mandatedisrael/orgs",
                "subscriptions_url": "https://api.github.com/users/mandatedisrael/subscriptions",
                "received_events_url": "https://api.github.com/users/mandatedisrael/received_events"
              },
              "draft": false,
              "state": "open",
              "title": "Update README.md to fix error",
              "labels": [],
              "locked": false,
              "number": 5729,
              "node_id": "PR_kwDOMT5cIs6iiNWN",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/pull/5729",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T08:10:12Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/labels{/name}",
              "updated_at": "2025-08-07T08:10:24Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/comments",
              "pull_request": {
                "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5729",
                "diff_url": "https://github.com/elizaOS/eliza/pull/5729.diff",
                "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                "merged_at": null,
                "patch_url": "https://github.com/elizaOS/eliza/pull/5729.patch"
              },
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "FIRST_TIME_CONTRIBUTOR",
              "performed_via_github_app": null
            },
            {
              "id": 3299322983,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728",
              "body": "# Background\r\n\r\n## What does this PR do?\r\n\r\nIntroduce entity for cancelling runs `CancelRunSignal`\r\n\r\n## Why are we doing this? Any context or related work?\r\n\r\n- Calls to LLMs usually cost some credits\r\n- When we receive the `RUN_STARTED` event we can check current entity and end run to prevent credits spending\r\n\r\n# Documentation changes needed?\r\n\r\n## Methods\r\n\r\n- `static getSignal(runId: UUID)` - get signal by runId or create if null\r\n- `static clear(runId: UUID)` - clear signal from map\r\n- `cancel(content?: Content)` - cancel current run and and send `content` as a response to user\r\n\r\n## Example\r\n\r\n```typescript\r\nimport { Content, EventType, Plugin } from \"@elizaos/core\";\r\nimport { CancelRunSignal } from \"@elizaos/plugin-bootstrap\";\r\n\r\n// consider we have a service to determine eligibility for entity\r\ninterface EligibilityService {\r\n  check(entityId: UUID): Promise<{ result: boolean, reason?: Content }>\r\n}\r\n\r\nconst plugin: Plugin = {\r\n...\r\n  events: {\r\n    [EventType.RUN_STARTED]: ({ entityId, runId, runtime }) => {\r\n      const service = runtime.getService<EligibilityService>(\"USER_MANAGEMENT\");\r\n      const { result, reason } = await service.check(entityId);\r\n      \r\n      if (!result) {\r\n        const signal = CancelRunSignal.getSignal(runId);\r\n        signal.cancel(reason);\r\n      }\r\n    },\r\n    ...\r\n  },\r\n  ...\r\n}\r\n\r\nexport default Plugin;\r\n```\r\n\r\n## Discord username\r\n\r\nalexd000\r\n\r\n",
              "type": null,
              "user": {
                "id": 82507604,
                "url": "https://api.github.com/users/alex-nax",
                "type": "User",
                "login": "alex-nax",
                "node_id": "MDQ6VXNlcjgyNTA3NjA0",
                "html_url": "https://github.com/alex-nax",
                "gists_url": "https://api.github.com/users/alex-nax/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/alex-nax/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/82507604?v=4",
                "events_url": "https://api.github.com/users/alex-nax/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/alex-nax/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/alex-nax/followers",
                "following_url": "https://api.github.com/users/alex-nax/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/alex-nax/orgs",
                "subscriptions_url": "https://api.github.com/users/alex-nax/subscriptions",
                "received_events_url": "https://api.github.com/users/alex-nax/received_events"
              },
              "draft": false,
              "state": "open",
              "title": "feat: ability to cancel current run before any calls to LLM are made",
              "labels": [],
              "locked": false,
              "number": 5728,
              "node_id": "PR_kwDOMT5cIs6ihriD",
              "assignee": null,
              "comments": 3,
              "html_url": "https://github.com/elizaOS/eliza/pull/5728",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T07:19:35Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/labels{/name}",
              "updated_at": "2025-08-07T07:22:05Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/comments",
              "pull_request": {
                "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5728",
                "diff_url": "https://github.com/elizaOS/eliza/pull/5728.diff",
                "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                "merged_at": null,
                "patch_url": "https://github.com/elizaOS/eliza/pull/5728.patch"
              },
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "FIRST_TIME_CONTRIBUTOR",
              "performed_via_github_app": null
            },
            {
              "id": 3298692741,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727",
              "body": "# feat(scenarios): Implement natural language agent interaction and response validation\n\n## Description\n\nThis ticket enables scenarios to test agent behavior through natural language interactions rather than direct code execution. This allows testing of agent reasoning, decision-making, and response generation in realistic conversation contexts with proper evaluation of agent responses.\n\n## Acceptance Criteria\n\n1. Scenario `run` blocks support `input` field for natural language prompts to agents\n2. Agent responses are captured and available for evaluation (text, thoughts, actions)\n3. Evaluators can access both agent response text and execution context\n4. Support for multi-turn conversations in scenarios\n5. Agent responses include thought process and action decisions\n6. Integration with existing evaluation engine for response validation\n7. Support for conversation context across multiple steps\n8. Agent response timing and performance metrics\n\n## Technical Approach\n\n### 1. Enhanced Run Step Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst RunStepSchema = z.object({\n  name: z.string().optional(),\n  // Natural language input to agent\n  input: z.string().optional(),\n  // Direct code execution (existing)\n  lang: z.string().optional(),\n  code: z.string().optional(),\n  // Agent interaction specific\n  agent_context: z.object({\n    conversation_id: z.string().optional(),\n    user_id: z.string().optional(),\n    room_id: z.string().optional(),\n  }).optional(),\n  evaluations: z.array(EvaluationSchema),\n});\n```\n\n### 2. Agent Interaction Engine\n```typescript\n// packages/cli/src/scenarios/agent-interaction.ts\nexport class AgentInteractionEngine {\n  constructor(private runtime: IAgentRuntime) {}\n\n  async interactWithAgent(input: string, context?: AgentContext): Promise<AgentResponse> {\n    // Create message for agent\n    const message: Memory = {\n      entityId: context?.user_id || 'scenario-user',\n      roomId: context?.room_id || 'scenario-room',\n      content: {\n        type: 'text',\n        text: input,\n      },\n      metadata: {\n        type: 'message',\n        conversationId: context?.conversation_id,\n      },\n    };\n\n    // Send to agent and capture response\n    const startTime = Date.now();\n    const response = await this.runtime.processMessage(message);\n    const endTime = Date.now();\n\n    return {\n      text: response.text,\n      thoughts: response.thoughts,\n      actions: response.actions,\n      timing: {\n        startTime,\n        endTime,\n        duration: endTime - startTime,\n      },\n      context: {\n        conversationId: context?.conversation_id,\n        messageId: message.id,\n      },\n    };\n  }\n}\n```\n\n### 3. Enhanced Execution Result\n```typescript\n// packages/cli/src/scenarios/providers.ts\nexport interface ExecutionResult {\n  exitCode: number;\n  stdout: string;\n  stderr: string;\n  files: Record<string, string>;\n  // New: Agent interaction results\n  agentResponse?: AgentResponse;\n  conversationHistory?: AgentResponse[];\n}\n```\n\n## Test Scenario\n\nCreate `agent-interaction-test.scenario.yaml`:\n```yaml\nname: \"Agent Interaction Test\"\ndescription: \"Tests natural language interaction with agents\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Implement Dark Mode\"\n          number: 123\n          state: \"open\"\n          labels: [\"feature\", \"ui\"]\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"2.5\"\n\nrun:\n  - name: \"Ask agent about roadmap\"\n    input: \"What new features are you planning to add?\"\n    agent_context:\n      conversation_id: \"roadmap-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify agent searched for issues\"\n      \n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n        description: \"Verify agent mentioned the mocked issue\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent provide a helpful and coherent response about new features?\"\n        expected: \"yes\"\n        description: \"Verify agent response quality\"\n\n  - name: \"Ask agent about wallet\"\n    input: \"What's my current wallet balance?\"\n    agent_context:\n      conversation_id: \"wallet-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify agent checked wallet balance\"\n      \n      - type: \"string_contains\"\n        value: \"2.5 ETH\"\n        description: \"Verify agent reported the correct balance\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent clearly explain the wallet balance information?\"\n        expected: \"yes\"\n\n  - name: \"Multi-turn conversation\"\n    input: \"Can you help me with both my wallet and roadmap?\"\n    agent_context:\n      conversation_id: \"multi-turn-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"ETH\"\n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent address both wallet and roadmap questions comprehensively?\"\n        expected: \"yes\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Single Turn**: Test basic agent interaction and response\n2. **Multi-turn**: Test conversation context across steps\n3. **Action Tracking**: Verify agent uses appropriate actions\n4. **Response Quality**: Test LLM judge evaluation of responses\n5. **Performance**: Test response timing and metrics\n6. **Error Handling**: Test agent behavior with invalid inputs\n\n## Dependencies\n\n- Requires plugin system integration (Ticket 1)\n- Builds on advanced mocking system (Ticket 2)\n- Integrates with existing evaluation engine\n- Depends on agent runtime message processing",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement natural language agent interaction and response validation",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5727,
              "node_id": "I_kwDOMT5cIs7Eng6F",
              "assignee": null,
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5727",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:49:34Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/labels{/name}",
              "updated_at": "2025-08-07T05:35:40Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3298691383,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726",
              "body": "# feat(scenarios): Implement conditional mocking and complex response structures\n\n## Description\n\nThis ticket enhances the mocking system to support conditional responses based on input parameters and complex response structures with metadata. This enables realistic testing of service interactions like GitHub API calls or EVM transactions with proper request/response matching.\n\n## Acceptance Criteria\n\n1. Mock definitions support `when` clauses for conditional responses\n2. `when` clauses can match on method arguments, input parameters, or request context\n3. Mock responses support complex nested structures with metadata (timestamps, IDs, etc.)\n4. Multiple mock responses can be defined for the same service/method with different conditions\n5. Mock system provides clear logging of which mock was triggered and why\n6. Mock responses can include realistic error conditions and edge cases\n7. Support for dynamic response generation based on input parameters\n8. Mock validation ensures `when` clauses are syntactically correct\n\n## Technical Approach\n\n### 1. Enhanced Mock Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst MockSchema = z.object({\n  service: z.string(),\n  method: z.string(),\n  when: z.object({\n    // Match on method arguments\n    args: z.array(z.any()).optional(),\n    // Match on specific argument values\n    input: z.record(z.any()).optional(),\n    // Match on request context\n    context: z.record(z.any()).optional(),\n    // Custom matching function\n    matcher: z.string().optional(), // JavaScript expression\n  }).optional(),\n  response: z.any(), // Can be function or static value\n  // For dynamic responses\n  responseFn: z.string().optional(), // JavaScript function\n  // Error simulation\n  error: z.object({\n    code: z.string(),\n    message: z.string(),\n  }).optional(),\n});\n```\n\n### 2. Mock Engine Implementation\n```typescript\n// packages/cli/src/scenarios/mock-engine.ts\nexport class MockEngine {\n  private mocks: MockDefinition[] = [];\n\n  addMock(mock: MockDefinition) {\n    this.mocks.push(mock);\n  }\n\n  async findMock(service: string, method: string, args: any[]): Promise<any> {\n    const candidates = this.mocks.filter(m => \n      m.service === service && m.method === method\n    );\n\n    for (const mock of candidates) {\n      if (await this.matchesCondition(mock, args)) {\n        this.logger.info(`Mock triggered: ${service}.${method} with condition: ${JSON.stringify(mock.when)}`);\n        return this.generateResponse(mock, args);\n      }\n    }\n\n    return null; // No mock found\n  }\n\n  private async matchesCondition(mock: MockDefinition, args: any[]): Promise<boolean> {\n    if (!mock.when) return true; // Default mock\n\n    // Match on arguments\n    if (mock.when.args) {\n      if (!this.deepEqual(args, mock.when.args)) return false;\n    }\n\n    // Match on input parameters\n    if (mock.when.input) {\n      const input = this.extractInputFromArgs(args);\n      if (!this.deepEqual(input, mock.when.input)) return false;\n    }\n\n    // Custom matcher function\n    if (mock.when.matcher) {\n      const matcherFn = new Function('args', 'input', mock.when.matcher);\n      return matcherFn(args, this.extractInputFromArgs(args));\n    }\n\n    return true;\n  }\n\n  private generateResponse(mock: MockDefinition, args: any[]): any {\n    if (mock.error) {\n      throw new Error(`${mock.error.code}: ${mock.error.message}`);\n    }\n\n    if (mock.responseFn) {\n      const responseFn = new Function('args', 'input', mock.responseFn);\n      return responseFn(args, this.extractInputFromArgs(args));\n    }\n\n    return mock.response;\n  }\n}\n```\n\n## Test Scenario\n\nCreate `advanced-mocking-test.scenario.yaml`:\n```yaml\nname: \"Advanced Mocking Test\"\ndescription: \"Tests conditional mocking and complex response structures\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    # Conditional GitHub issue search\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"bug\"\n        matcher: \"input.labels.includes('bug')\"\n      response:\n        - title: \"Critical Bug Found\"\n          number: 456\n          state: \"open\"\n          labels: [\"bug\", \"critical\"]\n          created_at: \"2024-07-15T10:00:00Z\"\n\n    # Conditional GitHub issue search - different response\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"feature\"\n        matcher: \"input.labels.includes('feature')\"\n      response:\n        - title: \"New Feature Request\"\n          number: 789\n          state: \"open\"\n          labels: [\"feature\", \"enhancement\"]\n          created_at: \"2024-07-15T11:00:00Z\"\n\n    # Dynamic EVM balance response\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      when:\n        args: [\"0x1234567890abcdef\"]\n      responseFn: |\n        return {\n          chain: \"ethereum\",\n          address: args[0],\n          balances: [\n            { symbol: \"ETH\", amount: \"1.23\" },\n            { symbol: \"USDC\", amount: \"1000.00\" }\n          ],\n          last_updated: new Date().toISOString()\n        }\n\n    # Error simulation\n    - service: \"github-service\"\n      method: \"readFile\"\n      when:\n        input:\n          path: \"/docs/nonexistent.md\"\n      error:\n        code: \"FILE_NOT_FOUND\"\n        message: \"File does not exist\"\n\nrun:\n  - name: \"Test conditional GitHub search\"\n    input: \"Search for issues with bug label\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"Critical Bug Found\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent correctly search for bug issues?\"\n        expected: \"yes\"\n\n  - name: \"Test dynamic EVM response\"\n    input: \"What's the balance for address 0x1234567890abcdef?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n      - type: \"string_contains\"\n        value: \"1000.00 USDC\"\n\n  - name: \"Test error handling\"\n    input: \"Read the file /docs/nonexistent.md\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.readFile\"\n      - type: \"string_contains\"\n        value: \"File does not exist\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Conditional Matching**: Test different responses based on input parameters\n2. **Dynamic Responses**: Test response generation based on arguments\n3. **Error Simulation**: Test error handling and reporting\n4. **Complex Structures**: Test nested response objects with metadata\n5. **Multiple Mocks**: Test multiple mocks for same service/method\n6. **Logging**: Verify mock selection is logged clearly\n\n## Dependencies\n\n- Builds on existing mock system in scenarios\n- Requires plugin system integration (Ticket 1)\n- Integrates with agent interaction testing (Ticket 3) ",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement conditional mocking and complex response structures",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5726,
              "node_id": "I_kwDOMT5cIs7Engk3",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5726",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:49:00Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/labels{/name}",
              "updated_at": "2025-08-07T05:32:53Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3298689704,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725",
              "body": "# feat(scenarios): Implement plugin specification and dynamic loading\n\n## Description\n\nThis ticket implements plugin specification in scenario YAML files, allowing scenarios to declare which plugins are required for testing. This enables testing of agent behaviors that depend on specific plugins like `@elizaos/plugin-github` or `@elizaos/plugin-evm`. The system will dynamically load specified plugins during scenario execution and make their actions, providers, and services available to the agent.\n\n## Acceptance Criteria\n\n1. Scenario YAML supports a `plugins` array at the root level with string plugin names\n2. The `initializeAgent()` function respects scenario plugin specifications and loads them via `startAgent()`\n3. Plugin loading follows the same dependency resolution and error handling as the main CLI\n4. Scenarios can specify both string plugin names (`@elizaos/plugin-github`) and direct plugin objects\n5. Plugin loading errors are clearly reported with actionable guidance\n6. Default plugins (bootstrap, sql) are automatically included unless explicitly excluded via `exclude_defaults: true`\n7. Plugin conflicts are detected and reported during scenario validation\n8. Plugin initialization errors don't crash the scenario but are reported in results\n\n## Technical Approach\n\n### 1. Update Scenario Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst ScenarioSchema = z.object({\n  name: z.string(),\n  description: z.string(),\n  plugins: z.array(z.string()).optional(), // e.g., [\"@elizaos/plugin-github\"]\n  exclude_defaults: z.boolean().optional(), // exclude bootstrap/sql\n  environment: EnvironmentSchema,\n  setup: SetupSchema.optional(),\n  run: z.array(RunStepSchema),\n  judgment: JudgmentSchema,\n});\n```\n\n### 2. Enhance Runtime Factory\n```typescript\n// packages/cli/src/scenarios/runtime-factory.ts\nexport async function initializeAgent(scenario: Scenario): Promise<IAgentRuntime> {\n  const character: Character = {\n    name: 'scenario-runner',\n    id: stringToUuid('scenario-runner'),\n    bio: 'A minimal character for running scenarios',\n    plugins: scenario.plugins || []\n  };\n\n  // Load default plugins unless excluded\n  if (!scenario.exclude_defaults) {\n    character.plugins.push('@elizaos/plugin-bootstrap', '@elizaos/plugin-sql');\n  }\n\n  const runtime = await startAgent(\n    encryptedCharacter(character),\n    server,\n    undefined,\n    character.plugins,\n    { isTestMode: true }\n  );\n\n  return runtime;\n}\n```\n\n### 3. Plugin Validation\n```typescript\n// packages/cli/src/scenarios/plugin-validator.ts\nexport async function validateScenarioPlugins(scenario: Scenario): Promise<ValidationResult[]> {\n  const results: ValidationResult[] = [];\n  \n  for (const pluginName of scenario.plugins || []) {\n    try {\n      const plugin = await loadAndPreparePlugin(pluginName);\n      if (!plugin) {\n        results.push({\n          type: 'error',\n          message: `Plugin '${pluginName}' could not be loaded`,\n          suggestion: 'Check if plugin is installed or built correctly'\n        });\n      }\n    } catch (error) {\n      results.push({\n        type: 'error', \n        message: `Failed to validate plugin '${pluginName}': ${error.message}`,\n        suggestion: 'Verify plugin dependencies and configuration'\n      });\n    }\n  }\n  \n  return results;\n}\n```\n\n## Test Scenario\n\nCreate `plugin-integration-test.scenario.yaml`:\n```yaml\nname: \"Plugin Integration Test\"\ndescription: \"Tests loading and using plugins specified in scenario YAML\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Test Issue\"\n          number: 123\n          state: \"open\"\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"1.23\"\n\nrun:\n  - name: \"Test GitHub plugin actions\"\n    input: \"Search for issues with label 'bug'\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify GitHub plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"Test Issue\"\n        description: \"Verify agent found the mocked issue\"\n\n  - name: \"Test EVM plugin actions\"\n    input: \"What's my wallet balance?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify EVM plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n        description: \"Verify agent reported the mocked balance\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Plugin Loading Test**: Verify plugins load without errors\n2. **Action Availability Test**: Confirm agent can use plugin actions\n3. **Error Handling Test**: Test with non-existent plugin\n4. **Default Plugin Test**: Verify bootstrap/sql are included by default\n5. **Exclusion Test**: Test `exclude_defaults: true` behavior\n\n## Dependencies\n\n- Fixes the `startAgent` hanging issue (#5719) to enable plugin testing\n- Builds on existing `loadAndPreparePlugin` functionality\n- Integrates with current scenario execution flow ",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement plugin specification and dynamic loading",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5725,
              "node_id": "I_kwDOMT5cIs7EngKo",
              "assignee": null,
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5725",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:48:08Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/labels{/name}",
              "updated_at": "2025-08-07T05:37:32Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            }
          ],
          "issueCount": 10,
          "repository": "elizaOS/eliza"
        },
        "success": true
      },
      "actionStatus": "completed"
    },
    "entityId": "0137f0e4-d2e2-0ee6-82e5-af58b88ec91b",
    "agentId": "0137f0e4-d2e2-0ee6-82e5-af58b88ec91b",
    "roomId": "ebf7d73b-e4a6-0fd6-9873-7ca8c5e2e623",
    "unique": true,
    "metadata": {
      "type": "action_result",
      "runId": "09fdd719-2a13-4045-843d-2de52bbc2a34",
      "actionId": "9821fd9f-d60b-4e63-a5d4-c88e81120636",
      "actionName": "LIST_GITHUB_ISSUES",
      "totalSteps": 2,
      "currentStep": 2
    }
  },
  {
    "id": "899fa64d-bb01-4ac5-b03f-d6775c62b597",
    "type": "messages",
    "createdAt": 1754967311993,
    "content": {
      "text": "Generated reply: Let me check for open issues in the elizaOS/eliza repository...",
      "type": "action_result",
      "runId": "09fdd719-2a13-4045-843d-2de52bbc2a34",
      "source": "action",
      "planStep": "1/2",
      "actionName": "REPLY",
      "planThought": "I need to list the open issues for the elizaOS/eliza repository.",
      "actionResult": {
        "data": {
          "thought": "Preparing to list open issues for the elizaOS/eliza repository.",
          "response": {
            "text": "Let me check for open issues in the elizaOS/eliza repository...",
            "actions": [
              "REPLY"
            ],
            "thought": "Preparing to list open issues for the elizaOS/eliza repository."
          },
          "actionName": "REPLY",
          "messageGenerated": true
        },
        "text": "Generated reply: Let me check for open issues in the elizaOS/eliza repository...",
        "values": {
          "success": true,
          "lastReply": "Let me check for open issues in the elizaOS/eliza repository...",
          "responded": true,
          "lastReplyTime": 1754967311991,
          "thoughtProcess": "Preparing to list open issues for the elizaOS/eliza repository."
        },
        "success": true
      },
      "actionStatus": "completed"
    },
    "entityId": "0137f0e4-d2e2-0ee6-82e5-af58b88ec91b",
    "agentId": "0137f0e4-d2e2-0ee6-82e5-af58b88ec91b",
    "roomId": "ebf7d73b-e4a6-0fd6-9873-7ca8c5e2e623",
    "unique": true,
    "metadata": {
      "type": "action_result",
      "runId": "09fdd719-2a13-4045-843d-2de52bbc2a34",
      "actionId": "899fa64d-bb01-4ac5-b03f-d6775c62b597",
      "actionName": "REPLY",
      "totalSteps": 2,
      "currentStep": 1
    }
  },
  {
    "id": "12533ca0-5f4f-42f3-85a7-32933daf3c09",
    "type": "messages",
    "createdAt": 1754966969546,
    "content": {
      "text": "Open issues for elizaOS/eliza (10 shown):\n‚Ä¢ #5754: Critical: Plugin Publishing Fails with False Success Reports (open) [bug]\n‚Ä¢ #5749: Implement Runtime Method Mocking for Deterministic Agent Testing (open) [enhancement, testing, Reality Spiral]\n‚Ä¢ #5747: Fixing bugs in eliza-cloud (open)\n‚Ä¢ #5738: üêõ Build failure in @elizaos/core causing bun run clean to fail (open) [bug]\n‚Ä¢ #5734: Eliza CLI failed to build project (open) [bug]\n‚Ä¢ #5729: Update README.md to fix error (open)\n‚Ä¢ #5728: feat: ability to cancel current run before any calls to LLM are made (open)\n‚Ä¢ #5727: feat(scenarios): Implement natural language agent interaction and response validation (open) [enhancement, Reality Spiral]\n‚Ä¢ #5726: feat(scenarios): Implement conditional mocking and complex response structures (open) [enhancement, Reality Spiral]\n‚Ä¢ #5725: feat(scenarios): Implement plugin specification and dynamic loading (open) [enhancement, Reality Spiral]",
      "type": "action_result",
      "runId": "c739ba29-04b6-453b-8689-60130f572c64",
      "source": "action",
      "planStep": "2/2",
      "actionName": "LIST_GITHUB_ISSUES",
      "planThought": "I need to list the open issues for the elizaOS/eliza repository to fulfill the user's request.",
      "actionResult": {
        "data": {
          "github": {
            "issues": {
              "elizaOS/eliza#5725": {
                "id": 3298689704,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725",
                "body": "# feat(scenarios): Implement plugin specification and dynamic loading\n\n## Description\n\nThis ticket implements plugin specification in scenario YAML files, allowing scenarios to declare which plugins are required for testing. This enables testing of agent behaviors that depend on specific plugins like `@elizaos/plugin-github` or `@elizaos/plugin-evm`. The system will dynamically load specified plugins during scenario execution and make their actions, providers, and services available to the agent.\n\n## Acceptance Criteria\n\n1. Scenario YAML supports a `plugins` array at the root level with string plugin names\n2. The `initializeAgent()` function respects scenario plugin specifications and loads them via `startAgent()`\n3. Plugin loading follows the same dependency resolution and error handling as the main CLI\n4. Scenarios can specify both string plugin names (`@elizaos/plugin-github`) and direct plugin objects\n5. Plugin loading errors are clearly reported with actionable guidance\n6. Default plugins (bootstrap, sql) are automatically included unless explicitly excluded via `exclude_defaults: true`\n7. Plugin conflicts are detected and reported during scenario validation\n8. Plugin initialization errors don't crash the scenario but are reported in results\n\n## Technical Approach\n\n### 1. Update Scenario Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst ScenarioSchema = z.object({\n  name: z.string(),\n  description: z.string(),\n  plugins: z.array(z.string()).optional(), // e.g., [\"@elizaos/plugin-github\"]\n  exclude_defaults: z.boolean().optional(), // exclude bootstrap/sql\n  environment: EnvironmentSchema,\n  setup: SetupSchema.optional(),\n  run: z.array(RunStepSchema),\n  judgment: JudgmentSchema,\n});\n```\n\n### 2. Enhance Runtime Factory\n```typescript\n// packages/cli/src/scenarios/runtime-factory.ts\nexport async function initializeAgent(scenario: Scenario): Promise<IAgentRuntime> {\n  const character: Character = {\n    name: 'scenario-runner',\n    id: stringToUuid('scenario-runner'),\n    bio: 'A minimal character for running scenarios',\n    plugins: scenario.plugins || []\n  };\n\n  // Load default plugins unless excluded\n  if (!scenario.exclude_defaults) {\n    character.plugins.push('@elizaos/plugin-bootstrap', '@elizaos/plugin-sql');\n  }\n\n  const runtime = await startAgent(\n    encryptedCharacter(character),\n    server,\n    undefined,\n    character.plugins,\n    { isTestMode: true }\n  );\n\n  return runtime;\n}\n```\n\n### 3. Plugin Validation\n```typescript\n// packages/cli/src/scenarios/plugin-validator.ts\nexport async function validateScenarioPlugins(scenario: Scenario): Promise<ValidationResult[]> {\n  const results: ValidationResult[] = [];\n  \n  for (const pluginName of scenario.plugins || []) {\n    try {\n      const plugin = await loadAndPreparePlugin(pluginName);\n      if (!plugin) {\n        results.push({\n          type: 'error',\n          message: `Plugin '${pluginName}' could not be loaded`,\n          suggestion: 'Check if plugin is installed or built correctly'\n        });\n      }\n    } catch (error) {\n      results.push({\n        type: 'error', \n        message: `Failed to validate plugin '${pluginName}': ${error.message}`,\n        suggestion: 'Verify plugin dependencies and configuration'\n      });\n    }\n  }\n  \n  return results;\n}\n```\n\n## Test Scenario\n\nCreate `plugin-integration-test.scenario.yaml`:\n```yaml\nname: \"Plugin Integration Test\"\ndescription: \"Tests loading and using plugins specified in scenario YAML\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Test Issue\"\n          number: 123\n          state: \"open\"\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"1.23\"\n\nrun:\n  - name: \"Test GitHub plugin actions\"\n    input: \"Search for issues with label 'bug'\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify GitHub plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"Test Issue\"\n        description: \"Verify agent found the mocked issue\"\n\n  - name: \"Test EVM plugin actions\"\n    input: \"What's my wallet balance?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify EVM plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n        description: \"Verify agent reported the mocked balance\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Plugin Loading Test**: Verify plugins load without errors\n2. **Action Availability Test**: Confirm agent can use plugin actions\n3. **Error Handling Test**: Test with non-existent plugin\n4. **Default Plugin Test**: Verify bootstrap/sql are included by default\n5. **Exclusion Test**: Test `exclude_defaults: true` behavior\n\n## Dependencies\n\n- Fixes the `startAgent` hanging issue (#5719) to enable plugin testing\n- Builds on existing `loadAndPreparePlugin` functionality\n- Integrates with current scenario execution flow ",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement plugin specification and dynamic loading",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5725,
                "node_id": "I_kwDOMT5cIs7EngKo",
                "assignee": null,
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5725",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:48:08Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/labels{/name}",
                "updated_at": "2025-08-07T05:37:32Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5726": {
                "id": 3298691383,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726",
                "body": "# feat(scenarios): Implement conditional mocking and complex response structures\n\n## Description\n\nThis ticket enhances the mocking system to support conditional responses based on input parameters and complex response structures with metadata. This enables realistic testing of service interactions like GitHub API calls or EVM transactions with proper request/response matching.\n\n## Acceptance Criteria\n\n1. Mock definitions support `when` clauses for conditional responses\n2. `when` clauses can match on method arguments, input parameters, or request context\n3. Mock responses support complex nested structures with metadata (timestamps, IDs, etc.)\n4. Multiple mock responses can be defined for the same service/method with different conditions\n5. Mock system provides clear logging of which mock was triggered and why\n6. Mock responses can include realistic error conditions and edge cases\n7. Support for dynamic response generation based on input parameters\n8. Mock validation ensures `when` clauses are syntactically correct\n\n## Technical Approach\n\n### 1. Enhanced Mock Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst MockSchema = z.object({\n  service: z.string(),\n  method: z.string(),\n  when: z.object({\n    // Match on method arguments\n    args: z.array(z.any()).optional(),\n    // Match on specific argument values\n    input: z.record(z.any()).optional(),\n    // Match on request context\n    context: z.record(z.any()).optional(),\n    // Custom matching function\n    matcher: z.string().optional(), // JavaScript expression\n  }).optional(),\n  response: z.any(), // Can be function or static value\n  // For dynamic responses\n  responseFn: z.string().optional(), // JavaScript function\n  // Error simulation\n  error: z.object({\n    code: z.string(),\n    message: z.string(),\n  }).optional(),\n});\n```\n\n### 2. Mock Engine Implementation\n```typescript\n// packages/cli/src/scenarios/mock-engine.ts\nexport class MockEngine {\n  private mocks: MockDefinition[] = [];\n\n  addMock(mock: MockDefinition) {\n    this.mocks.push(mock);\n  }\n\n  async findMock(service: string, method: string, args: any[]): Promise<any> {\n    const candidates = this.mocks.filter(m => \n      m.service === service && m.method === method\n    );\n\n    for (const mock of candidates) {\n      if (await this.matchesCondition(mock, args)) {\n        this.logger.info(`Mock triggered: ${service}.${method} with condition: ${JSON.stringify(mock.when)}`);\n        return this.generateResponse(mock, args);\n      }\n    }\n\n    return null; // No mock found\n  }\n\n  private async matchesCondition(mock: MockDefinition, args: any[]): Promise<boolean> {\n    if (!mock.when) return true; // Default mock\n\n    // Match on arguments\n    if (mock.when.args) {\n      if (!this.deepEqual(args, mock.when.args)) return false;\n    }\n\n    // Match on input parameters\n    if (mock.when.input) {\n      const input = this.extractInputFromArgs(args);\n      if (!this.deepEqual(input, mock.when.input)) return false;\n    }\n\n    // Custom matcher function\n    if (mock.when.matcher) {\n      const matcherFn = new Function('args', 'input', mock.when.matcher);\n      return matcherFn(args, this.extractInputFromArgs(args));\n    }\n\n    return true;\n  }\n\n  private generateResponse(mock: MockDefinition, args: any[]): any {\n    if (mock.error) {\n      throw new Error(`${mock.error.code}: ${mock.error.message}`);\n    }\n\n    if (mock.responseFn) {\n      const responseFn = new Function('args', 'input', mock.responseFn);\n      return responseFn(args, this.extractInputFromArgs(args));\n    }\n\n    return mock.response;\n  }\n}\n```\n\n## Test Scenario\n\nCreate `advanced-mocking-test.scenario.yaml`:\n```yaml\nname: \"Advanced Mocking Test\"\ndescription: \"Tests conditional mocking and complex response structures\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    # Conditional GitHub issue search\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"bug\"\n        matcher: \"input.labels.includes('bug')\"\n      response:\n        - title: \"Critical Bug Found\"\n          number: 456\n          state: \"open\"\n          labels: [\"bug\", \"critical\"]\n          created_at: \"2024-07-15T10:00:00Z\"\n\n    # Conditional GitHub issue search - different response\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"feature\"\n        matcher: \"input.labels.includes('feature')\"\n      response:\n        - title: \"New Feature Request\"\n          number: 789\n          state: \"open\"\n          labels: [\"feature\", \"enhancement\"]\n          created_at: \"2024-07-15T11:00:00Z\"\n\n    # Dynamic EVM balance response\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      when:\n        args: [\"0x1234567890abcdef\"]\n      responseFn: |\n        return {\n          chain: \"ethereum\",\n          address: args[0],\n          balances: [\n            { symbol: \"ETH\", amount: \"1.23\" },\n            { symbol: \"USDC\", amount: \"1000.00\" }\n          ],\n          last_updated: new Date().toISOString()\n        }\n\n    # Error simulation\n    - service: \"github-service\"\n      method: \"readFile\"\n      when:\n        input:\n          path: \"/docs/nonexistent.md\"\n      error:\n        code: \"FILE_NOT_FOUND\"\n        message: \"File does not exist\"\n\nrun:\n  - name: \"Test conditional GitHub search\"\n    input: \"Search for issues with bug label\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"Critical Bug Found\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent correctly search for bug issues?\"\n        expected: \"yes\"\n\n  - name: \"Test dynamic EVM response\"\n    input: \"What's the balance for address 0x1234567890abcdef?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n      - type: \"string_contains\"\n        value: \"1000.00 USDC\"\n\n  - name: \"Test error handling\"\n    input: \"Read the file /docs/nonexistent.md\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.readFile\"\n      - type: \"string_contains\"\n        value: \"File does not exist\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Conditional Matching**: Test different responses based on input parameters\n2. **Dynamic Responses**: Test response generation based on arguments\n3. **Error Simulation**: Test error handling and reporting\n4. **Complex Structures**: Test nested response objects with metadata\n5. **Multiple Mocks**: Test multiple mocks for same service/method\n6. **Logging**: Verify mock selection is logged clearly\n\n## Dependencies\n\n- Builds on existing mock system in scenarios\n- Requires plugin system integration (Ticket 1)\n- Integrates with agent interaction testing (Ticket 3) ",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement conditional mocking and complex response structures",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5726,
                "node_id": "I_kwDOMT5cIs7Engk3",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5726",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:49:00Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/labels{/name}",
                "updated_at": "2025-08-07T05:32:53Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5727": {
                "id": 3298692741,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727",
                "body": "# feat(scenarios): Implement natural language agent interaction and response validation\n\n## Description\n\nThis ticket enables scenarios to test agent behavior through natural language interactions rather than direct code execution. This allows testing of agent reasoning, decision-making, and response generation in realistic conversation contexts with proper evaluation of agent responses.\n\n## Acceptance Criteria\n\n1. Scenario `run` blocks support `input` field for natural language prompts to agents\n2. Agent responses are captured and available for evaluation (text, thoughts, actions)\n3. Evaluators can access both agent response text and execution context\n4. Support for multi-turn conversations in scenarios\n5. Agent responses include thought process and action decisions\n6. Integration with existing evaluation engine for response validation\n7. Support for conversation context across multiple steps\n8. Agent response timing and performance metrics\n\n## Technical Approach\n\n### 1. Enhanced Run Step Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst RunStepSchema = z.object({\n  name: z.string().optional(),\n  // Natural language input to agent\n  input: z.string().optional(),\n  // Direct code execution (existing)\n  lang: z.string().optional(),\n  code: z.string().optional(),\n  // Agent interaction specific\n  agent_context: z.object({\n    conversation_id: z.string().optional(),\n    user_id: z.string().optional(),\n    room_id: z.string().optional(),\n  }).optional(),\n  evaluations: z.array(EvaluationSchema),\n});\n```\n\n### 2. Agent Interaction Engine\n```typescript\n// packages/cli/src/scenarios/agent-interaction.ts\nexport class AgentInteractionEngine {\n  constructor(private runtime: IAgentRuntime) {}\n\n  async interactWithAgent(input: string, context?: AgentContext): Promise<AgentResponse> {\n    // Create message for agent\n    const message: Memory = {\n      entityId: context?.user_id || 'scenario-user',\n      roomId: context?.room_id || 'scenario-room',\n      content: {\n        type: 'text',\n        text: input,\n      },\n      metadata: {\n        type: 'message',\n        conversationId: context?.conversation_id,\n      },\n    };\n\n    // Send to agent and capture response\n    const startTime = Date.now();\n    const response = await this.runtime.processMessage(message);\n    const endTime = Date.now();\n\n    return {\n      text: response.text,\n      thoughts: response.thoughts,\n      actions: response.actions,\n      timing: {\n        startTime,\n        endTime,\n        duration: endTime - startTime,\n      },\n      context: {\n        conversationId: context?.conversation_id,\n        messageId: message.id,\n      },\n    };\n  }\n}\n```\n\n### 3. Enhanced Execution Result\n```typescript\n// packages/cli/src/scenarios/providers.ts\nexport interface ExecutionResult {\n  exitCode: number;\n  stdout: string;\n  stderr: string;\n  files: Record<string, string>;\n  // New: Agent interaction results\n  agentResponse?: AgentResponse;\n  conversationHistory?: AgentResponse[];\n}\n```\n\n## Test Scenario\n\nCreate `agent-interaction-test.scenario.yaml`:\n```yaml\nname: \"Agent Interaction Test\"\ndescription: \"Tests natural language interaction with agents\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Implement Dark Mode\"\n          number: 123\n          state: \"open\"\n          labels: [\"feature\", \"ui\"]\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"2.5\"\n\nrun:\n  - name: \"Ask agent about roadmap\"\n    input: \"What new features are you planning to add?\"\n    agent_context:\n      conversation_id: \"roadmap-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify agent searched for issues\"\n      \n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n        description: \"Verify agent mentioned the mocked issue\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent provide a helpful and coherent response about new features?\"\n        expected: \"yes\"\n        description: \"Verify agent response quality\"\n\n  - name: \"Ask agent about wallet\"\n    input: \"What's my current wallet balance?\"\n    agent_context:\n      conversation_id: \"wallet-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify agent checked wallet balance\"\n      \n      - type: \"string_contains\"\n        value: \"2.5 ETH\"\n        description: \"Verify agent reported the correct balance\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent clearly explain the wallet balance information?\"\n        expected: \"yes\"\n\n  - name: \"Multi-turn conversation\"\n    input: \"Can you help me with both my wallet and roadmap?\"\n    agent_context:\n      conversation_id: \"multi-turn-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"ETH\"\n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent address both wallet and roadmap questions comprehensively?\"\n        expected: \"yes\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Single Turn**: Test basic agent interaction and response\n2. **Multi-turn**: Test conversation context across steps\n3. **Action Tracking**: Verify agent uses appropriate actions\n4. **Response Quality**: Test LLM judge evaluation of responses\n5. **Performance**: Test response timing and metrics\n6. **Error Handling**: Test agent behavior with invalid inputs\n\n## Dependencies\n\n- Requires plugin system integration (Ticket 1)\n- Builds on advanced mocking system (Ticket 2)\n- Integrates with existing evaluation engine\n- Depends on agent runtime message processing",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement natural language agent interaction and response validation",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5727,
                "node_id": "I_kwDOMT5cIs7Eng6F",
                "assignee": null,
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5727",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:49:34Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/labels{/name}",
                "updated_at": "2025-08-07T05:35:40Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5728": {
                "id": 3299322983,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728",
                "body": "# Background\r\n\r\n## What does this PR do?\r\n\r\nIntroduce entity for cancelling runs `CancelRunSignal`\r\n\r\n## Why are we doing this? Any context or related work?\r\n\r\n- Calls to LLMs usually cost some credits\r\n- When we receive the `RUN_STARTED` event we can check current entity and end run to prevent credits spending\r\n\r\n# Documentation changes needed?\r\n\r\n## Methods\r\n\r\n- `static getSignal(runId: UUID)` - get signal by runId or create if null\r\n- `static clear(runId: UUID)` - clear signal from map\r\n- `cancel(content?: Content)` - cancel current run and and send `content` as a response to user\r\n\r\n## Example\r\n\r\n```typescript\r\nimport { Content, EventType, Plugin } from \"@elizaos/core\";\r\nimport { CancelRunSignal } from \"@elizaos/plugin-bootstrap\";\r\n\r\n// consider we have a service to determine eligibility for entity\r\ninterface EligibilityService {\r\n  check(entityId: UUID): Promise<{ result: boolean, reason?: Content }>\r\n}\r\n\r\nconst plugin: Plugin = {\r\n...\r\n  events: {\r\n    [EventType.RUN_STARTED]: ({ entityId, runId, runtime }) => {\r\n      const service = runtime.getService<EligibilityService>(\"USER_MANAGEMENT\");\r\n      const { result, reason } = await service.check(entityId);\r\n      \r\n      if (!result) {\r\n        const signal = CancelRunSignal.getSignal(runId);\r\n        signal.cancel(reason);\r\n      }\r\n    },\r\n    ...\r\n  },\r\n  ...\r\n}\r\n\r\nexport default Plugin;\r\n```\r\n\r\n## Discord username\r\n\r\nalexd000\r\n\r\n",
                "type": null,
                "user": {
                  "id": 82507604,
                  "url": "https://api.github.com/users/alex-nax",
                  "type": "User",
                  "login": "alex-nax",
                  "node_id": "MDQ6VXNlcjgyNTA3NjA0",
                  "html_url": "https://github.com/alex-nax",
                  "gists_url": "https://api.github.com/users/alex-nax/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/alex-nax/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/82507604?v=4",
                  "events_url": "https://api.github.com/users/alex-nax/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/alex-nax/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/alex-nax/followers",
                  "following_url": "https://api.github.com/users/alex-nax/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/alex-nax/orgs",
                  "subscriptions_url": "https://api.github.com/users/alex-nax/subscriptions",
                  "received_events_url": "https://api.github.com/users/alex-nax/received_events"
                },
                "draft": false,
                "state": "open",
                "title": "feat: ability to cancel current run before any calls to LLM are made",
                "labels": [],
                "locked": false,
                "number": 5728,
                "node_id": "PR_kwDOMT5cIs6ihriD",
                "assignee": null,
                "comments": 3,
                "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T07:19:35Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/labels{/name}",
                "updated_at": "2025-08-07T07:22:05Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/comments",
                "pull_request": {
                  "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5728",
                  "diff_url": "https://github.com/elizaOS/eliza/pull/5728.diff",
                  "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                  "merged_at": null,
                  "patch_url": "https://github.com/elizaOS/eliza/pull/5728.patch"
                },
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "FIRST_TIME_CONTRIBUTOR",
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5729": {
                "id": 3299481897,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729",
                "body": "# Relates to\r\n\r\nN/A (Documentation improvement, not tied to a specific issue or ticket)\r\n\r\n# Risks\r\n\r\nLow.  \r\nThis change only updates documentation and does not affect any code or functionality.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR updates the elizaos README to include a fix for installation errors that may occur due to permission issues. It adds a note suggesting the use of sudo if users encounter a \"Permission denied\" or \"InstallFailed\" error when running the `elizaos create my-agent` command.\r\n\r\n## What kind of change is this?\r\n\r\nImprovements (misc. changes to existing features)  \r\nDocumentation update\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes require a change to the project documentation.  \r\nI have updated the documentation accordingly.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\nStart by reviewing the changes in the README.md file, specifically the section on creating a new project.\r\n\r\n## Detailed testing steps\r\n\r\n- Open the updated README.md.\r\n- Review the new instructions under \"Create Your First Project.\"\r\n- Confirm that the added note about using `sudo` is clear and helpful for users who encounter permission errors.",
                "type": null,
                "user": {
                  "id": 32749185,
                  "url": "https://api.github.com/users/mandatedisrael",
                  "type": "User",
                  "login": "mandatedisrael",
                  "node_id": "MDQ6VXNlcjMyNzQ5MTg1",
                  "html_url": "https://github.com/mandatedisrael",
                  "gists_url": "https://api.github.com/users/mandatedisrael/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/mandatedisrael/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/32749185?v=4",
                  "events_url": "https://api.github.com/users/mandatedisrael/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/mandatedisrael/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/mandatedisrael/followers",
                  "following_url": "https://api.github.com/users/mandatedisrael/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/mandatedisrael/orgs",
                  "subscriptions_url": "https://api.github.com/users/mandatedisrael/subscriptions",
                  "received_events_url": "https://api.github.com/users/mandatedisrael/received_events"
                },
                "draft": false,
                "state": "open",
                "title": "Update README.md to fix error",
                "labels": [],
                "locked": false,
                "number": 5729,
                "node_id": "PR_kwDOMT5cIs6iiNWN",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T08:10:12Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/labels{/name}",
                "updated_at": "2025-08-07T08:10:24Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/comments",
                "pull_request": {
                  "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5729",
                  "diff_url": "https://github.com/elizaOS/eliza/pull/5729.diff",
                  "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                  "merged_at": null,
                  "patch_url": "https://github.com/elizaOS/eliza/pull/5729.patch"
                },
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "FIRST_TIME_CONTRIBUTOR",
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5734": {
                "id": 3301116813,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734",
                "body": "**Describe the bug**\n\nOn project creation, ElizaOS CLI fails with the following error:\n```\n‚óá  Failed to build project\nstdout: src/index.ts(7,25): error TS2345: Argument of type 'string' is not assignable to parameter of type 'undefined'.\nstderr: $ tsc --noEmit && vite build && tsup\n```\n\n**To Reproduce**\n\n- Install ElizaOS through `bun`\n```\nbun i -g @elizaos/cli\n```\n- Create new ElizaOS project\n```\nelizaos create abcde\n```\n\n**Expected behavior**\n\nProject built successfully\n\n**Screenshots**\n\n<img width=\"1095\" height=\"572\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/967dd6a2-0d70-4e2e-8019-85a2eab5f225\" />\n\n**Additional context**\n\nElizaOS CLI version: `1.3.2`\n",
                "type": null,
                "user": {
                  "id": 74447600,
                  "url": "https://api.github.com/users/Kemystra",
                  "type": "User",
                  "login": "Kemystra",
                  "node_id": "MDQ6VXNlcjc0NDQ3NjAw",
                  "html_url": "https://github.com/Kemystra",
                  "gists_url": "https://api.github.com/users/Kemystra/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/Kemystra/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/74447600?v=4",
                  "events_url": "https://api.github.com/users/Kemystra/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/Kemystra/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/Kemystra/followers",
                  "following_url": "https://api.github.com/users/Kemystra/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/Kemystra/orgs",
                  "subscriptions_url": "https://api.github.com/users/Kemystra/subscriptions",
                  "received_events_url": "https://api.github.com/users/Kemystra/received_events"
                },
                "state": "open",
                "title": "Eliza CLI failed to build project",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5734,
                "node_id": "I_kwDOMT5cIs7EwwuN",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5734",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T16:14:00Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/labels{/name}",
                "updated_at": "2025-08-08T19:43:52Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "NONE",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5738": {
                "id": 3302237103,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738",
                "body": "## Description\n\nThe `bun run clean` command is failing due to TypeScript errors in `@elizaos/core` package during the DTS (type definition) build phase.\n\n## Error Details\n\n### Build Process\n```\n‚Ä¢ Running build in 17 packages\n‚Ä¢ Remote caching disabled\n@elizaos/config:build: cache miss\n@elizaos/autodoc:build: cache miss\n@elizaos/core:build: cache miss\n```\n\n### TypeScript Errors in @elizaos/core/src/utils.ts\n1. Line 218: `error TS2345: Argument of type '`${string}-${string}-${string}-${string}-${string}`' is not assignable to parameter of type 'never'.`\n2. Line 366: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n3. Line 409: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n4. Line 536: `error TS2345: Argument of type '{ numberOfChunks: number; averageChunkSize: number; }' is not assignable to parameter of type 'never'.`\n\n### Impact\n- Blocks `bun run clean` command\n- Prevents successful build of `@elizaos/core`\n- Affects dependent packages in the monorepo\n\n## Steps to Reproduce\n1. Run `bun run clean`\n2. Observe build failure in `@elizaos/core`\n3. Build fails with TypeScript errors during DTS generation\n\n## Expected Behavior\n- `bun run clean` should complete successfully\n- `@elizaos/core` should build without TypeScript errors\n- Type definitions should be generated correctly\n\n## Suggested Fix\n\nThe errors suggest type mismatches in `utils.ts`. Need to:\n1. Review type definitions in affected lines\n2. Update type assertions or generic constraints\n3. Ensure string template literal types are properly handled\n4. Fix object type assignments\n\n### Files to Update\n- `packages/core/src/utils.ts`\n\n## Priority\n**HIGH** - This is blocking clean builds and potentially affecting development workflow.",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "üêõ Build failure in @elizaos/core causing bun run clean to fail",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5738,
                "node_id": "I_kwDOMT5cIs7E1COv",
                "assignee": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5738",
                "assignees": [
                  {
                    "id": 15067321,
                    "url": "https://api.github.com/users/monilpat",
                    "type": "User",
                    "login": "monilpat",
                    "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                    "html_url": "https://github.com/monilpat",
                    "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/monilpat/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                    "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/monilpat/followers",
                    "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/monilpat/orgs",
                    "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                    "received_events_url": "https://api.github.com/users/monilpat/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-08T00:26:11Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/labels{/name}",
                "updated_at": "2025-08-11T14:56:01Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5747": {
                "id": 3304516859,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747",
                "body": null,
                "type": null,
                "user": {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                },
                "state": "open",
                "title": "Fixing bugs in eliza-cloud",
                "labels": [],
                "locked": false,
                "number": 5747,
                "node_id": "I_kwDOMT5cIs7E9uz7",
                "assignee": {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                },
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5747",
                "assignees": [
                  {
                    "id": 48334430,
                    "url": "https://api.github.com/users/samarth30",
                    "type": "User",
                    "login": "samarth30",
                    "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                    "html_url": "https://github.com/samarth30",
                    "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/samarth30/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                    "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/samarth30/followers",
                    "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/samarth30/orgs",
                    "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                    "received_events_url": "https://api.github.com/users/samarth30/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-08T16:01:56Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/labels{/name}",
                "updated_at": "2025-08-08T19:02:49Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "MEMBER",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": {
                  "id": 20150,
                  "name": "Linear",
                  "slug": "linear",
                  "owner": {
                    "id": 46686594,
                    "url": "https://api.github.com/users/linear",
                    "type": "Organization",
                    "login": "linear",
                    "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ2Njg2NTk0",
                    "html_url": "https://github.com/linear",
                    "gists_url": "https://api.github.com/users/linear/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/linear/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/46686594?v=4",
                    "events_url": "https://api.github.com/users/linear/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/linear/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/linear/followers",
                    "following_url": "https://api.github.com/users/linear/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/linear/orgs",
                    "subscriptions_url": "https://api.github.com/users/linear/subscriptions",
                    "received_events_url": "https://api.github.com/users/linear/received_events"
                  },
                  "events": [
                    "check_suite",
                    "issues",
                    "issue_comment",
                    "pull_request",
                    "pull_request_review",
                    "repository",
                    "sub_issues"
                  ],
                  "node_id": "MDM6QXBwMjAxNTA=",
                  "html_url": "https://github.com/apps/linear",
                  "client_id": "Iv1.085d682ea245c945",
                  "created_at": "2018-11-02T18:07:23Z",
                  "updated_at": "2025-02-07T14:59:56Z",
                  "description": "",
                  "permissions": {
                    "checks": "read",
                    "issues": "write",
                    "metadata": "read",
                    "pull_requests": "write"
                  },
                  "external_url": "https://linear.app"
                }
              },
              "elizaOS/eliza#5749": {
                "id": 3308102900,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749",
                "body": "### Problem Statement\nCurrently, ElizaOS scenario testing lacks the ability to mock internal agent runtime calls (particularly LLM interactions) when testing via the API client. This makes it difficult to create deterministic tests for agent behavior and workflows.\n\n### Current Limitations\n- Global function mocks only work for code executed in the same process\n- No way to intercept `runtime.useModel` calls from the bootstrap plugin\n- Agent behavior is non-deterministic due to real LLM calls\n- Difficult to test specific agent decision paths and responses\n\n### Why Different Approach Was Needed\n\nThe existing mocking system was designed for **code execution environments** (E2B sandbox and local `node -e` processes), where mocks are applied to the execution context. However, **agent testing** works differently:\n\n- **E2B/Local Execution**: Code runs in isolated processes/sandboxes where global mocks can be applied\n- **Agent Testing**: Agent runs as a service with API client interaction, requiring direct runtime method interception\n- **Architecture Gap**: The bootstrap plugin calls `runtime.useModel` internally, which can't be mocked through the execution environment approach\n\nThis architectural difference necessitated a new approach that directly intercepts runtime methods rather than relying on execution context mocking.\n\n### Proposed Solution: Runtime Method Mocking\n\nWe've implemented a new mocking approach that directly intercepts `IAgentRuntime` method calls:\n\n#### Key Components\n\n1. **MockEngine Enhancement**\n   - Added `runtimeMethodMocks` to support mocking runtime methods\n   - Priority system: `runtimeMethod` > `service` > `globalFunction`\n   - Direct method replacement on the runtime instance\n\n2. **Schema Updates**\n   - Extended `MockSchema` to include `runtimeMethod: z.string().optional()`\n   - Supports mocking any `IAgentRuntime` method (e.g., `useModel`, `getService`)\n\n3. **Conditional Matching**\n   - Matcher functions can inspect method arguments\n   - Example: `\"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"`\n   - Supports complex conditional logic for when to apply mocks\n\n#### Usage Example\n\n```yaml\nsetup:\n  mocks:\n    - runtimeMethod: \"useModel\"\n      method: \"useModel\"\n      when:\n        matcher: \"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"\n      response: \"<response><name>agent</name><reasoning>Mocked response</reasoning><action>RESPOND</action></response>\"\n```\n\n#### Benefits\n\n1. **Deterministic Testing**: Replace LLM calls with static responses\n2. **Full Workflow Testing**: Test complete agent decision flows\n3. **Conditional Mocking**: Apply mocks based on specific conditions\n4. **Runtime Integration**: Works seamlessly with existing agent architecture\n5. **Backward Compatibility**: Existing mocks continue to work\n\n#### Implementation Steps\n\n- MockEngine runtime method support\n- Schema updates for runtimeMethod mocks\n- Conditional matching with matcher functions\n- Integration with scenario runner\n- Basic useModel mocking working\n- Add support for mocking other runtime methods (getService, etc.)\n- Create comprehensive test scenarios\n- Add documentation and examples\n- Consider adding mock recording/replay capabilities\n\n### Technical Details\n\nThe implementation works by:\n1. Creating the `IAgentRuntime` instance in the scenario runner\n2. Applying mocks directly to the runtime object before agent initialization\n3. The bootstrap plugin receives the mocked runtime and uses the mocked methods\n4. Mocks are reverted after scenario completion\n\nThis approach provides the foundation for robust, deterministic agent testing while maintaining the existing architecture.",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "Implement Runtime Method Mocking for Deterministic Agent Testing",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 7668252177,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/testing",
                    "name": "testing",
                    "color": "2D3957",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAAByRA-EQ",
                    "description": ""
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5749,
                "node_id": "I_kwDOMT5cIs7FLaT0",
                "assignee": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "comments": 0,
                "html_url": "https://github.com/elizaOS/eliza/issues/5749",
                "assignees": [
                  {
                    "id": 15067321,
                    "url": "https://api.github.com/users/monilpat",
                    "type": "User",
                    "login": "monilpat",
                    "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                    "html_url": "https://github.com/monilpat",
                    "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/monilpat/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                    "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/monilpat/followers",
                    "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/monilpat/orgs",
                    "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                    "received_events_url": "https://api.github.com/users/monilpat/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-11T00:08:49Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/labels{/name}",
                "updated_at": "2025-08-11T00:09:37Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              "elizaOS/eliza#5754": {
                "id": 3310285907,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754",
                "body": "## Issue Summary\nThe `elizaos publish --npm` command reports successful publishing but the plugin is not actually published to npm, despite showing success messages. The npm publish is failing with a 404 error, but the ElizaOS CLI incorrectly reports success.\n\n## Key Problems Identified\n\n### 1. Critical NPM Publishing Failure\n- **Error**: `npm error 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found`\n- **Issue**: The package scope `@elizaos` doesn't exist on npm, preventing publishing\n- **Impact**: Package cannot be published to npm, but CLI reports success\n\n### 2. False Success Reporting\n- **Issue**: CLI reports `[‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm`\n- **Reality**: npm publish failed with 404 error\n- **Impact**: Developers believe their plugin is published when it's not\n\n### 3. Registry Repository Mismatch\n- **Expected**: Should create PR against `https://github.com/elizaos-plugins/registry`\n- **Actual**: Still references old registry `https://github.com/elizaos/registry`\n- **Impact**: Plugin won't appear in the official ElizaOS registry\n\n## Steps to Reproduce\n\n```bash\n# Navigate to the plugin directory\ncd packages/plugin-polygon\n\n# Ensure you're on the correct branch with the changes\ngit checkout polygon\n\n# Run the publish command\nelizaos publish --npm\n\n# Verify the success message appears\n# [‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm\n\n# Check if package actually exists on npm\nnpm view @elizaos/plugin-polygon@1.0.0\n# Result: 404 Not Found - '@elizaos/plugin-polygon@1.0.0' is not in this registry\n```\n\n## Technical Details\n\n### NPM Error Analysis\nThe npm logs show the root cause:\n```\nhttp fetch PUT 404 https://registry.npmjs.org/@elizaos%2fplugin-polygon 507ms\nerror 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found\n```\n\nThis indicates that the `@elizaos` scope doesn't exist on npm, which is required for publishing scoped packages.\n\n### CLI Error Handling Failure\nThe ElizaOS CLI is not properly parsing npm error codes:\n- npm returns exit code 1 (failure)\n- CLI ignores the error and reports success\n- No validation that the package actually exists on npm\n\n## Expected Behavior\n1. CLI should detect npm publish failures (exit code 1)\n2. CLI should fail with clear error message when package scope doesn't exist\n3. CLI should validate that package actually exists on npm after publishing\n4. CLI should create PRs against the correct registry repository\n\n## Recommended Fixes\n\n### 1. Fix NPM Error Detection\n```typescript\n// In the publish command, check npm exit code\nconst npmResult = await exec('npm publish', { cwd: pluginDir });\nif (npmResult.exitCode !== 0) {\n  throw new Error(`NPM publish failed: ${npmResult.stderr}`);\n}\n```\n\n### 2. Add Package Scope Validation\n```typescript\n// Before publishing, check if scope exists\nconst scopeExists = await checkNpmScope('@elizaos');\nif (!scopeExists) {\n  throw new Error('Package scope @elizaos does not exist on npm. Contact npm support to create the scope.');\n}\n```\n\n### 3. Add Post-Publish Validation\n```typescript\n// After publishing, verify package exists\nconst packageExists = await checkPackageExists(packageName, version);\nif (!packageExists) {\n  throw new Error(`Package was not published successfully. Check npm logs for details.`);\n}\n```\n\n## Priority\n**Critical** - This completely blocks plugin publishing and creates false success reports.\n\n## Affected Components\n- `packages/cli/src/commands/publish.ts`\n- NPM publishing logic\n- Error handling and success reporting\n- Package scope validation\n- Registry repository configuration\n\n## Immediate Action Required\n1. **Create the `@elizaos` scope on npm** or use an existing scope\n2. Update CLI to properly detect and handle npm publish failures\n3. Add post-publish validation to ensure packages actually exist on npm\n4. Update registry repository configuration\n\n## Alternative Solutions\n1. **Use existing scope**: Change package name to `@monilpat/plugin-polygon`\n2. **Create organization scope**: Set up `@elizaos` organization on npm\n3. **Use unscoped package**: Publish as `elizaos-plugin-polygon`\n\nThis issue is critically blocking plugin developers from successfully publishing their work and needs immediate attention from the ElizaOS team.\n",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "Critical: Plugin Publishing Fails with False Success Reports",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5754,
                "node_id": "I_kwDOMT5cIs7FTvRT",
                "assignee": null,
                "comments": 0,
                "html_url": "https://github.com/elizaOS/eliza/issues/5754",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-11T14:20:08Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/labels{/name}",
                "updated_at": "2025-08-11T14:20:08Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              }
            },
            "lastIssues": [
              {
                "id": 3310285907,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754",
                "body": "## Issue Summary\nThe `elizaos publish --npm` command reports successful publishing but the plugin is not actually published to npm, despite showing success messages. The npm publish is failing with a 404 error, but the ElizaOS CLI incorrectly reports success.\n\n## Key Problems Identified\n\n### 1. Critical NPM Publishing Failure\n- **Error**: `npm error 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found`\n- **Issue**: The package scope `@elizaos` doesn't exist on npm, preventing publishing\n- **Impact**: Package cannot be published to npm, but CLI reports success\n\n### 2. False Success Reporting\n- **Issue**: CLI reports `[‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm`\n- **Reality**: npm publish failed with 404 error\n- **Impact**: Developers believe their plugin is published when it's not\n\n### 3. Registry Repository Mismatch\n- **Expected**: Should create PR against `https://github.com/elizaos-plugins/registry`\n- **Actual**: Still references old registry `https://github.com/elizaos/registry`\n- **Impact**: Plugin won't appear in the official ElizaOS registry\n\n## Steps to Reproduce\n\n```bash\n# Navigate to the plugin directory\ncd packages/plugin-polygon\n\n# Ensure you're on the correct branch with the changes\ngit checkout polygon\n\n# Run the publish command\nelizaos publish --npm\n\n# Verify the success message appears\n# [‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm\n\n# Check if package actually exists on npm\nnpm view @elizaos/plugin-polygon@1.0.0\n# Result: 404 Not Found - '@elizaos/plugin-polygon@1.0.0' is not in this registry\n```\n\n## Technical Details\n\n### NPM Error Analysis\nThe npm logs show the root cause:\n```\nhttp fetch PUT 404 https://registry.npmjs.org/@elizaos%2fplugin-polygon 507ms\nerror 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found\n```\n\nThis indicates that the `@elizaos` scope doesn't exist on npm, which is required for publishing scoped packages.\n\n### CLI Error Handling Failure\nThe ElizaOS CLI is not properly parsing npm error codes:\n- npm returns exit code 1 (failure)\n- CLI ignores the error and reports success\n- No validation that the package actually exists on npm\n\n## Expected Behavior\n1. CLI should detect npm publish failures (exit code 1)\n2. CLI should fail with clear error message when package scope doesn't exist\n3. CLI should validate that package actually exists on npm after publishing\n4. CLI should create PRs against the correct registry repository\n\n## Recommended Fixes\n\n### 1. Fix NPM Error Detection\n```typescript\n// In the publish command, check npm exit code\nconst npmResult = await exec('npm publish', { cwd: pluginDir });\nif (npmResult.exitCode !== 0) {\n  throw new Error(`NPM publish failed: ${npmResult.stderr}`);\n}\n```\n\n### 2. Add Package Scope Validation\n```typescript\n// Before publishing, check if scope exists\nconst scopeExists = await checkNpmScope('@elizaos');\nif (!scopeExists) {\n  throw new Error('Package scope @elizaos does not exist on npm. Contact npm support to create the scope.');\n}\n```\n\n### 3. Add Post-Publish Validation\n```typescript\n// After publishing, verify package exists\nconst packageExists = await checkPackageExists(packageName, version);\nif (!packageExists) {\n  throw new Error(`Package was not published successfully. Check npm logs for details.`);\n}\n```\n\n## Priority\n**Critical** - This completely blocks plugin publishing and creates false success reports.\n\n## Affected Components\n- `packages/cli/src/commands/publish.ts`\n- NPM publishing logic\n- Error handling and success reporting\n- Package scope validation\n- Registry repository configuration\n\n## Immediate Action Required\n1. **Create the `@elizaos` scope on npm** or use an existing scope\n2. Update CLI to properly detect and handle npm publish failures\n3. Add post-publish validation to ensure packages actually exist on npm\n4. Update registry repository configuration\n\n## Alternative Solutions\n1. **Use existing scope**: Change package name to `@monilpat/plugin-polygon`\n2. **Create organization scope**: Set up `@elizaos` organization on npm\n3. **Use unscoped package**: Publish as `elizaos-plugin-polygon`\n\nThis issue is critically blocking plugin developers from successfully publishing their work and needs immediate attention from the ElizaOS team.\n",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "Critical: Plugin Publishing Fails with False Success Reports",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5754,
                "node_id": "I_kwDOMT5cIs7FTvRT",
                "assignee": null,
                "comments": 0,
                "html_url": "https://github.com/elizaOS/eliza/issues/5754",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-11T14:20:08Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/labels{/name}",
                "updated_at": "2025-08-11T14:20:08Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3308102900,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749",
                "body": "### Problem Statement\nCurrently, ElizaOS scenario testing lacks the ability to mock internal agent runtime calls (particularly LLM interactions) when testing via the API client. This makes it difficult to create deterministic tests for agent behavior and workflows.\n\n### Current Limitations\n- Global function mocks only work for code executed in the same process\n- No way to intercept `runtime.useModel` calls from the bootstrap plugin\n- Agent behavior is non-deterministic due to real LLM calls\n- Difficult to test specific agent decision paths and responses\n\n### Why Different Approach Was Needed\n\nThe existing mocking system was designed for **code execution environments** (E2B sandbox and local `node -e` processes), where mocks are applied to the execution context. However, **agent testing** works differently:\n\n- **E2B/Local Execution**: Code runs in isolated processes/sandboxes where global mocks can be applied\n- **Agent Testing**: Agent runs as a service with API client interaction, requiring direct runtime method interception\n- **Architecture Gap**: The bootstrap plugin calls `runtime.useModel` internally, which can't be mocked through the execution environment approach\n\nThis architectural difference necessitated a new approach that directly intercepts runtime methods rather than relying on execution context mocking.\n\n### Proposed Solution: Runtime Method Mocking\n\nWe've implemented a new mocking approach that directly intercepts `IAgentRuntime` method calls:\n\n#### Key Components\n\n1. **MockEngine Enhancement**\n   - Added `runtimeMethodMocks` to support mocking runtime methods\n   - Priority system: `runtimeMethod` > `service` > `globalFunction`\n   - Direct method replacement on the runtime instance\n\n2. **Schema Updates**\n   - Extended `MockSchema` to include `runtimeMethod: z.string().optional()`\n   - Supports mocking any `IAgentRuntime` method (e.g., `useModel`, `getService`)\n\n3. **Conditional Matching**\n   - Matcher functions can inspect method arguments\n   - Example: `\"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"`\n   - Supports complex conditional logic for when to apply mocks\n\n#### Usage Example\n\n```yaml\nsetup:\n  mocks:\n    - runtimeMethod: \"useModel\"\n      method: \"useModel\"\n      when:\n        matcher: \"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"\n      response: \"<response><name>agent</name><reasoning>Mocked response</reasoning><action>RESPOND</action></response>\"\n```\n\n#### Benefits\n\n1. **Deterministic Testing**: Replace LLM calls with static responses\n2. **Full Workflow Testing**: Test complete agent decision flows\n3. **Conditional Mocking**: Apply mocks based on specific conditions\n4. **Runtime Integration**: Works seamlessly with existing agent architecture\n5. **Backward Compatibility**: Existing mocks continue to work\n\n#### Implementation Steps\n\n- MockEngine runtime method support\n- Schema updates for runtimeMethod mocks\n- Conditional matching with matcher functions\n- Integration with scenario runner\n- Basic useModel mocking working\n- Add support for mocking other runtime methods (getService, etc.)\n- Create comprehensive test scenarios\n- Add documentation and examples\n- Consider adding mock recording/replay capabilities\n\n### Technical Details\n\nThe implementation works by:\n1. Creating the `IAgentRuntime` instance in the scenario runner\n2. Applying mocks directly to the runtime object before agent initialization\n3. The bootstrap plugin receives the mocked runtime and uses the mocked methods\n4. Mocks are reverted after scenario completion\n\nThis approach provides the foundation for robust, deterministic agent testing while maintaining the existing architecture.",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "Implement Runtime Method Mocking for Deterministic Agent Testing",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 7668252177,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/testing",
                    "name": "testing",
                    "color": "2D3957",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAAByRA-EQ",
                    "description": ""
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5749,
                "node_id": "I_kwDOMT5cIs7FLaT0",
                "assignee": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "comments": 0,
                "html_url": "https://github.com/elizaOS/eliza/issues/5749",
                "assignees": [
                  {
                    "id": 15067321,
                    "url": "https://api.github.com/users/monilpat",
                    "type": "User",
                    "login": "monilpat",
                    "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                    "html_url": "https://github.com/monilpat",
                    "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/monilpat/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                    "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/monilpat/followers",
                    "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/monilpat/orgs",
                    "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                    "received_events_url": "https://api.github.com/users/monilpat/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-11T00:08:49Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/labels{/name}",
                "updated_at": "2025-08-11T00:09:37Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3304516859,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747",
                "body": null,
                "type": null,
                "user": {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                },
                "state": "open",
                "title": "Fixing bugs in eliza-cloud",
                "labels": [],
                "locked": false,
                "number": 5747,
                "node_id": "I_kwDOMT5cIs7E9uz7",
                "assignee": {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                },
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5747",
                "assignees": [
                  {
                    "id": 48334430,
                    "url": "https://api.github.com/users/samarth30",
                    "type": "User",
                    "login": "samarth30",
                    "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                    "html_url": "https://github.com/samarth30",
                    "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/samarth30/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                    "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/samarth30/followers",
                    "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/samarth30/orgs",
                    "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                    "received_events_url": "https://api.github.com/users/samarth30/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-08T16:01:56Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/labels{/name}",
                "updated_at": "2025-08-08T19:02:49Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "MEMBER",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": {
                  "id": 20150,
                  "name": "Linear",
                  "slug": "linear",
                  "owner": {
                    "id": 46686594,
                    "url": "https://api.github.com/users/linear",
                    "type": "Organization",
                    "login": "linear",
                    "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ2Njg2NTk0",
                    "html_url": "https://github.com/linear",
                    "gists_url": "https://api.github.com/users/linear/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/linear/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/46686594?v=4",
                    "events_url": "https://api.github.com/users/linear/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/linear/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/linear/followers",
                    "following_url": "https://api.github.com/users/linear/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/linear/orgs",
                    "subscriptions_url": "https://api.github.com/users/linear/subscriptions",
                    "received_events_url": "https://api.github.com/users/linear/received_events"
                  },
                  "events": [
                    "check_suite",
                    "issues",
                    "issue_comment",
                    "pull_request",
                    "pull_request_review",
                    "repository",
                    "sub_issues"
                  ],
                  "node_id": "MDM6QXBwMjAxNTA=",
                  "html_url": "https://github.com/apps/linear",
                  "client_id": "Iv1.085d682ea245c945",
                  "created_at": "2018-11-02T18:07:23Z",
                  "updated_at": "2025-02-07T14:59:56Z",
                  "description": "",
                  "permissions": {
                    "checks": "read",
                    "issues": "write",
                    "metadata": "read",
                    "pull_requests": "write"
                  },
                  "external_url": "https://linear.app"
                }
              },
              {
                "id": 3302237103,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738",
                "body": "## Description\n\nThe `bun run clean` command is failing due to TypeScript errors in `@elizaos/core` package during the DTS (type definition) build phase.\n\n## Error Details\n\n### Build Process\n```\n‚Ä¢ Running build in 17 packages\n‚Ä¢ Remote caching disabled\n@elizaos/config:build: cache miss\n@elizaos/autodoc:build: cache miss\n@elizaos/core:build: cache miss\n```\n\n### TypeScript Errors in @elizaos/core/src/utils.ts\n1. Line 218: `error TS2345: Argument of type '`${string}-${string}-${string}-${string}-${string}`' is not assignable to parameter of type 'never'.`\n2. Line 366: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n3. Line 409: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n4. Line 536: `error TS2345: Argument of type '{ numberOfChunks: number; averageChunkSize: number; }' is not assignable to parameter of type 'never'.`\n\n### Impact\n- Blocks `bun run clean` command\n- Prevents successful build of `@elizaos/core`\n- Affects dependent packages in the monorepo\n\n## Steps to Reproduce\n1. Run `bun run clean`\n2. Observe build failure in `@elizaos/core`\n3. Build fails with TypeScript errors during DTS generation\n\n## Expected Behavior\n- `bun run clean` should complete successfully\n- `@elizaos/core` should build without TypeScript errors\n- Type definitions should be generated correctly\n\n## Suggested Fix\n\nThe errors suggest type mismatches in `utils.ts`. Need to:\n1. Review type definitions in affected lines\n2. Update type assertions or generic constraints\n3. Ensure string template literal types are properly handled\n4. Fix object type assignments\n\n### Files to Update\n- `packages/core/src/utils.ts`\n\n## Priority\n**HIGH** - This is blocking clean builds and potentially affecting development workflow.",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "üêõ Build failure in @elizaos/core causing bun run clean to fail",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5738,
                "node_id": "I_kwDOMT5cIs7E1COv",
                "assignee": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5738",
                "assignees": [
                  {
                    "id": 15067321,
                    "url": "https://api.github.com/users/monilpat",
                    "type": "User",
                    "login": "monilpat",
                    "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                    "html_url": "https://github.com/monilpat",
                    "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                    "repos_url": "https://api.github.com/users/monilpat/repos",
                    "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                    "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                    "site_admin": false,
                    "gravatar_id": "",
                    "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                    "followers_url": "https://api.github.com/users/monilpat/followers",
                    "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                    "user_view_type": "public",
                    "organizations_url": "https://api.github.com/users/monilpat/orgs",
                    "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                    "received_events_url": "https://api.github.com/users/monilpat/received_events"
                  }
                ],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-08T00:26:11Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/labels{/name}",
                "updated_at": "2025-08-11T14:56:01Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3301116813,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734",
                "body": "**Describe the bug**\n\nOn project creation, ElizaOS CLI fails with the following error:\n```\n‚óá  Failed to build project\nstdout: src/index.ts(7,25): error TS2345: Argument of type 'string' is not assignable to parameter of type 'undefined'.\nstderr: $ tsc --noEmit && vite build && tsup\n```\n\n**To Reproduce**\n\n- Install ElizaOS through `bun`\n```\nbun i -g @elizaos/cli\n```\n- Create new ElizaOS project\n```\nelizaos create abcde\n```\n\n**Expected behavior**\n\nProject built successfully\n\n**Screenshots**\n\n<img width=\"1095\" height=\"572\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/967dd6a2-0d70-4e2e-8019-85a2eab5f225\" />\n\n**Additional context**\n\nElizaOS CLI version: `1.3.2`\n",
                "type": null,
                "user": {
                  "id": 74447600,
                  "url": "https://api.github.com/users/Kemystra",
                  "type": "User",
                  "login": "Kemystra",
                  "node_id": "MDQ6VXNlcjc0NDQ3NjAw",
                  "html_url": "https://github.com/Kemystra",
                  "gists_url": "https://api.github.com/users/Kemystra/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/Kemystra/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/74447600?v=4",
                  "events_url": "https://api.github.com/users/Kemystra/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/Kemystra/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/Kemystra/followers",
                  "following_url": "https://api.github.com/users/Kemystra/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/Kemystra/orgs",
                  "subscriptions_url": "https://api.github.com/users/Kemystra/subscriptions",
                  "received_events_url": "https://api.github.com/users/Kemystra/received_events"
                },
                "state": "open",
                "title": "Eliza CLI failed to build project",
                "labels": [
                  {
                    "id": 7181511256,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                    "name": "bug",
                    "color": "d73a4a",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                    "description": "Something isn't working"
                  }
                ],
                "locked": false,
                "number": 5734,
                "node_id": "I_kwDOMT5cIs7EwwuN",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5734",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T16:14:00Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/labels{/name}",
                "updated_at": "2025-08-08T19:43:52Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "NONE",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3299481897,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729",
                "body": "# Relates to\r\n\r\nN/A (Documentation improvement, not tied to a specific issue or ticket)\r\n\r\n# Risks\r\n\r\nLow.  \r\nThis change only updates documentation and does not affect any code or functionality.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR updates the elizaos README to include a fix for installation errors that may occur due to permission issues. It adds a note suggesting the use of sudo if users encounter a \"Permission denied\" or \"InstallFailed\" error when running the `elizaos create my-agent` command.\r\n\r\n## What kind of change is this?\r\n\r\nImprovements (misc. changes to existing features)  \r\nDocumentation update\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes require a change to the project documentation.  \r\nI have updated the documentation accordingly.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\nStart by reviewing the changes in the README.md file, specifically the section on creating a new project.\r\n\r\n## Detailed testing steps\r\n\r\n- Open the updated README.md.\r\n- Review the new instructions under \"Create Your First Project.\"\r\n- Confirm that the added note about using `sudo` is clear and helpful for users who encounter permission errors.",
                "type": null,
                "user": {
                  "id": 32749185,
                  "url": "https://api.github.com/users/mandatedisrael",
                  "type": "User",
                  "login": "mandatedisrael",
                  "node_id": "MDQ6VXNlcjMyNzQ5MTg1",
                  "html_url": "https://github.com/mandatedisrael",
                  "gists_url": "https://api.github.com/users/mandatedisrael/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/mandatedisrael/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/32749185?v=4",
                  "events_url": "https://api.github.com/users/mandatedisrael/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/mandatedisrael/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/mandatedisrael/followers",
                  "following_url": "https://api.github.com/users/mandatedisrael/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/mandatedisrael/orgs",
                  "subscriptions_url": "https://api.github.com/users/mandatedisrael/subscriptions",
                  "received_events_url": "https://api.github.com/users/mandatedisrael/received_events"
                },
                "draft": false,
                "state": "open",
                "title": "Update README.md to fix error",
                "labels": [],
                "locked": false,
                "number": 5729,
                "node_id": "PR_kwDOMT5cIs6iiNWN",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T08:10:12Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/labels{/name}",
                "updated_at": "2025-08-07T08:10:24Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/comments",
                "pull_request": {
                  "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5729",
                  "diff_url": "https://github.com/elizaOS/eliza/pull/5729.diff",
                  "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                  "merged_at": null,
                  "patch_url": "https://github.com/elizaOS/eliza/pull/5729.patch"
                },
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "FIRST_TIME_CONTRIBUTOR",
                "performed_via_github_app": null
              },
              {
                "id": 3299322983,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728",
                "body": "# Background\r\n\r\n## What does this PR do?\r\n\r\nIntroduce entity for cancelling runs `CancelRunSignal`\r\n\r\n## Why are we doing this? Any context or related work?\r\n\r\n- Calls to LLMs usually cost some credits\r\n- When we receive the `RUN_STARTED` event we can check current entity and end run to prevent credits spending\r\n\r\n# Documentation changes needed?\r\n\r\n## Methods\r\n\r\n- `static getSignal(runId: UUID)` - get signal by runId or create if null\r\n- `static clear(runId: UUID)` - clear signal from map\r\n- `cancel(content?: Content)` - cancel current run and and send `content` as a response to user\r\n\r\n## Example\r\n\r\n```typescript\r\nimport { Content, EventType, Plugin } from \"@elizaos/core\";\r\nimport { CancelRunSignal } from \"@elizaos/plugin-bootstrap\";\r\n\r\n// consider we have a service to determine eligibility for entity\r\ninterface EligibilityService {\r\n  check(entityId: UUID): Promise<{ result: boolean, reason?: Content }>\r\n}\r\n\r\nconst plugin: Plugin = {\r\n...\r\n  events: {\r\n    [EventType.RUN_STARTED]: ({ entityId, runId, runtime }) => {\r\n      const service = runtime.getService<EligibilityService>(\"USER_MANAGEMENT\");\r\n      const { result, reason } = await service.check(entityId);\r\n      \r\n      if (!result) {\r\n        const signal = CancelRunSignal.getSignal(runId);\r\n        signal.cancel(reason);\r\n      }\r\n    },\r\n    ...\r\n  },\r\n  ...\r\n}\r\n\r\nexport default Plugin;\r\n```\r\n\r\n## Discord username\r\n\r\nalexd000\r\n\r\n",
                "type": null,
                "user": {
                  "id": 82507604,
                  "url": "https://api.github.com/users/alex-nax",
                  "type": "User",
                  "login": "alex-nax",
                  "node_id": "MDQ6VXNlcjgyNTA3NjA0",
                  "html_url": "https://github.com/alex-nax",
                  "gists_url": "https://api.github.com/users/alex-nax/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/alex-nax/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/82507604?v=4",
                  "events_url": "https://api.github.com/users/alex-nax/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/alex-nax/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/alex-nax/followers",
                  "following_url": "https://api.github.com/users/alex-nax/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/alex-nax/orgs",
                  "subscriptions_url": "https://api.github.com/users/alex-nax/subscriptions",
                  "received_events_url": "https://api.github.com/users/alex-nax/received_events"
                },
                "draft": false,
                "state": "open",
                "title": "feat: ability to cancel current run before any calls to LLM are made",
                "labels": [],
                "locked": false,
                "number": 5728,
                "node_id": "PR_kwDOMT5cIs6ihriD",
                "assignee": null,
                "comments": 3,
                "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T07:19:35Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/labels{/name}",
                "updated_at": "2025-08-07T07:22:05Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/comments",
                "pull_request": {
                  "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5728",
                  "diff_url": "https://github.com/elizaOS/eliza/pull/5728.diff",
                  "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                  "merged_at": null,
                  "patch_url": "https://github.com/elizaOS/eliza/pull/5728.patch"
                },
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "FIRST_TIME_CONTRIBUTOR",
                "performed_via_github_app": null
              },
              {
                "id": 3298692741,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727",
                "body": "# feat(scenarios): Implement natural language agent interaction and response validation\n\n## Description\n\nThis ticket enables scenarios to test agent behavior through natural language interactions rather than direct code execution. This allows testing of agent reasoning, decision-making, and response generation in realistic conversation contexts with proper evaluation of agent responses.\n\n## Acceptance Criteria\n\n1. Scenario `run` blocks support `input` field for natural language prompts to agents\n2. Agent responses are captured and available for evaluation (text, thoughts, actions)\n3. Evaluators can access both agent response text and execution context\n4. Support for multi-turn conversations in scenarios\n5. Agent responses include thought process and action decisions\n6. Integration with existing evaluation engine for response validation\n7. Support for conversation context across multiple steps\n8. Agent response timing and performance metrics\n\n## Technical Approach\n\n### 1. Enhanced Run Step Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst RunStepSchema = z.object({\n  name: z.string().optional(),\n  // Natural language input to agent\n  input: z.string().optional(),\n  // Direct code execution (existing)\n  lang: z.string().optional(),\n  code: z.string().optional(),\n  // Agent interaction specific\n  agent_context: z.object({\n    conversation_id: z.string().optional(),\n    user_id: z.string().optional(),\n    room_id: z.string().optional(),\n  }).optional(),\n  evaluations: z.array(EvaluationSchema),\n});\n```\n\n### 2. Agent Interaction Engine\n```typescript\n// packages/cli/src/scenarios/agent-interaction.ts\nexport class AgentInteractionEngine {\n  constructor(private runtime: IAgentRuntime) {}\n\n  async interactWithAgent(input: string, context?: AgentContext): Promise<AgentResponse> {\n    // Create message for agent\n    const message: Memory = {\n      entityId: context?.user_id || 'scenario-user',\n      roomId: context?.room_id || 'scenario-room',\n      content: {\n        type: 'text',\n        text: input,\n      },\n      metadata: {\n        type: 'message',\n        conversationId: context?.conversation_id,\n      },\n    };\n\n    // Send to agent and capture response\n    const startTime = Date.now();\n    const response = await this.runtime.processMessage(message);\n    const endTime = Date.now();\n\n    return {\n      text: response.text,\n      thoughts: response.thoughts,\n      actions: response.actions,\n      timing: {\n        startTime,\n        endTime,\n        duration: endTime - startTime,\n      },\n      context: {\n        conversationId: context?.conversation_id,\n        messageId: message.id,\n      },\n    };\n  }\n}\n```\n\n### 3. Enhanced Execution Result\n```typescript\n// packages/cli/src/scenarios/providers.ts\nexport interface ExecutionResult {\n  exitCode: number;\n  stdout: string;\n  stderr: string;\n  files: Record<string, string>;\n  // New: Agent interaction results\n  agentResponse?: AgentResponse;\n  conversationHistory?: AgentResponse[];\n}\n```\n\n## Test Scenario\n\nCreate `agent-interaction-test.scenario.yaml`:\n```yaml\nname: \"Agent Interaction Test\"\ndescription: \"Tests natural language interaction with agents\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Implement Dark Mode\"\n          number: 123\n          state: \"open\"\n          labels: [\"feature\", \"ui\"]\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"2.5\"\n\nrun:\n  - name: \"Ask agent about roadmap\"\n    input: \"What new features are you planning to add?\"\n    agent_context:\n      conversation_id: \"roadmap-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify agent searched for issues\"\n      \n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n        description: \"Verify agent mentioned the mocked issue\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent provide a helpful and coherent response about new features?\"\n        expected: \"yes\"\n        description: \"Verify agent response quality\"\n\n  - name: \"Ask agent about wallet\"\n    input: \"What's my current wallet balance?\"\n    agent_context:\n      conversation_id: \"wallet-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify agent checked wallet balance\"\n      \n      - type: \"string_contains\"\n        value: \"2.5 ETH\"\n        description: \"Verify agent reported the correct balance\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent clearly explain the wallet balance information?\"\n        expected: \"yes\"\n\n  - name: \"Multi-turn conversation\"\n    input: \"Can you help me with both my wallet and roadmap?\"\n    agent_context:\n      conversation_id: \"multi-turn-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"ETH\"\n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent address both wallet and roadmap questions comprehensively?\"\n        expected: \"yes\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Single Turn**: Test basic agent interaction and response\n2. **Multi-turn**: Test conversation context across steps\n3. **Action Tracking**: Verify agent uses appropriate actions\n4. **Response Quality**: Test LLM judge evaluation of responses\n5. **Performance**: Test response timing and metrics\n6. **Error Handling**: Test agent behavior with invalid inputs\n\n## Dependencies\n\n- Requires plugin system integration (Ticket 1)\n- Builds on advanced mocking system (Ticket 2)\n- Integrates with existing evaluation engine\n- Depends on agent runtime message processing",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement natural language agent interaction and response validation",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5727,
                "node_id": "I_kwDOMT5cIs7Eng6F",
                "assignee": null,
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5727",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:49:34Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/labels{/name}",
                "updated_at": "2025-08-07T05:35:40Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3298691383,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726",
                "body": "# feat(scenarios): Implement conditional mocking and complex response structures\n\n## Description\n\nThis ticket enhances the mocking system to support conditional responses based on input parameters and complex response structures with metadata. This enables realistic testing of service interactions like GitHub API calls or EVM transactions with proper request/response matching.\n\n## Acceptance Criteria\n\n1. Mock definitions support `when` clauses for conditional responses\n2. `when` clauses can match on method arguments, input parameters, or request context\n3. Mock responses support complex nested structures with metadata (timestamps, IDs, etc.)\n4. Multiple mock responses can be defined for the same service/method with different conditions\n5. Mock system provides clear logging of which mock was triggered and why\n6. Mock responses can include realistic error conditions and edge cases\n7. Support for dynamic response generation based on input parameters\n8. Mock validation ensures `when` clauses are syntactically correct\n\n## Technical Approach\n\n### 1. Enhanced Mock Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst MockSchema = z.object({\n  service: z.string(),\n  method: z.string(),\n  when: z.object({\n    // Match on method arguments\n    args: z.array(z.any()).optional(),\n    // Match on specific argument values\n    input: z.record(z.any()).optional(),\n    // Match on request context\n    context: z.record(z.any()).optional(),\n    // Custom matching function\n    matcher: z.string().optional(), // JavaScript expression\n  }).optional(),\n  response: z.any(), // Can be function or static value\n  // For dynamic responses\n  responseFn: z.string().optional(), // JavaScript function\n  // Error simulation\n  error: z.object({\n    code: z.string(),\n    message: z.string(),\n  }).optional(),\n});\n```\n\n### 2. Mock Engine Implementation\n```typescript\n// packages/cli/src/scenarios/mock-engine.ts\nexport class MockEngine {\n  private mocks: MockDefinition[] = [];\n\n  addMock(mock: MockDefinition) {\n    this.mocks.push(mock);\n  }\n\n  async findMock(service: string, method: string, args: any[]): Promise<any> {\n    const candidates = this.mocks.filter(m => \n      m.service === service && m.method === method\n    );\n\n    for (const mock of candidates) {\n      if (await this.matchesCondition(mock, args)) {\n        this.logger.info(`Mock triggered: ${service}.${method} with condition: ${JSON.stringify(mock.when)}`);\n        return this.generateResponse(mock, args);\n      }\n    }\n\n    return null; // No mock found\n  }\n\n  private async matchesCondition(mock: MockDefinition, args: any[]): Promise<boolean> {\n    if (!mock.when) return true; // Default mock\n\n    // Match on arguments\n    if (mock.when.args) {\n      if (!this.deepEqual(args, mock.when.args)) return false;\n    }\n\n    // Match on input parameters\n    if (mock.when.input) {\n      const input = this.extractInputFromArgs(args);\n      if (!this.deepEqual(input, mock.when.input)) return false;\n    }\n\n    // Custom matcher function\n    if (mock.when.matcher) {\n      const matcherFn = new Function('args', 'input', mock.when.matcher);\n      return matcherFn(args, this.extractInputFromArgs(args));\n    }\n\n    return true;\n  }\n\n  private generateResponse(mock: MockDefinition, args: any[]): any {\n    if (mock.error) {\n      throw new Error(`${mock.error.code}: ${mock.error.message}`);\n    }\n\n    if (mock.responseFn) {\n      const responseFn = new Function('args', 'input', mock.responseFn);\n      return responseFn(args, this.extractInputFromArgs(args));\n    }\n\n    return mock.response;\n  }\n}\n```\n\n## Test Scenario\n\nCreate `advanced-mocking-test.scenario.yaml`:\n```yaml\nname: \"Advanced Mocking Test\"\ndescription: \"Tests conditional mocking and complex response structures\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    # Conditional GitHub issue search\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"bug\"\n        matcher: \"input.labels.includes('bug')\"\n      response:\n        - title: \"Critical Bug Found\"\n          number: 456\n          state: \"open\"\n          labels: [\"bug\", \"critical\"]\n          created_at: \"2024-07-15T10:00:00Z\"\n\n    # Conditional GitHub issue search - different response\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"feature\"\n        matcher: \"input.labels.includes('feature')\"\n      response:\n        - title: \"New Feature Request\"\n          number: 789\n          state: \"open\"\n          labels: [\"feature\", \"enhancement\"]\n          created_at: \"2024-07-15T11:00:00Z\"\n\n    # Dynamic EVM balance response\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      when:\n        args: [\"0x1234567890abcdef\"]\n      responseFn: |\n        return {\n          chain: \"ethereum\",\n          address: args[0],\n          balances: [\n            { symbol: \"ETH\", amount: \"1.23\" },\n            { symbol: \"USDC\", amount: \"1000.00\" }\n          ],\n          last_updated: new Date().toISOString()\n        }\n\n    # Error simulation\n    - service: \"github-service\"\n      method: \"readFile\"\n      when:\n        input:\n          path: \"/docs/nonexistent.md\"\n      error:\n        code: \"FILE_NOT_FOUND\"\n        message: \"File does not exist\"\n\nrun:\n  - name: \"Test conditional GitHub search\"\n    input: \"Search for issues with bug label\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"Critical Bug Found\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent correctly search for bug issues?\"\n        expected: \"yes\"\n\n  - name: \"Test dynamic EVM response\"\n    input: \"What's the balance for address 0x1234567890abcdef?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n      - type: \"string_contains\"\n        value: \"1000.00 USDC\"\n\n  - name: \"Test error handling\"\n    input: \"Read the file /docs/nonexistent.md\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.readFile\"\n      - type: \"string_contains\"\n        value: \"File does not exist\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Conditional Matching**: Test different responses based on input parameters\n2. **Dynamic Responses**: Test response generation based on arguments\n3. **Error Simulation**: Test error handling and reporting\n4. **Complex Structures**: Test nested response objects with metadata\n5. **Multiple Mocks**: Test multiple mocks for same service/method\n6. **Logging**: Verify mock selection is logged clearly\n\n## Dependencies\n\n- Builds on existing mock system in scenarios\n- Requires plugin system integration (Ticket 1)\n- Integrates with agent interaction testing (Ticket 3) ",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement conditional mocking and complex response structures",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5726,
                "node_id": "I_kwDOMT5cIs7Engk3",
                "assignee": null,
                "comments": 2,
                "html_url": "https://github.com/elizaOS/eliza/issues/5726",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:49:00Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/labels{/name}",
                "updated_at": "2025-08-07T05:32:53Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              },
              {
                "id": 3298689704,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725",
                "body": "# feat(scenarios): Implement plugin specification and dynamic loading\n\n## Description\n\nThis ticket implements plugin specification in scenario YAML files, allowing scenarios to declare which plugins are required for testing. This enables testing of agent behaviors that depend on specific plugins like `@elizaos/plugin-github` or `@elizaos/plugin-evm`. The system will dynamically load specified plugins during scenario execution and make their actions, providers, and services available to the agent.\n\n## Acceptance Criteria\n\n1. Scenario YAML supports a `plugins` array at the root level with string plugin names\n2. The `initializeAgent()` function respects scenario plugin specifications and loads them via `startAgent()`\n3. Plugin loading follows the same dependency resolution and error handling as the main CLI\n4. Scenarios can specify both string plugin names (`@elizaos/plugin-github`) and direct plugin objects\n5. Plugin loading errors are clearly reported with actionable guidance\n6. Default plugins (bootstrap, sql) are automatically included unless explicitly excluded via `exclude_defaults: true`\n7. Plugin conflicts are detected and reported during scenario validation\n8. Plugin initialization errors don't crash the scenario but are reported in results\n\n## Technical Approach\n\n### 1. Update Scenario Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst ScenarioSchema = z.object({\n  name: z.string(),\n  description: z.string(),\n  plugins: z.array(z.string()).optional(), // e.g., [\"@elizaos/plugin-github\"]\n  exclude_defaults: z.boolean().optional(), // exclude bootstrap/sql\n  environment: EnvironmentSchema,\n  setup: SetupSchema.optional(),\n  run: z.array(RunStepSchema),\n  judgment: JudgmentSchema,\n});\n```\n\n### 2. Enhance Runtime Factory\n```typescript\n// packages/cli/src/scenarios/runtime-factory.ts\nexport async function initializeAgent(scenario: Scenario): Promise<IAgentRuntime> {\n  const character: Character = {\n    name: 'scenario-runner',\n    id: stringToUuid('scenario-runner'),\n    bio: 'A minimal character for running scenarios',\n    plugins: scenario.plugins || []\n  };\n\n  // Load default plugins unless excluded\n  if (!scenario.exclude_defaults) {\n    character.plugins.push('@elizaos/plugin-bootstrap', '@elizaos/plugin-sql');\n  }\n\n  const runtime = await startAgent(\n    encryptedCharacter(character),\n    server,\n    undefined,\n    character.plugins,\n    { isTestMode: true }\n  );\n\n  return runtime;\n}\n```\n\n### 3. Plugin Validation\n```typescript\n// packages/cli/src/scenarios/plugin-validator.ts\nexport async function validateScenarioPlugins(scenario: Scenario): Promise<ValidationResult[]> {\n  const results: ValidationResult[] = [];\n  \n  for (const pluginName of scenario.plugins || []) {\n    try {\n      const plugin = await loadAndPreparePlugin(pluginName);\n      if (!plugin) {\n        results.push({\n          type: 'error',\n          message: `Plugin '${pluginName}' could not be loaded`,\n          suggestion: 'Check if plugin is installed or built correctly'\n        });\n      }\n    } catch (error) {\n      results.push({\n        type: 'error', \n        message: `Failed to validate plugin '${pluginName}': ${error.message}`,\n        suggestion: 'Verify plugin dependencies and configuration'\n      });\n    }\n  }\n  \n  return results;\n}\n```\n\n## Test Scenario\n\nCreate `plugin-integration-test.scenario.yaml`:\n```yaml\nname: \"Plugin Integration Test\"\ndescription: \"Tests loading and using plugins specified in scenario YAML\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Test Issue\"\n          number: 123\n          state: \"open\"\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"1.23\"\n\nrun:\n  - name: \"Test GitHub plugin actions\"\n    input: \"Search for issues with label 'bug'\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify GitHub plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"Test Issue\"\n        description: \"Verify agent found the mocked issue\"\n\n  - name: \"Test EVM plugin actions\"\n    input: \"What's my wallet balance?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify EVM plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n        description: \"Verify agent reported the mocked balance\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Plugin Loading Test**: Verify plugins load without errors\n2. **Action Availability Test**: Confirm agent can use plugin actions\n3. **Error Handling Test**: Test with non-existent plugin\n4. **Default Plugin Test**: Verify bootstrap/sql are included by default\n5. **Exclusion Test**: Test `exclude_defaults: true` behavior\n\n## Dependencies\n\n- Fixes the `startAgent` hanging issue (#5719) to enable plugin testing\n- Builds on existing `loadAndPreparePlugin` functionality\n- Integrates with current scenario execution flow ",
                "type": null,
                "user": {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                },
                "state": "open",
                "title": "feat(scenarios): Implement plugin specification and dynamic loading",
                "labels": [
                  {
                    "id": 7181511264,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                    "name": "enhancement",
                    "color": "a2eeef",
                    "default": true,
                    "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                    "description": "New feature or request"
                  },
                  {
                    "id": 8938220384,
                    "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                    "name": "Reality Spiral",
                    "color": "ededed",
                    "default": false,
                    "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                    "description": null
                  }
                ],
                "locked": false,
                "number": 5725,
                "node_id": "I_kwDOMT5cIs7EngKo",
                "assignee": null,
                "comments": 1,
                "html_url": "https://github.com/elizaOS/eliza/issues/5725",
                "assignees": [],
                "closed_at": null,
                "closed_by": null,
                "milestone": null,
                "reactions": {
                  "+1": 0,
                  "-1": 0,
                  "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/reactions",
                  "eyes": 0,
                  "heart": 0,
                  "laugh": 0,
                  "hooray": 0,
                  "rocket": 0,
                  "confused": 0,
                  "total_count": 0
                },
                "created_at": "2025-08-07T02:48:08Z",
                "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/events",
                "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/labels{/name}",
                "updated_at": "2025-08-07T05:37:32Z",
                "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/comments",
                "state_reason": null,
                "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/timeline",
                "repository_url": "https://api.github.com/repos/elizaOS/eliza",
                "active_lock_reason": null,
                "author_association": "COLLABORATOR",
                "sub_issues_summary": {
                  "total": 0,
                  "completed": 0,
                  "percent_completed": 0
                },
                "performed_via_github_app": null
              }
            ]
          },
          "issues": [
            {
              "id": 3310285907,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754",
              "body": "## Issue Summary\nThe `elizaos publish --npm` command reports successful publishing but the plugin is not actually published to npm, despite showing success messages. The npm publish is failing with a 404 error, but the ElizaOS CLI incorrectly reports success.\n\n## Key Problems Identified\n\n### 1. Critical NPM Publishing Failure\n- **Error**: `npm error 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found`\n- **Issue**: The package scope `@elizaos` doesn't exist on npm, preventing publishing\n- **Impact**: Package cannot be published to npm, but CLI reports success\n\n### 2. False Success Reporting\n- **Issue**: CLI reports `[‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm`\n- **Reality**: npm publish failed with 404 error\n- **Impact**: Developers believe their plugin is published when it's not\n\n### 3. Registry Repository Mismatch\n- **Expected**: Should create PR against `https://github.com/elizaos-plugins/registry`\n- **Actual**: Still references old registry `https://github.com/elizaos/registry`\n- **Impact**: Plugin won't appear in the official ElizaOS registry\n\n## Steps to Reproduce\n\n```bash\n# Navigate to the plugin directory\ncd packages/plugin-polygon\n\n# Ensure you're on the correct branch with the changes\ngit checkout polygon\n\n# Run the publish command\nelizaos publish --npm\n\n# Verify the success message appears\n# [‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm\n\n# Check if package actually exists on npm\nnpm view @elizaos/plugin-polygon@1.0.0\n# Result: 404 Not Found - '@elizaos/plugin-polygon@1.0.0' is not in this registry\n```\n\n## Technical Details\n\n### NPM Error Analysis\nThe npm logs show the root cause:\n```\nhttp fetch PUT 404 https://registry.npmjs.org/@elizaos%2fplugin-polygon 507ms\nerror 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found\n```\n\nThis indicates that the `@elizaos` scope doesn't exist on npm, which is required for publishing scoped packages.\n\n### CLI Error Handling Failure\nThe ElizaOS CLI is not properly parsing npm error codes:\n- npm returns exit code 1 (failure)\n- CLI ignores the error and reports success\n- No validation that the package actually exists on npm\n\n## Expected Behavior\n1. CLI should detect npm publish failures (exit code 1)\n2. CLI should fail with clear error message when package scope doesn't exist\n3. CLI should validate that package actually exists on npm after publishing\n4. CLI should create PRs against the correct registry repository\n\n## Recommended Fixes\n\n### 1. Fix NPM Error Detection\n```typescript\n// In the publish command, check npm exit code\nconst npmResult = await exec('npm publish', { cwd: pluginDir });\nif (npmResult.exitCode !== 0) {\n  throw new Error(`NPM publish failed: ${npmResult.stderr}`);\n}\n```\n\n### 2. Add Package Scope Validation\n```typescript\n// Before publishing, check if scope exists\nconst scopeExists = await checkNpmScope('@elizaos');\nif (!scopeExists) {\n  throw new Error('Package scope @elizaos does not exist on npm. Contact npm support to create the scope.');\n}\n```\n\n### 3. Add Post-Publish Validation\n```typescript\n// After publishing, verify package exists\nconst packageExists = await checkPackageExists(packageName, version);\nif (!packageExists) {\n  throw new Error(`Package was not published successfully. Check npm logs for details.`);\n}\n```\n\n## Priority\n**Critical** - This completely blocks plugin publishing and creates false success reports.\n\n## Affected Components\n- `packages/cli/src/commands/publish.ts`\n- NPM publishing logic\n- Error handling and success reporting\n- Package scope validation\n- Registry repository configuration\n\n## Immediate Action Required\n1. **Create the `@elizaos` scope on npm** or use an existing scope\n2. Update CLI to properly detect and handle npm publish failures\n3. Add post-publish validation to ensure packages actually exist on npm\n4. Update registry repository configuration\n\n## Alternative Solutions\n1. **Use existing scope**: Change package name to `@monilpat/plugin-polygon`\n2. **Create organization scope**: Set up `@elizaos` organization on npm\n3. **Use unscoped package**: Publish as `elizaos-plugin-polygon`\n\nThis issue is critically blocking plugin developers from successfully publishing their work and needs immediate attention from the ElizaOS team.\n",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "Critical: Plugin Publishing Fails with False Success Reports",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5754,
              "node_id": "I_kwDOMT5cIs7FTvRT",
              "assignee": null,
              "comments": 0,
              "html_url": "https://github.com/elizaOS/eliza/issues/5754",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-11T14:20:08Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/labels{/name}",
              "updated_at": "2025-08-11T14:20:08Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3308102900,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749",
              "body": "### Problem Statement\nCurrently, ElizaOS scenario testing lacks the ability to mock internal agent runtime calls (particularly LLM interactions) when testing via the API client. This makes it difficult to create deterministic tests for agent behavior and workflows.\n\n### Current Limitations\n- Global function mocks only work for code executed in the same process\n- No way to intercept `runtime.useModel` calls from the bootstrap plugin\n- Agent behavior is non-deterministic due to real LLM calls\n- Difficult to test specific agent decision paths and responses\n\n### Why Different Approach Was Needed\n\nThe existing mocking system was designed for **code execution environments** (E2B sandbox and local `node -e` processes), where mocks are applied to the execution context. However, **agent testing** works differently:\n\n- **E2B/Local Execution**: Code runs in isolated processes/sandboxes where global mocks can be applied\n- **Agent Testing**: Agent runs as a service with API client interaction, requiring direct runtime method interception\n- **Architecture Gap**: The bootstrap plugin calls `runtime.useModel` internally, which can't be mocked through the execution environment approach\n\nThis architectural difference necessitated a new approach that directly intercepts runtime methods rather than relying on execution context mocking.\n\n### Proposed Solution: Runtime Method Mocking\n\nWe've implemented a new mocking approach that directly intercepts `IAgentRuntime` method calls:\n\n#### Key Components\n\n1. **MockEngine Enhancement**\n   - Added `runtimeMethodMocks` to support mocking runtime methods\n   - Priority system: `runtimeMethod` > `service` > `globalFunction`\n   - Direct method replacement on the runtime instance\n\n2. **Schema Updates**\n   - Extended `MockSchema` to include `runtimeMethod: z.string().optional()`\n   - Supports mocking any `IAgentRuntime` method (e.g., `useModel`, `getService`)\n\n3. **Conditional Matching**\n   - Matcher functions can inspect method arguments\n   - Example: `\"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"`\n   - Supports complex conditional logic for when to apply mocks\n\n#### Usage Example\n\n```yaml\nsetup:\n  mocks:\n    - runtimeMethod: \"useModel\"\n      method: \"useModel\"\n      when:\n        matcher: \"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"\n      response: \"<response><name>agent</name><reasoning>Mocked response</reasoning><action>RESPOND</action></response>\"\n```\n\n#### Benefits\n\n1. **Deterministic Testing**: Replace LLM calls with static responses\n2. **Full Workflow Testing**: Test complete agent decision flows\n3. **Conditional Mocking**: Apply mocks based on specific conditions\n4. **Runtime Integration**: Works seamlessly with existing agent architecture\n5. **Backward Compatibility**: Existing mocks continue to work\n\n#### Implementation Steps\n\n- MockEngine runtime method support\n- Schema updates for runtimeMethod mocks\n- Conditional matching with matcher functions\n- Integration with scenario runner\n- Basic useModel mocking working\n- Add support for mocking other runtime methods (getService, etc.)\n- Create comprehensive test scenarios\n- Add documentation and examples\n- Consider adding mock recording/replay capabilities\n\n### Technical Details\n\nThe implementation works by:\n1. Creating the `IAgentRuntime` instance in the scenario runner\n2. Applying mocks directly to the runtime object before agent initialization\n3. The bootstrap plugin receives the mocked runtime and uses the mocked methods\n4. Mocks are reverted after scenario completion\n\nThis approach provides the foundation for robust, deterministic agent testing while maintaining the existing architecture.",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "Implement Runtime Method Mocking for Deterministic Agent Testing",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 7668252177,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/testing",
                  "name": "testing",
                  "color": "2D3957",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAAByRA-EQ",
                  "description": ""
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5749,
              "node_id": "I_kwDOMT5cIs7FLaT0",
              "assignee": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "comments": 0,
              "html_url": "https://github.com/elizaOS/eliza/issues/5749",
              "assignees": [
                {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-11T00:08:49Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/labels{/name}",
              "updated_at": "2025-08-11T00:09:37Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3304516859,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747",
              "body": null,
              "type": null,
              "user": {
                "id": 48334430,
                "url": "https://api.github.com/users/samarth30",
                "type": "User",
                "login": "samarth30",
                "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                "html_url": "https://github.com/samarth30",
                "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/samarth30/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/samarth30/followers",
                "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/samarth30/orgs",
                "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                "received_events_url": "https://api.github.com/users/samarth30/received_events"
              },
              "state": "open",
              "title": "Fixing bugs in eliza-cloud",
              "labels": [],
              "locked": false,
              "number": 5747,
              "node_id": "I_kwDOMT5cIs7E9uz7",
              "assignee": {
                "id": 48334430,
                "url": "https://api.github.com/users/samarth30",
                "type": "User",
                "login": "samarth30",
                "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                "html_url": "https://github.com/samarth30",
                "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/samarth30/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/samarth30/followers",
                "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/samarth30/orgs",
                "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                "received_events_url": "https://api.github.com/users/samarth30/received_events"
              },
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5747",
              "assignees": [
                {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-08T16:01:56Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/labels{/name}",
              "updated_at": "2025-08-08T19:02:49Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "MEMBER",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": {
                "id": 20150,
                "name": "Linear",
                "slug": "linear",
                "owner": {
                  "id": 46686594,
                  "url": "https://api.github.com/users/linear",
                  "type": "Organization",
                  "login": "linear",
                  "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ2Njg2NTk0",
                  "html_url": "https://github.com/linear",
                  "gists_url": "https://api.github.com/users/linear/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/linear/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/46686594?v=4",
                  "events_url": "https://api.github.com/users/linear/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/linear/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/linear/followers",
                  "following_url": "https://api.github.com/users/linear/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/linear/orgs",
                  "subscriptions_url": "https://api.github.com/users/linear/subscriptions",
                  "received_events_url": "https://api.github.com/users/linear/received_events"
                },
                "events": [
                  "check_suite",
                  "issues",
                  "issue_comment",
                  "pull_request",
                  "pull_request_review",
                  "repository",
                  "sub_issues"
                ],
                "node_id": "MDM6QXBwMjAxNTA=",
                "html_url": "https://github.com/apps/linear",
                "client_id": "Iv1.085d682ea245c945",
                "created_at": "2018-11-02T18:07:23Z",
                "updated_at": "2025-02-07T14:59:56Z",
                "description": "",
                "permissions": {
                  "checks": "read",
                  "issues": "write",
                  "metadata": "read",
                  "pull_requests": "write"
                },
                "external_url": "https://linear.app"
              }
            },
            {
              "id": 3302237103,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738",
              "body": "## Description\n\nThe `bun run clean` command is failing due to TypeScript errors in `@elizaos/core` package during the DTS (type definition) build phase.\n\n## Error Details\n\n### Build Process\n```\n‚Ä¢ Running build in 17 packages\n‚Ä¢ Remote caching disabled\n@elizaos/config:build: cache miss\n@elizaos/autodoc:build: cache miss\n@elizaos/core:build: cache miss\n```\n\n### TypeScript Errors in @elizaos/core/src/utils.ts\n1. Line 218: `error TS2345: Argument of type '`${string}-${string}-${string}-${string}-${string}`' is not assignable to parameter of type 'never'.`\n2. Line 366: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n3. Line 409: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n4. Line 536: `error TS2345: Argument of type '{ numberOfChunks: number; averageChunkSize: number; }' is not assignable to parameter of type 'never'.`\n\n### Impact\n- Blocks `bun run clean` command\n- Prevents successful build of `@elizaos/core`\n- Affects dependent packages in the monorepo\n\n## Steps to Reproduce\n1. Run `bun run clean`\n2. Observe build failure in `@elizaos/core`\n3. Build fails with TypeScript errors during DTS generation\n\n## Expected Behavior\n- `bun run clean` should complete successfully\n- `@elizaos/core` should build without TypeScript errors\n- Type definitions should be generated correctly\n\n## Suggested Fix\n\nThe errors suggest type mismatches in `utils.ts`. Need to:\n1. Review type definitions in affected lines\n2. Update type assertions or generic constraints\n3. Ensure string template literal types are properly handled\n4. Fix object type assignments\n\n### Files to Update\n- `packages/core/src/utils.ts`\n\n## Priority\n**HIGH** - This is blocking clean builds and potentially affecting development workflow.",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "üêõ Build failure in @elizaos/core causing bun run clean to fail",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5738,
              "node_id": "I_kwDOMT5cIs7E1COv",
              "assignee": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5738",
              "assignees": [
                {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-08T00:26:11Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/labels{/name}",
              "updated_at": "2025-08-11T14:56:01Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3301116813,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734",
              "body": "**Describe the bug**\n\nOn project creation, ElizaOS CLI fails with the following error:\n```\n‚óá  Failed to build project\nstdout: src/index.ts(7,25): error TS2345: Argument of type 'string' is not assignable to parameter of type 'undefined'.\nstderr: $ tsc --noEmit && vite build && tsup\n```\n\n**To Reproduce**\n\n- Install ElizaOS through `bun`\n```\nbun i -g @elizaos/cli\n```\n- Create new ElizaOS project\n```\nelizaos create abcde\n```\n\n**Expected behavior**\n\nProject built successfully\n\n**Screenshots**\n\n<img width=\"1095\" height=\"572\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/967dd6a2-0d70-4e2e-8019-85a2eab5f225\" />\n\n**Additional context**\n\nElizaOS CLI version: `1.3.2`\n",
              "type": null,
              "user": {
                "id": 74447600,
                "url": "https://api.github.com/users/Kemystra",
                "type": "User",
                "login": "Kemystra",
                "node_id": "MDQ6VXNlcjc0NDQ3NjAw",
                "html_url": "https://github.com/Kemystra",
                "gists_url": "https://api.github.com/users/Kemystra/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/Kemystra/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/74447600?v=4",
                "events_url": "https://api.github.com/users/Kemystra/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/Kemystra/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/Kemystra/followers",
                "following_url": "https://api.github.com/users/Kemystra/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/Kemystra/orgs",
                "subscriptions_url": "https://api.github.com/users/Kemystra/subscriptions",
                "received_events_url": "https://api.github.com/users/Kemystra/received_events"
              },
              "state": "open",
              "title": "Eliza CLI failed to build project",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5734,
              "node_id": "I_kwDOMT5cIs7EwwuN",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5734",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T16:14:00Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/labels{/name}",
              "updated_at": "2025-08-08T19:43:52Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "NONE",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3299481897,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729",
              "body": "# Relates to\r\n\r\nN/A (Documentation improvement, not tied to a specific issue or ticket)\r\n\r\n# Risks\r\n\r\nLow.  \r\nThis change only updates documentation and does not affect any code or functionality.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR updates the elizaos README to include a fix for installation errors that may occur due to permission issues. It adds a note suggesting the use of sudo if users encounter a \"Permission denied\" or \"InstallFailed\" error when running the `elizaos create my-agent` command.\r\n\r\n## What kind of change is this?\r\n\r\nImprovements (misc. changes to existing features)  \r\nDocumentation update\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes require a change to the project documentation.  \r\nI have updated the documentation accordingly.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\nStart by reviewing the changes in the README.md file, specifically the section on creating a new project.\r\n\r\n## Detailed testing steps\r\n\r\n- Open the updated README.md.\r\n- Review the new instructions under \"Create Your First Project.\"\r\n- Confirm that the added note about using `sudo` is clear and helpful for users who encounter permission errors.",
              "type": null,
              "user": {
                "id": 32749185,
                "url": "https://api.github.com/users/mandatedisrael",
                "type": "User",
                "login": "mandatedisrael",
                "node_id": "MDQ6VXNlcjMyNzQ5MTg1",
                "html_url": "https://github.com/mandatedisrael",
                "gists_url": "https://api.github.com/users/mandatedisrael/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/mandatedisrael/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/32749185?v=4",
                "events_url": "https://api.github.com/users/mandatedisrael/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/mandatedisrael/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/mandatedisrael/followers",
                "following_url": "https://api.github.com/users/mandatedisrael/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/mandatedisrael/orgs",
                "subscriptions_url": "https://api.github.com/users/mandatedisrael/subscriptions",
                "received_events_url": "https://api.github.com/users/mandatedisrael/received_events"
              },
              "draft": false,
              "state": "open",
              "title": "Update README.md to fix error",
              "labels": [],
              "locked": false,
              "number": 5729,
              "node_id": "PR_kwDOMT5cIs6iiNWN",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/pull/5729",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T08:10:12Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/labels{/name}",
              "updated_at": "2025-08-07T08:10:24Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/comments",
              "pull_request": {
                "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5729",
                "diff_url": "https://github.com/elizaOS/eliza/pull/5729.diff",
                "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                "merged_at": null,
                "patch_url": "https://github.com/elizaOS/eliza/pull/5729.patch"
              },
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "FIRST_TIME_CONTRIBUTOR",
              "performed_via_github_app": null
            },
            {
              "id": 3299322983,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728",
              "body": "# Background\r\n\r\n## What does this PR do?\r\n\r\nIntroduce entity for cancelling runs `CancelRunSignal`\r\n\r\n## Why are we doing this? Any context or related work?\r\n\r\n- Calls to LLMs usually cost some credits\r\n- When we receive the `RUN_STARTED` event we can check current entity and end run to prevent credits spending\r\n\r\n# Documentation changes needed?\r\n\r\n## Methods\r\n\r\n- `static getSignal(runId: UUID)` - get signal by runId or create if null\r\n- `static clear(runId: UUID)` - clear signal from map\r\n- `cancel(content?: Content)` - cancel current run and and send `content` as a response to user\r\n\r\n## Example\r\n\r\n```typescript\r\nimport { Content, EventType, Plugin } from \"@elizaos/core\";\r\nimport { CancelRunSignal } from \"@elizaos/plugin-bootstrap\";\r\n\r\n// consider we have a service to determine eligibility for entity\r\ninterface EligibilityService {\r\n  check(entityId: UUID): Promise<{ result: boolean, reason?: Content }>\r\n}\r\n\r\nconst plugin: Plugin = {\r\n...\r\n  events: {\r\n    [EventType.RUN_STARTED]: ({ entityId, runId, runtime }) => {\r\n      const service = runtime.getService<EligibilityService>(\"USER_MANAGEMENT\");\r\n      const { result, reason } = await service.check(entityId);\r\n      \r\n      if (!result) {\r\n        const signal = CancelRunSignal.getSignal(runId);\r\n        signal.cancel(reason);\r\n      }\r\n    },\r\n    ...\r\n  },\r\n  ...\r\n}\r\n\r\nexport default Plugin;\r\n```\r\n\r\n## Discord username\r\n\r\nalexd000\r\n\r\n",
              "type": null,
              "user": {
                "id": 82507604,
                "url": "https://api.github.com/users/alex-nax",
                "type": "User",
                "login": "alex-nax",
                "node_id": "MDQ6VXNlcjgyNTA3NjA0",
                "html_url": "https://github.com/alex-nax",
                "gists_url": "https://api.github.com/users/alex-nax/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/alex-nax/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/82507604?v=4",
                "events_url": "https://api.github.com/users/alex-nax/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/alex-nax/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/alex-nax/followers",
                "following_url": "https://api.github.com/users/alex-nax/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/alex-nax/orgs",
                "subscriptions_url": "https://api.github.com/users/alex-nax/subscriptions",
                "received_events_url": "https://api.github.com/users/alex-nax/received_events"
              },
              "draft": false,
              "state": "open",
              "title": "feat: ability to cancel current run before any calls to LLM are made",
              "labels": [],
              "locked": false,
              "number": 5728,
              "node_id": "PR_kwDOMT5cIs6ihriD",
              "assignee": null,
              "comments": 3,
              "html_url": "https://github.com/elizaOS/eliza/pull/5728",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T07:19:35Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/labels{/name}",
              "updated_at": "2025-08-07T07:22:05Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/comments",
              "pull_request": {
                "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5728",
                "diff_url": "https://github.com/elizaOS/eliza/pull/5728.diff",
                "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                "merged_at": null,
                "patch_url": "https://github.com/elizaOS/eliza/pull/5728.patch"
              },
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "FIRST_TIME_CONTRIBUTOR",
              "performed_via_github_app": null
            },
            {
              "id": 3298692741,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727",
              "body": "# feat(scenarios): Implement natural language agent interaction and response validation\n\n## Description\n\nThis ticket enables scenarios to test agent behavior through natural language interactions rather than direct code execution. This allows testing of agent reasoning, decision-making, and response generation in realistic conversation contexts with proper evaluation of agent responses.\n\n## Acceptance Criteria\n\n1. Scenario `run` blocks support `input` field for natural language prompts to agents\n2. Agent responses are captured and available for evaluation (text, thoughts, actions)\n3. Evaluators can access both agent response text and execution context\n4. Support for multi-turn conversations in scenarios\n5. Agent responses include thought process and action decisions\n6. Integration with existing evaluation engine for response validation\n7. Support for conversation context across multiple steps\n8. Agent response timing and performance metrics\n\n## Technical Approach\n\n### 1. Enhanced Run Step Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst RunStepSchema = z.object({\n  name: z.string().optional(),\n  // Natural language input to agent\n  input: z.string().optional(),\n  // Direct code execution (existing)\n  lang: z.string().optional(),\n  code: z.string().optional(),\n  // Agent interaction specific\n  agent_context: z.object({\n    conversation_id: z.string().optional(),\n    user_id: z.string().optional(),\n    room_id: z.string().optional(),\n  }).optional(),\n  evaluations: z.array(EvaluationSchema),\n});\n```\n\n### 2. Agent Interaction Engine\n```typescript\n// packages/cli/src/scenarios/agent-interaction.ts\nexport class AgentInteractionEngine {\n  constructor(private runtime: IAgentRuntime) {}\n\n  async interactWithAgent(input: string, context?: AgentContext): Promise<AgentResponse> {\n    // Create message for agent\n    const message: Memory = {\n      entityId: context?.user_id || 'scenario-user',\n      roomId: context?.room_id || 'scenario-room',\n      content: {\n        type: 'text',\n        text: input,\n      },\n      metadata: {\n        type: 'message',\n        conversationId: context?.conversation_id,\n      },\n    };\n\n    // Send to agent and capture response\n    const startTime = Date.now();\n    const response = await this.runtime.processMessage(message);\n    const endTime = Date.now();\n\n    return {\n      text: response.text,\n      thoughts: response.thoughts,\n      actions: response.actions,\n      timing: {\n        startTime,\n        endTime,\n        duration: endTime - startTime,\n      },\n      context: {\n        conversationId: context?.conversation_id,\n        messageId: message.id,\n      },\n    };\n  }\n}\n```\n\n### 3. Enhanced Execution Result\n```typescript\n// packages/cli/src/scenarios/providers.ts\nexport interface ExecutionResult {\n  exitCode: number;\n  stdout: string;\n  stderr: string;\n  files: Record<string, string>;\n  // New: Agent interaction results\n  agentResponse?: AgentResponse;\n  conversationHistory?: AgentResponse[];\n}\n```\n\n## Test Scenario\n\nCreate `agent-interaction-test.scenario.yaml`:\n```yaml\nname: \"Agent Interaction Test\"\ndescription: \"Tests natural language interaction with agents\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Implement Dark Mode\"\n          number: 123\n          state: \"open\"\n          labels: [\"feature\", \"ui\"]\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"2.5\"\n\nrun:\n  - name: \"Ask agent about roadmap\"\n    input: \"What new features are you planning to add?\"\n    agent_context:\n      conversation_id: \"roadmap-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify agent searched for issues\"\n      \n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n        description: \"Verify agent mentioned the mocked issue\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent provide a helpful and coherent response about new features?\"\n        expected: \"yes\"\n        description: \"Verify agent response quality\"\n\n  - name: \"Ask agent about wallet\"\n    input: \"What's my current wallet balance?\"\n    agent_context:\n      conversation_id: \"wallet-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify agent checked wallet balance\"\n      \n      - type: \"string_contains\"\n        value: \"2.5 ETH\"\n        description: \"Verify agent reported the correct balance\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent clearly explain the wallet balance information?\"\n        expected: \"yes\"\n\n  - name: \"Multi-turn conversation\"\n    input: \"Can you help me with both my wallet and roadmap?\"\n    agent_context:\n      conversation_id: \"multi-turn-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"ETH\"\n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent address both wallet and roadmap questions comprehensively?\"\n        expected: \"yes\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Single Turn**: Test basic agent interaction and response\n2. **Multi-turn**: Test conversation context across steps\n3. **Action Tracking**: Verify agent uses appropriate actions\n4. **Response Quality**: Test LLM judge evaluation of responses\n5. **Performance**: Test response timing and metrics\n6. **Error Handling**: Test agent behavior with invalid inputs\n\n## Dependencies\n\n- Requires plugin system integration (Ticket 1)\n- Builds on advanced mocking system (Ticket 2)\n- Integrates with existing evaluation engine\n- Depends on agent runtime message processing",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement natural language agent interaction and response validation",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5727,
              "node_id": "I_kwDOMT5cIs7Eng6F",
              "assignee": null,
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5727",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:49:34Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/labels{/name}",
              "updated_at": "2025-08-07T05:35:40Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3298691383,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726",
              "body": "# feat(scenarios): Implement conditional mocking and complex response structures\n\n## Description\n\nThis ticket enhances the mocking system to support conditional responses based on input parameters and complex response structures with metadata. This enables realistic testing of service interactions like GitHub API calls or EVM transactions with proper request/response matching.\n\n## Acceptance Criteria\n\n1. Mock definitions support `when` clauses for conditional responses\n2. `when` clauses can match on method arguments, input parameters, or request context\n3. Mock responses support complex nested structures with metadata (timestamps, IDs, etc.)\n4. Multiple mock responses can be defined for the same service/method with different conditions\n5. Mock system provides clear logging of which mock was triggered and why\n6. Mock responses can include realistic error conditions and edge cases\n7. Support for dynamic response generation based on input parameters\n8. Mock validation ensures `when` clauses are syntactically correct\n\n## Technical Approach\n\n### 1. Enhanced Mock Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst MockSchema = z.object({\n  service: z.string(),\n  method: z.string(),\n  when: z.object({\n    // Match on method arguments\n    args: z.array(z.any()).optional(),\n    // Match on specific argument values\n    input: z.record(z.any()).optional(),\n    // Match on request context\n    context: z.record(z.any()).optional(),\n    // Custom matching function\n    matcher: z.string().optional(), // JavaScript expression\n  }).optional(),\n  response: z.any(), // Can be function or static value\n  // For dynamic responses\n  responseFn: z.string().optional(), // JavaScript function\n  // Error simulation\n  error: z.object({\n    code: z.string(),\n    message: z.string(),\n  }).optional(),\n});\n```\n\n### 2. Mock Engine Implementation\n```typescript\n// packages/cli/src/scenarios/mock-engine.ts\nexport class MockEngine {\n  private mocks: MockDefinition[] = [];\n\n  addMock(mock: MockDefinition) {\n    this.mocks.push(mock);\n  }\n\n  async findMock(service: string, method: string, args: any[]): Promise<any> {\n    const candidates = this.mocks.filter(m => \n      m.service === service && m.method === method\n    );\n\n    for (const mock of candidates) {\n      if (await this.matchesCondition(mock, args)) {\n        this.logger.info(`Mock triggered: ${service}.${method} with condition: ${JSON.stringify(mock.when)}`);\n        return this.generateResponse(mock, args);\n      }\n    }\n\n    return null; // No mock found\n  }\n\n  private async matchesCondition(mock: MockDefinition, args: any[]): Promise<boolean> {\n    if (!mock.when) return true; // Default mock\n\n    // Match on arguments\n    if (mock.when.args) {\n      if (!this.deepEqual(args, mock.when.args)) return false;\n    }\n\n    // Match on input parameters\n    if (mock.when.input) {\n      const input = this.extractInputFromArgs(args);\n      if (!this.deepEqual(input, mock.when.input)) return false;\n    }\n\n    // Custom matcher function\n    if (mock.when.matcher) {\n      const matcherFn = new Function('args', 'input', mock.when.matcher);\n      return matcherFn(args, this.extractInputFromArgs(args));\n    }\n\n    return true;\n  }\n\n  private generateResponse(mock: MockDefinition, args: any[]): any {\n    if (mock.error) {\n      throw new Error(`${mock.error.code}: ${mock.error.message}`);\n    }\n\n    if (mock.responseFn) {\n      const responseFn = new Function('args', 'input', mock.responseFn);\n      return responseFn(args, this.extractInputFromArgs(args));\n    }\n\n    return mock.response;\n  }\n}\n```\n\n## Test Scenario\n\nCreate `advanced-mocking-test.scenario.yaml`:\n```yaml\nname: \"Advanced Mocking Test\"\ndescription: \"Tests conditional mocking and complex response structures\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    # Conditional GitHub issue search\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"bug\"\n        matcher: \"input.labels.includes('bug')\"\n      response:\n        - title: \"Critical Bug Found\"\n          number: 456\n          state: \"open\"\n          labels: [\"bug\", \"critical\"]\n          created_at: \"2024-07-15T10:00:00Z\"\n\n    # Conditional GitHub issue search - different response\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"feature\"\n        matcher: \"input.labels.includes('feature')\"\n      response:\n        - title: \"New Feature Request\"\n          number: 789\n          state: \"open\"\n          labels: [\"feature\", \"enhancement\"]\n          created_at: \"2024-07-15T11:00:00Z\"\n\n    # Dynamic EVM balance response\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      when:\n        args: [\"0x1234567890abcdef\"]\n      responseFn: |\n        return {\n          chain: \"ethereum\",\n          address: args[0],\n          balances: [\n            { symbol: \"ETH\", amount: \"1.23\" },\n            { symbol: \"USDC\", amount: \"1000.00\" }\n          ],\n          last_updated: new Date().toISOString()\n        }\n\n    # Error simulation\n    - service: \"github-service\"\n      method: \"readFile\"\n      when:\n        input:\n          path: \"/docs/nonexistent.md\"\n      error:\n        code: \"FILE_NOT_FOUND\"\n        message: \"File does not exist\"\n\nrun:\n  - name: \"Test conditional GitHub search\"\n    input: \"Search for issues with bug label\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"Critical Bug Found\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent correctly search for bug issues?\"\n        expected: \"yes\"\n\n  - name: \"Test dynamic EVM response\"\n    input: \"What's the balance for address 0x1234567890abcdef?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n      - type: \"string_contains\"\n        value: \"1000.00 USDC\"\n\n  - name: \"Test error handling\"\n    input: \"Read the file /docs/nonexistent.md\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.readFile\"\n      - type: \"string_contains\"\n        value: \"File does not exist\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Conditional Matching**: Test different responses based on input parameters\n2. **Dynamic Responses**: Test response generation based on arguments\n3. **Error Simulation**: Test error handling and reporting\n4. **Complex Structures**: Test nested response objects with metadata\n5. **Multiple Mocks**: Test multiple mocks for same service/method\n6. **Logging**: Verify mock selection is logged clearly\n\n## Dependencies\n\n- Builds on existing mock system in scenarios\n- Requires plugin system integration (Ticket 1)\n- Integrates with agent interaction testing (Ticket 3) ",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement conditional mocking and complex response structures",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5726,
              "node_id": "I_kwDOMT5cIs7Engk3",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5726",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:49:00Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/labels{/name}",
              "updated_at": "2025-08-07T05:32:53Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3298689704,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725",
              "body": "# feat(scenarios): Implement plugin specification and dynamic loading\n\n## Description\n\nThis ticket implements plugin specification in scenario YAML files, allowing scenarios to declare which plugins are required for testing. This enables testing of agent behaviors that depend on specific plugins like `@elizaos/plugin-github` or `@elizaos/plugin-evm`. The system will dynamically load specified plugins during scenario execution and make their actions, providers, and services available to the agent.\n\n## Acceptance Criteria\n\n1. Scenario YAML supports a `plugins` array at the root level with string plugin names\n2. The `initializeAgent()` function respects scenario plugin specifications and loads them via `startAgent()`\n3. Plugin loading follows the same dependency resolution and error handling as the main CLI\n4. Scenarios can specify both string plugin names (`@elizaos/plugin-github`) and direct plugin objects\n5. Plugin loading errors are clearly reported with actionable guidance\n6. Default plugins (bootstrap, sql) are automatically included unless explicitly excluded via `exclude_defaults: true`\n7. Plugin conflicts are detected and reported during scenario validation\n8. Plugin initialization errors don't crash the scenario but are reported in results\n\n## Technical Approach\n\n### 1. Update Scenario Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst ScenarioSchema = z.object({\n  name: z.string(),\n  description: z.string(),\n  plugins: z.array(z.string()).optional(), // e.g., [\"@elizaos/plugin-github\"]\n  exclude_defaults: z.boolean().optional(), // exclude bootstrap/sql\n  environment: EnvironmentSchema,\n  setup: SetupSchema.optional(),\n  run: z.array(RunStepSchema),\n  judgment: JudgmentSchema,\n});\n```\n\n### 2. Enhance Runtime Factory\n```typescript\n// packages/cli/src/scenarios/runtime-factory.ts\nexport async function initializeAgent(scenario: Scenario): Promise<IAgentRuntime> {\n  const character: Character = {\n    name: 'scenario-runner',\n    id: stringToUuid('scenario-runner'),\n    bio: 'A minimal character for running scenarios',\n    plugins: scenario.plugins || []\n  };\n\n  // Load default plugins unless excluded\n  if (!scenario.exclude_defaults) {\n    character.plugins.push('@elizaos/plugin-bootstrap', '@elizaos/plugin-sql');\n  }\n\n  const runtime = await startAgent(\n    encryptedCharacter(character),\n    server,\n    undefined,\n    character.plugins,\n    { isTestMode: true }\n  );\n\n  return runtime;\n}\n```\n\n### 3. Plugin Validation\n```typescript\n// packages/cli/src/scenarios/plugin-validator.ts\nexport async function validateScenarioPlugins(scenario: Scenario): Promise<ValidationResult[]> {\n  const results: ValidationResult[] = [];\n  \n  for (const pluginName of scenario.plugins || []) {\n    try {\n      const plugin = await loadAndPreparePlugin(pluginName);\n      if (!plugin) {\n        results.push({\n          type: 'error',\n          message: `Plugin '${pluginName}' could not be loaded`,\n          suggestion: 'Check if plugin is installed or built correctly'\n        });\n      }\n    } catch (error) {\n      results.push({\n        type: 'error', \n        message: `Failed to validate plugin '${pluginName}': ${error.message}`,\n        suggestion: 'Verify plugin dependencies and configuration'\n      });\n    }\n  }\n  \n  return results;\n}\n```\n\n## Test Scenario\n\nCreate `plugin-integration-test.scenario.yaml`:\n```yaml\nname: \"Plugin Integration Test\"\ndescription: \"Tests loading and using plugins specified in scenario YAML\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Test Issue\"\n          number: 123\n          state: \"open\"\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"1.23\"\n\nrun:\n  - name: \"Test GitHub plugin actions\"\n    input: \"Search for issues with label 'bug'\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify GitHub plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"Test Issue\"\n        description: \"Verify agent found the mocked issue\"\n\n  - name: \"Test EVM plugin actions\"\n    input: \"What's my wallet balance?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify EVM plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n        description: \"Verify agent reported the mocked balance\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Plugin Loading Test**: Verify plugins load without errors\n2. **Action Availability Test**: Confirm agent can use plugin actions\n3. **Error Handling Test**: Test with non-existent plugin\n4. **Default Plugin Test**: Verify bootstrap/sql are included by default\n5. **Exclusion Test**: Test `exclude_defaults: true` behavior\n\n## Dependencies\n\n- Fixes the `startAgent` hanging issue (#5719) to enable plugin testing\n- Builds on existing `loadAndPreparePlugin` functionality\n- Integrates with current scenario execution flow ",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement plugin specification and dynamic loading",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5725,
              "node_id": "I_kwDOMT5cIs7EngKo",
              "assignee": null,
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5725",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:48:08Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/labels{/name}",
              "updated_at": "2025-08-07T05:37:32Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            }
          ]
        },
        "text": "Open issues for elizaOS/eliza (10 shown):\n‚Ä¢ #5754: Critical: Plugin Publishing Fails with False Success Reports (open) [bug]\n‚Ä¢ #5749: Implement Runtime Method Mocking for Deterministic Agent Testing (open) [enhancement, testing, Reality Spiral]\n‚Ä¢ #5747: Fixing bugs in eliza-cloud (open)\n‚Ä¢ #5738: üêõ Build failure in @elizaos/core causing bun run clean to fail (open) [bug]\n‚Ä¢ #5734: Eliza CLI failed to build project (open) [bug]\n‚Ä¢ #5729: Update README.md to fix error (open)\n‚Ä¢ #5728: feat: ability to cancel current run before any calls to LLM are made (open)\n‚Ä¢ #5727: feat(scenarios): Implement natural language agent interaction and response validation (open) [enhancement, Reality Spiral]\n‚Ä¢ #5726: feat(scenarios): Implement conditional mocking and complex response structures (open) [enhancement, Reality Spiral]\n‚Ä¢ #5725: feat(scenarios): Implement plugin specification and dynamic loading (open) [enhancement, Reality Spiral]",
        "values": {
          "issues": [
            {
              "id": 3310285907,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754",
              "body": "## Issue Summary\nThe `elizaos publish --npm` command reports successful publishing but the plugin is not actually published to npm, despite showing success messages. The npm publish is failing with a 404 error, but the ElizaOS CLI incorrectly reports success.\n\n## Key Problems Identified\n\n### 1. Critical NPM Publishing Failure\n- **Error**: `npm error 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found`\n- **Issue**: The package scope `@elizaos` doesn't exist on npm, preventing publishing\n- **Impact**: Package cannot be published to npm, but CLI reports success\n\n### 2. False Success Reporting\n- **Issue**: CLI reports `[‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm`\n- **Reality**: npm publish failed with 404 error\n- **Impact**: Developers believe their plugin is published when it's not\n\n### 3. Registry Repository Mismatch\n- **Expected**: Should create PR against `https://github.com/elizaos-plugins/registry`\n- **Actual**: Still references old registry `https://github.com/elizaos/registry`\n- **Impact**: Plugin won't appear in the official ElizaOS registry\n\n## Steps to Reproduce\n\n```bash\n# Navigate to the plugin directory\ncd packages/plugin-polygon\n\n# Ensure you're on the correct branch with the changes\ngit checkout polygon\n\n# Run the publish command\nelizaos publish --npm\n\n# Verify the success message appears\n# [‚àö] Successfully published @elizaos/plugin-polygon@1.0.0 to npm\n\n# Check if package actually exists on npm\nnpm view @elizaos/plugin-polygon@1.0.0\n# Result: 404 Not Found - '@elizaos/plugin-polygon@1.0.0' is not in this registry\n```\n\n## Technical Details\n\n### NPM Error Analysis\nThe npm logs show the root cause:\n```\nhttp fetch PUT 404 https://registry.npmjs.org/@elizaos%2fplugin-polygon 507ms\nerror 404 Not Found - PUT https://registry.npmjs.org/@elizaos%2fplugin-polygon - Not found\n```\n\nThis indicates that the `@elizaos` scope doesn't exist on npm, which is required for publishing scoped packages.\n\n### CLI Error Handling Failure\nThe ElizaOS CLI is not properly parsing npm error codes:\n- npm returns exit code 1 (failure)\n- CLI ignores the error and reports success\n- No validation that the package actually exists on npm\n\n## Expected Behavior\n1. CLI should detect npm publish failures (exit code 1)\n2. CLI should fail with clear error message when package scope doesn't exist\n3. CLI should validate that package actually exists on npm after publishing\n4. CLI should create PRs against the correct registry repository\n\n## Recommended Fixes\n\n### 1. Fix NPM Error Detection\n```typescript\n// In the publish command, check npm exit code\nconst npmResult = await exec('npm publish', { cwd: pluginDir });\nif (npmResult.exitCode !== 0) {\n  throw new Error(`NPM publish failed: ${npmResult.stderr}`);\n}\n```\n\n### 2. Add Package Scope Validation\n```typescript\n// Before publishing, check if scope exists\nconst scopeExists = await checkNpmScope('@elizaos');\nif (!scopeExists) {\n  throw new Error('Package scope @elizaos does not exist on npm. Contact npm support to create the scope.');\n}\n```\n\n### 3. Add Post-Publish Validation\n```typescript\n// After publishing, verify package exists\nconst packageExists = await checkPackageExists(packageName, version);\nif (!packageExists) {\n  throw new Error(`Package was not published successfully. Check npm logs for details.`);\n}\n```\n\n## Priority\n**Critical** - This completely blocks plugin publishing and creates false success reports.\n\n## Affected Components\n- `packages/cli/src/commands/publish.ts`\n- NPM publishing logic\n- Error handling and success reporting\n- Package scope validation\n- Registry repository configuration\n\n## Immediate Action Required\n1. **Create the `@elizaos` scope on npm** or use an existing scope\n2. Update CLI to properly detect and handle npm publish failures\n3. Add post-publish validation to ensure packages actually exist on npm\n4. Update registry repository configuration\n\n## Alternative Solutions\n1. **Use existing scope**: Change package name to `@monilpat/plugin-polygon`\n2. **Create organization scope**: Set up `@elizaos` organization on npm\n3. **Use unscoped package**: Publish as `elizaos-plugin-polygon`\n\nThis issue is critically blocking plugin developers from successfully publishing their work and needs immediate attention from the ElizaOS team.\n",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "Critical: Plugin Publishing Fails with False Success Reports",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5754,
              "node_id": "I_kwDOMT5cIs7FTvRT",
              "assignee": null,
              "comments": 0,
              "html_url": "https://github.com/elizaOS/eliza/issues/5754",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-11T14:20:08Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/labels{/name}",
              "updated_at": "2025-08-11T14:20:08Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5754/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3308102900,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749",
              "body": "### Problem Statement\nCurrently, ElizaOS scenario testing lacks the ability to mock internal agent runtime calls (particularly LLM interactions) when testing via the API client. This makes it difficult to create deterministic tests for agent behavior and workflows.\n\n### Current Limitations\n- Global function mocks only work for code executed in the same process\n- No way to intercept `runtime.useModel` calls from the bootstrap plugin\n- Agent behavior is non-deterministic due to real LLM calls\n- Difficult to test specific agent decision paths and responses\n\n### Why Different Approach Was Needed\n\nThe existing mocking system was designed for **code execution environments** (E2B sandbox and local `node -e` processes), where mocks are applied to the execution context. However, **agent testing** works differently:\n\n- **E2B/Local Execution**: Code runs in isolated processes/sandboxes where global mocks can be applied\n- **Agent Testing**: Agent runs as a service with API client interaction, requiring direct runtime method interception\n- **Architecture Gap**: The bootstrap plugin calls `runtime.useModel` internally, which can't be mocked through the execution environment approach\n\nThis architectural difference necessitated a new approach that directly intercepts runtime methods rather than relying on execution context mocking.\n\n### Proposed Solution: Runtime Method Mocking\n\nWe've implemented a new mocking approach that directly intercepts `IAgentRuntime` method calls:\n\n#### Key Components\n\n1. **MockEngine Enhancement**\n   - Added `runtimeMethodMocks` to support mocking runtime methods\n   - Priority system: `runtimeMethod` > `service` > `globalFunction`\n   - Direct method replacement on the runtime instance\n\n2. **Schema Updates**\n   - Extended `MockSchema` to include `runtimeMethod: z.string().optional()`\n   - Supports mocking any `IAgentRuntime` method (e.g., `useModel`, `getService`)\n\n3. **Conditional Matching**\n   - Matcher functions can inspect method arguments\n   - Example: `\"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"`\n   - Supports complex conditional logic for when to apply mocks\n\n#### Usage Example\n\n```yaml\nsetup:\n  mocks:\n    - runtimeMethod: \"useModel\"\n      method: \"useModel\"\n      when:\n        matcher: \"return args[1] && args[1].prompt && args[1].prompt.includes('should respond')\"\n      response: \"<response><name>agent</name><reasoning>Mocked response</reasoning><action>RESPOND</action></response>\"\n```\n\n#### Benefits\n\n1. **Deterministic Testing**: Replace LLM calls with static responses\n2. **Full Workflow Testing**: Test complete agent decision flows\n3. **Conditional Mocking**: Apply mocks based on specific conditions\n4. **Runtime Integration**: Works seamlessly with existing agent architecture\n5. **Backward Compatibility**: Existing mocks continue to work\n\n#### Implementation Steps\n\n- MockEngine runtime method support\n- Schema updates for runtimeMethod mocks\n- Conditional matching with matcher functions\n- Integration with scenario runner\n- Basic useModel mocking working\n- Add support for mocking other runtime methods (getService, etc.)\n- Create comprehensive test scenarios\n- Add documentation and examples\n- Consider adding mock recording/replay capabilities\n\n### Technical Details\n\nThe implementation works by:\n1. Creating the `IAgentRuntime` instance in the scenario runner\n2. Applying mocks directly to the runtime object before agent initialization\n3. The bootstrap plugin receives the mocked runtime and uses the mocked methods\n4. Mocks are reverted after scenario completion\n\nThis approach provides the foundation for robust, deterministic agent testing while maintaining the existing architecture.",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "Implement Runtime Method Mocking for Deterministic Agent Testing",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 7668252177,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/testing",
                  "name": "testing",
                  "color": "2D3957",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAAByRA-EQ",
                  "description": ""
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5749,
              "node_id": "I_kwDOMT5cIs7FLaT0",
              "assignee": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "comments": 0,
              "html_url": "https://github.com/elizaOS/eliza/issues/5749",
              "assignees": [
                {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-11T00:08:49Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/labels{/name}",
              "updated_at": "2025-08-11T00:09:37Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5749/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3304516859,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747",
              "body": null,
              "type": null,
              "user": {
                "id": 48334430,
                "url": "https://api.github.com/users/samarth30",
                "type": "User",
                "login": "samarth30",
                "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                "html_url": "https://github.com/samarth30",
                "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/samarth30/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/samarth30/followers",
                "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/samarth30/orgs",
                "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                "received_events_url": "https://api.github.com/users/samarth30/received_events"
              },
              "state": "open",
              "title": "Fixing bugs in eliza-cloud",
              "labels": [],
              "locked": false,
              "number": 5747,
              "node_id": "I_kwDOMT5cIs7E9uz7",
              "assignee": {
                "id": 48334430,
                "url": "https://api.github.com/users/samarth30",
                "type": "User",
                "login": "samarth30",
                "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                "html_url": "https://github.com/samarth30",
                "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/samarth30/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/samarth30/followers",
                "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/samarth30/orgs",
                "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                "received_events_url": "https://api.github.com/users/samarth30/received_events"
              },
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5747",
              "assignees": [
                {
                  "id": 48334430,
                  "url": "https://api.github.com/users/samarth30",
                  "type": "User",
                  "login": "samarth30",
                  "node_id": "MDQ6VXNlcjQ4MzM0NDMw",
                  "html_url": "https://github.com/samarth30",
                  "gists_url": "https://api.github.com/users/samarth30/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/samarth30/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/48334430?v=4",
                  "events_url": "https://api.github.com/users/samarth30/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/samarth30/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/samarth30/followers",
                  "following_url": "https://api.github.com/users/samarth30/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/samarth30/orgs",
                  "subscriptions_url": "https://api.github.com/users/samarth30/subscriptions",
                  "received_events_url": "https://api.github.com/users/samarth30/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-08T16:01:56Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/labels{/name}",
              "updated_at": "2025-08-08T19:02:49Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5747/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "MEMBER",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": {
                "id": 20150,
                "name": "Linear",
                "slug": "linear",
                "owner": {
                  "id": 46686594,
                  "url": "https://api.github.com/users/linear",
                  "type": "Organization",
                  "login": "linear",
                  "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ2Njg2NTk0",
                  "html_url": "https://github.com/linear",
                  "gists_url": "https://api.github.com/users/linear/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/linear/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/46686594?v=4",
                  "events_url": "https://api.github.com/users/linear/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/linear/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/linear/followers",
                  "following_url": "https://api.github.com/users/linear/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/linear/orgs",
                  "subscriptions_url": "https://api.github.com/users/linear/subscriptions",
                  "received_events_url": "https://api.github.com/users/linear/received_events"
                },
                "events": [
                  "check_suite",
                  "issues",
                  "issue_comment",
                  "pull_request",
                  "pull_request_review",
                  "repository",
                  "sub_issues"
                ],
                "node_id": "MDM6QXBwMjAxNTA=",
                "html_url": "https://github.com/apps/linear",
                "client_id": "Iv1.085d682ea245c945",
                "created_at": "2018-11-02T18:07:23Z",
                "updated_at": "2025-02-07T14:59:56Z",
                "description": "",
                "permissions": {
                  "checks": "read",
                  "issues": "write",
                  "metadata": "read",
                  "pull_requests": "write"
                },
                "external_url": "https://linear.app"
              }
            },
            {
              "id": 3302237103,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738",
              "body": "## Description\n\nThe `bun run clean` command is failing due to TypeScript errors in `@elizaos/core` package during the DTS (type definition) build phase.\n\n## Error Details\n\n### Build Process\n```\n‚Ä¢ Running build in 17 packages\n‚Ä¢ Remote caching disabled\n@elizaos/config:build: cache miss\n@elizaos/autodoc:build: cache miss\n@elizaos/core:build: cache miss\n```\n\n### TypeScript Errors in @elizaos/core/src/utils.ts\n1. Line 218: `error TS2345: Argument of type '`${string}-${string}-${string}-${string}-${string}`' is not assignable to parameter of type 'never'.`\n2. Line 366: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n3. Line 409: `error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.`\n4. Line 536: `error TS2345: Argument of type '{ numberOfChunks: number; averageChunkSize: number; }' is not assignable to parameter of type 'never'.`\n\n### Impact\n- Blocks `bun run clean` command\n- Prevents successful build of `@elizaos/core`\n- Affects dependent packages in the monorepo\n\n## Steps to Reproduce\n1. Run `bun run clean`\n2. Observe build failure in `@elizaos/core`\n3. Build fails with TypeScript errors during DTS generation\n\n## Expected Behavior\n- `bun run clean` should complete successfully\n- `@elizaos/core` should build without TypeScript errors\n- Type definitions should be generated correctly\n\n## Suggested Fix\n\nThe errors suggest type mismatches in `utils.ts`. Need to:\n1. Review type definitions in affected lines\n2. Update type assertions or generic constraints\n3. Ensure string template literal types are properly handled\n4. Fix object type assignments\n\n### Files to Update\n- `packages/core/src/utils.ts`\n\n## Priority\n**HIGH** - This is blocking clean builds and potentially affecting development workflow.",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "üêõ Build failure in @elizaos/core causing bun run clean to fail",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5738,
              "node_id": "I_kwDOMT5cIs7E1COv",
              "assignee": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5738",
              "assignees": [
                {
                  "id": 15067321,
                  "url": "https://api.github.com/users/monilpat",
                  "type": "User",
                  "login": "monilpat",
                  "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                  "html_url": "https://github.com/monilpat",
                  "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                  "repos_url": "https://api.github.com/users/monilpat/repos",
                  "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                  "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                  "site_admin": false,
                  "gravatar_id": "",
                  "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                  "followers_url": "https://api.github.com/users/monilpat/followers",
                  "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                  "user_view_type": "public",
                  "organizations_url": "https://api.github.com/users/monilpat/orgs",
                  "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                  "received_events_url": "https://api.github.com/users/monilpat/received_events"
                }
              ],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-08T00:26:11Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/labels{/name}",
              "updated_at": "2025-08-11T14:56:01Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5738/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3301116813,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734",
              "body": "**Describe the bug**\n\nOn project creation, ElizaOS CLI fails with the following error:\n```\n‚óá  Failed to build project\nstdout: src/index.ts(7,25): error TS2345: Argument of type 'string' is not assignable to parameter of type 'undefined'.\nstderr: $ tsc --noEmit && vite build && tsup\n```\n\n**To Reproduce**\n\n- Install ElizaOS through `bun`\n```\nbun i -g @elizaos/cli\n```\n- Create new ElizaOS project\n```\nelizaos create abcde\n```\n\n**Expected behavior**\n\nProject built successfully\n\n**Screenshots**\n\n<img width=\"1095\" height=\"572\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/967dd6a2-0d70-4e2e-8019-85a2eab5f225\" />\n\n**Additional context**\n\nElizaOS CLI version: `1.3.2`\n",
              "type": null,
              "user": {
                "id": 74447600,
                "url": "https://api.github.com/users/Kemystra",
                "type": "User",
                "login": "Kemystra",
                "node_id": "MDQ6VXNlcjc0NDQ3NjAw",
                "html_url": "https://github.com/Kemystra",
                "gists_url": "https://api.github.com/users/Kemystra/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/Kemystra/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/74447600?v=4",
                "events_url": "https://api.github.com/users/Kemystra/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/Kemystra/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/Kemystra/followers",
                "following_url": "https://api.github.com/users/Kemystra/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/Kemystra/orgs",
                "subscriptions_url": "https://api.github.com/users/Kemystra/subscriptions",
                "received_events_url": "https://api.github.com/users/Kemystra/received_events"
              },
              "state": "open",
              "title": "Eliza CLI failed to build project",
              "labels": [
                {
                  "id": 7181511256,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/bug",
                  "name": "bug",
                  "color": "d73a4a",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qWA",
                  "description": "Something isn't working"
                }
              ],
              "locked": false,
              "number": 5734,
              "node_id": "I_kwDOMT5cIs7EwwuN",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5734",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T16:14:00Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/labels{/name}",
              "updated_at": "2025-08-08T19:43:52Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5734/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "NONE",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3299481897,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729",
              "body": "# Relates to\r\n\r\nN/A (Documentation improvement, not tied to a specific issue or ticket)\r\n\r\n# Risks\r\n\r\nLow.  \r\nThis change only updates documentation and does not affect any code or functionality.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR updates the elizaos README to include a fix for installation errors that may occur due to permission issues. It adds a note suggesting the use of sudo if users encounter a \"Permission denied\" or \"InstallFailed\" error when running the `elizaos create my-agent` command.\r\n\r\n## What kind of change is this?\r\n\r\nImprovements (misc. changes to existing features)  \r\nDocumentation update\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes require a change to the project documentation.  \r\nI have updated the documentation accordingly.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\nStart by reviewing the changes in the README.md file, specifically the section on creating a new project.\r\n\r\n## Detailed testing steps\r\n\r\n- Open the updated README.md.\r\n- Review the new instructions under \"Create Your First Project.\"\r\n- Confirm that the added note about using `sudo` is clear and helpful for users who encounter permission errors.",
              "type": null,
              "user": {
                "id": 32749185,
                "url": "https://api.github.com/users/mandatedisrael",
                "type": "User",
                "login": "mandatedisrael",
                "node_id": "MDQ6VXNlcjMyNzQ5MTg1",
                "html_url": "https://github.com/mandatedisrael",
                "gists_url": "https://api.github.com/users/mandatedisrael/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/mandatedisrael/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/32749185?v=4",
                "events_url": "https://api.github.com/users/mandatedisrael/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/mandatedisrael/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/mandatedisrael/followers",
                "following_url": "https://api.github.com/users/mandatedisrael/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/mandatedisrael/orgs",
                "subscriptions_url": "https://api.github.com/users/mandatedisrael/subscriptions",
                "received_events_url": "https://api.github.com/users/mandatedisrael/received_events"
              },
              "draft": false,
              "state": "open",
              "title": "Update README.md to fix error",
              "labels": [],
              "locked": false,
              "number": 5729,
              "node_id": "PR_kwDOMT5cIs6iiNWN",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/pull/5729",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T08:10:12Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/labels{/name}",
              "updated_at": "2025-08-07T08:10:24Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/comments",
              "pull_request": {
                "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5729",
                "diff_url": "https://github.com/elizaOS/eliza/pull/5729.diff",
                "html_url": "https://github.com/elizaOS/eliza/pull/5729",
                "merged_at": null,
                "patch_url": "https://github.com/elizaOS/eliza/pull/5729.patch"
              },
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5729/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "FIRST_TIME_CONTRIBUTOR",
              "performed_via_github_app": null
            },
            {
              "id": 3299322983,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728",
              "body": "# Background\r\n\r\n## What does this PR do?\r\n\r\nIntroduce entity for cancelling runs `CancelRunSignal`\r\n\r\n## Why are we doing this? Any context or related work?\r\n\r\n- Calls to LLMs usually cost some credits\r\n- When we receive the `RUN_STARTED` event we can check current entity and end run to prevent credits spending\r\n\r\n# Documentation changes needed?\r\n\r\n## Methods\r\n\r\n- `static getSignal(runId: UUID)` - get signal by runId or create if null\r\n- `static clear(runId: UUID)` - clear signal from map\r\n- `cancel(content?: Content)` - cancel current run and and send `content` as a response to user\r\n\r\n## Example\r\n\r\n```typescript\r\nimport { Content, EventType, Plugin } from \"@elizaos/core\";\r\nimport { CancelRunSignal } from \"@elizaos/plugin-bootstrap\";\r\n\r\n// consider we have a service to determine eligibility for entity\r\ninterface EligibilityService {\r\n  check(entityId: UUID): Promise<{ result: boolean, reason?: Content }>\r\n}\r\n\r\nconst plugin: Plugin = {\r\n...\r\n  events: {\r\n    [EventType.RUN_STARTED]: ({ entityId, runId, runtime }) => {\r\n      const service = runtime.getService<EligibilityService>(\"USER_MANAGEMENT\");\r\n      const { result, reason } = await service.check(entityId);\r\n      \r\n      if (!result) {\r\n        const signal = CancelRunSignal.getSignal(runId);\r\n        signal.cancel(reason);\r\n      }\r\n    },\r\n    ...\r\n  },\r\n  ...\r\n}\r\n\r\nexport default Plugin;\r\n```\r\n\r\n## Discord username\r\n\r\nalexd000\r\n\r\n",
              "type": null,
              "user": {
                "id": 82507604,
                "url": "https://api.github.com/users/alex-nax",
                "type": "User",
                "login": "alex-nax",
                "node_id": "MDQ6VXNlcjgyNTA3NjA0",
                "html_url": "https://github.com/alex-nax",
                "gists_url": "https://api.github.com/users/alex-nax/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/alex-nax/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/82507604?v=4",
                "events_url": "https://api.github.com/users/alex-nax/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/alex-nax/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/alex-nax/followers",
                "following_url": "https://api.github.com/users/alex-nax/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/alex-nax/orgs",
                "subscriptions_url": "https://api.github.com/users/alex-nax/subscriptions",
                "received_events_url": "https://api.github.com/users/alex-nax/received_events"
              },
              "draft": false,
              "state": "open",
              "title": "feat: ability to cancel current run before any calls to LLM are made",
              "labels": [],
              "locked": false,
              "number": 5728,
              "node_id": "PR_kwDOMT5cIs6ihriD",
              "assignee": null,
              "comments": 3,
              "html_url": "https://github.com/elizaOS/eliza/pull/5728",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T07:19:35Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/labels{/name}",
              "updated_at": "2025-08-07T07:22:05Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/comments",
              "pull_request": {
                "url": "https://api.github.com/repos/elizaOS/eliza/pulls/5728",
                "diff_url": "https://github.com/elizaOS/eliza/pull/5728.diff",
                "html_url": "https://github.com/elizaOS/eliza/pull/5728",
                "merged_at": null,
                "patch_url": "https://github.com/elizaOS/eliza/pull/5728.patch"
              },
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5728/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "FIRST_TIME_CONTRIBUTOR",
              "performed_via_github_app": null
            },
            {
              "id": 3298692741,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727",
              "body": "# feat(scenarios): Implement natural language agent interaction and response validation\n\n## Description\n\nThis ticket enables scenarios to test agent behavior through natural language interactions rather than direct code execution. This allows testing of agent reasoning, decision-making, and response generation in realistic conversation contexts with proper evaluation of agent responses.\n\n## Acceptance Criteria\n\n1. Scenario `run` blocks support `input` field for natural language prompts to agents\n2. Agent responses are captured and available for evaluation (text, thoughts, actions)\n3. Evaluators can access both agent response text and execution context\n4. Support for multi-turn conversations in scenarios\n5. Agent responses include thought process and action decisions\n6. Integration with existing evaluation engine for response validation\n7. Support for conversation context across multiple steps\n8. Agent response timing and performance metrics\n\n## Technical Approach\n\n### 1. Enhanced Run Step Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst RunStepSchema = z.object({\n  name: z.string().optional(),\n  // Natural language input to agent\n  input: z.string().optional(),\n  // Direct code execution (existing)\n  lang: z.string().optional(),\n  code: z.string().optional(),\n  // Agent interaction specific\n  agent_context: z.object({\n    conversation_id: z.string().optional(),\n    user_id: z.string().optional(),\n    room_id: z.string().optional(),\n  }).optional(),\n  evaluations: z.array(EvaluationSchema),\n});\n```\n\n### 2. Agent Interaction Engine\n```typescript\n// packages/cli/src/scenarios/agent-interaction.ts\nexport class AgentInteractionEngine {\n  constructor(private runtime: IAgentRuntime) {}\n\n  async interactWithAgent(input: string, context?: AgentContext): Promise<AgentResponse> {\n    // Create message for agent\n    const message: Memory = {\n      entityId: context?.user_id || 'scenario-user',\n      roomId: context?.room_id || 'scenario-room',\n      content: {\n        type: 'text',\n        text: input,\n      },\n      metadata: {\n        type: 'message',\n        conversationId: context?.conversation_id,\n      },\n    };\n\n    // Send to agent and capture response\n    const startTime = Date.now();\n    const response = await this.runtime.processMessage(message);\n    const endTime = Date.now();\n\n    return {\n      text: response.text,\n      thoughts: response.thoughts,\n      actions: response.actions,\n      timing: {\n        startTime,\n        endTime,\n        duration: endTime - startTime,\n      },\n      context: {\n        conversationId: context?.conversation_id,\n        messageId: message.id,\n      },\n    };\n  }\n}\n```\n\n### 3. Enhanced Execution Result\n```typescript\n// packages/cli/src/scenarios/providers.ts\nexport interface ExecutionResult {\n  exitCode: number;\n  stdout: string;\n  stderr: string;\n  files: Record<string, string>;\n  // New: Agent interaction results\n  agentResponse?: AgentResponse;\n  conversationHistory?: AgentResponse[];\n}\n```\n\n## Test Scenario\n\nCreate `agent-interaction-test.scenario.yaml`:\n```yaml\nname: \"Agent Interaction Test\"\ndescription: \"Tests natural language interaction with agents\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Implement Dark Mode\"\n          number: 123\n          state: \"open\"\n          labels: [\"feature\", \"ui\"]\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"2.5\"\n\nrun:\n  - name: \"Ask agent about roadmap\"\n    input: \"What new features are you planning to add?\"\n    agent_context:\n      conversation_id: \"roadmap-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify agent searched for issues\"\n      \n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n        description: \"Verify agent mentioned the mocked issue\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent provide a helpful and coherent response about new features?\"\n        expected: \"yes\"\n        description: \"Verify agent response quality\"\n\n  - name: \"Ask agent about wallet\"\n    input: \"What's my current wallet balance?\"\n    agent_context:\n      conversation_id: \"wallet-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify agent checked wallet balance\"\n      \n      - type: \"string_contains\"\n        value: \"2.5 ETH\"\n        description: \"Verify agent reported the correct balance\"\n      \n      - type: \"llm_judge\"\n        prompt: \"Did the agent clearly explain the wallet balance information?\"\n        expected: \"yes\"\n\n  - name: \"Multi-turn conversation\"\n    input: \"Can you help me with both my wallet and roadmap?\"\n    agent_context:\n      conversation_id: \"multi-turn-conversation\"\n      user_id: \"test-user\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"ETH\"\n      - type: \"string_contains\"\n        value: \"Dark Mode\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent address both wallet and roadmap questions comprehensively?\"\n        expected: \"yes\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Single Turn**: Test basic agent interaction and response\n2. **Multi-turn**: Test conversation context across steps\n3. **Action Tracking**: Verify agent uses appropriate actions\n4. **Response Quality**: Test LLM judge evaluation of responses\n5. **Performance**: Test response timing and metrics\n6. **Error Handling**: Test agent behavior with invalid inputs\n\n## Dependencies\n\n- Requires plugin system integration (Ticket 1)\n- Builds on advanced mocking system (Ticket 2)\n- Integrates with existing evaluation engine\n- Depends on agent runtime message processing",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement natural language agent interaction and response validation",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5727,
              "node_id": "I_kwDOMT5cIs7Eng6F",
              "assignee": null,
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5727",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:49:34Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/labels{/name}",
              "updated_at": "2025-08-07T05:35:40Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5727/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3298691383,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726",
              "body": "# feat(scenarios): Implement conditional mocking and complex response structures\n\n## Description\n\nThis ticket enhances the mocking system to support conditional responses based on input parameters and complex response structures with metadata. This enables realistic testing of service interactions like GitHub API calls or EVM transactions with proper request/response matching.\n\n## Acceptance Criteria\n\n1. Mock definitions support `when` clauses for conditional responses\n2. `when` clauses can match on method arguments, input parameters, or request context\n3. Mock responses support complex nested structures with metadata (timestamps, IDs, etc.)\n4. Multiple mock responses can be defined for the same service/method with different conditions\n5. Mock system provides clear logging of which mock was triggered and why\n6. Mock responses can include realistic error conditions and edge cases\n7. Support for dynamic response generation based on input parameters\n8. Mock validation ensures `when` clauses are syntactically correct\n\n## Technical Approach\n\n### 1. Enhanced Mock Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst MockSchema = z.object({\n  service: z.string(),\n  method: z.string(),\n  when: z.object({\n    // Match on method arguments\n    args: z.array(z.any()).optional(),\n    // Match on specific argument values\n    input: z.record(z.any()).optional(),\n    // Match on request context\n    context: z.record(z.any()).optional(),\n    // Custom matching function\n    matcher: z.string().optional(), // JavaScript expression\n  }).optional(),\n  response: z.any(), // Can be function or static value\n  // For dynamic responses\n  responseFn: z.string().optional(), // JavaScript function\n  // Error simulation\n  error: z.object({\n    code: z.string(),\n    message: z.string(),\n  }).optional(),\n});\n```\n\n### 2. Mock Engine Implementation\n```typescript\n// packages/cli/src/scenarios/mock-engine.ts\nexport class MockEngine {\n  private mocks: MockDefinition[] = [];\n\n  addMock(mock: MockDefinition) {\n    this.mocks.push(mock);\n  }\n\n  async findMock(service: string, method: string, args: any[]): Promise<any> {\n    const candidates = this.mocks.filter(m => \n      m.service === service && m.method === method\n    );\n\n    for (const mock of candidates) {\n      if (await this.matchesCondition(mock, args)) {\n        this.logger.info(`Mock triggered: ${service}.${method} with condition: ${JSON.stringify(mock.when)}`);\n        return this.generateResponse(mock, args);\n      }\n    }\n\n    return null; // No mock found\n  }\n\n  private async matchesCondition(mock: MockDefinition, args: any[]): Promise<boolean> {\n    if (!mock.when) return true; // Default mock\n\n    // Match on arguments\n    if (mock.when.args) {\n      if (!this.deepEqual(args, mock.when.args)) return false;\n    }\n\n    // Match on input parameters\n    if (mock.when.input) {\n      const input = this.extractInputFromArgs(args);\n      if (!this.deepEqual(input, mock.when.input)) return false;\n    }\n\n    // Custom matcher function\n    if (mock.when.matcher) {\n      const matcherFn = new Function('args', 'input', mock.when.matcher);\n      return matcherFn(args, this.extractInputFromArgs(args));\n    }\n\n    return true;\n  }\n\n  private generateResponse(mock: MockDefinition, args: any[]): any {\n    if (mock.error) {\n      throw new Error(`${mock.error.code}: ${mock.error.message}`);\n    }\n\n    if (mock.responseFn) {\n      const responseFn = new Function('args', 'input', mock.responseFn);\n      return responseFn(args, this.extractInputFromArgs(args));\n    }\n\n    return mock.response;\n  }\n}\n```\n\n## Test Scenario\n\nCreate `advanced-mocking-test.scenario.yaml`:\n```yaml\nname: \"Advanced Mocking Test\"\ndescription: \"Tests conditional mocking and complex response structures\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    # Conditional GitHub issue search\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"bug\"\n        matcher: \"input.labels.includes('bug')\"\n      response:\n        - title: \"Critical Bug Found\"\n          number: 456\n          state: \"open\"\n          labels: [\"bug\", \"critical\"]\n          created_at: \"2024-07-15T10:00:00Z\"\n\n    # Conditional GitHub issue search - different response\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      when:\n        input:\n          labels: \"feature\"\n        matcher: \"input.labels.includes('feature')\"\n      response:\n        - title: \"New Feature Request\"\n          number: 789\n          state: \"open\"\n          labels: [\"feature\", \"enhancement\"]\n          created_at: \"2024-07-15T11:00:00Z\"\n\n    # Dynamic EVM balance response\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      when:\n        args: [\"0x1234567890abcdef\"]\n      responseFn: |\n        return {\n          chain: \"ethereum\",\n          address: args[0],\n          balances: [\n            { symbol: \"ETH\", amount: \"1.23\" },\n            { symbol: \"USDC\", amount: \"1000.00\" }\n          ],\n          last_updated: new Date().toISOString()\n        }\n\n    # Error simulation\n    - service: \"github-service\"\n      method: \"readFile\"\n      when:\n        input:\n          path: \"/docs/nonexistent.md\"\n      error:\n        code: \"FILE_NOT_FOUND\"\n        message: \"File does not exist\"\n\nrun:\n  - name: \"Test conditional GitHub search\"\n    input: \"Search for issues with bug label\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n      - type: \"string_contains\"\n        value: \"Critical Bug Found\"\n      - type: \"llm_judge\"\n        prompt: \"Did the agent correctly search for bug issues?\"\n        expected: \"yes\"\n\n  - name: \"Test dynamic EVM response\"\n    input: \"What's the balance for address 0x1234567890abcdef?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n      - type: \"string_contains\"\n        value: \"1000.00 USDC\"\n\n  - name: \"Test error handling\"\n    input: \"Read the file /docs/nonexistent.md\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.readFile\"\n      - type: \"string_contains\"\n        value: \"File does not exist\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Conditional Matching**: Test different responses based on input parameters\n2. **Dynamic Responses**: Test response generation based on arguments\n3. **Error Simulation**: Test error handling and reporting\n4. **Complex Structures**: Test nested response objects with metadata\n5. **Multiple Mocks**: Test multiple mocks for same service/method\n6. **Logging**: Verify mock selection is logged clearly\n\n## Dependencies\n\n- Builds on existing mock system in scenarios\n- Requires plugin system integration (Ticket 1)\n- Integrates with agent interaction testing (Ticket 3) ",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement conditional mocking and complex response structures",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5726,
              "node_id": "I_kwDOMT5cIs7Engk3",
              "assignee": null,
              "comments": 2,
              "html_url": "https://github.com/elizaOS/eliza/issues/5726",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:49:00Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/labels{/name}",
              "updated_at": "2025-08-07T05:32:53Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5726/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            },
            {
              "id": 3298689704,
              "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725",
              "body": "# feat(scenarios): Implement plugin specification and dynamic loading\n\n## Description\n\nThis ticket implements plugin specification in scenario YAML files, allowing scenarios to declare which plugins are required for testing. This enables testing of agent behaviors that depend on specific plugins like `@elizaos/plugin-github` or `@elizaos/plugin-evm`. The system will dynamically load specified plugins during scenario execution and make their actions, providers, and services available to the agent.\n\n## Acceptance Criteria\n\n1. Scenario YAML supports a `plugins` array at the root level with string plugin names\n2. The `initializeAgent()` function respects scenario plugin specifications and loads them via `startAgent()`\n3. Plugin loading follows the same dependency resolution and error handling as the main CLI\n4. Scenarios can specify both string plugin names (`@elizaos/plugin-github`) and direct plugin objects\n5. Plugin loading errors are clearly reported with actionable guidance\n6. Default plugins (bootstrap, sql) are automatically included unless explicitly excluded via `exclude_defaults: true`\n7. Plugin conflicts are detected and reported during scenario validation\n8. Plugin initialization errors don't crash the scenario but are reported in results\n\n## Technical Approach\n\n### 1. Update Scenario Schema\n```typescript\n// packages/cli/src/scenarios/schema.ts\nconst ScenarioSchema = z.object({\n  name: z.string(),\n  description: z.string(),\n  plugins: z.array(z.string()).optional(), // e.g., [\"@elizaos/plugin-github\"]\n  exclude_defaults: z.boolean().optional(), // exclude bootstrap/sql\n  environment: EnvironmentSchema,\n  setup: SetupSchema.optional(),\n  run: z.array(RunStepSchema),\n  judgment: JudgmentSchema,\n});\n```\n\n### 2. Enhance Runtime Factory\n```typescript\n// packages/cli/src/scenarios/runtime-factory.ts\nexport async function initializeAgent(scenario: Scenario): Promise<IAgentRuntime> {\n  const character: Character = {\n    name: 'scenario-runner',\n    id: stringToUuid('scenario-runner'),\n    bio: 'A minimal character for running scenarios',\n    plugins: scenario.plugins || []\n  };\n\n  // Load default plugins unless excluded\n  if (!scenario.exclude_defaults) {\n    character.plugins.push('@elizaos/plugin-bootstrap', '@elizaos/plugin-sql');\n  }\n\n  const runtime = await startAgent(\n    encryptedCharacter(character),\n    server,\n    undefined,\n    character.plugins,\n    { isTestMode: true }\n  );\n\n  return runtime;\n}\n```\n\n### 3. Plugin Validation\n```typescript\n// packages/cli/src/scenarios/plugin-validator.ts\nexport async function validateScenarioPlugins(scenario: Scenario): Promise<ValidationResult[]> {\n  const results: ValidationResult[] = [];\n  \n  for (const pluginName of scenario.plugins || []) {\n    try {\n      const plugin = await loadAndPreparePlugin(pluginName);\n      if (!plugin) {\n        results.push({\n          type: 'error',\n          message: `Plugin '${pluginName}' could not be loaded`,\n          suggestion: 'Check if plugin is installed or built correctly'\n        });\n      }\n    } catch (error) {\n      results.push({\n        type: 'error', \n        message: `Failed to validate plugin '${pluginName}': ${error.message}`,\n        suggestion: 'Verify plugin dependencies and configuration'\n      });\n    }\n  }\n  \n  return results;\n}\n```\n\n## Test Scenario\n\nCreate `plugin-integration-test.scenario.yaml`:\n```yaml\nname: \"Plugin Integration Test\"\ndescription: \"Tests loading and using plugins specified in scenario YAML\"\n\nplugins:\n  - \"@elizaos/plugin-github\"\n  - \"@elizaos/plugin-evm\"\n\nenvironment:\n  type: e2b\n\nsetup:\n  mocks:\n    - service: \"github-service\"\n      method: \"searchIssues\"\n      response:\n        - title: \"Test Issue\"\n          number: 123\n          state: \"open\"\n    - service: \"evm-service\"\n      method: \"getBalancesForAddress\"\n      response:\n        - chain: \"ethereum\"\n          balances:\n            - symbol: \"ETH\"\n              amount: \"1.23\"\n\nrun:\n  - name: \"Test GitHub plugin actions\"\n    input: \"Search for issues with label 'bug'\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"github-service.searchIssues\"\n        description: \"Verify GitHub plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"Test Issue\"\n        description: \"Verify agent found the mocked issue\"\n\n  - name: \"Test EVM plugin actions\"\n    input: \"What's my wallet balance?\"\n    evaluations:\n      - type: \"trajectory_contains_action\"\n        action: \"evm-service.getBalancesForAddress\"\n        description: \"Verify EVM plugin action was executed\"\n      \n      - type: \"string_contains\"\n        value: \"1.23 ETH\"\n        description: \"Verify agent reported the mocked balance\"\n\njudgment:\n  strategy: all_pass\n```\n\n## Testing Strategy\n\n1. **Plugin Loading Test**: Verify plugins load without errors\n2. **Action Availability Test**: Confirm agent can use plugin actions\n3. **Error Handling Test**: Test with non-existent plugin\n4. **Default Plugin Test**: Verify bootstrap/sql are included by default\n5. **Exclusion Test**: Test `exclude_defaults: true` behavior\n\n## Dependencies\n\n- Fixes the `startAgent` hanging issue (#5719) to enable plugin testing\n- Builds on existing `loadAndPreparePlugin` functionality\n- Integrates with current scenario execution flow ",
              "type": null,
              "user": {
                "id": 15067321,
                "url": "https://api.github.com/users/monilpat",
                "type": "User",
                "login": "monilpat",
                "node_id": "MDQ6VXNlcjE1MDY3MzIx",
                "html_url": "https://github.com/monilpat",
                "gists_url": "https://api.github.com/users/monilpat/gists{/gist_id}",
                "repos_url": "https://api.github.com/users/monilpat/repos",
                "avatar_url": "https://avatars.githubusercontent.com/u/15067321?v=4",
                "events_url": "https://api.github.com/users/monilpat/events{/privacy}",
                "site_admin": false,
                "gravatar_id": "",
                "starred_url": "https://api.github.com/users/monilpat/starred{/owner}{/repo}",
                "followers_url": "https://api.github.com/users/monilpat/followers",
                "following_url": "https://api.github.com/users/monilpat/following{/other_user}",
                "user_view_type": "public",
                "organizations_url": "https://api.github.com/users/monilpat/orgs",
                "subscriptions_url": "https://api.github.com/users/monilpat/subscriptions",
                "received_events_url": "https://api.github.com/users/monilpat/received_events"
              },
              "state": "open",
              "title": "feat(scenarios): Implement plugin specification and dynamic loading",
              "labels": [
                {
                  "id": 7181511264,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/enhancement",
                  "name": "enhancement",
                  "color": "a2eeef",
                  "default": true,
                  "node_id": "LA_kwDOMT5cIs8AAAABrA0qYA",
                  "description": "New feature or request"
                },
                {
                  "id": 8938220384,
                  "url": "https://api.github.com/repos/elizaOS/eliza/labels/Reality%20Spiral",
                  "name": "Reality Spiral",
                  "color": "ededed",
                  "default": false,
                  "node_id": "LA_kwDOMT5cIs8AAAACFMJrYA",
                  "description": null
                }
              ],
              "locked": false,
              "number": 5725,
              "node_id": "I_kwDOMT5cIs7EngKo",
              "assignee": null,
              "comments": 1,
              "html_url": "https://github.com/elizaOS/eliza/issues/5725",
              "assignees": [],
              "closed_at": null,
              "closed_by": null,
              "milestone": null,
              "reactions": {
                "+1": 0,
                "-1": 0,
                "url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/reactions",
                "eyes": 0,
                "heart": 0,
                "laugh": 0,
                "hooray": 0,
                "rocket": 0,
                "confused": 0,
                "total_count": 0
              },
              "created_at": "2025-08-07T02:48:08Z",
              "events_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/events",
              "labels_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/labels{/name}",
              "updated_at": "2025-08-07T05:37:32Z",
              "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/comments",
              "state_reason": null,
              "timeline_url": "https://api.github.com/repos/elizaOS/eliza/issues/5725/timeline",
              "repository_url": "https://api.github.com/repos/elizaOS/eliza",
              "active_lock_reason": null,
              "author_association": "COLLABORATOR",
              "sub_issues_summary": {
                "total": 0,
                "completed": 0,
                "percent_completed": 0
              },
              "performed_via_github_app": null
            }
          ],
          "issueCount": 10,
          "repository": "elizaOS/eliza"
        },
        "success": true
      },
      "actionStatus": "completed"
    },
    "entityId": "0137f0e4-d2e2-0ee6-82e5-af58b88ec91b",
    "agentId": "0137f0e4-d2e2-0ee6-82e5-af58b88ec91b",
    "roomId": "d90a4251-6789-09c2-9362-169e7f9ca903",
    "unique": true,
    "metadata": {
      "type": "action_result",
      "runId": "c739ba29-04b6-453b-8689-60130f572c64",
      "actionId": "12533ca0-5f4f-42f3-85a7-32933daf3c09",
      "actionName": "LIST_GITHUB_ISSUES",
      "totalSteps": 2,
      "currentStep": 2
    }
  },
  {
    "id": "e356fbe8-9f1d-44e7-b9ba-ee05368a101f",
    "type": "messages",
    "createdAt": 1754966965844,
    "content": {
      "text": "Generated reply: I'll retrieve the list of open issues for the elizaOS/eliza repository now. Please hold on a moment...",
      "type": "action_result",
      "runId": "c739ba29-04b6-453b-8689-60130f572c64",
      "source": "action",
      "planStep": "1/2",
      "actionName": "REPLY",
      "planThought": "I need to list the open issues for the elizaOS/eliza repository to fulfill the user's request.",
      "actionResult": {
        "data": {
          "thought": "I need to list the open issues for the elizaOS/eliza repository as requested by the user.",
          "response": {
            "text": "I'll retrieve the list of open issues for the elizaOS/eliza repository now. Please hold on a moment...",
            "actions": [
              "REPLY"
            ],
            "thought": "I need to list the open issues for the elizaOS/eliza repository as requested by the user."
          },
          "actionName": "REPLY",
          "messageGenerated": true
        },
        "text": "Generated reply: I'll retrieve the list of open issues for the elizaOS/eliza repository now. Please hold on a moment...",
        "values": {
          "success": true,
          "lastReply": "I'll retrieve the list of open issues for the elizaOS/eliza repository now. Please hold on a moment...",
          "responded": true,
          "lastReplyTime": 1754966965842,
          "thoughtProcess": "I need to list the open issues for the elizaOS/eliza repository as requested by the user."
        },
        "success": true
      },
      "actionStatus": "completed"
    },
    "entityId": "0137f0e4-d2e2-0ee6-82e5-af58b88ec91b",
    "agentId": "0137f0e4-d2e2-0ee6-82e5-af58b88ec91b",
    "roomId": "d90a4251-6789-09c2-9362-169e7f9ca903",
    "unique": true,
    "metadata": {
      "type": "action_result",
      "runId": "c739ba29-04b6-453b-8689-60130f572c64",
      "actionId": "e356fbe8-9f1d-44e7-b9ba-ee05368a101f",
      "actionName": "REPLY",
      "totalSteps": 2,
      "currentStep": 1
    }
  }
]